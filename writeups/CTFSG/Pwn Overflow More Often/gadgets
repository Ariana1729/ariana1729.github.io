


Gadgets
=======


0x0000000000430e53: adc al, 0; add byte ptr [rax + 0x30984e8], dl; add bl, ch; ret 0xcccc; 
0x0000000000430e13: adc al, 0; add byte ptr [rax + 0x309c4e8], dl; add bl, ch; ret 0xcccc; 
0x0000000000444eaf: adc al, 0; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000043c95c: adc al, 0; add byte ptr [rax], al; inc dword ptr [rax + 0x14]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045f575: adc al, 0; add byte ptr [rax], al; movsxd rax, dword ptr [rax]; mov qword ptr [rsp + 8], rax; ret; 
0x000000000041a473: adc al, 0; add byte ptr [rbp + 0x10], dh; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000043e252: adc al, 0; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044413d: adc al, 0; add byte ptr [rbp + 0xe], dh; mov qword ptr [rdx + 0x10], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000444e81: adc al, 0; bt eax, 0xd; jae 0x44e93; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040a0cd: adc al, 0; lea rax, [rcx + rax*8]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000408ee5: adc al, 0; mov qword ptr [rsp + 0x30], rax; mov qword ptr [rsp + 0x38], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043888a: adc al, 0; mov qword ptr [rsp], rax; call 0x431e0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000442f2f: adc al, 0; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000043e206: adc al, 0; xchg dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000438447: adc al, 0; xchg qword ptr [rax], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000431457: adc al, 0x1f; mov dword ptr [rsp + 0x28], edx; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000472fa7: adc al, 0x24; call 0x72ca0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000472dec: adc al, 0x24; call 0x72ca0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000467cfa: adc al, 0x24; call rcx; 
0x0000000000429542: adc al, 0x24; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; mov rax, qword ptr [rip + 0x9ce4b]; lea rdx, [rip + 0x9ce44]; call rax; 
0x0000000000429787: adc al, 0x24; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; mov rax, qword ptr [rsp + 0x90]; lea rdx, [rsp + 0x90]; call rax; 
0x00000000004296e8: adc al, 0x24; mov qword ptr [rsp + 8], rbx; mov qword ptr [rsp + 0x10], rax; mov rax, qword ptr [rsp + 0x90]; lea rdx, [rsp + 0x90]; call rax; 
0x000000000048aaa1: adc al, 0x24; mov qword ptr [rsp + 8], rcx; dec rcx; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x10], rcx; call rax; 
0x000000000048ab12: adc al, 0x24; mov qword ptr [rsp + 8], rcx; lea rsi, [rcx - 1]; mov qword ptr [rsp + 0x10], rsi; call rax; 
0x000000000040eef6: adc al, 0x24; mov qword ptr [rsp + 8], rdx; mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; 
0x000000000040ef46: adc al, 0x24; mov qword ptr [rsp + 8], rsi; mov rsi, qword ptr [rcx]; mov rdx, rcx; call rsi; 
0x00000000004688bd: adc al, 0x24; nop; call rcx; 
0x000000000045a6ca: adc al, 0x48; lea eax, [rip + 0x6693a]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000045a5c3: adc al, 0x48; lea eax, [rip + 0x676da]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000042bdc7: adc al, 0x48; mov dword ptr [rsp + 0x30], eax; mov qword ptr [rsp + 0x38], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000408ec4: adc al, 0x48; mov dword ptr [rsp + 0x30], ecx; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048f1e3: adc al, 0x48; mov dword ptr [rsp + 0x40], eax; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042bf51: adc al, 0x48; mov dword ptr [rsp + 0x48], ebx; mov qword ptr [rsp + 0x50], rsi; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048d298: adc al, 0x48; mov dword ptr [rsp + 0x50], eax; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040be33: adc al, 0x48; mov dword ptr [rsp + 0x70], ecx; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004066d9: adc al, 0x48; mov eax, dword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000417fad: adc al, 0x48; mov eax, dword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000451c33: adc al, 0x48; mov eax, dword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000043c963: adc al, 0x48; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042e317: adc al, 0x48; mov ebp, dword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004650cc: adc al, 0x4c; mov edx, dword ptr [rsp + 0x18]; mov r8, qword ptr [rsp + 0x20]; mov r9d, dword ptr [rsp + 0x28]; mov eax, 0xca; syscall; 
0x00000000004674ec: adc al, 0x75; adc ecx, dword ptr [rax - 0x75]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000401c31: adc al, 0x89; and al, 0x18; mov dword ptr [rsp + 0x1c], edx; ret; 
0x0000000000464932: adc al, 0xb8; add dword ptr [rcx], eax; add byte ptr [rax], al; syscall; 
0x00000000004764ab: adc al, 0xc6; add al, 0x10; xor byte ptr [rax - 1], cl; ret; 
0x00000000004569d5: adc al, 0xc8; test rdx, rdx; jne 0x5697d; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000441a06: adc al, 0xd8; call rsi; 
0x0000000000417e34: adc al, 0xe9; cmp eax, 0x48ffffff; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048b52e: adc al, 0xeb; mov qword ptr [rbx + r13*8 + 8], r8; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000456e17: adc al, 0xf6; ret 0x7402; 
0x00000000004687b3: adc al, 0xf6; ret 0x7404; 
0x0000000000458611: adc al, 0xf6; ret 0xf01; 
0x00000000004169d0: adc al, 0xf6; ret; 
0x000000000044312c: adc al, 1; mov rax, qword ptr [rcx + rax + 8]; mov qword ptr [rsp + 0x10], rdx; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000484e8f: adc al, 4; add byte ptr [rax - 0x77], cl; and al, 0x48; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000403b89: adc al, 6; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x000000000047d52e: adc al, 6; add byte ptr [rax - 0x77], cl; and al, 0x18; mov qword ptr [rsp + 0x20], rax; ret; 
0x00000000004850da: adc al, byte ptr [rax + r8]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004850ae: adc al, byte ptr [rax + rax]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; nop; ret; 
0x00000000004850c5: adc al, byte ptr [rax + rax]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004258a0: adc al, byte ptr [rax]; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; ret; 
0x000000000046046a: adc al, byte ptr [rax]; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x0000000000424a38: adc al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; and al, 0x38; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000425899: adc al, byte ptr [rax]; add byte ptr [rax - 1], cl; sub dword ptr [rax], 0x48000012; mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000045e91f: adc al, byte ptr [rax]; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045dca3: adc al, byte ptr [rax]; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004372fd: adc al, byte ptr [rax]; add byte ptr [rdi], cl; test dword ptr [rcx], edx; add dword ptr [rax], eax; add byte ptr [rax + 0xa058d48], dl; call qword ptr [rcx]; 
0x000000000045b4d0: adc al, byte ptr [rax]; add qword ptr [rip + 0x12bbc7], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000463222: adc al, byte ptr [rax]; aesenc xmm0, xmmword ptr [rip + 0x123663]; aesenc xmm0, xmmword ptr [rip + 0x12366a]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x000000000046322b: adc al, byte ptr [rax]; aesenc xmm0, xmmword ptr [rip + 0x12366a]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x00000000004631c1: adc al, byte ptr [rax]; aesenc xmm0, xmmword ptr [rip + 0x1236c4]; aesenc xmm0, xmmword ptr [rip + 0x1236cb]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x00000000004631ca: adc al, byte ptr [rax]; aesenc xmm0, xmmword ptr [rip + 0x1236cb]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x0000000000435ed3: adc al, byte ptr [rax]; cmp ecx, eax; jg 0x35ee3; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045f94a: adc al, byte ptr [rax]; lea rcx, [rip + 0xe16dd]; xchg dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045b2fd: adc al, byte ptr [rax]; lock xadd dword ptr [rdx], ecx; mov byte ptr [rax + 0x16b8], 0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000045b271: adc al, byte ptr [rax]; mov rax, qword ptr [rcx]; mov qword ptr [rip + 0x12be0b], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043098e: adc al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045b27b: adc al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042f8af: adc al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x00000000004631d3: adc al, byte ptr [rax]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x000000000045c07e: adc al, byte ptr [rax]; test rbx, rbx; jne 0x5c006; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042f296: adc al, byte ptr [rax]; test rdx, rdx; jne 0x2f2a7; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000456828: adc al, byte ptr [rax]; xor eax, 1; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046c7d3: adc al, byte ptr [rbx - 0x1f3ec020]; or al, 9; ret; 
0x000000000046b140: adc al, byte ptr [rbx]; mov rdx, qword ptr [rsp + 0x58]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000463221: adc al, byte ptr ss:[rax]; aesenc xmm0, xmmword ptr [rip + 0x123663]; aesenc xmm0, xmmword ptr [rip + 0x12366a]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x000000000046322a: adc al, byte ptr ss:[rax]; aesenc xmm0, xmmword ptr [rip + 0x12366a]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x00000000004631c0: adc al, byte ptr ss:[rax]; aesenc xmm0, xmmword ptr [rip + 0x1236c4]; aesenc xmm0, xmmword ptr [rip + 0x1236cb]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x00000000004631c9: adc al, byte ptr ss:[rax]; aesenc xmm0, xmmword ptr [rip + 0x1236cb]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x00000000004631d2: adc al, byte ptr ss:[rax]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x00000000004490f9: adc al, ch; add dword ptr [rax + rax + 0x6c8b4800], ebx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000046aa58: adc al, ch; and bh, byte ptr [rdi]; cli; jmp qword ptr [rsi - 0x70]; 
0x00000000004052ef: adc al, ch; in eax, dx; add eax, 0x6c8b4800; and al, 0x28; add rsp, 0x30; ret; 
0x0000000000482dad: adc al, ch; in eax, dx; cmp esi, -1; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x000000000043584c: adc al, ch; int1; add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000423de5: adc al, ch; jne 0x23e18; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044c58c: adc al, ch; out dx, al; add dword ptr [rcx], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000428c38: adc al, ch; ret 0x19; 
0x000000000047e318: adc al, ch; ret 0xf83f; 
0x000000000047c8f8: adc al, ch; ret 0xf941; 
0x0000000000499c78: adc al, ch; ret 0xfca3; 
0x000000000046b217: adc al, ch; ret; 
0x0000000000411e0e: adc al, ch; sub al, 0x22; add eax, 0x6c8b4800; and al, 0x18; add rsp, 0x20; ret; 
0x000000000048ac2d: adc al, ch; sub eax, 0x48000000; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045e839: adc al, ch; xor dword ptr [rbx + rdi*8], 0x6c8b48ff; and al, 0x18; add rsp, 0x20; ret; 
0x00000000004055e1: adc bl, ch; ret; 
0x0000000000463f8f: adc bl, dh; movq qword ptr [rdi + rbx - 0x20], mm0; movdqu xmmword ptr [rdi + rbx - 0x10], xmm0; ret; 
0x00000000004641b9: adc bl, dh; movq qword ptr [rdi + rbx - 0x20], mm2; movdqu xmmword ptr [rdi + rbx - 0x10], xmm3; ret; 
0x00000000004639e2: adc byte ptr [r15], r9b; adc dword ptr [rdi + 0x20], eax; movups xmmword ptr [rdi + 0x30], xmm0; lea rdi, [rdi + 0x40]; ret; 
0x000000000042ceb8: adc byte ptr [r8 - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000040f2ee: adc byte ptr [r8 - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x0000000000420bd8: adc byte ptr [r8 - 0x75], r9b; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000048772b: adc byte ptr [rax + 0x1fe08348], dl; mov qword ptr [rsp + 0x18], rax; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000440e5d: adc byte ptr [rax + 0x48302444], cl; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040af15: adc byte ptr [rax + 0x48382444], cl; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000467d33: adc byte ptr [rax + 0x48402444], cl; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000403614: adc byte ptr [rax + 0x48602444], cl; mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000044e062: adc byte ptr [rax + 0x63], cl; ret 0x3948; 
0x00000000004653a9: adc byte ptr [rax + 0x95], bh; syscall; 
0x00000000004653a9: adc byte ptr [rax + 0x95], bh; syscall; mov qword ptr [rsp + 0x18], rax; ret; 
0x000000000045d49f: adc byte ptr [rax + 0x9750038], al; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000041e40d: adc byte ptr [rax + 3], cl; push 0x10488948; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x00000000004663cd: adc byte ptr [rax + r10 + 0x31], sil; ror byte ptr [rax + 0x48402444], 0x8b; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000491adf: adc byte ptr [rax + rax], al; add byte ptr [rax], al; call 0x91760; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004852d9: adc byte ptr [rax + rax], al; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048ec33: adc byte ptr [rax + rax], cl; mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004663ce: adc byte ptr [rax + rdx + 0x31], dh; ror byte ptr [rax + 0x48402444], 0x8b; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000403888: adc byte ptr [rax - 0x18000000], al; movabs rax, 0x4818246c8b480002; add esp, 0x20; ret; 
0x0000000000443114: adc byte ptr [rax - 0x39], cl; and al, 0x18; adc eax, dword ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000048e5eb: adc byte ptr [rax - 0x39], cl; and al, 0x18; or eax, dword ptr [rax]; add byte ptr [rax], al; ret; 
0x0000000000465108: adc byte ptr [rax - 0x39], cl; ret 0; 
0x0000000000465029: adc byte ptr [rax - 0x39], cl; ror byte ptr [rbx], 0; add byte ptr [rax], al; syscall; 
0x0000000000462fc9: adc byte ptr [rax - 0x73], cl; movsxd rdi, eax; mov rbp, qword ptr [rsp - 8]; sub qword ptr [rsp], 5; mov rbx, qword ptr [rdx]; jmp rbx; 
0x00000000004032c4: adc byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x75], cl; and al, 8; cmp qword ptr [rcx], rax; sete byte ptr [rsp + 0x18]; ret; 
0x00000000004356e4: adc byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x77], cl; and al, 0x18; ret; 
0x000000000047d0ae: adc byte ptr [rax - 0x75], cl; add byte ptr [rax], 1; add byte ptr [rax], al; mov qword ptr [rsp], rcx; call rax; 
0x000000000042954d: adc byte ptr [rax - 0x75], cl; add eax, 0x9ce4b; lea rdx, [rip + 0x9ce44]; call rax; 
0x0000000000401e69: adc byte ptr [rax - 0x75], cl; and al, 0x18; lock cmpxchg qword ptr [rbx], rcx; sete byte ptr [rsp + 0x20]; ret; 
0x000000000045ae0a: adc byte ptr [rax - 0x75], cl; and al, 0x18; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004695fa: adc byte ptr [rax - 0x75], cl; and al, 0x18; mov rax, qword ptr [rax + 0x28]; mov qword ptr [rsp], rcx; call rax; 
0x000000000044c501: adc byte ptr [rax - 0x75], cl; and al, 0x20; lea rdx, [rsp + 0x20]; call rax; 
0x0000000000444145: adc byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000415228: adc byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000041e415: adc byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; nop; ret; 
0x000000000042ceb9: adc byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000425cbf: adc byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x000000000040f2ef: adc byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x0000000000464b49: adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x18; mov eax, 0x1b; syscall; 
0x0000000000464b28: adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x18; mov eax, 0x26; syscall; 
0x0000000000464b28: adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x18; mov eax, 0x26; syscall; ret; 
0x0000000000465269: adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x18; mov eax, 0xcc; syscall; 
0x0000000000464b09: adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x18; mov eax, 0xea; syscall; 
0x0000000000464b09: adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x18; mov eax, 0xea; syscall; ret; 
0x0000000000464d69: adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x18; mov r10, qword ptr [rsp + 0x20]; mov eax, 0xd; syscall; 
0x0000000000464d28: adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x18; mov r10d, dword ptr [rsp + 0x20]; mov eax, 0xe; syscall; 
0x000000000045c5ec: adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x28; mov rax, qword ptr [rdx]; call rax; 
0x00000000004508a5: adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x38; mov rax, qword ptr [rdx]; call rax; 
0x0000000000472614: adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x68; mov qword ptr [rsp + 0x18], rdx; nop; call rax; 
0x0000000000482595: adc byte ptr [rax - 0x75], cl; sbb byte ptr [rax + 0x48000000], 0x89; or al, 0x24; call rax; 
0x000000000047c5f3: adc byte ptr [rax - 0x75], cl; sbb byte ptr [rax + 0x48000000], 0x89; or al, 0x24; nop; call rax; 
0x0000000000485246: adc byte ptr [rax - 0x75], cl; sub al, 0; add byte ptr [rax], al; mov qword ptr [rsp], rcx; call rax; 
0x0000000000485313: adc byte ptr [rax - 0x75], cl; sub al, 0; add byte ptr [rax], al; mov qword ptr [rsp], rcx; nop; call rax; 
0x000000000042d61c: adc byte ptr [rax - 0x77], cl; add al, 0x24; call 0x61680; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000403b60: adc byte ptr [rax - 0x77], cl; add al, 0x24; call 0x61680; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045e451: adc byte ptr [rax - 0x77], cl; add eax, 0x12808f; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045eae8: adc byte ptr [rax - 0x77], cl; add eax, 0xf8000; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043223f: adc byte ptr [rax - 0x77], cl; and al, 0x10; mov qword ptr [rsp + 0x18], rax; ret; 
0x000000000042f13f: adc byte ptr [rax - 0x77], cl; and al, 0x18; call 0x43000; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000432244: adc byte ptr [rax - 0x77], cl; and al, 0x18; ret; 
0x000000000040724e: adc byte ptr [rax - 0x77], cl; and al, 0x20; ret; 
0x00000000004235e9: adc byte ptr [rax - 0x77], cl; and al, 0x28; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000456fa5: adc byte ptr [rax - 0x77], cl; and al, 0x30; mov qword ptr [rsp + 0x38], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004066de: adc byte ptr [rax - 0x77], cl; and al, 0x30; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000457c44: adc byte ptr [rax - 0x77], cl; and al, 0x38; mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000402817: adc byte ptr [rax - 0x77], cl; and al, 0x38; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000422f4c: adc byte ptr [rax - 0x77], cl; and al, 0x38; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000414fb9: adc byte ptr [rax - 0x77], cl; and al, 0x38; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000482157: adc byte ptr [rax - 0x77], cl; and al, 0x40; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040d46a: adc byte ptr [rax - 0x77], cl; and al, 0x40; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000042bf7d: adc byte ptr [rax - 0x77], cl; and al, 0x48; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040680e: adc byte ptr [rax - 0x77], cl; and al, 0x48; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042a6c9: adc byte ptr [rax - 0x77], cl; and al, 0x50; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048d3bd: adc byte ptr [rax - 0x77], cl; and al, 0x50; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004268ee: adc byte ptr [rax - 0x77], cl; and al, 0x50; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042464b: adc byte ptr [rax - 0x77], cl; and al, 0x68; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000464e30: adc byte ptr [rax - 0x77], cl; je 0x64e59; or byte ptr [rax - 0x77], cl; cmp al, 0x24; lea rax, [rip - 0x1fe01]; call rax; 
0x00000000004726ec: adc byte ptr [rax - 0x77], cl; or al, 0x24; mov qword ptr [rsp + 8], rdx; mov qword ptr [rsp + 0x10], rbx; mov qword ptr [rsp + 0x18], rdi; call rax; 
0x000000000048f0f9: adc byte ptr [rax - 0x77], cl; or al, 0x24; mov rcx, qword ptr [rdx]; call rcx; 
0x0000000000462d3f: adc byte ptr [rax - 0x77], cl; out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x10000018]; mov rax, qword ptr [rdx]; call rax; 
0x000000000047a69d: adc byte ptr [rax - 0x77], cl; ret 0x8948; 
0x000000000041709d: adc byte ptr [rax - 0x77], cl; sbb al, 0x24; mov qword ptr [rsp + 8], rcx; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000487006: adc byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], cl; xchg eax, esp; ret 0xd284; 
0x000000000046b350: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rcx + 0x48], 0x89; ret 0x8948; 
0x0000000000451c78: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rcx + rcx*2 + 0x48], 0x89; ret 0x1ce9; 
0x0000000000467290: adc byte ptr [rax - 0x7d], cl; stc; sbb dword ptr [rbp - 0x65], esi; add rax, 0x50; mov qword ptr [rsp + 0x10], rax; ret; 
0x00000000004487ed: adc byte ptr [rax - 1], bh; mov qword ptr [rsp + 0x18], rax; call 0x39a0; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000475674: adc byte ptr [rax - 1], cl; ret 0x8948; 
0x000000000040f1c8: adc byte ptr [rax - 1], cl; ret 0xb60f; 
0x0000000000465a14: adc byte ptr [rax], ah; add byte ptr [rax], al; add al, ch; ret 0xf9c8; 
0x0000000000472398: adc byte ptr [rax], al; add byte ptr [rax + rbx + 0x48], bh; mov dword ptr [rsp + 0xa0], eax; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000042e88e: adc byte ptr [rax], al; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x48; add rsp, 0x50; ret; 
0x0000000000461880: adc byte ptr [rax], al; add byte ptr [rdi + 9], dh; lea rax, [rip + 0x654]; jmp rax; 
0x0000000000462687: adc byte ptr [rax], al; add rsp, 0x100008; ret; 
0x0000000000461911: adc byte ptr [rax], al; ja 0x6191e; lea rax, [rip + 0xcc4]; jmp rax; 
0x0000000000423205: adc byte ptr [rax], al; je 0x23213; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004265ed: adc byte ptr [rax], al; je 0x265fb; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000469ee8: adc byte ptr [rax], al; je 0x69ab8; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; nop; ret; 
0x0000000000423265: adc byte ptr [rax], al; jne 0x23273; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000452dda: adc byte ptr [rax], al; jne 0x52d65; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x0000000000466980: adc byte ptr [rax], al; jne 0x66942; mov byte ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048eb35: adc byte ptr [rax], al; jne 0x8eb43; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048eb95: adc byte ptr [rax], al; jne 0x8eba3; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000049618f: adc byte ptr [rax], al; mov dword ptr [rsp + 0x14], ecx; call 0x94ee0; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000045ddcb: adc byte ptr [rax], al; mov qword ptr [rsp + 8], rax; call 0x29ae0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046264b: adc byte ptr [rax], al; mov rax, qword ptr [rdx]; call rax; 
0x000000000046263e: adc byte ptr [rax], al; mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x100018]; mov rax, qword ptr [rdx]; call rax; 
0x000000000040d550: adc byte ptr [rax], al; ret; 
0x000000000047dbd3: adc byte ptr [rax], al; setne byte ptr [rsp + 0x40]; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000419766: adc byte ptr [rax], bl; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x8948; 
0x00000000004195ce: adc byte ptr [rax], bl; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0xb848; 
0x0000000000465542: adc byte ptr [rbp + 0x10], dh; mov rax, qword ptr [rax + 0x18]; cmp qword ptr [rdx + 0x18], rax; sete al; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000465541: adc byte ptr [rbp + 0x10], sil; mov rax, qword ptr [rax + 0x18]; cmp qword ptr [rdx + 0x18], rax; sete al; mov byte ptr [rsp + 0x18], al; ret; 
0x00000000004096a7: adc byte ptr [rbp - 0x25], dh; cmp qword ptr [r8 + 8], rsi; jne 0x9685; mov qword ptr [rsp + 0x20], r8; ret; 
0x000000000040fcad: adc byte ptr [rbp - 0x7b], cl; sal byte ptr [rcx + 0xf], 0xb6; push rdx; or dh, dh; ret 0x7408; 
0x0000000000444e7c: adc byte ptr [rbx + 0x1419bd05], cl; add byte ptr [rdi], cl; mov edx, 0xa730de0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004971d7: adc byte ptr [rbx + 0x278248c], cl; add byte ptr [rax], al; mov dword ptr [rsp + 0x18], ecx; call rax; 
0x00000000004652e8: adc byte ptr [rbx + 0x44182454], cl; mov edx, dword ptr [rsp + 0x1c]; mov r8, 0; mov eax, 0x119; syscall; 
0x00000000004650a9: adc byte ptr [rbx + 0x48182454], cl; mov eax, 0x1c; syscall; 
0x00000000004650a9: adc byte ptr [rbx + 0x48182454], cl; mov eax, 0x1c; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x00000000004032a4: adc byte ptr [rbx + 0x4c8b4800], cl; and al, 8; cmp dword ptr [rcx], eax; sete byte ptr [rsp + 0x18]; ret; 
0x000000000046492d: adc byte ptr [rbx + rcx*4 + 0x54], al; and al, 0x14; mov eax, 0x101; syscall; 
0x00000000004652cb: adc byte ptr [rbx + rcx*4 + 0x54], cl; and al, 0x18; mov eax, 0xe9; syscall; 
0x00000000004652cb: adc byte ptr [rbx + rcx*4 + 0x54], cl; and al, 0x18; mov eax, 0xe9; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x00000000004649a8: adc byte ptr [rbx - 0x47e7dbac], cl; add byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x00000000004649a8: adc byte ptr [rbx - 0x47e7dbac], cl; add byte ptr [rax], al; add byte ptr [rax], al; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000464989: adc byte ptr [rbx - 0x47e7dbac], cl; add dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x0000000000464989: adc byte ptr [rbx - 0x47e7dbac], cl; add dword ptr [rax], eax; add byte ptr [rax], al; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x00000000004649e4: adc byte ptr [rbx - 0x47f7db8c], cl; and eax, 0xf000001; add eax, 0x18244489; ret; 
0x00000000004540c4: adc byte ptr [rbx], al; add byte ptr [rax], al; mov qword ptr [rsp + 8], rcx; mov rbx, qword ptr [rax]; mov rdx, rax; call rbx; 
0x0000000000452014: adc byte ptr [rcx + 0x48482444], cl; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000451f30: adc byte ptr [rcx + 0x48782444], cl; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000041e33f: adc byte ptr [rcx + 0xf], al; xchg eax, ebp; ret 0xf989; 
0x0000000000438cae: adc byte ptr [rcx + rax], 0; add byte ptr [rcx], al; ret; 
0x0000000000401c2d: adc byte ptr [rcx - 0x76ebdba4], cl; and al, 0x18; mov dword ptr [rsp + 0x1c], edx; ret; 
0x000000000045e101: adc byte ptr [rcx], ah; ret; 
0x0000000000480a92: adc byte ptr [rcx], al; add byte ptr [rax], al; add rsp, 0x118; ret; 
0x00000000004287f1: adc byte ptr [rcx], al; add byte ptr [rax], al; call rcx; 
0x0000000000427e27: adc byte ptr [rcx], al; add byte ptr [rax], al; call rsi; 
0x00000000004287e9: adc byte ptr [rcx], al; add byte ptr [rax], al; lea rdx, [rsp + 0x110]; call rcx; 
0x0000000000427e1f: adc byte ptr [rcx], al; add byte ptr [rax], al; lea rdx, [rsp + 0x110]; call rsi; 
0x0000000000444de8: adc byte ptr [rcx], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000044d087: adc byte ptr [rcx], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xf0]; add rsp, 0xf8; ret; 
0x0000000000406df0: adc byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x000000000045d4f1: adc byte ptr [rcx], al; call 0x36200; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000405684: adc byte ptr [rcx], al; call 0x56a0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040d54a: adc byte ptr [rcx], al; ret; 
0x000000000044c5d3: adc byte ptr [rcx], dh; retf; mov dword ptr [rax + 0x124], ebx; lea eax, [rdx + rbx]; mov dword ptr [rsp + 8], eax; ret; 
0x0000000000401cba: adc byte ptr [rcx], dh; ror byte ptr [rax + 0x48402444], 0x8b; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000047e556: adc byte ptr [rcx], dh; ror byte ptr [rax + 0x48602444], 0x8b; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x0000000000468878: adc byte ptr [rcx], dh; ror byte ptr [rax + 0x48782444], 0x8b; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x00000000004619a2: adc byte ptr [rdi + 9], dh; lea rax, [rip + 0x1334]; jmp rax; 
0x0000000000463d71: adc byte ptr [rdi], cl; adc byte ptr [rsi], al; add rsi, 0x10; movups xmmword ptr [rdi], xmm0; add rdi, 0x10; ret; 
0x00000000004639e3: adc byte ptr [rdi], cl; adc dword ptr [rdi + 0x20], eax; movups xmmword ptr [rdi + 0x30], xmm0; lea rdi, [rdi + 0x40]; ret; 
0x0000000000463d78: adc byte ptr [rdi], cl; adc dword ptr [rdi], eax; add rdi, 0x10; ret; 
0x000000000040c303: adc byte ptr [rdi], cl; cmp dword ptr [rbx + 0x48000004], -0x75; sbb byte ptr [r9 - 9], r9b; ret 7; 
0x0000000000403284: adc byte ptr [rdi], cl; mov bh, 0; mov rcx, qword ptr [rsp + 8]; cmp word ptr [rcx], ax; sete byte ptr [rsp + 0x18]; ret; 
0x0000000000403264: adc byte ptr [rdi], cl; mov dh, 0; mov rcx, qword ptr [rsp + 8]; cmp byte ptr [rcx], al; sete byte ptr [rsp + 0x18]; ret; 
0x00000000004017da: adc byte ptr [rdi], cl; mov dh, 0x34; sbb dl, byte ptr [rax + 0x75ce3840]; out dx, al; mov qword ptr [rsp + 0x20], rbx; ret; 
0x000000000045b245: adc byte ptr [rdi], cl; mov dh, 0xd; ret; 
0x0000000000402408: adc byte ptr [rdi], cl; mov esp, 0x49ac74d2; mov dword ptr [rax], edx; ret; 
0x000000000041e2f4: adc byte ptr [rdi], cl; xchg eax, ebp; ret 0x86eb; 
0x0000000000405058: adc byte ptr [rdi], cl; xchg eax, esp; ret 0x1f0f; 
0x0000000000441aa6: adc byte ptr [rdi], cl; xchg eax, esp; ret 0xd284; 
0x000000000045e456: adc byte ptr [rdx], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000047c8cf: adc byte ptr [rdx], al; add byte ptr [rax], al; ret; 
0x000000000045a52c: adc byte ptr [rip - 0x74b70005], al; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x000000000042f57d: adc byte ptr [rsi - 0x70], ah; call 0x64b00; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000492f9d: adc byte ptr [rsi - 0x70], ah; call 0x91760; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000463d73: adc byte ptr [rsi], al; add rsi, 0x10; movups xmmword ptr [rdi], xmm0; add rdi, 0x10; ret; 
0x000000000045e113: adc byte ptr [rsi], bh; ret; 
0x0000000000408f22: adc byte ptr [rsp + 8], al; movsd qword ptr [rsp + 0x10], xmm0; ret; 
0x000000000047d529: adc cl, byte ptr [rax - 0x73]; or eax, 0x614cf; mov qword ptr [rsp + 0x18], rcx; mov qword ptr [rsp + 0x20], rax; ret; 
0x0000000000467c89: adc cl, byte ptr [rax - 0x73]; or eax, 0x769af; mov qword ptr [rsp + 0x18], rcx; mov qword ptr [rsp + 0x20], rax; ret; 
0x000000000045cb3c: adc cl, byte ptr [rax - 0x75]; and al, 0x20; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048451d: adc cl, byte ptr [rax - 0x75]; and al, 0x50; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004842b1: adc cl, byte ptr [rax - 0x75]; and al, 0x58; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000493c9e: adc cl, byte ptr [rax - 0x75]; and al, 0x58; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000455481: adc cl, byte ptr [rax - 0x75]; pushfq; and al, 0x68; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000047a691: adc cl, byte ptr [rax - 0x75]; pushfq; and al, 0x80; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000040e461: adc cl, byte ptr [rcx - 1]; ret 0xf44; 
0x000000000041774f: adc cl, dl; divsd xmm1, xmm0; movsd qword ptr [rdx + 0x40], xmm1; divsd xmm0, xmm2; movsd qword ptr [rdx + 0x48], xmm0; ret; 
0x000000000047ab30: adc dh, byte ptr [rbp + 0x13]; mov rax, qword ptr [rax + 0x38]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000456eac: adc dh, byte ptr [rdx + rcx + 0x48]; add eax, 0x30; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000409a27: adc dh, dh; ret 0xf01; 
0x000000000042c3a4: adc dl, byte ptr [rax + 0x4cfb2949]; add dword ptr [rbx + 0x18], ebx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000043e250: adc dword ptr [eax + eax], 0; jne 0x3e261; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004722e6: adc dword ptr [r8], eax; add byte ptr [rbp + 0x11], dh; mov qword ptr [rip + 0xe4955], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000415226: adc dword ptr [rax + 0x10], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000452387: adc dword ptr [rax + 0x1640], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000448f96: adc dword ptr [rax + 0x39], ecx; or byte ptr [rsi + 0xb], sil; mov rdx, qword ptr [rdx + 0x10]; add rcx, rdx; mov qword ptr [rax + 0x68], rcx; ret; 
0x000000000042d492: adc dword ptr [rax + 0x39], ecx; ret 0xa77; 
0x000000000045e0f8: adc dword ptr [rax + 0x39], ecx; retf 0x675; mov byte ptr [rsp + 0x10], 0x21; ret; 
0x000000000040c4ed: adc dword ptr [rax + 0x39], ecx; ror byte ptr [rdi], 1; adc dword ptr [rdi + 0x48000000], 0x29; ret 0x8948; 
0x000000000043e251: adc dword ptr [rax + rax], 0; jne 0x3e261; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048512f: adc dword ptr [rax + rax], eax; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000430988: adc dword ptr [rax - 0x77], ecx; add eax, 0x126130; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000049abc6: adc dword ptr [rax - 0x77], ecx; add eax, 0xbbe92; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000049a7ed: adc dword ptr [rax - 0x77], ecx; add eax, 0xbc473; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048df03: adc dword ptr [rax - 0x77], ecx; add eax, 0xc21bd; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048e533: adc dword ptr [rax - 0x77], ecx; add eax, 0xc5655; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000490f6c: adc dword ptr [rax - 0x77], ecx; add eax, 0xc5ea4; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000490be9: adc dword ptr [rax - 0x77], ecx; add eax, 0xc62ff; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048fce9: adc dword ptr [rax - 0x77], ecx; add eax, 0xc7017; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048d1c7: adc dword ptr [rax - 0x77], ecx; add eax, 0xc9ab9; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000472b9e: adc dword ptr [rax - 0x77], ecx; add eax, 0xe4002; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004722eb: adc dword ptr [rax - 0x77], ecx; add eax, 0xe4955; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046c621: adc dword ptr [rax - 0x77], ecx; add eax, 0xea6ff; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046c25a: adc dword ptr [rax - 0x77], ecx; add eax, 0xea8d6; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000469623: adc dword ptr [rax - 0x77], ecx; add eax, 0xed62d; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048745b: adc dword ptr [rax - 0x77], ecx; or eax, 0xcf61d; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040ce33: adc dword ptr [rax - 0x77], ecx; ret; 
0x00000000004360e7: adc dword ptr [rax - 0x7f], ecx; ret 0x3a0; 
0x000000000048e764: adc dword ptr [rax - 9], ecx; ret 0xfff8; 
0x0000000000494f5c: adc dword ptr [rax], eax; add byte ptr [rax], al; call 0x91ec0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000472b9a: adc dword ptr [rax], eax; add byte ptr [rbp + 0x11], dh; mov qword ptr [rip + 0xe4002], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004722e7: adc dword ptr [rax], eax; add byte ptr [rbp + 0x11], dh; mov qword ptr [rip + 0xe4955], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046c61d: adc dword ptr [rax], eax; add byte ptr [rbp + 0x11], dh; mov qword ptr [rip + 0xea6ff], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046c256: adc dword ptr [rax], eax; add byte ptr [rbp + 0x11], dh; mov qword ptr [rip + 0xea8d6], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046961f: adc dword ptr [rax], eax; add byte ptr [rbp + 0x11], dh; mov qword ptr [rip + 0xed62d], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043ef81: adc dword ptr [rax], eax; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000043a8f0: adc dword ptr [rax], eax; add byte ptr [rbp + 0xf], dh; mov byte ptr [rsp + 0x28], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043c86f: adc dword ptr [rax], eax; add byte ptr [rbp + 0xf], dh; mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000440d93: adc dword ptr [rax], eax; add byte ptr [rbp - 0x2d], dh; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000441054: adc dword ptr [rax], eax; lock xadd dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004381e6: adc dword ptr [rax], eax; lock xadd dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000472c8e: adc dword ptr [rax], eax; mov byte ptr [rip + 0x11378b], al; ret; 
0x0000000000451a55: adc dword ptr [rax], eax; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000427c6c: adc dword ptr [rax], eax; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000440b6f: adc dword ptr [rax], eax; mov qword ptr [rsp], rax; call 0xaa00; mov rbp, qword ptr [rsp + 0xe0]; add rsp, 0xe8; ret; 
0x000000000043f302: adc dword ptr [rax], eax; mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000437d52: adc dword ptr [rax], eax; mov qword ptr [rsp], rcx; mov rax, qword ptr [rdx]; call rax; 
0x0000000000443128: adc dword ptr [rax], eax; mov rdx, qword ptr [rcx + rax]; mov rax, qword ptr [rcx + rax + 8]; mov qword ptr [rsp + 0x10], rdx; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000425dc9: adc dword ptr [rax], eax; ret; 
0x000000000043928b: adc dword ptr [rax], eax; test ecx, ecx; je 0x3929b; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042c735: adc dword ptr [rax], ecx; sub qword ptr [rax + 0x18], r9; mov qword ptr [rsp + 0x18], r8; mov qword ptr [rsp + 0x20], rbx; ret; 
0x000000000042c734: adc dword ptr [rax], r9d; sub qword ptr [rax + 0x18], r9; mov qword ptr [rsp + 0x18], r8; mov qword ptr [rsp + 0x20], rbx; ret; 
0x000000000046796c: adc dword ptr [rbp + 0x13], esi; mov rax, qword ptr [rax + 0x40]; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000047b890: adc dword ptr [rbp + 0x13], esi; mov rax, qword ptr [rax + 0x40]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000443866: adc dword ptr [rbp - 0x72e98b2e], eax; pop rdx; dec dword ptr [rcx - 0x4ef00f30]; sbb dword ptr [rdi], ecx; xchg eax, esp; ret 0xd284; 
0x000000000045bdc9: adc dword ptr [rbx - 0x48000000], 0; add byte ptr [rax], ah; add byte ptr [rax + 0x39], cl; ret; 
0x00000000004096a4: adc dword ptr [rcx + 0x39], ecx; adc byte ptr [rbp - 0x25], dh; cmp qword ptr [r8 + 8], rsi; jne 0x9685; mov qword ptr [rsp + 0x20], r8; ret; 
0x0000000000456ea7: adc dword ptr [rcx + rbx - 0x80], esi; stc; adc dh, byte ptr [rdx + rcx + 0x48]; add eax, 0x30; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000048af40: adc dword ptr [rcx - 0x2f], ecx; call 0x248d3894; add byte ptr [rax], 0; add byte ptr [rcx + rcx*4 + 0x44], cl; and al, 0x10; call rsi; 
0x0000000000467afd: adc dword ptr [rcx], esi; ror byte ptr [rax - 0x77], 0x44; and al, 0x28; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000047bb3d: adc dword ptr [rcx], esi; ror byte ptr [rax - 0x77], 0x44; and al, 0x50; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004639e1: adc dword ptr [rdi + 0x10], eax; movups xmmword ptr [rdi + 0x20], xmm0; movups xmmword ptr [rdi + 0x30], xmm0; lea rdi, [rdi + 0x40]; ret; 
0x00000000004639e5: adc dword ptr [rdi + 0x20], eax; movups xmmword ptr [rdi + 0x30], xmm0; lea rdi, [rdi + 0x40]; ret; 
0x00000000004639e9: adc dword ptr [rdi + 0x30], eax; lea rdi, [rdi + 0x40]; ret; 
0x000000000042a093: adc dword ptr [rdi + 0x48000000], -0x39; ret; 
0x000000000040c4f2: adc dword ptr [rdi + 0x48000000], 0x29; ret 0x8948; 
0x0000000000463d7a: adc dword ptr [rdi], eax; add rdi, 0x10; ret; 
0x000000000040f15d: adc dword ptr [rdi], eax; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x00000000004639de: adc dword ptr [rdi], eax; movups xmmword ptr [rdi + 0x10], xmm0; movups xmmword ptr [rdi + 0x20], xmm0; movups xmmword ptr [rdi + 0x30], xmm0; lea rdi, [rdi + 0x40]; ret; 
0x00000000004425ba: adc dword ptr [rdi], ecx; xchg eax, esp; ret 0x9066; 
0x0000000000442888: adc dword ptr [rdi], ecx; xchg eax, esp; ret 0xd284; 
0x0000000000442856: adc dword ptr [rdi], ecx; xchg eax, esp; ret 0xf66; 
0x0000000000406199: adc dword ptr [rdi], ecx; xchg eax, esp; ret; 
0x0000000000416337: adc dword ptr [rdi], ecx; xchg eax, esp; rol dword ptr [rcx + rcx*8 - 0x74b7f58b], 0x6c; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000417757: adc dword ptr [rdx + 0x40], ecx; divsd xmm0, xmm2; movsd qword ptr [rdx + 0x48], xmm0; ret; 
0x0000000000417760: adc dword ptr [rdx + 0x48], eax; ret; 
0x0000000000467229: adc dword ptr [rdx + rbx + 0x48], esi; cmp ecx, 0x12; je 0x6723c; add rax, 0x30; mov qword ptr [rsp + 0x10], rax; ret; 
0x00000000004799c9: adc dword ptr [rdx + rbx + 0x48], esi; cmp ecx, 0x12; je 0x799dc; add rax, 0x30; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000418321: adc dword ptr [rip + 0x165681], eax; call 0x1f0e0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000418323: adc dword ptr [rsi + 0x16], 0x6db4e800; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000408f28: adc dword ptr [rsp + 0x10], eax; ret; 
0x000000000044d084: adc dword ptr [rsp + 0x110], eax; mov rbp, qword ptr [rsp + 0xf0]; add rsp, 0xf8; ret; 
0x0000000000452823: adc dword ptr [rsp + 0x18], eax; call 0x51480; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004529b7: adc dword ptr [rsp + 0x18], eax; nop dword ptr [rax + rax]; call 0x51480; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042c766: adc dword ptr [rsp + 0x18], eax; ret; 
0x000000000044decf: adc dword ptr [rsp + 0x28], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000467485: adc dword ptr [rsp + 0x30], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000456fbe: adc dword ptr [rsp + 0x30], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044dd48: adc dword ptr [rsp + 0x38], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045d0e8: adc dword ptr [rsp + 0x40], eax; call 0x52f40; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000046bd9e: adc dword ptr [rsp + 0x40], eax; mov byte ptr [rsp + 0x50], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004126a6: adc dword ptr [rsp + 0x40], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004675e5: adc dword ptr [rsp + 0x40], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040a4d1: adc dword ptr [rsp + 0x48], eax; mov byte ptr [rsp + 0x58], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042bf96: adc dword ptr [rsp + 0x48], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048ecc9: adc dword ptr [rsp + 0x48], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000467117: adc dword ptr [rsp + 0x48], eax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000046c17c: adc dword ptr [rsp + 0x50], eax; mov byte ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048f099: adc dword ptr [rsp + 0x50], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000483014: adc dword ptr [rsp + 0x58], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048e137: adc dword ptr [rsp + 0x58], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000046056e: adc dword ptr [rsp + 0x60], eax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000048d597: adc dword ptr [rsp + 0x68], eax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000406b29: adc dword ptr [rsp + 0x68], eax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000472578: adc dword ptr [rsp + 0x78], eax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044b2f5: adc dword ptr [rsp + 0xb8], eax; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000409d04: adc dword ptr [rsp + 0xc0], eax; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x0000000000477671: adc dword ptr [rsp + 0xe8], eax; mov qword ptr [rsp + 0xf8], rax; mov qword ptr [rsp + 0x100], rcx; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x00000000004775a2: adc dword ptr [rsp + 0xf8], eax; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x0000000000440d92: adc dword ptr fs:[rax], eax; add byte ptr [rbp - 0x2d], dh; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000430984: adc eax, 0x11750000; mov qword ptr [rip + 0x126130], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004391a4: adc eax, 0x11e177; mov qword ptr [rsp], rcx; mov rax, qword ptr [rdx]; call rax; 
0x0000000000437d4f: adc eax, 0x11f5cc; mov qword ptr [rsp], rcx; mov rax, qword ptr [rdx]; call rax; 
0x000000000042f293: adc eax, 0x127838; test rdx, rdx; jne 0x2f2a7; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042dc94: adc eax, 0x1587db; lock xadd dword ptr [rdx], eax; mov byte ptr [rsp + 0x28], cl; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000493cd5: adc eax, 0x1718d48; mov qword ptr [rax + 8], rsi; mov byte ptr [rdx + rcx], bl; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000045eae3: adc eax, 0x24448b48; adc byte ptr [rax - 0x77], cl; add eax, 0xf8000; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000471cf6: adc eax, 0x2be9ffff; fdivr st(7); jmp qword ptr [rsi - 0x70]; 
0x0000000000471cd6: adc eax, 0x38e9ffff; fcos; jmp qword ptr [rsi - 0x70]; 
0x000000000042e080: adc eax, 0x448b4800; and al, 0x30; mov qword ptr [rip + 0x1584ea], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000405687: adc eax, 0x48000000; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042fa3e: adc eax, 0x48018700; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000425727: adc eax, 0x48fffe53; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000461c67: adc eax, 0x48ffffeb; mov ebp, dword ptr [rsp + 0x100]; add rsp, 0x108; ret; 
0x000000000042d907: adc eax, 0x48fffffc; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004241ba: adc eax, 0x48fffffe; mov ebp, dword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000435b4f: adc eax, 0x6c8b4800; and al, 0x40; add rsp, 0x48; ret; 
0x000000000042e08c: adc eax, 0x6c8b4800; and al, 0x48; add rsp, 0x50; ret; 
0x000000000042daa1: adc eax, 0x74c08500; or cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x000000000042fa85: adc eax, 0x75c08500; or cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x0000000000456eed: adc eax, 0x83480a75; rcr byte ptr [rax + 0x48], 0x89; and al, 0x10; ret; 
0x0000000000434ab0: adc eax, 0x850f0000; mov es, word ptr [rax]; add byte ptr [rax], al; mov rax, qword ptr [rip + 0x91aa8]; lea rdx, [rip + 0x91aa1]; call rax; 
0x0000000000434cce: adc eax, 0x850f0000; ret; 
0x000000000040634f: adc eax, 0x87c03100; add cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x00000000004359a2: adc eax, 0x89480012; ret 0x8948; 
0x000000000043acfc: adc eax, 0x8b847; call rax; 
0x000000000043acfc: adc eax, 0x8b847; call rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000043ac5b: adc eax, 0x8b8e8; call rcx; 
0x000000000043613b: adc eax, 0x90660000; jne 0x3614c; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000434ac2: adc eax, 0x91aa1; call rax; 
0x0000000000434752: adc eax, 0x91de9; call rcx; 
0x00000000004346de: adc eax, 0x91e5d; call rax; 
0x0000000000429557: adc eax, 0x9ce44; call rax; 
0x000000000042dc97: adc eax, 0xc10ff000; add cl, byte ptr [rax + 0x4828244c]; mov ebp, dword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000042b625: adc eax, 0xc9854800; jg 0x2b632; mov byte ptr [rsp + 0x10], 0; ret; 
0x0000000000471db6: adc eax, 0xcbe9ffff; sar edi, 1; jmp qword ptr [rsi - 0x70]; 
0x0000000000435b49: adc eax, 0xd2058800; or byte ptr [rip + 0x6c8b4800], dl; and al, 0x40; add rsp, 0x48; ret; 
0x0000000000471d96: adc eax, 0xd8e9ffff; sar bh, cl; jmp qword ptr [rsi - 0x70]; 
0x0000000000430c85: adc eax, 0xe750000; mov qword ptr [rsi + rcx*8], rax; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000430695: adc eax, 0xe8000000; ret 0x1b; 
0x0000000000454c15: adc eax, 0xe8000000; ret 0xfdf8; 
0x0000000000471d76: adc eax, 0xebe9ffff; sar edi, cl; jmp qword ptr [rsi - 0x70]; 
0x0000000000484f49: adc eax, dword ptr [rax + rax]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000460479: adc eax, dword ptr [rax]; add bl, ch; ret 0xcccc; 
0x0000000000436bfa: adc eax, dword ptr [rax]; add bl, ch; stosb byte ptr [rdi], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000044311a: adc eax, dword ptr [rax]; add byte ptr [rax], al; ret; 
0x00000000004244ee: adc eax, dword ptr [rax]; add byte ptr [rbp + 0x18], dh; mov qword ptr [rsp + 0xd8], rcx; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000422aca: adc eax, dword ptr [rax]; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000451180: adc eax, dword ptr [rax]; add byte ptr [rbp + 0xe], dh; mov qword ptr [rdx + r8*8], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000450fdf: adc eax, dword ptr [rax]; add byte ptr [rbp + 0xe], dh; mov qword ptr [rdx + rax*8], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000041f281: adc eax, dword ptr [rax]; mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041aca8: adc eax, dword ptr [rax]; mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000460478: adc eax, dword ptr fs:[rax]; add bl, ch; ret 0xcccc; 
0x00000000004388c9: adc ebp, dword ptr [rcx - 0x74b80000]; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x0000000000446e8b: adc ebx, esp; add dword ptr [rax], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000422b9e: adc ecx, dword ptr [rax - 0x75]; and al, 0x18; mov qword ptr [rcx + 8], rax; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000047ab32: adc ecx, dword ptr [rax - 0x75]; cmp byte ptr [rax - 0x77], cl; and al, 0x50; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000046796e: adc ecx, dword ptr [rax - 0x75]; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004674ee: adc ecx, dword ptr [rax - 0x75]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000047b892: adc ecx, dword ptr [rax - 0x75]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000434326: adc ecx, dword ptr [rax - 0x77]; add al, 0x24; call 0x341e0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044deb6: adc ecx, dword ptr [rax - 0x77]; and al, 0x28; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004616da: adc ecx, dword ptr [rax - 0x77]; fmul qword ptr [rax - 0x77]; cli; mov rdi, qword ptr [rdi]; call rdi; 
0x0000000000472eb1: adc ecx, dword ptr [rax - 0x7f]; jmp qword ptr [rax]; 
0x00000000004922b1: adc ecx, dword ptr [rcx + 0x39]; int 0x72; ret 0x7ce9; 
0x000000000041478a: adc ecx, dword ptr [rcx + 0x48602444]; mov dword ptr [rsp + 0x68], ecx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000401a81: adc ecx, dword ptr [rdi]; xchg eax, edx; add eax, 0x184ff8; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040d325: adc ecx, dword ptr [rdi]; xchg eax, esp; ret 0xd284; 
0x000000000048b52b: adc ecx, dword ptr [rdx - 0x77]; adc al, 0xeb; mov qword ptr [rbx + r13*8 + 8], r8; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000467e19: adc edi, dword ptr [rax + 1]; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000455f58: adc edi, dword ptr [rdx + rbx*2]; setbe al; mov byte ptr [rsp + 0x60], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000422b50: adc edi, ebp; mov esi, 0x8348dead; ret 0x4804; 
0x0000000000460469: adc edx, dword ptr [rdx]; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000435ed2: adc edx, dword ptr [rdx]; add byte ptr [rcx], bh; sar dword ptr [rdi + 0xa], 0x48; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000456ecf: adc esi, dword ptr [rbp + 0xa]; add rax, 0x38; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000467253: adc esi, dword ptr [rbp + 0xb]; add rax, 0x38; mov qword ptr [rsp + 0x10], rax; nop; ret; 
0x0000000000450cfe: adc esi, dword ptr [rcx]; ror byte ptr [rax - 0x79], 0x83; push 0x48000016; mov ebp, dword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000463f8e: adc r11b, r14b; movq qword ptr [rdi + rbx - 0x20], mm0; movdqu xmmword ptr [rdi + rbx - 0x10], xmm0; ret; 
0x00000000004641b8: adc r11b, r14b; movq qword ptr [rdi + rbx - 0x20], mm2; movdqu xmmword ptr [rdi + rbx - 0x10], xmm3; ret; 
0x0000000000485035: adc r8, qword ptr [r8 + r8]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000440b6e: adc word ptr [rax], ax; mov qword ptr [rsp], rax; call 0xaa00; mov rbp, qword ptr [rsp + 0xe0]; add rsp, 0xe8; ret; 
0x0000000000448084: add ah, byte ptr [rax + 4]; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000441052: add ah, byte ptr [rdx + 0x11]; add al, dh; xadd dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040f85d: add ah, byte ptr [rsi - 0x70]; call rax; 
0x000000000044a61d: add ah, byte ptr [rsi - 0x70]; cmp rdx, rbx; ja 0x4a62f; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000459be1: add ah, byte ptr [rsi - 9]; ret; 
0x0000000000461397: add ah, cl; mov rbp, qword ptr [rsp + 0x10000]; add rsp, 0x10008; ret; 
0x0000000000461117: add ah, cl; mov rbp, qword ptr [rsp + 0x1000]; add rsp, 0x1008; ret; 
0x0000000000460f05: add ah, cl; mov rbp, qword ptr [rsp + 0x100]; add rsp, 0x108; ret; 
0x0000000000463747: add ah, cl; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004611b7: add ah, cl; mov rbp, qword ptr [rsp + 0x2000]; add rsp, 0x2008; ret; 
0x0000000000460f85: add ah, cl; mov rbp, qword ptr [rsp + 0x200]; add rsp, 0x208; ret; 
0x0000000000460dae: add ah, cl; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000461257: add ah, cl; mov rbp, qword ptr [rsp + 0x4000]; add rsp, 0x4008; ret; 
0x0000000000461005: add ah, cl; mov rbp, qword ptr [rsp + 0x400]; add rsp, 0x408; ret; 
0x0000000000460e0e: add ah, cl; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004612f7: add ah, cl; mov rbp, qword ptr [rsp + 0x8000]; add rsp, 0x8008; ret; 
0x0000000000461085: add ah, cl; mov rbp, qword ptr [rsp + 0x800]; add rsp, 0x808; ret; 
0x0000000000460e82: add ah, cl; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x00000000004340c2: add al, 0; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x0000000000448086: add al, 0; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x000000000042f0c2: add al, 0; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x000000000040c307: add al, 0; add byte ptr [rax - 0x75], cl; sbb byte ptr [r9 - 9], r9b; ret 7; 
0x0000000000404b6e: add al, 0; add byte ptr [rax - 0x7d], cl; js 0x4bad; add byte ptr [rdi], cl; xchg eax, esp; ret 0xd284; 
0x0000000000433e36: add al, 0; add byte ptr [rax], al; call 0x344e0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000491ae0: add al, 0; add byte ptr [rax], al; call 0x91760; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040b06d: add al, 0; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000047bdb7: add al, 0; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000044138b: add al, 0; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x430]; add rsp, 0x438; ret; 
0x000000000043e70e: add al, 0; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000465360: add al, 0; add byte ptr [rax], al; mov rdx, 0x800; or edx, eax; mov eax, 0x48; syscall; 
0x0000000000441340: add al, 0; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x430]; add rsp, 0x438; ret; 
0x0000000000441241: add al, 0; add byte ptr [rcx], ch; ret 0xead1; 
0x000000000046185c: add al, 0; add byte ptr [rdi + 9], dh; lea rax, [rip + 0x4f8]; jmp rax; 
0x00000000004624c7: add al, 0; add rsp, 0x40008; ret; 
0x000000000042ed2b: add al, 0; call 0x3b00; mov rbp, qword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x000000000040d540: add al, 0; cmp rcx, rdx; jae 0xd52e; mov byte ptr [rsp + 0x10], 1; ret; 
0x00000000004618ed: add al, 0; ja 0x618fa; lea rax, [rip + 0xb28]; jmp rax; 
0x00000000004840ac: add al, 0; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004850af: add al, 0; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; nop; ret; 
0x0000000000484e90: add al, 0; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048ef82: add al, 0; mov qword ptr [rsp + 0x48], rcx; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000047bdab: add al, 0; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], 4; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000047be30: add al, 0; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], 6; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048e114: add al, 0; mov qword ptr [rsp + 0x58], rcx; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000490998: add al, 0; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000048d541: add al, 0; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000049a3ae: add al, 0; mov rax, qword ptr [r9 + 0x98]; mov qword ptr [rsp], r8; call rax; 
0x000000000046248b: add al, 0; mov rax, qword ptr [rdx]; call rax; 
0x0000000000415027: add al, 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000414533: add al, 0; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000416ae3: add al, 0; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000049482f: add al, 0; mov rcx, qword ptr [rcx + 0xf8]; mov qword ptr [rsp], rax; call rcx; 
0x000000000046247e: add al, 0; mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x40018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004624ce: add al, 0; ret; 
0x00000000004764ad: add al, 0x10; xor byte ptr [rax - 1], cl; ret; 
0x000000000042d491: add al, 0x11; cmp rdx, rax; ja 0x2d4a2; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000422b4f: add al, 0x11; out dx, eax; mov esi, 0x8348dead; ret 0x4804; 
0x000000000048af3f: add al, 0x11; shr r8, 1; mov qword ptr [rsp + 0x80], r8; mov qword ptr [rsp + 0x10], r8; call rsi; 
0x000000000042c0b5: add al, 0x17; add rbx, rdi; cmp r8, rbx; jae 0x2c095; mov qword ptr [rsp + 0x18], rsi; ret; 
0x000000000044c5dd: add al, 0x1a; mov dword ptr [rsp + 8], eax; ret; 
0x0000000000437690: add al, 0x24; add al, ch; call 0x4803776d; mov ebp, dword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000445a32: add al, 0x24; add al, r13b; ret; 
0x00000000004648a3: add al, 0x24; add rsp, 0x170; popfq; pop rbp; ret; 
0x000000000042d904: add al, 0x24; call 0x2d520; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000045c773: add al, 0x24; call 0x2d6c0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000434329: add al, 0x24; call 0x341e0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000434631: add al, 0x24; call 0x34380; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004344c4: add al, 0x24; call 0x34380; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000043b9ad: add al, 0x24; call 0x3b700; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000043888e: add al, 0x24; call 0x431e0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004398b3: add al, 0x24; call 0x61580; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004069a9: add al, 0x24; call 0x615e0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000415022: add al, 0x24; call 0x61680; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000425655: add al, 0x24; call 0x61680; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000403b63: add al, 0x24; call 0x61680; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000431394: add al, 0x24; call 0x61680; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000043ce07: add al, 0x24; call 0x61680; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004044b2: add al, 0x24; call 0x61680; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000460466: add al, 0x24; call 0x61680; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000047fe12: add al, 0x24; call 0x6af00; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x000000000046b890: add al, 0x24; call 0x6af00; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000473271: add al, 0x24; call 0x72ca0; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048f4d2: add al, 0x24; call 0x8eb00; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000048f7f2: add al, 0x24; call 0x8eb60; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x0000000000497410: add al, 0x24; call 0x926c0; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000440b73: add al, 0x24; call 0xaa00; mov rbp, qword ptr [rsp + 0xe0]; add rsp, 0xe8; ret; 
0x0000000000439750: add al, 0x24; call 0xaa40; call 0x38b20; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043b7ce: add al, 0x24; call 0xaa40; call 0x3ad60; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042b7e9: add al, 0x24; call 0xaa40; mov rbp, qword ptr [rsp + 0x168]; add rsp, 0x170; nop; ret; 
0x000000000041f285: add al, 0x24; call 0xaa40; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004161d2: add al, 0x24; call 0xaa40; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000041c622: add al, 0x24; call 0xaa40; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000041b1c7: add al, 0x24; call 0xaa40; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042ba33: add al, 0x24; call 0xaa40; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000045ca40: add al, 0x24; call 0xaa40; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x000000000044864e: add al, 0x24; call 0xaa40; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000040b0f5: add al, 0x24; call 0xaa40; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000040aa24: add al, 0x24; call 0xb0e0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000049a3b9: add al, 0x24; call rax; 
0x00000000004802ca: add al, 0x24; call rbx; 
0x000000000049483a: add al, 0x24; call rcx; 
0x0000000000438f66: add al, 0x24; mov byte ptr [rsp + 8], 0; call 0x38cc0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000441ab0: add al, 0x24; mov dword ptr [rsp + 0x20], eax; mov qword ptr [rsp + 0x28], rbx; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000451295: add al, 0x24; mov qword ptr [rsp + 0x18], rax; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000040e0ef: add al, 0x24; mov qword ptr [rsp + 8], 0; mov rax, qword ptr [rdx]; call rax; 
0x000000000040f917: add al, 0x24; mov qword ptr [rsp + 8], rax; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000044223d: add al, 0x24; mov qword ptr [rsp + 8], rcx; call 0x2eba0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044a631: add al, 0x24; mov qword ptr [rsp + 8], rcx; call 0x49320; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000473329: add al, 0x24; mov qword ptr [rsp + 8], rcx; call 0x73080; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040e288: add al, 0x24; mov qword ptr [rsp + 8], rcx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000040e00f: add al, 0x24; mov qword ptr [rsp + 8], rcx; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000040e78f: add al, 0x24; mov qword ptr [rsp + 8], rsi; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000042f2ad: add al, 0x24; mov rax, qword ptr [rdx]; call rax; 
0x000000000043acf1: add al, 0x24; mov rax, qword ptr [rip + 0x8b84e]; lea rdx, [rip + 0x8b847]; call rax; 
0x00000000004035ff: add al, 0x24; mov rax, qword ptr [rsp + 0x58]; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; call rax; 
0x000000000047ff07: add al, 0x24; mov rax, qword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x0000000000434851: add al, 0x24; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000043ac50: add al, 0x24; mov rcx, qword ptr [rip + 0x8b8ef]; lea rdx, [rip + 0x8b8e8]; call rcx; 
0x0000000000434747: add al, 0x24; mov rcx, qword ptr [rip + 0x91df0]; lea rdx, [rip + 0x91de9]; call rcx; 
0x0000000000437aad: add al, 0x24; mov rdx, qword ptr [rsp + 0x68]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000434eb9: add al, 0x24; nop dword ptr [rax + rax]; call 0x615e0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045153b: add al, 0x24; nop dword ptr [rax]; call 0x51a80; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000044999b: add al, 0x24; nop dword ptr [rax]; call 0x61580; mov rbp, qword ptr [rsp + 0x1a0]; add rsp, 0x1a8; ret; 
0x000000000042b49a: add al, 0x24; nop dword ptr [rax]; call 0x61680; mov rbp, qword ptr [rsp + 0x168]; add rsp, 0x170; ret; 
0x000000000043781b: add al, 0x24; nop dword ptr [rax]; call 0x64900; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048f91a: add al, 0x24; nop dword ptr [rax]; call 0x8eb60; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000041b8da: add al, 0x24; nop dword ptr [rax]; call 0xaa40; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000043f55a: add al, 0x24; nop dword ptr [rax]; call 0xab20; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000044511d: add al, 0x24; nop; call 0x3e240; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000416add: add al, 0x24; nop; call 0x61680; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000041c35c: add al, 0x24; nop; call 0xaa40; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004266bc: add al, 0x24; nop; call 0xaa40; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045651d: add al, 0x24; nop; call 0xaa40; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000426c1c: add al, 0x24; nop; call 0xaa40; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x00000000004973fc: add al, 0x24; nop; call rcx; 
0x0000000000473051: add al, 0x31; cmp dil, r8b; je 0x73038; setb byte ptr [rsp + 0x30]; ret; 
0x000000000040da4f: add al, 0x33; mov dword ptr [rcx + 0xc], eax; mov qword ptr [rsp + 0x20], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048abae: add al, 0x38; mov qword ptr [rsp + 0x10], r8; call rdx; 
0x0000000000462bc8: add al, 0x48; add esp, 0x4000008; ret; 
0x0000000000422b58: add al, 0x48; cmp eax, edx; ja 0x22b4e; ret; 
0x0000000000459526: add al, 0x48; mov dword ptr [rsp + 0x40], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044ee97: add al, 0x48; mov eax, dword ptr [rcx + rax*8]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000462b8c: add al, 0x48; mov eax, dword ptr [rdx]; call rax; 
0x0000000000462b7f: add al, 0x48; mov edi, esp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x4000018]; mov rax, qword ptr [rdx]; call rax; 
0x000000000047e65a: add al, 0x74; sbb byte ptr [rdi], cl; mov dh, 0x51; adc al, 0xf6; ret 0x7404; 
0x00000000004687c2: add al, 0x74; shufps xmm0, xmmword ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046197e: add al, 0x77; or dword ptr [rax - 0x73], ecx; add eax, 0x1198; jmp rax; 
0x000000000045f636: add al, 0x7c; shufps xmm0, xmmword ptr [rsp + 0x28], 0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000415cf9: add al, 0x85; sal byte ptr [rbp + 0xa], 0x48; mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042d3cb: add al, 0xa; cmp rdx, rax; ja 0x2d3dc; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000049a5ee: add al, 0xb; or cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x60; add rsp, 0x68; ret; 
0x00000000004982d0: add al, 0xb; pop rbp; mov rbp, qword ptr [rsp + 0x1c8]; add rsp, 0x1d0; ret; 
0x000000000049493e: add al, 0xb; sub esi, eax; xor byte ptr [rbx], 0x48; mov ebp, dword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000040a0d1: add al, 0xc1; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044ee9a: add al, 0xc1; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044b62d: add al, 0xc1; mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000434f78: add al, 0xc7; add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042ac8f: add al, 0xc8; lea rax, [rax + 0x30]; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048f0f3: add al, 0xc; add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x77], cl; or al, 0x24; mov rcx, qword ptr [rdx]; call rcx; 
0x0000000000430c8c: add al, 0xce; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000441898: add al, 0xe8; ret 0; 
0x000000000042a0db: add al, 0xf2; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043c52c: add al, 0xf; xchg eax, esp; ret 0xd284; 
0x000000000043c862: add al, 0xf; xchg eax, esp; ret; 
0x000000000045e788: add al, 0xfb; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x000000000045bb50: add al, 0xfc; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x00000000004043a4: add al, 0xff; ret 0xcdeb; 
0x000000000040fc06: add al, 1; lea rax, [rax + 0x28]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004107c8: add al, 1; lea rax, [rax + 0x48]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000495a51: add al, 2; jge 0x95a9d; mov ebp, dword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x0000000000452166: add al, 3; lea rax, [rax + 8]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048d7dd: add al, 5; add bl, ch; ret 0x8348; 
0x00000000004127b0: add al, bpl; leave; syscall; 
0x000000000043f55e: add al, bpl; mov ebx, 0x48fffcb5; mov ebp, dword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000043865e: add al, bpl; wait; ret; 
0x0000000000472ba2: add al, byte ptr [rax + 0xe]; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000042f996: add al, byte ptr [rax]; add al, ch; ret 0x33d; 
0x0000000000437e8b: add al, byte ptr [rax]; add al, ch; sub eax, 0xeb0002b5; ret 0x8948; 
0x0000000000401546: add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret 0x8948; 
0x0000000000459956: add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret 0x8949; 
0x000000000041cf06: add al, byte ptr [rax]; add byte ptr [rax + 0xf152479], al; xchg eax, esp; ret 0x8548; 
0x0000000000401538: add al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; add dword ptr [r8 + 0xfd03948], edx; xchg dword ptr [rdx + rax], edx; add byte ptr [rax + 0x29], cl; ret 0x8948; 
0x0000000000494827: add al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; or eax, 0x4a1cf; mov rcx, qword ptr [rcx + 0xf8]; mov qword ptr [rsp], rax; call rcx; 
0x0000000000456967: add al, byte ptr [rax]; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x68; add rsp, 0x70; ret; 
0x0000000000404282: add al, byte ptr [rax]; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x78; sub rsp, -0x80; ret; 
0x0000000000454e45: add al, byte ptr [rax]; add byte ptr [rax - 0x75], cl; je 0x54e70; cmp byte ptr [rax - 0x77], cl; ret; 
0x00000000004971d0: add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; and al, 0x10; mov ecx, dword ptr [rsp + 0x278]; mov dword ptr [rsp + 0x18], ecx; call rax; 
0x0000000000496f61: add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; or al, 0x24; call rax; 
0x0000000000496e37: add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; or al, 0x24; nop; call rax; 
0x0000000000459dae: add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; ret 0x8944; 
0x0000000000453e73: add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; ret; 
0x000000000044b0ed: add al, byte ptr [rax]; add byte ptr [rax - 1], cl; ret; 
0x000000000043da5e: add al, byte ptr [rax]; add byte ptr [rax], al; je 0x3da6e; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004595d7: add al, byte ptr [rax]; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000047d3b3: add al, byte ptr [rax]; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x1a0]; add rsp, 0x1a8; ret; 
0x000000000047d077: add al, byte ptr [rax]; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x208]; add rsp, 0x210; ret; 
0x0000000000441a21: add al, byte ptr [rax]; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000465327: add al, byte ptr [rax]; add byte ptr [rax], al; mov rdx, 1; mov eax, 0x48; syscall; 
0x0000000000465327: add al, byte ptr [rax]; add byte ptr [rax], al; mov rdx, 1; mov eax, 0x48; syscall; ret; 
0x0000000000453e6b: add al, byte ptr [rax]; add byte ptr [rbx + rcx*4 - 0x4c], cl; and al, 0x20; add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000496e52: add al, byte ptr [rax]; add byte ptr [rcx - 0x17e7dbbc], cl; ret 0xffe7; 
0x000000000040c42b: add al, byte ptr [rax]; add byte ptr [rcx - 0x77], cl; ret 0x8948; 
0x0000000000473945: add al, byte ptr [rax]; add byte ptr [rcx - 0x77], cl; ret 0x8949; 
0x0000000000427d79: add al, byte ptr [rax]; add byte ptr [rcx - 1], cl; ret; 
0x000000000047d397: add al, byte ptr [rax]; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x1a0]; add rsp, 0x1a8; ret; 
0x000000000046184a: add al, byte ptr [rax]; add byte ptr [rdi + 9], dh; lea rax, [rip + 0x44a]; jmp rax; 
0x000000000042cd70: add al, byte ptr [rax]; add byte ptr [rdi + rcx + 0x48], dh; mov dword ptr [rsp + 0x30], ebx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004623e7: add al, byte ptr [rax]; add rsp, 0x20008; ret; 
0x0000000000407873: add al, byte ptr [rax]; call 0x33b60; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000442a09: add al, byte ptr [rax]; cmp byte ptr [rsp], 0; je 0x42a1b; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004618db: add al, byte ptr [rax]; ja 0x618e8; lea rax, [rip + 0xa5a]; jmp rax; 
0x00000000004623ab: add al, byte ptr [rax]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000436534: add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; nop; ret; 
0x0000000000434ec3: add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000403890: add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004051da: add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000432374: add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; nop; ret; 
0x0000000000405e84: add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000406a84: add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000043ce0c: add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004385c9: add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000041911a: add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000403c03: add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000418aa6: add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000407878: add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000046239e: add al, byte ptr [rax]; mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x20018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004623ee: add al, byte ptr [rax]; ret; 
0x0000000000431398: add al, byte ptr [rbx]; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x0000000000430e10: add al, ch; adc al, 0; add byte ptr [rax + 0x309c4e8], dl; add bl, ch; ret 0xcccc; 
0x0000000000446e89: add al, ch; adc ebx, esp; add dword ptr [rax], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000419116: add al, ch; and al, 0xa5; add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000407f35: add al, ch; and eax, 0x480002bc; mov ebp, dword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000437692: add al, ch; call 0x4803776d; mov ebp, dword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000042f3d2: add al, ch; call 0x4902f120; mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000045153f: add al, ch; cmp eax, dword ptr [rip - 0x74b80000]; insb byte ptr [rdi], dx; and al, 0x50; add rsp, 0x58; ret; 
0x0000000000428242: add al, ch; cwde; ret 0; 
0x000000000043781f: add al, ch; fcmovnbe st(0), st(0); add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000046152e: add al, ch; insb byte ptr [rdi], dx; mov eax, 0x5858fffd; call 0x374a0; call 0x630c0; ret; 
0x000000000043410d: add al, ch; int 3; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045d363: add al, ch; ja 0x5d3dc; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000446b04: add al, ch; jbe 0x46b09; add byte ptr [rax], al; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000418bc9: add al, ch; jno 0x18b77; add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000446aa9: add al, ch; jno 0x46a8f; add dword ptr [rax], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004127b1: add al, ch; leave; syscall; 
0x000000000048d16e: add al, ch; lodsb al, byte ptr [rsi]; ret; 
0x0000000000431279: add al, ch; loope 0x312a5; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000418326: add al, ch; mov ah, 0x6d; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000041eb22: add al, ch; mov eax, 0xe8000159; xor edx, dword ptr [rax + 1]; add cl, ch; ret; 
0x0000000000496f9f: add al, ch; mov ebx, 0x48fff99e; mov ebp, dword ptr [rsp + 0x260]; add rsp, 0x268; ret; 
0x000000000043f55f: add al, ch; mov ebx, 0x48fffcb5; mov ebp, dword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x00000000004529bf: add al, ch; mov ebx, 0x48ffffea; mov ebp, dword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000433e39: add al, ch; movabs eax, dword ptr [0x10246c8b48000006]; add rsp, 0x18; ret; 
0x000000000040388c: add al, ch; movabs rax, 0x4818246c8b480002; add esp, 0x20; ret; 
0x0000000000430e50: add al, ch; or dl, byte ptr [rax + rax]; add byte ptr [rax + 0x30984e8], dl; add bl, ch; ret 0xcccc; 
0x000000000049528d: add al, ch; or eax, 0x48ffffdf; mov ebp, dword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004311b4: add al, ch; out 0xbb, al; add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000407874: add al, ch; out 0xc2, al; add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000040c0ec: add al, ch; outsb dx, byte ptr [rsi]; jbe 0xc0f6; add byte ptr [rax + 0x556e8e8], dl; add cl, ch; ret; 
0x000000000040827f: add al, ch; pop rbx; ret 2; 
0x000000000042e760: add al, ch; pop rdx; imul eax, dword ptr [rbx], 0x6c8b4800; and al, 0x40; add rsp, 0x48; ret; 
0x00000000004188e0: add al, ch; pop rdx; ret; 
0x00000000004385c5: add al, ch; push rbp; mov dword ptr [rdx], 0x6c8b4800; and al, 0x40; add rsp, 0x48; ret; 
0x0000000000426007: add al, ch; push rbx; ret 0; 
0x0000000000408184: add al, ch; push rsi; ret; 
0x00000000004214b8: add al, ch; ret 0; 
0x000000000041e818: add al, ch; ret 0x15c; 
0x000000000041b218: add al, ch; ret 0x192; 
0x000000000041a718: add al, ch; ret 0x19d; 
0x0000000000430698: add al, ch; ret 0x1b; 
0x0000000000432418: add al, ch; ret 0x20; 
0x000000000040c018: add al, ch; ret 0x284; 
0x000000000040b418: add al, ch; ret 0x290; 
0x0000000000407a98: add al, ch; ret 0x2c0; 
0x000000000042f998: add al, ch; ret 0x33d; 
0x000000000041bc98: add al, ch; ret 0x47a; 
0x000000000043b0d8: add al, ch; ret 0x5d; 
0x000000000042b098: add al, ch; ret 0x71; 
0x000000000042cf18: add al, ch; ret 0x75; 
0x000000000042bd18: add al, ch; ret 0x87; 
0x00000000004252b8: add al, ch; ret 0xb2; 
0x0000000000428218: add al, ch; ret 0xc2; 
0x0000000000465a18: add al, ch; ret 0xf9c8; 
0x0000000000456118: add al, ch; ret 0xfde3; 
0x0000000000454c18: add al, ch; ret 0xfdf8; 
0x0000000000446718: add al, ch; ret 0xfedd; 
0x0000000000444618: add al, ch; ret 0xfefe; 
0x0000000000440518: add al, ch; ret 0xff3f; 
0x0000000000439418: add al, ch; ret 0xffb0; 
0x0000000000436418: add al, ch; ret 0xffe0; 
0x0000000000406637: add al, ch; ret; 
0x000000000045c890: add al, ch; retf 0xfd59; call qword ptr [rax + 0x4f44e8]; add bl, ch; ret 0xcccc; 
0x000000000040acbf: add al, ch; sbb eax, dword ptr [rbx - 0x6814fffb]; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000434ebf: add al, ch; sbb eax, edi; add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004142cc: add al, ch; scasb al, byte ptr [rdi]; ret 1; 
0x000000000041b7ae: add al, ch; sub al, 0x21; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000437e8d: add al, ch; sub eax, 0xeb0002b5; ret 0x8948; 
0x000000000043865f: add al, ch; wait; ret; 
0x0000000000435fc5: add al, ch; xchg eax, ebp; ret 0xffff; 
0x0000000000415fc7: add al, ch; xchg eax, ebx; ret 1; 
0x000000000041a967: add al, ch; xor ecx, dword ptr [rax]; add dword ptr [rax], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041eb27: add al, ch; xor edx, dword ptr [rax + 1]; add cl, ch; ret; 
0x000000000044f24e: add al, dh; xadd dword ptr [rax + 0x2788], ecx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000441055: add al, dh; xadd dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004381e7: add al, dh; xadd dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042dc98: add al, dh; xadd dword ptr [rdx], eax; mov byte ptr [rsp + 0x28], cl; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000045b2fe: add al, dh; xadd dword ptr [rdx], ecx; mov byte ptr [rax + 0x16b8], 0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000041c64a: add al, dh; xadd qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000445a36: add al, r13b; ret; 
0x0000000000445a30: add bh, al; add al, 0x24; add al, r13b; ret; 
0x000000000043c960: add bh, bh; adc al, 0x48; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000041a9a2: add bh, bh; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000040a89b: add bh, bh; ret 0x9189; 
0x000000000043ad00: add bh, bh; ror byte ptr [rax - 0x75], 1; insb byte ptr [rdi], dx; and al, 0x50; add rsp, 0x58; ret; 
0x0000000000495a52: add bh, byte ptr [rbp + 0x48]; mov ebp, dword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x000000000048bfbb: add bh, byte ptr [rbx + 0x1f]; mov rax, -1; mov qword ptr [rsp + 0x128], rax; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x000000000046170e: add bl, al; mov rdx, rdi; mov rdi, qword ptr [rdi]; jmp rdi; 
0x000000000045fbae: add bl, ch; cmovs edi, edi; ret; 
0x0000000000440fb2: add bl, ch; cmpsb byte ptr [rsi], byte ptr [rdi]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000450ca0: add bl, ch; fisttp dword ptr [rcx - 0x77]; ret; 
0x0000000000456d92: add bl, ch; mov cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; ret; 
0x000000000048c106: add bl, ch; mov ebp, 0xb9ebc031; mov qword ptr [rsp + 0x128], rax; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x000000000040aea5: add bl, ch; movabs al, byte ptr [0x6c8b4801482444c6]; and al, 0x28; add rsp, 0x30; ret; 
0x0000000000413818: add bl, ch; movabs byte ptr [0x6c8b4840245c8948], al; and al, 0x28; add rsp, 0x30; ret; 
0x000000000046cec3: add bl, ch; movsb byte ptr [rdi], byte ptr [rsi]; mov qword ptr [rsp + 0x30], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046cd63: add bl, ch; movsb byte ptr [rdi], byte ptr [rsi]; mov qword ptr [rsp + 0x38], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000441878: add bl, ch; or edi, edi; ret 0x448b; 
0x0000000000441384: add bl, ch; out dx, al; mov byte ptr [rsp + 0x458], 0; mov rbp, qword ptr [rsp + 0x430]; add rsp, 0x438; ret; 
0x000000000040ada6: add bl, ch; pushfq; mov byte ptr [rsp + 0x48], 1; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048d7df: add bl, ch; ret 0x8348; 
0x0000000000437e92: add bl, ch; ret 0x8948; 
0x000000000041b00f: add bl, ch; ret 0x8b48; 
0x0000000000430f27: add bl, ch; ret 0x8d48; 
0x0000000000430e1b: add bl, ch; ret 0xcccc; 
0x000000000046b998: add bl, ch; ret 0xdb31; 
0x0000000000418ac4: add bl, ch; ret; 
0x0000000000437600: add bl, ch; retf; mov rax, qword ptr [rdx]; call rax; 
0x0000000000443c7a: add bl, ch; scasd eax, dword ptr [rdi]; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004854e8: add bl, ch; shr eax, 0xf0; ret 0xfffd; 
0x0000000000436bfc: add bl, ch; stosb byte ptr [rdi], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004424f6: add bl, ch; test byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x000000000042d510: add bl, ch; test dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000042d449: add bl, ch; xchg byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000040acc4: add bl, ch; xchg eax, edi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000493ff3: add byte ptr [r10 + r9 - 0x48], sil; add dword ptr [rax], eax; add byte ptr [rax], al; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000493df2: add byte ptr [r8], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042714f: add byte ptr [r8], r8b; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x60; add rsp, 0x68; ret; 
0x00000000004044ed: add byte ptr [r8], r8b; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x78; sub rsp, -0x80; ret; 
0x00000000004652f8: add byte ptr [rax + 0x119], bh; syscall; 
0x00000000004652f8: add byte ptr [rax + 0x119], bh; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x000000000045e91a: add byte ptr [rax + 0x127d433d], al; add byte ptr [rax], al; jne 0x5e92e; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000422ac5: add byte ptr [rax + 0x13ac433d], al; add byte ptr [rax], al; jne 0x22ad9; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041a46e: add byte ptr [rax + 0x14329a3d], al; add byte ptr [rax], al; jne 0x1a488; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000429dbe: add byte ptr [rax + 0x1480000], al; ret 0x8948; 
0x000000000041247a: add byte ptr [rax + 0x1480000], al; ret 0xc148; 
0x000000000040b6e8: add byte ptr [rax + 0x1480000], al; ret; 
0x00000000004222b1: add byte ptr [rax + 0x1490000], al; ret; 
0x0000000000435b4a: add byte ptr [rax + 0x1508d205], cl; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x0000000000452388: add byte ptr [rax + 0x16], 0; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000411d1a: add byte ptr [rax + 0x1749433d], al; add byte ptr [rax], al; jne 0x11d2e; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000441185: add byte ptr [rax + 0x18247c], al; je 0x4114e; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000047a932: add byte ptr [rax + 0x1b02484], cl; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x138]; add rsp, 0x140; ret; 
0x000000000043af64: add byte ptr [rax + 0x1b158948], dl; ret; 
0x000000000047b592: add byte ptr [rax + 0x1d82484], cl; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x150]; add rsp, 0x158; ret; 
0x000000000047b372: add byte ptr [rax + 0x1e82484], cl; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x158]; add rsp, 0x160; ret; 
0x000000000040df75: add byte ptr [rax + 0x21], cl; ret; 
0x000000000047d4f2: add byte ptr [rax + 0x2302484], cl; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x1a0]; add rsp, 0x1a8; ret; 
0x0000000000464a35: add byte ptr [rax + 0x23], bh; syscall; 
0x0000000000464a35: add byte ptr [rax + 0x23], bh; syscall; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004291dd: add byte ptr [rax + 0x24448948], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000047ac19: add byte ptr [rax + 0x2444950f], al; push rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004628ea: add byte ptr [rax + 0x28b4800], al; call rax; 
0x0000000000401548: add byte ptr [rax + 0x29], cl; ret 0x8948; 
0x0000000000459958: add byte ptr [rax + 0x29], cl; ret 0x8949; 
0x0000000000430e55: add byte ptr [rax + 0x30984e8], dl; add bl, ch; ret 0xcccc; 
0x0000000000430e15: add byte ptr [rax + 0x309c4e8], dl; add bl, ch; ret 0xcccc; 
0x00000000004046ff: add byte ptr [rax + 0x39], cl; fbstp tbyte ptr [rdx - 0x43]; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x000000000042ee7f: add byte ptr [rax + 0x39], cl; fmul dword ptr [rdi]; sbb dword ptr [rax + rax - 0x74b80000], 0x34; ret 0x8548; 
0x000000000048744d: add byte ptr [rax + 0x39], cl; ret 0x2875; 
0x000000000046789f: add byte ptr [rax + 0x39], cl; ret 0x4473; 
0x0000000000450cd5: add byte ptr [rax + 0x39], cl; ret 0x5572; 
0x000000000041fcff: add byte ptr [rax + 0x39], cl; ret 0x5673; 
0x0000000000442653: add byte ptr [rax + 0x39], cl; ret 0x6c75; 
0x0000000000414590: add byte ptr [rax + 0x39], cl; ret 0x7575; 
0x000000000042037f: add byte ptr [rax + 0x39], cl; ret 0x776; 
0x000000000047d89f: add byte ptr [rax + 0x39], cl; ret 0x7a75; 
0x00000000004518df: add byte ptr [rax + 0x39], cl; ret 0x820f; 
0x0000000000442614: add byte ptr [rax + 0x39], cl; ret 0x850f; 
0x00000000004920df: add byte ptr [rax + 0x39], cl; ret 0x860f; 
0x000000000042cb5f: add byte ptr [rax + 0x39], cl; ret 0x870f; 
0x0000000000447297: add byte ptr [rax + 0x39], cl; ret 0x872; 
0x000000000044bec3: add byte ptr [rax + 0x39], cl; ret 0x876; 
0x00000000004580e5: add byte ptr [rax + 0x39], cl; ret 0x8d0f; 
0x000000000043f96e: add byte ptr [rax + 0x39], cl; ret 0x8f0f; 
0x0000000000414345: add byte ptr [rax + 0x39], cl; ret; 
0x0000000000442cff: add byte ptr [rax + 0x39], cl; ror byte ptr [rdi], 1; xchg dword ptr [rax], edi; add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret 0x8948; 
0x0000000000401f48: add byte ptr [rax + 0x39], cl; ror dword ptr [rcx - 0x77], cl; ror byte ptr [rdi + rcx + 0x4c], 1; ret; 
0x00000000004912c8: add byte ptr [rax + 0x39], cl; ror dword ptr [rdi], 0x82; test dword ptr [rax], 0x89490000; ret 0x294c; 
0x00000000004473fe: add byte ptr [rax + 0x39], cl; ror dword ptr [rdi], cl; xchg eax, edx; ret 0x894c; 
0x000000000044267f: add byte ptr [rax + 0x39], cl; sal dword ptr [rbp + 0xa], 0x48; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040a77f: add byte ptr [rax + 0x39], cl; sal dword ptr [rbp + 0xa], 0x48; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040d3b3: add byte ptr [rax + 0x39], cl; sal dword ptr [rbp + 0xf], 1; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000040d541: add byte ptr [rax + 0x39], cl; sal dword ptr [rbx - 0x19], 1; mov byte ptr [rsp + 0x10], 1; ret; 
0x0000000000402dff: add byte ptr [rax + 0x39], cl; sal dword ptr [rdi + 0x18], 0x48; mov dword ptr [rsp + 0xb8], edx; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x0000000000458d39: add byte ptr [rax + 0x39], cl; sete al; mov byte ptr [rsp + 0x148], al; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x000000000046490f: add byte ptr [rax + 0x3c], bh; syscall; 
0x000000000042dc09: add byte ptr [rax + 0x48028948], dl; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000461946: add byte ptr [rax + 0x48097700], al; lea eax, [rip + 0xf2e]; jmp rax; 
0x0000000000467e1e: add byte ptr [rax + 0x48402444], cl; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000473615: add byte ptr [rax + 0x48402454], cl; mov dword ptr [rsp + 0x48], eax; mov qword ptr [rsp + 0x50], 0; mov byte ptr [rsp + 0x58], dl; ret; 
0x0000000000482457: add byte ptr [rax + 0x48502444], cl; mov ebp, dword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044c4ee: add byte ptr [rax + 0x48682444], cl; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044c4a2: add byte ptr [rax + 0x4868244c], cl; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000462f47: add byte ptr [rax + 0x48], al; add esp, 0x40000008; ret; 
0x0000000000462f0b: add byte ptr [rax + 0x48], al; mov eax, dword ptr [rdx]; call rax; 
0x0000000000462efe: add byte ptr [rax + 0x48], al; mov edi, esp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x40000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000465331: add byte ptr [rax + 0x48], bh; syscall; 
0x0000000000465331: add byte ptr [rax + 0x48], bh; syscall; ret; 
0x000000000040c0f1: add byte ptr [rax + 0x556e8e8], dl; add cl, ch; ret; 
0x000000000043af72: add byte ptr [rax + 0x58d4890], dl; pushfq; ret 0x11; 
0x000000000045f579: add byte ptr [rax + 0x63], cl; add byte ptr [rax - 0x77], cl; and al, 8; ret; 
0x0000000000442a0a: add byte ptr [rax + 0x7400243c], al; or cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x48; add rsp, 0x50; ret; 
0x000000000042d143: add byte ptr [rax + 0x75000016], dl; or cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x00000000004619c5: add byte ptr [rax + 0x77], al; or dword ptr [rax - 0x73], ecx; add eax, 0x14d0; jmp rax; 
0x0000000000403f9e: add byte ptr [rax + 0x8247c], al; je 0x3fb0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042b5db: add byte ptr [rax + 0x8247c], al; jne 0x2b5ed; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004618b5: add byte ptr [rax + 0x9770000], al; lea rax, [rip + 0x8be]; jmp rax; 
0x0000000000437305: add byte ptr [rax + 0xa058d48], dl; call qword ptr [rcx]; 
0x000000000041f9f1: add byte ptr [rax + 0xa7401f9], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000433b99: add byte ptr [rax + 0xa7401f9], al; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000439b73: add byte ptr [rax + 0xf0248c], cl; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000046a253: add byte ptr [rax + 0xf02494], cl; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x000000000041cf08: add byte ptr [rax + 0xf152479], al; xchg eax, esp; ret 0x8548; 
0x000000000043e2ff: add byte ptr [rax + 0xf7701f9], al; mov byte ptr [rsp + 0x30], 1; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042dea0: add byte ptr [rax + 0xf], cl; ror dword ptr [rax - 0x77], 0x44; and al, 0x28; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x00000000004178db: add byte ptr [rax + 0xf], cl; scasd eax, dword ptr [rdi]; ret 0x570f; 
0x000000000045b4d1: add byte ptr [rax + 1], cl; add eax, 0x12bbc7; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000429dc1: add byte ptr [rax + 1], cl; ret 0x8948; 
0x000000000041247d: add byte ptr [rax + 1], cl; ret 0xc148; 
0x0000000000402e24: add byte ptr [rax + 1], cl; ret; 
0x00000000004840a4: add byte ptr [rax + rax - 0x15fa74b8], al; and al, byte ptr [rax + rax]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000047878d: add byte ptr [rax + rax*8 - 0x7b74f38b], al; and al, 0x88; add byte ptr [rax], al; add cl, ch; ret 0xfff7; 
0x000000000046185b: add byte ptr [rax + rax], al; add byte ptr [rdi + 9], dh; lea rax, [rip + 0x4f8]; jmp rax; 
0x00000000004624c6: add byte ptr [rax + rax], al; add rsp, 0x40008; ret; 
0x000000000042ed2a: add byte ptr [rax + rax], al; call 0x3b00; mov rbp, qword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x000000000040d53f: add byte ptr [rax + rax], al; cmp rcx, rdx; jae 0xd52e; mov byte ptr [rsp + 0x10], 1; ret; 
0x00000000004618ec: add byte ptr [rax + rax], al; ja 0x618fa; lea rax, [rip + 0xb28]; jmp rax; 
0x000000000046248a: add byte ptr [rax + rax], al; mov rax, qword ptr [rdx]; call rax; 
0x000000000046247d: add byte ptr [rax + rax], al; mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x40018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004624cd: add byte ptr [rax + rax], al; ret; 
0x000000000047239a: add byte ptr [rax + rbx + 0x48], bh; mov dword ptr [rsp + 0xa0], eax; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x00000000004351f3: add byte ptr [rax + rcx + 0x48], dh; mov dword ptr [rax + 0x10], 0xfffffade; mov qword ptr [rsp + 0x70], r8; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000040aa9c: add byte ptr [rax + rcx + 0x48], dh; mov dword ptr [rax + 0x10], 0xfffffade; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000419c25: add byte ptr [rax + rcx + 0x48], dh; mov dword ptr [rax + 0x10], 0xfffffade; mov rbp, qword ptr [rsp + 0x1b0]; add rsp, 0x1b8; nop; ret; 
0x0000000000438976: add byte ptr [rax + rcx + 0x48], dh; mov dword ptr [rax + 0x10], 0xfffffade; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000452311: add byte ptr [rax + rcx + 0x48], dh; mov dword ptr [rax + 0x10], 0xfffffade; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004362df: add byte ptr [rax + rcx + 0x48], dh; mov dword ptr [rax + 0x10], 0xfffffade; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000437c2b: add byte ptr [rax + rcx + 0x48], dh; mov dword ptr [rax + 0x10], 0xfffffade; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; nop; ret; 
0x0000000000435561: add byte ptr [rax + rcx + 0x48], dh; mov dword ptr [rax + 0x10], 0xfffffade; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000042416b: add byte ptr [rax + rcx + 0x48], dh; mov dword ptr [rax + 0x10], 0xfffffade; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; nop; ret; 
0x0000000000418d4d: add byte ptr [rax + rcx + 0x48], dh; mov dword ptr [rax + 0x10], 0xfffffade; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000451acd: add byte ptr [rax + rcx + 0x48], dh; mov dword ptr [rax + 0x10], 0xfffffade; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000040c36f: add byte ptr [rax + rcx + 0x48], dh; mov dword ptr [rcx + 0x10], 0xfffffade; mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x0000000000437fc1: add byte ptr [rax + rcx + 0x48], dh; mov dword ptr [rdx + 0x10], 0xfffffade; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000462bc7: add byte ptr [rax + rcx*2], al; add esp, 0x4000008; ret; 
0x0000000000462b8b: add byte ptr [rax + rcx*2], al; mov eax, dword ptr [rdx]; call rax; 
0x0000000000462b7e: add byte ptr [rax + rcx*2], al; mov edi, esp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x4000018]; mov rax, qword ptr [rdx]; call rax; 
0x000000000047ea54: add byte ptr [rax - 0x17dfdbbc], cl; ret 0xfffc; 
0x00000000004628dd: add byte ptr [rax - 0x1876b800], al; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x800018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004241b7: add byte ptr [rax - 0x1ea17], al; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x68; add rsp, 0x70; ret; 
0x000000000045d3fe: add byte ptr [rax - 0x2982418], dl; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x000000000045eeed: add byte ptr [rax - 0x39], cl; and al, 0x18; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000046534a: add byte ptr [rax - 0x39], cl; ret 0; 
0x0000000000465363: add byte ptr [rax - 0x39], cl; ret 0x800; 
0x0000000000417f4d: add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x000000000046532a: add byte ptr [rax - 0x39], cl; ret 1; 
0x000000000042a097: add byte ptr [rax - 0x39], cl; ret; 
0x0000000000461490: add byte ptr [rax - 0x39], cl; rol dword ptr [rax], 0; add byte ptr [rax], al; call rax; 
0x000000000041aa6e: add byte ptr [rax - 0x39], cl; xor dword ptr [rax + 1], 0; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret 0x1f0f; 
0x000000000045143d: add byte ptr [rax - 0x45fa72b8], dl; ret 0x10; 
0x000000000045a63a: add byte ptr [rax - 0x6fcdf588], al; jne 0x5a64c; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000043acf9: add byte ptr [rax - 0x73], cl; adc eax, 0x8b847; call rax; 
0x000000000043acf9: add byte ptr [rax - 0x73], cl; adc eax, 0x8b847; call rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000043ac58: add byte ptr [rax - 0x73], cl; adc eax, 0x8b8e8; call rcx; 
0x0000000000434abf: add byte ptr [rax - 0x73], cl; adc eax, 0x91aa1; call rax; 
0x000000000043474f: add byte ptr [rax - 0x73], cl; adc eax, 0x91de9; call rcx; 
0x00000000004346db: add byte ptr [rax - 0x73], cl; adc eax, 0x91e5d; call rax; 
0x0000000000429554: add byte ptr [rax - 0x73], cl; adc eax, 0x9ce44; call rax; 
0x000000000040a0ce: add byte ptr [rax - 0x73], cl; add al, 0xc1; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040153a: add byte ptr [rax - 0x73], cl; add dword ptr [r8 + 0xfd03948], edx; xchg dword ptr [rdx + rax], edx; add byte ptr [rax + 0x29], cl; ret 0x8948; 
0x0000000000480a4e: add byte ptr [rax - 0x73], cl; add dword ptr [rax + 0x39], r9d; ret; 
0x0000000000475d8b: add byte ptr [rax - 0x73], cl; add r9b, byte ptr [rax - 0x77]; ret; 
0x000000000040b289: add byte ptr [rax - 0x73], cl; dec dword ptr [rax - 0x7b]; sar byte ptr [rbp - 0x51], 0x48; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044104e: add byte ptr [rax - 0x73], cl; or eax, 0x116202; lock xadd dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000494829: add byte ptr [rax - 0x73], cl; or eax, 0x4a1cf; mov rcx, qword ptr [rcx + 0xf8]; mov qword ptr [rsp], rax; call rcx; 
0x000000000045f94b: add byte ptr [rax - 0x73], cl; or eax, 0xe16dd; xchg dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000498975: add byte ptr [rax - 0x73], cl; push rsi; sbb byte ptr [rax - 0x77], cl; ret; 
0x0000000000464bd5: add byte ptr [rax - 0x73], cl; xor al, 0x24; call rax; 
0x0000000000430fde: add byte ptr [rax - 0x74b71f15], dl; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x000000000045eaec: add byte ptr [rax - 0x74b7fff1], al; sub al, 0x24; add rsp, 8; ret; 
0x000000000045f572: add byte ptr [rax - 0x75], cl; adc al, 0; add byte ptr [rax], al; movsxd rax, dword ptr [rax]; mov qword ptr [rsp + 8], rax; ret; 
0x0000000000443129: add byte ptr [rax - 0x75], cl; adc al, 1; mov rax, qword ptr [rcx + rax + 8]; mov qword ptr [rsp + 0x10], rdx; mov qword ptr [rsp + 0x18], rax; ret; 
0x000000000048f0f5: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x77], cl; or al, 0x24; mov rcx, qword ptr [rdx]; call rcx; 
0x0000000000451292: add byte ptr [rax - 0x75], cl; add al, 0x24; mov qword ptr [rsp + 0x18], rax; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000045b272: add byte ptr [rax - 0x75], cl; add dword ptr [rax - 0x77], ecx; add eax, 0x12be0b; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041ab3f: add byte ptr [rax - 0x75], cl; add eax, 0x16e749; mov qword ptr [rip + 0x16c4f2], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004840a6: add byte ptr [rax - 0x75], cl; add eax, 0x422ea; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000434ab8: add byte ptr [rax - 0x75], cl; add eax, 0x91aa8; lea rdx, [rip + 0x91aa1]; call rax; 
0x0000000000464d02: add byte ptr [rax - 0x75], cl; add eax, 0xdc456; call rax; 
0x0000000000464c1c: add byte ptr [rax - 0x75], cl; add eax, 0xdc53c; call rax; 
0x0000000000406724: add byte ptr [rax - 0x75], cl; and al, 0x10; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000452084: add byte ptr [rax - 0x75], cl; and al, 0x10; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000424646: add byte ptr [rax - 0x75], cl; and al, 0x10; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000402fac: add byte ptr [rax - 0x75], cl; and al, 0x10; mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x00000000004024dd: add byte ptr [rax - 0x75], cl; and al, 0x18; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004203de: add byte ptr [rax - 0x75], cl; and al, 0x18; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000403152: add byte ptr [rax - 0x75], cl; and al, 0x18; mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000048493b: add byte ptr [rax - 0x75], cl; and al, 0x18; mov rcx, qword ptr [rsp + 0x20]; mov rax, qword ptr [rax + 0xf8]; mov qword ptr [rsp], rcx; call rax; 
0x000000000044807b: add byte ptr [rax - 0x75], cl; and al, 0x20; mov qword ptr [rdx + rax + 0x460], rcx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004246e5: add byte ptr [rax - 0x75], cl; and al, 0x20; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040cd17: add byte ptr [rax - 0x75], cl; and al, 0x20; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000411ed1: add byte ptr [rax - 0x75], cl; and al, 0x28; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000415299: add byte ptr [rax - 0x75], cl; and al, 0x28; xchg dword ptr [rcx + 0x6c0], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042e081: add byte ptr [rax - 0x75], cl; and al, 0x30; mov qword ptr [rip + 0x1584ea], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000447115: add byte ptr [rax - 0x75], cl; and al, 0x30; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000041ec8f: add byte ptr [rax - 0x75], cl; and al, 0x38; add qword ptr [rax + 0x16b0], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000415be4: add byte ptr [rax - 0x75], cl; and al, 0x38; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000409cb0: add byte ptr [rax - 0x75], cl; and al, 0x40; mov qword ptr [rsp + 0xc8], rax; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x000000000048538c: add byte ptr [rax - 0x75], cl; and al, 0x40; mov qword ptr [rsp], rcx; call rax; 
0x000000000044cfb6: add byte ptr [rax - 0x75], cl; and al, 0x48; mov qword ptr [rsp + 0x118], rax; mov rbp, qword ptr [rsp + 0xf0]; add rsp, 0xf8; ret; 
0x000000000041f84a: add byte ptr [rax - 0x75], cl; and al, 0x48; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x00000000004855cc: add byte ptr [rax - 0x75], cl; and al, 0x48; mov qword ptr [rsp], rcx; call rax; 
0x00000000004238e9: add byte ptr [rax - 0x75], cl; and al, 0x50; mov qword ptr [rdx + rax*8], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000044e1bd: add byte ptr [rax - 0x75], cl; and al, 0x58; mov qword ptr [rsp + 0xe8], rax; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x000000000047e846: add byte ptr [rax - 0x75], cl; and al, 0x58; mov qword ptr [rsp], rcx; call rax; 
0x000000000044aa34: add byte ptr [rax - 0x75], cl; and al, 0x78; mov qword ptr [rsp + 0xd8], rax; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000486e38: add byte ptr [rax - 0x75], cl; and al, 0x78; mov qword ptr [rsp], rcx; call rax; 
0x0000000000403267: add byte ptr [rax - 0x75], cl; and al, 8; cmp byte ptr [rcx], al; sete byte ptr [rsp + 0x18]; ret; 
0x00000000004032a6: add byte ptr [rax - 0x75], cl; and al, 8; cmp dword ptr [rcx], eax; sete byte ptr [rsp + 0x18]; ret; 
0x00000000004032c7: add byte ptr [rax - 0x75], cl; and al, 8; cmp qword ptr [rcx], rax; sete byte ptr [rsp + 0x18]; ret; 
0x0000000000403287: add byte ptr [rax - 0x75], cl; and al, 8; cmp word ptr [rcx], ax; sete byte ptr [rsp + 0x18]; ret; 
0x000000000040d1a4: add byte ptr [rax - 0x75], cl; and al, 8; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048ff89: add byte ptr [rax - 0x75], cl; cmp byte ptr [r8 - 0x75], cl; mov qword ptr [rsp + 0x10], rax; mov qword ptr [rsp + 0x18], rcx; ret; 
0x0000000000467cee: add byte ptr [rax - 0x75], cl; cmp byte ptr [rax - 0x75], cl; push rsp; and al, 0x38; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000433d75: add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; nop; ret; 
0x000000000040103c: add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000040fe15: add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; nop; ret; 
0x0000000000403891: add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x0000000000401da6: add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000432375: add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; nop; ret; 
0x0000000000403b69: add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x0000000000406a75: add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; nop; ret; 
0x0000000000401a88: add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x00000000004468d5: add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; nop; ret; 
0x0000000000409e34: add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; ret; 
0x0000000000428b75: add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; nop; ret; 
0x000000000040931a: add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x000000000040be95: add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x48; add rsp, 0x50; nop; ret; 
0x000000000040692e: add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x48; add rsp, 0x50; ret; 
0x0000000000403c04: add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x50; add rsp, 0x58; ret; 
0x0000000000411584: add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x58; add rsp, 0x60; ret; 
0x000000000041eb54: add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x60; add rsp, 0x68; ret; 
0x0000000000403a5e: add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x68; add rsp, 0x70; ret; 
0x0000000000469755: add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x70; add rsp, 0x78; nop; ret; 
0x0000000000404b84: add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x70; add rsp, 0x78; ret; 
0x0000000000404284: add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x78; sub rsp, -0x80; ret; 
0x00000000004069af: add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x0000000000454e47: add byte ptr [rax - 0x75], cl; je 0x54e70; cmp byte ptr [rax - 0x77], cl; ret; 
0x000000000047e7c3: add byte ptr [rax - 0x75], cl; je 0x7e7ec; push 0x24348948; call rbx; 
0x0000000000486df6: add byte ptr [rax - 0x75], cl; je 0x86e1f; js 0x86e45; mov dword ptr [rsp], esi; call rbx; 
0x0000000000497fab: add byte ptr [rax - 0x75], cl; mov ah, 0x24; add byte ptr [rcx], al; add byte ptr [rax], al; mov qword ptr [rsp], rsi; call rbx; 
0x0000000000494830: add byte ptr [rax - 0x75], cl; mov eax, edi; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add al, 0x24; call rcx; 
0x000000000047c611: add byte ptr [rax - 0x75], cl; mov rcx, qword ptr [rsp + 0x90]; mov qword ptr [rsp], rcx; call rax; 
0x000000000047c5d7: add byte ptr [rax - 0x75], cl; mov rdx, qword ptr [rsp + 0x90]; mov qword ptr [rsp], rdx; call rcx; 
0x000000000048cce0: add byte ptr [rax - 0x75], cl; mov word ptr [rax + rbp*4], fs; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; or al, 0x24; call rax; 
0x000000000048adf6: add byte ptr [rax - 0x75], cl; mov word ptr [rax + rbp*4], fs; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x0000000000468dc3: add byte ptr [rax - 0x75], cl; mov word ptr [rax + rbx*8], fs; add byte ptr [rax], al; add cl, ch; ret; 
0x0000000000401096: add byte ptr [rax - 0x75], cl; mov word ptr [rax], fs; add byte ptr [rax], al; add byte ptr [rax - 0x76b7f615], dl; ret 0x8948; 
0x0000000000412be9: add byte ptr [rax - 0x75], cl; or byte ptr [rax - 0x75], cl; or byte ptr [rcx], sil; shr bl, cl; add ecx, dword ptr [rax - 1]; ret 0x3948; 
0x0000000000405190: add byte ptr [rax - 0x75], cl; or byte ptr [rax - 0x77], cl; and al, 0x18; mov rdx, qword ptr [rsp + 0x48]; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000405e3a: add byte ptr [rax - 0x75], cl; or byte ptr [rax - 0x77], cl; and al, 0x20; mov rdx, qword ptr [rsp + 0x50]; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000048fe86: add byte ptr [rax - 0x75], cl; or eax, 0xbfe6a; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000048fe46: add byte ptr [rax - 0x75], cl; or eax, 0xc6e3a; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000048fe06: add byte ptr [rax - 0x75], cl; or eax, 0xc6e8a; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000048fdc6: add byte ptr [rax - 0x75], cl; or eax, 0xc6eda; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000047e823: add byte ptr [rax - 0x75], cl; pop rsp; and al, 0x68; mov qword ptr [rsp], rbx; call rdx; 
0x0000000000497de1: add byte ptr [rax - 0x75], cl; push rax; mov qword ptr [rsp], rcx; call rdx; 
0x000000000047c4f1: add byte ptr [rax - 0x75], cl; push rax; mov qword ptr [rsp], rcx; mov qword ptr [rsp + 8], rbx; nop; call rax; 
0x0000000000475670: add byte ptr [rax - 0x75], cl; push rcx; adc byte ptr [rax - 1], cl; ret 0x8948; 
0x000000000041d08b: add byte ptr [rax - 0x75], cl; push rcx; cmp byte ptr [rax + 0x29], cl; ret 0x8948; 
0x000000000047d9d5: add byte ptr [rax - 0x75], cl; push rsp; and al, 0x38; mov qword ptr [rsp], rdx; nop; call rcx; 
0x000000000047e798: add byte ptr [rax - 0x75], cl; push rsp; and al, 0x58; mov qword ptr [rsp], rdx; call rcx; 
0x000000000047e867: add byte ptr [rax - 0x75], cl; push rsp; and al, 0x68; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000486376: add byte ptr [rax - 0x75], cl; push rsp; and al, 0x70; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000486d8c: add byte ptr [rax - 0x75], cl; push rsp; and al, 0x78; mov qword ptr [rsp], rdx; call rcx; 
0x000000000040ec68: add byte ptr [rax - 0x75], cl; sbb byte ptr [r15], r9b; mov dh, 0x58; or dh, dh; ret; 
0x000000000040c309: add byte ptr [rax - 0x75], cl; sbb byte ptr [r9 - 9], r9b; ret 7; 
0x00000000004060db: add byte ptr [rax - 0x75], cl; sub al, 0x24; add rsp, 8; ret; 
0x000000000040c159: add byte ptr [rax - 0x75], cl; test byte ptr [rax + rbp*4], ah; add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rsp + rbp*2 + 0x48], 0xf7; ret 7; 
0x000000000041433d: add byte ptr [rax - 0x75], cl; test byte ptr [rax + rdx*4], ah; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret; 
0x000000000040109e: add byte ptr [rax - 0x76b7f615], dl; ret 0x8948; 
0x0000000000472fa4: add byte ptr [rax - 0x77], cl; adc al, 0x24; call 0x72ca0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000472de9: add byte ptr [rax - 0x77], cl; adc al, 0x24; call 0x72ca0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000047c5e3: add byte ptr [rax - 0x77], cl; adc al, 0x24; call rcx; 
0x000000000042d901: add byte ptr [rax - 0x77], cl; add al, 0x24; call 0x2d520; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000045c770: add byte ptr [rax - 0x77], cl; add al, 0x24; call 0x2d6c0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000043888b: add byte ptr [rax - 0x77], cl; add al, 0x24; call 0x431e0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004069a6: add byte ptr [rax - 0x77], cl; add al, 0x24; call 0x615e0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000460463: add byte ptr [rax - 0x77], cl; add al, 0x24; call 0x61680; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000047fe0f: add byte ptr [rax - 0x77], cl; add al, 0x24; call 0x6af00; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x000000000047326e: add byte ptr [rax - 0x77], cl; add al, 0x24; call 0x72ca0; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048f7ef: add byte ptr [rax - 0x77], cl; add al, 0x24; call 0x8eb60; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x0000000000440b70: add byte ptr [rax - 0x77], cl; add al, 0x24; call 0xaa00; mov rbp, qword ptr [rsp + 0xe0]; add rsp, 0xe8; ret; 
0x000000000041f282: add byte ptr [rax - 0x77], cl; add al, 0x24; call 0xaa40; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004161cf: add byte ptr [rax - 0x77], cl; add al, 0x24; call 0xaa40; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000041c61f: add byte ptr [rax - 0x77], cl; add al, 0x24; call 0xaa40; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000041b1c4: add byte ptr [rax - 0x77], cl; add al, 0x24; call 0xaa40; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042ba30: add byte ptr [rax - 0x77], cl; add al, 0x24; call 0xaa40; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000045ca3d: add byte ptr [rax - 0x77], cl; add al, 0x24; call 0xaa40; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x000000000041aca9: add byte ptr [rax - 0x77], cl; add al, 0x24; call 0xaa40; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x00000000004802c7: add byte ptr [rax - 0x77], cl; add al, 0x24; call rbx; 
0x0000000000494837: add byte ptr [rax - 0x77], cl; add al, 0x24; call rcx; 
0x000000000040e78c: add byte ptr [rax - 0x77], cl; add al, 0x24; mov qword ptr [rsp + 8], rsi; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000047ff04: add byte ptr [rax - 0x77], cl; add al, 0x24; mov rax, qword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x0000000000445dcc: add byte ptr [rax - 0x77], cl; add al, 0x24; mov rcx, qword ptr [rdx]; call rcx; 
0x00000000004973f9: add byte ptr [rax - 0x77], cl; add al, 0x24; nop; call rcx; 
0x0000000000456a2d: add byte ptr [rax - 0x77], cl; add dword ptr [rcx], esi; shr bl, cl; or byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x000000000042f8a9: add byte ptr [rax - 0x77], cl; add eax, 0x127267; mov rbp, qword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x000000000041ab46: add byte ptr [rax - 0x77], cl; add eax, 0x16c4f2; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004171c8: add byte ptr [rax - 0x77], cl; add eax, 0x16fe40; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000423de0: add byte ptr [rax - 0x77], cl; and al, 0x10; call 0x26d60; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000482da8: add byte ptr [rax - 0x77], cl; and al, 0x10; call 0x6b1a0; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x00000000004971d2: add byte ptr [rax - 0x77], cl; and al, 0x10; mov ecx, dword ptr [rsp + 0x278]; mov dword ptr [rsp + 0x18], ecx; call rax; 
0x000000000044310f: add byte ptr [rax - 0x77], cl; and al, 0x10; mov qword ptr [rsp + 0x18], 0x13; ret; 
0x000000000048e5e6: add byte ptr [rax - 0x77], cl; and al, 0x10; mov qword ptr [rsp + 0x18], 0xb; ret; 
0x0000000000445e16: add byte ptr [rax - 0x77], cl; and al, 0x10; mov rbx, qword ptr [rdx]; nop; call rbx; 
0x000000000045e5cc: add byte ptr [rax - 0x77], cl; and al, 0x10; ret; 
0x000000000046595a: add byte ptr [rax - 0x77], cl; and al, 0x18; mov qword ptr [rsp + 0x20], rax; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000467c90: add byte ptr [rax - 0x77], cl; and al, 0x18; mov qword ptr [rsp + 0x20], rax; ret; 
0x0000000000466e0e: add byte ptr [rax - 0x77], cl; and al, 0x18; mov qword ptr [rsp + 0x20], rcx; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x00000000004356e7: add byte ptr [rax - 0x77], cl; and al, 0x18; ret; 
0x0000000000464bfe: add byte ptr [rax - 0x77], cl; and al, 0x20; mov dword ptr [rsp + 0x28], edx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004873d5: add byte ptr [rax - 0x77], cl; and al, 0x20; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004658a2: add byte ptr [rax - 0x77], cl; and al, 0x28; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043473f: add byte ptr [rax - 0x77], cl; and al, 0x28; mov qword ptr [rsp], rax; mov rcx, qword ptr [rip + 0x91df0]; lea rdx, [rip + 0x91de9]; call rcx; 
0x0000000000493df6: add byte ptr [rax - 0x77], cl; and al, 0x28; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004678b4: add byte ptr [rax - 0x77], cl; and al, 0x30; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000408ee6: add byte ptr [rax - 0x77], cl; and al, 0x30; mov qword ptr [rsp + 0x38], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000451a17: add byte ptr [rax - 0x77], cl; and al, 0x30; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000464f9a: add byte ptr [rax - 0x77], cl; and al, 0x30; ret; 
0x0000000000424a3a: add byte ptr [rax - 0x77], cl; and al, 0x38; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000426cc2: add byte ptr [rax - 0x77], cl; and al, 0x38; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040febe: add byte ptr [rax - 0x77], cl; and al, 0x40; mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045dfdc: add byte ptr [rax - 0x77], cl; and al, 0x40; mov byte ptr [rsp + 0x48], cl; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000482172: add byte ptr [rax - 0x77], cl; and al, 0x40; mov qword ptr [rsp + 0x48], 0xe; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048f244: add byte ptr [rax - 0x77], cl; and al, 0x40; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040fc45: add byte ptr [rax - 0x77], cl; and al, 0x40; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040a1cd: add byte ptr [rax - 0x77], cl; and al, 0x40; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004067a3: add byte ptr [rax - 0x77], cl; and al, 0x48; mov qword ptr [rsp + 0x50], 0x1d; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048ef83: add byte ptr [rax - 0x77], cl; and al, 0x48; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048ec35: add byte ptr [rax - 0x77], cl; and al, 0x48; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000412689: add byte ptr [rax - 0x77], cl; and al, 0x48; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040a26b: add byte ptr [rax - 0x77], cl; and al, 0x48; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004850b0: add byte ptr [rax - 0x77], cl; and al, 0x48; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; nop; ret; 
0x0000000000484e91: add byte ptr [rax - 0x77], cl; and al, 0x48; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000047bdac: add byte ptr [rax - 0x77], cl; and al, 0x50; mov qword ptr [rsp + 0x58], 4; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000047be31: add byte ptr [rax - 0x77], cl; and al, 0x50; mov qword ptr [rsp + 0x58], 6; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000484a79: add byte ptr [rax - 0x77], cl; and al, 0x50; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000047ad40: add byte ptr [rax - 0x77], cl; and al, 0x50; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048f079: add byte ptr [rax - 0x77], cl; and al, 0x50; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048d8e4: add byte ptr [rax - 0x77], cl; and al, 0x50; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000443e6a: add byte ptr [rax - 0x77], cl; and al, 0x50; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000484c37: add byte ptr [rax - 0x77], cl; and al, 0x50; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040dfca: add byte ptr [rax - 0x77], cl; and al, 0x58; mov byte ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004124bb: add byte ptr [rax - 0x77], cl; and al, 0x58; mov qword ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000047b6b4: add byte ptr [rax - 0x77], cl; and al, 0x58; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048dd0a: add byte ptr [rax - 0x77], cl; and al, 0x58; mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004833dc: add byte ptr [rax - 0x77], cl; and al, 0x58; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000482ff7: add byte ptr [rax - 0x77], cl; and al, 0x60; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000490999: add byte ptr [rax - 0x77], cl; and al, 0x60; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000457930: add byte ptr [rax - 0x77], cl; and al, 0x68; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; nop; ret; 
0x000000000045778f: add byte ptr [rax - 0x77], cl; and al, 0x68; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004216a9: add byte ptr [rax - 0x77], cl; and al, 0x68; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000048d542: add byte ptr [rax - 0x77], cl; and al, 0x70; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004575de: add byte ptr [rax - 0x77], cl; and al, 0x70; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x00000000004846fd: add byte ptr [rax - 0x77], cl; and al, 0x78; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004570cd: add byte ptr [rax - 0x77], cl; and al, 0x78; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000045ddcc: add byte ptr [rax - 0x77], cl; and al, 8; call 0x29ae0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045b390: add byte ptr [rax - 0x77], cl; and al, 8; call 0x36ac0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000434c6a: add byte ptr [rax - 0x77], cl; and al, 8; call 0x3cda0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000499800: add byte ptr [rax - 0x77], cl; and al, 8; call rax; 
0x000000000048fdcd: add byte ptr [rax - 0x77], cl; and al, 8; mov qword ptr [rsp + 0x10], rcx; ret; 
0x00000000004540c7: add byte ptr [rax - 0x77], cl; and al, 8; mov rbx, qword ptr [rax]; mov rdx, rax; call rbx; 
0x0000000000452dc4: add byte ptr [rax - 0x77], cl; and al, 8; mov rdx, qword ptr [rsp + 0xc0]; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000045f57c: add byte ptr [rax - 0x77], cl; and al, 8; ret; 
0x000000000041ffe8: add byte ptr [rax - 0x77], cl; cmp al, 0x24; mov qword ptr [rsp + 8], r11; mov rax, qword ptr [rsp + 0x70]; lea rdx, [rsp + 0x70]; call rax; 
0x000000000042c888: add byte ptr [rax - 0x77], cl; jnp 0x2c895; sub qword ptr [rbx + 0x18], r8; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000042d671: add byte ptr [rax - 0x77], cl; mov byte ptr [rax + 0x17], cl; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000047c61d: add byte ptr [rax - 0x77], cl; or al, 0x24; call rax; 
0x000000000047c597: add byte ptr [rax - 0x77], cl; or al, 0x24; call rdx; 
0x0000000000437d53: add byte ptr [rax - 0x77], cl; or al, 0x24; mov rax, qword ptr [rdx]; call rax; 
0x000000000047ffa8: add byte ptr [rax - 0x77], cl; or al, 0x24; mov rax, qword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x000000000047c5fa: add byte ptr [rax - 0x77], cl; or al, 0x24; nop; call rax; 
0x000000000046263f: add byte ptr [rax - 0x77], cl; out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x100018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004622bf: add byte ptr [rax - 0x77], cl; out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x10018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461f3f: add byte ptr [rax - 0x77], cl; out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x1018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461c29: add byte ptr [rax - 0x77], cl; out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x118]; mov rax, qword ptr [rdx]; call rax; 
0x000000000046271f: add byte ptr [rax - 0x77], cl; out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x200018]; mov rax, qword ptr [rdx]; call rax; 
0x000000000046239f: add byte ptr [rax - 0x77], cl; out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x20018]; mov rax, qword ptr [rdx]; call rax; 
0x000000000046201f: add byte ptr [rax - 0x77], cl; out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x2018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461ce9: add byte ptr [rax - 0x77], cl; out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x218]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004627ff: add byte ptr [rax - 0x77], cl; out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x400018]; mov rax, qword ptr [rdx]; call rax; 
0x000000000046247f: add byte ptr [rax - 0x77], cl; out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x40018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004620ff: add byte ptr [rax - 0x77], cl; out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x4018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461da9: add byte ptr [rax - 0x77], cl; out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x418]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004628df: add byte ptr [rax - 0x77], cl; out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x800018]; mov rax, qword ptr [rdx]; call rax; 
0x000000000046255f: add byte ptr [rax - 0x77], cl; out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x80018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004621df: add byte ptr [rax - 0x77], cl; out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x8018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461e69: add byte ptr [rax - 0x77], cl; out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x818]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461b66: add byte ptr [rax - 0x77], cl; out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x98]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004417d8: add byte ptr [rax - 0x77], cl; pop rsp; and al, 0x50; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045743c: add byte ptr [rax - 0x77], cl; pop rsp; and al, 0x70; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000046307f: add byte ptr [rax - 0x77], cl; push rsp; and al, 0x28; mov rdi, rbx; mov rcx, rbx; call rax; 
0x000000000043f183: add byte ptr [rax - 0x77], cl; push rsp; and al, 0x48; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048337d: add byte ptr [rax - 0x77], cl; push rsp; and al, 0x58; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048adfe: add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x000000000041688a: add byte ptr [rax - 0x77], cl; ret 0x3948; 
0x000000000042181f: add byte ptr [rax - 0x77], cl; ret 0x48f0; 
0x000000000040b970: add byte ptr [rax - 0x77], cl; ret 0x8748; 
0x0000000000459db0: add byte ptr [rax - 0x77], cl; ret 0x8944; 
0x00000000004355d5: add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x00000000004195d2: add byte ptr [rax - 0x77], cl; ret 0xb848; 
0x000000000041665b: add byte ptr [rax - 0x77], cl; ret 0xeb90; 
0x000000000043d4a1: add byte ptr [rax - 0x77], cl; ret 0xf48; 
0x000000000041a10c: add byte ptr [rax - 0x77], cl; ret; 
0x000000000043c1ca: add byte ptr [rax - 0x77], cl; ror dword ptr [rax - 0x77], 0x41; cmp qword ptr [rcx + 0x50], 0; jne 0x3c1da; ret; 
0x00000000004346d0: add byte ptr [rax - 0x77], cl; sbb al, 0x24; mov rax, qword ptr [rip + 0x91e64]; lea rdx, [rip + 0x91e5d]; call rax; 
0x000000000048aefc: add byte ptr [rax - 0x77], cl; shr bl, 1; or ecx, dword ptr [rax - 0x77]; ret 0x8b48; 
0x0000000000497fb3: add byte ptr [rax - 0x77], cl; xor al, 0x24; call rbx; 
0x000000000040e3d5: add byte ptr [rax - 0x77], cl; xor al, 0x24; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000442662: add byte ptr [rax - 0x79], cl; add dword ptr [rax + 0x39], ecx; ret 0x3d75; 
0x0000000000438448: add byte ptr [rax - 0x79], cl; or byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; ret; 
0x0000000000402fdf: add byte ptr [rax - 0x7af0f107], al; ret 1; 
0x000000000042b626: add byte ptr [rax - 0x7b], cl; leave; jg 0x2b632; mov byte ptr [rsp + 0x10], 0; ret; 
0x000000000042b2df: add byte ptr [rax - 0x7b], cl; leave; jne 0x2b257; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043a29c: add byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], cl; xchg eax, ebp; ret 0xd284; 
0x000000000042f297: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + 0xa], cl; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043a9ad: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + 0xe], 0xe8; call 0x4903a8f1; mov ebp, dword ptr [rsp]; add rsp, 8; ret; 
0x000000000043b5d2: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + 0xf], cl; call 0x3ad60; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044d37f: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp - 0x1f], 0x48; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046147d: add byte ptr [rax - 0x7b], cl; sal byte ptr [rcx + rsi + 0x48], 0x8d; xor eax, 0xfffff376; mov rdx, 0; mov rcx, 0; call rax; 
0x000000000045ebaa: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rcx + 0x48], cl; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040c161: add byte ptr [rax - 0x7b], cl; sal byte ptr [rsp + rbp*2 + 0x48], 0xf7; ret 7; 
0x000000000041691f: add byte ptr [rax - 0x7b], cl; test byte ptr [rdi], 0x84; ret 5; 
0x0000000000418c79: add byte ptr [rax - 0x7d], cl; cmp al, 0x24; dec dword ptr [rdi]; xchg eax, ebp; ret; 
0x0000000000404b70: add byte ptr [rax - 0x7d], cl; js 0x4bad; add byte ptr [rdi], cl; xchg eax, esp; ret 0xd284; 
0x00000000004064d7: add byte ptr [rax - 0x7d], cl; mov ebx, 0x1f68; add byte ptr [rdi + 0x10], dh; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000444afc: add byte ptr [rax - 0x7d], cl; ret 0x48f8; 
0x0000000000413b6f: add byte ptr [rax - 0x7d], cl; ret 0x9004; 
0x0000000000413027: add byte ptr [rax - 0x7d], cl; ret; 
0x000000000041b0e3: add byte ptr [rax - 0x7d], cl; rol byte ptr [rdx], 0x89; add eax, 0x16bede; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000047587f: add byte ptr [rax - 0x7f], cl; jmp qword ptr [rax]; 
0x0000000000430792: add byte ptr [rax - 0x7f], cl; ret 0xfc7f; 
0x000000000040d057: add byte ptr [rax - 0x7f], cl; ret; 
0x000000000044f704: add byte ptr [rax - 1], bh; lock xadd dword ptr [rbx + 0x2788], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000041aa79: add byte ptr [rax - 1], cl; ret 0x1f0f; 
0x000000000046b964: add byte ptr [rax - 1], cl; ret 0x3948; 
0x000000000040dfa6: add byte ptr [rax - 1], cl; ret 0x8348; 
0x000000000041bda9: add byte ptr [rax - 1], cl; ret 0x8948; 
0x00000000004174da: add byte ptr [rax - 1], cl; ret; 
0x00000000004593cc: add byte ptr [rax - 1], cl; ror byte ptr [rax - 0x77], 0x44; and al, 0x40; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042d380: add byte ptr [rax - 1], cl; ror dword ptr [rax - 0x7d], 0xf9; jl 0x2d362; ret; 
0x000000000042589b: add byte ptr [rax - 1], cl; sub dword ptr [rax], 0x48000012; mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004734f1: add byte ptr [rax - 1], cl; sub dword ptr [rax], 3; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048df74: add byte ptr [rax - 9], cl; fmul dword ptr [rax - 0x77]; and al, 0x38; call 0x5f320; ret; 
0x000000000048dfe3: add byte ptr [rax - 9], cl; fmul dword ptr [rax - 0x77]; and al, 0x50; call 0x5f320; ret; 
0x0000000000412070: add byte ptr [rax - 9], cl; rcl byte ptr [rax + 0x40418948], 1; ret; 
0x0000000000414328: add byte ptr [rax - 9], cl; ret 0x1f; 
0x000000000045e8bf: add byte ptr [rax - 9], cl; ret 7; 
0x000000000041de9f: add byte ptr [rax - 9], cl; ret; 
0x0000000000403889: add byte ptr [rax], 0; add al, ch; movabs rax, 0x4818246c8b480002; add esp, 0x20; ret; 
0x000000000041458d: add byte ptr [rax], 0; add byte ptr [rax + 0x39], cl; ret 0x7575; 
0x0000000000446def: add byte ptr [rax], 0; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x000000000044b45a: add byte ptr [rax], 0; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x000000000041285c: add byte ptr [rax], 0; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; ret; 
0x000000000041ae9a: add byte ptr [rax], 0; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x000000000044b995: add byte ptr [rax], 0; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x48; add rsp, 0x50; ret; 
0x00000000004329c2: add byte ptr [rax], 0; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x58; add rsp, 0x60; ret; 
0x0000000000429fc8: add byte ptr [rax], 0; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x60; add rsp, 0x68; ret; 
0x0000000000415583: add byte ptr [rax], 0; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x68; add rsp, 0x70; ret; 
0x000000000040ec65: add byte ptr [rax], 0; add byte ptr [rax - 0x75], cl; sbb byte ptr [r15], r9b; mov dh, 0x58; or dh, dh; ret; 
0x0000000000456a2a: add byte ptr [rax], 0; add byte ptr [rax - 0x77], cl; add dword ptr [rcx], esi; shr bl, cl; or byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x000000000047a696: add byte ptr [rax], 0; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000044f090: add byte ptr [rax], 0; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000473aa8: add byte ptr [rax], 0; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000048af48: add byte ptr [rax], 0; add byte ptr [rcx + rcx*4 + 0x44], cl; and al, 0x10; call rsi; 
0x000000000048ae5d: add byte ptr [rax], 0; add byte ptr [rcx + rcx*4 + 0x44], cl; and al, 8; mov qword ptr [rsp + 0x10], rcx; call rsi; 
0x00000000004557be: add byte ptr [rax], 0; add byte ptr [rcx], al; jne 0x557cf; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000044f000: add byte ptr [rax], 0; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000473b2a: add byte ptr [rax], 0; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000461825: add byte ptr [rax], 0; add byte ptr [rdi + 9], dh; lea rax, [rip + 0x2ee]; jmp rax; 
0x00000000004612fe: add byte ptr [rax], 0; add rsp, 0x8008; ret; 
0x00000000004618b6: add byte ptr [rax], 0; ja 0x618c4; lea rax, [rip + 0x8be]; jmp rax; 
0x00000000004621ea: add byte ptr [rax], 0; mov rax, qword ptr [rdx]; call rax; 
0x00000000004621dd: add byte ptr [rax], 0; mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x8018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461305: add byte ptr [rax], 0; ret; 
0x0000000000462927: add byte ptr [rax], 0x48; add esp, 0x800008; ret; 
0x00000000004628eb: add byte ptr [rax], 0x48; mov eax, dword ptr [rdx]; call rax; 
0x00000000004628de: add byte ptr [rax], 0x48; mov edi, esp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x800018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461947: add byte ptr [rax], 0x77; or dword ptr [rax - 0x73], ecx; add eax, 0xf2e; jmp rax; 
0x000000000047d0b1: add byte ptr [rax], 1; add byte ptr [rax], al; mov qword ptr [rsp], rcx; call rax; 
0x0000000000485388: add byte ptr [rax], 1; add byte ptr [rax], al; mov rcx, qword ptr [rsp + 0x40]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004855c8: add byte ptr [rax], 1; add byte ptr [rax], al; mov rcx, qword ptr [rsp + 0x48]; mov qword ptr [rsp], rcx; call rax; 
0x000000000047e842: add byte ptr [rax], 1; add byte ptr [rax], al; mov rcx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000486e34: add byte ptr [rax], 1; add byte ptr [rax], al; mov rcx, qword ptr [rsp + 0x78]; mov qword ptr [rsp], rcx; call rax; 
0x000000000045bdd0: add byte ptr [rax], ah; add byte ptr [rax + 0x39], cl; ret; 
0x00000000004611bd: add byte ptr [rax], ah; add byte ptr [rax], al; add rsp, 0x2008; ret; 
0x0000000000461891: add byte ptr [rax], ah; add byte ptr [rax], al; ja 0x618a0; lea rax, [rip + 0x722]; jmp rax; 
0x000000000042a5a9: add byte ptr [rax], ah; add byte ptr [rbp + 0x10], dh; movabs rax, 0x8000000000000000; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000461922: add byte ptr [rax], ah; add byte ptr [rdi + 9], dh; lea rax, [rip + 0xd92]; jmp rax; 
0x0000000000462e67: add byte ptr [rax], ah; add rsp, 0x20000008; ret; 
0x00000000004619b3: add byte ptr [rax], ah; ja 0x619c0; lea rax, [rip + 0x1402]; jmp rax; 
0x0000000000462e2b: add byte ptr [rax], ah; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462e1e: add byte ptr [rax], ah; mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x20000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462e6e: add byte ptr [rax], ah; ret; 
0x0000000000462685: add byte ptr [rax], al; adc byte ptr [rax], al; add rsp, 0x100008; ret; 
0x000000000046190f: add byte ptr [rax], al; adc byte ptr [rax], al; ja 0x6191e; lea rax, [rip + 0xcc4]; jmp rax; 
0x00000000004619a0: add byte ptr [rax], al; adc byte ptr [rdi + 9], dh; lea rax, [rip + 0x1334]; jmp rax; 
0x0000000000461395: add byte ptr [rax], al; add ah, cl; mov rbp, qword ptr [rsp + 0x10000]; add rsp, 0x10008; ret; 
0x0000000000461115: add byte ptr [rax], al; add ah, cl; mov rbp, qword ptr [rsp + 0x1000]; add rsp, 0x1008; ret; 
0x0000000000460f03: add byte ptr [rax], al; add ah, cl; mov rbp, qword ptr [rsp + 0x100]; add rsp, 0x108; ret; 
0x0000000000463745: add byte ptr [rax], al; add ah, cl; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004611b5: add byte ptr [rax], al; add ah, cl; mov rbp, qword ptr [rsp + 0x2000]; add rsp, 0x2008; ret; 
0x0000000000460f83: add byte ptr [rax], al; add ah, cl; mov rbp, qword ptr [rsp + 0x200]; add rsp, 0x208; ret; 
0x0000000000460dac: add byte ptr [rax], al; add ah, cl; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000461255: add byte ptr [rax], al; add ah, cl; mov rbp, qword ptr [rsp + 0x4000]; add rsp, 0x4008; ret; 
0x0000000000461003: add byte ptr [rax], al; add ah, cl; mov rbp, qword ptr [rsp + 0x400]; add rsp, 0x408; ret; 
0x0000000000460e0c: add byte ptr [rax], al; add ah, cl; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004612f5: add byte ptr [rax], al; add ah, cl; mov rbp, qword ptr [rsp + 0x8000]; add rsp, 0x8008; ret; 
0x0000000000461083: add byte ptr [rax], al; add ah, cl; mov rbp, qword ptr [rsp + 0x800]; add rsp, 0x808; ret; 
0x0000000000460e80: add byte ptr [rax], al; add ah, cl; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x00000000004624c5: add byte ptr [rax], al; add al, 0; add rsp, 0x40008; ret; 
0x000000000042ed29: add byte ptr [rax], al; add al, 0; call 0x3b00; mov rbp, qword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x000000000040d53e: add byte ptr [rax], al; add al, 0; cmp rcx, rdx; jae 0xd52e; mov byte ptr [rsp + 0x10], 1; ret; 
0x00000000004618eb: add byte ptr [rax], al; add al, 0; ja 0x618fa; lea rax, [rip + 0xb28]; jmp rax; 
0x0000000000462bc6: add byte ptr [rax], al; add al, 0x48; add esp, 0x4000008; ret; 
0x0000000000462b8a: add byte ptr [rax], al; add al, 0x48; mov eax, dword ptr [rdx]; call rax; 
0x000000000046197c: add byte ptr [rax], al; add al, 0x77; or dword ptr [rax - 0x73], ecx; add eax, 0x1198; jmp rax; 
0x00000000004127ae: add byte ptr [rax], al; add al, bpl; leave; syscall; 
0x00000000004623e5: add byte ptr [rax], al; add al, byte ptr [rax]; add rsp, 0x20008; ret; 
0x00000000004618d9: add byte ptr [rax], al; add al, byte ptr [rax]; ja 0x618e8; lea rax, [rip + 0xa5a]; jmp rax; 
0x0000000000430e0e: add byte ptr [rax], al; add al, ch; adc al, 0; add byte ptr [rax + 0x309c4e8], dl; add bl, ch; ret 0xcccc; 
0x000000000042f3d0: add byte ptr [rax], al; add al, ch; call 0x4902f120; mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000428240: add byte ptr [rax], al; add al, ch; cwde; ret 0; 
0x000000000048d16c: add byte ptr [rax], al; add al, ch; lodsb al, byte ptr [rsi]; ret; 
0x000000000041eb20: add byte ptr [rax], al; add al, ch; mov eax, 0xe8000159; xor edx, dword ptr [rax + 1]; add cl, ch; ret; 
0x0000000000433e37: add byte ptr [rax], al; add al, ch; movabs eax, dword ptr [0x10246c8b48000006]; add rsp, 0x18; ret; 
0x000000000040388a: add byte ptr [rax], al; add al, ch; movabs rax, 0x4818246c8b480002; add esp, 0x20; ret; 
0x0000000000430e4e: add byte ptr [rax], al; add al, ch; or dl, byte ptr [rax + rax]; add byte ptr [rax + 0x30984e8], dl; add bl, ch; ret 0xcccc; 
0x000000000049528b: add byte ptr [rax], al; add al, ch; or eax, 0x48ffffdf; mov ebp, dword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000426005: add byte ptr [rax], al; add al, ch; push rbx; ret 0; 
0x0000000000408182: add byte ptr [rax], al; add al, ch; push rsi; ret; 
0x000000000041e816: add byte ptr [rax], al; add al, ch; ret 0x15c; 
0x000000000041b216: add byte ptr [rax], al; add al, ch; ret 0x192; 
0x000000000041a716: add byte ptr [rax], al; add al, ch; ret 0x19d; 
0x0000000000430696: add byte ptr [rax], al; add al, ch; ret 0x1b; 
0x0000000000432416: add byte ptr [rax], al; add al, ch; ret 0x20; 
0x000000000040c016: add byte ptr [rax], al; add al, ch; ret 0x284; 
0x000000000040b416: add byte ptr [rax], al; add al, ch; ret 0x290; 
0x000000000043b0d6: add byte ptr [rax], al; add al, ch; ret 0x5d; 
0x000000000042b096: add byte ptr [rax], al; add al, ch; ret 0x71; 
0x000000000042cf16: add byte ptr [rax], al; add al, ch; ret 0x75; 
0x000000000042bd16: add byte ptr [rax], al; add al, ch; ret 0x87; 
0x0000000000428216: add byte ptr [rax], al; add al, ch; ret 0xc2; 
0x0000000000465a16: add byte ptr [rax], al; add al, ch; ret 0xf9c8; 
0x0000000000456116: add byte ptr [rax], al; add al, ch; ret 0xfde3; 
0x0000000000454c16: add byte ptr [rax], al; add al, ch; ret 0xfdf8; 
0x0000000000446716: add byte ptr [rax], al; add al, ch; ret 0xfedd; 
0x0000000000444616: add byte ptr [rax], al; add al, ch; ret 0xfefe; 
0x0000000000440516: add byte ptr [rax], al; add al, ch; ret 0xff3f; 
0x0000000000439416: add byte ptr [rax], al; add al, ch; ret 0xffb0; 
0x0000000000436416: add byte ptr [rax], al; add al, ch; ret 0xffe0; 
0x0000000000406635: add byte ptr [rax], al; add al, ch; ret; 
0x000000000045c88e: add byte ptr [rax], al; add al, ch; retf 0xfd59; call qword ptr [rax + 0x4f44e8]; add bl, ch; ret 0xcccc; 
0x0000000000435fc3: add byte ptr [rax], al; add al, ch; xchg eax, ebp; ret 0xffff; 
0x0000000000415fc5: add byte ptr [rax], al; add al, ch; xchg eax, ebx; ret 1; 
0x000000000044f24c: add byte ptr [rax], al; add al, dh; xadd dword ptr [rax + 0x2788], ecx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000043c95e: add byte ptr [rax], al; add bh, bh; adc al, 0x48; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046170c: add byte ptr [rax], al; add bl, al; mov rdx, rdi; mov rdi, qword ptr [rdi]; jmp rdi; 
0x000000000045fbac: add byte ptr [rax], al; add bl, ch; cmovs edi, edi; ret; 
0x0000000000450c9e: add byte ptr [rax], al; add bl, ch; fisttp dword ptr [rcx - 0x77]; ret; 
0x0000000000441876: add byte ptr [rax], al; add bl, ch; or edi, edi; ret 0x448b; 
0x000000000046b996: add byte ptr [rax], al; add bl, ch; ret 0xdb31; 
0x00000000004375fe: add byte ptr [rax], al; add bl, ch; retf; mov rax, qword ptr [rdx]; call rax; 
0x00000000004652f6: add byte ptr [rax], al; add byte ptr [rax + 0x119], bh; syscall; 
0x00000000004652f6: add byte ptr [rax], al; add byte ptr [rax + 0x119], bh; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000429dbc: add byte ptr [rax], al; add byte ptr [rax + 0x1480000], al; ret 0x8948; 
0x0000000000412478: add byte ptr [rax], al; add byte ptr [rax + 0x1480000], al; ret 0xc148; 
0x000000000040b6e6: add byte ptr [rax], al; add byte ptr [rax + 0x1480000], al; ret; 
0x00000000004222af: add byte ptr [rax], al; add byte ptr [rax + 0x1490000], al; ret; 
0x0000000000441183: add byte ptr [rax], al; add byte ptr [rax + 0x18247c], al; je 0x4114e; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000043af62: add byte ptr [rax], al; add byte ptr [rax + 0x1b158948], dl; ret; 
0x0000000000464a33: add byte ptr [rax], al; add byte ptr [rax + 0x23], bh; syscall; 
0x0000000000464a33: add byte ptr [rax], al; add byte ptr [rax + 0x23], bh; syscall; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004291db: add byte ptr [rax], al; add byte ptr [rax + 0x24448948], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040c4f4: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x8948; 
0x000000000042ee7d: add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; fmul dword ptr [rdi]; sbb dword ptr [rax + rax - 0x74b80000], 0x34; ret 0x8548; 
0x000000000041458e: add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0x7575; 
0x00000000004518dd: add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0x820f; 
0x000000000042cb5d: add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0x870f; 
0x00000000004580e3: add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0x8d0f; 
0x0000000000414343: add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret; 
0x000000000046490d: add byte ptr [rax], al; add byte ptr [rax + 0x3c], bh; syscall; 
0x000000000042dc07: add byte ptr [rax], al; add byte ptr [rax + 0x48028948], dl; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000467e1c: add byte ptr [rax], al; add byte ptr [rax + 0x48402444], cl; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000473613: add byte ptr [rax], al; add byte ptr [rax + 0x48402454], cl; mov dword ptr [rsp + 0x48], eax; mov qword ptr [rsp + 0x50], 0; mov byte ptr [rsp + 0x58], dl; ret; 
0x000000000044c4ec: add byte ptr [rax], al; add byte ptr [rax + 0x48682444], cl; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044c4a0: add byte ptr [rax], al; add byte ptr [rax + 0x4868244c], cl; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000462f45: add byte ptr [rax], al; add byte ptr [rax + 0x48], al; add esp, 0x40000008; ret; 
0x000000000046532f: add byte ptr [rax], al; add byte ptr [rax + 0x48], bh; syscall; 
0x000000000046532f: add byte ptr [rax], al; add byte ptr [rax + 0x48], bh; syscall; ret; 
0x000000000045f577: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; add byte ptr [rax - 0x77], cl; and al, 8; ret; 
0x00000000004619c3: add byte ptr [rax], al; add byte ptr [rax + 0x77], al; or dword ptr [rax - 0x73], ecx; add eax, 0x14d0; jmp rax; 
0x000000000042b5d9: add byte ptr [rax], al; add byte ptr [rax + 0x8247c], al; jne 0x2b5ed; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000439b71: add byte ptr [rax], al; add byte ptr [rax + 0xf0248c], cl; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000046a251: add byte ptr [rax], al; add byte ptr [rax + 0xf02494], cl; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x0000000000402e22: add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret; 
0x000000000047878b: add byte ptr [rax], al; add byte ptr [rax + rax*8 - 0x7b74f38b], al; and al, 0x88; add byte ptr [rax], al; add cl, ch; ret 0xfff7; 
0x000000000040aa9a: add byte ptr [rax], al; add byte ptr [rax + rcx + 0x48], dh; mov dword ptr [rax + 0x10], 0xfffffade; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000438974: add byte ptr [rax], al; add byte ptr [rax + rcx + 0x48], dh; mov dword ptr [rax + 0x10], 0xfffffade; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045230f: add byte ptr [rax], al; add byte ptr [rax + rcx + 0x48], dh; mov dword ptr [rax + 0x10], 0xfffffade; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004362dd: add byte ptr [rax], al; add byte ptr [rax + rcx + 0x48], dh; mov dword ptr [rax + 0x10], 0xfffffade; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000043555f: add byte ptr [rax], al; add byte ptr [rax + rcx + 0x48], dh; mov dword ptr [rax + 0x10], 0xfffffade; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000418d4b: add byte ptr [rax], al; add byte ptr [rax + rcx + 0x48], dh; mov dword ptr [rax + 0x10], 0xfffffade; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000451acb: add byte ptr [rax], al; add byte ptr [rax + rcx + 0x48], dh; mov dword ptr [rax + 0x10], 0xfffffade; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000462bc5: add byte ptr [rax], al; add byte ptr [rax + rcx*2], al; add esp, 0x4000008; ret; 
0x000000000047ea52: add byte ptr [rax], al; add byte ptr [rax - 0x17dfdbbc], cl; ret 0xfffc; 
0x000000000045eeeb: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; and al, 0x18; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000465348: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0; 
0x0000000000465361: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0x800; 
0x0000000000465328: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 1; 
0x000000000042a095: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret; 
0x000000000046148e: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; rol dword ptr [rax], 0; add byte ptr [rax], al; call rax; 
0x0000000000480a4c: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add dword ptr [rax + 0x39], r9d; ret; 
0x0000000000475d89: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add r9b, byte ptr [rax - 0x77]; ret; 
0x0000000000464bd3: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; xor al, 0x24; call rax; 
0x0000000000434ab6: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; add eax, 0x91aa8; lea rdx, [rip + 0x91aa1]; call rax; 
0x0000000000464d00: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; add eax, 0xdc456; call rax; 
0x0000000000464c1a: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; add eax, 0xdc53c; call rax; 
0x000000000040103a: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000041804e: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x0000000000405688: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000404b12: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x00000000004067af: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x000000000040e246: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; ret; 
0x0000000000409318: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x000000000040692c: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x48; add rsp, 0x50; ret; 
0x000000000042104e: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x50; add rsp, 0x58; ret; 
0x0000000000411582: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x58; add rsp, 0x60; ret; 
0x0000000000427150: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x60; add rsp, 0x68; ret; 
0x0000000000403a5c: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x68; add rsp, 0x70; ret; 
0x0000000000404b82: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x70; add rsp, 0x78; ret; 
0x00000000004754f0: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x78; sub rsp, -0x80; ret; 
0x0000000000423089: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x000000000047e7c1: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; je 0x7e7ec; push 0x24348948; call rbx; 
0x0000000000486df4: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; je 0x86e1f; js 0x86e45; mov dword ptr [rsp], esi; call rbx; 
0x000000000047c60f: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; mov rcx, qword ptr [rsp + 0x90]; mov qword ptr [rsp], rcx; call rax; 
0x000000000047c5d5: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; mov rdx, qword ptr [rsp + 0x90]; mov qword ptr [rsp], rdx; call rcx; 
0x000000000048adf4: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; mov word ptr [rax + rbp*4], fs; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x0000000000468dc1: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; mov word ptr [rax + rbx*8], fs; add byte ptr [rax], al; add cl, ch; ret; 
0x0000000000401094: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; mov word ptr [rax], fs; add byte ptr [rax], al; add byte ptr [rax - 0x76b7f615], dl; ret 0x8948; 
0x000000000047e821: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; pop rsp; and al, 0x68; mov qword ptr [rsp], rbx; call rdx; 
0x000000000041d089: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; push rcx; cmp byte ptr [rax + 0x29], cl; ret 0x8948; 
0x000000000047e796: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; push rsp; and al, 0x58; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000486374: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; push rsp; and al, 0x70; mov qword ptr [rsp], rdx; call rcx; 
0x000000000040ec66: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; sbb byte ptr [r15], r9b; mov dh, 0x58; or dh, dh; ret; 
0x00000000004060d9: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; sub al, 0x24; add rsp, 8; ret; 
0x000000000041433b: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; test byte ptr [rax + rdx*4], ah; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret; 
0x000000000040109c: add byte ptr [rax], al; add byte ptr [rax - 0x76b7f615], dl; ret 0x8948; 
0x000000000047c5e1: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; adc al, 0x24; call rcx; 
0x00000000004802c5: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add al, 0x24; call rbx; 
0x0000000000494835: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add al, 0x24; call rcx; 
0x000000000040e78a: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add al, 0x24; mov qword ptr [rsp + 8], rsi; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000047ff02: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add al, 0x24; mov rax, qword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x0000000000445dca: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add al, 0x24; mov rcx, qword ptr [rdx]; call rcx; 
0x00000000004973f7: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add al, 0x24; nop; call rcx; 
0x0000000000456a2b: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add dword ptr [rcx], esi; shr bl, cl; or byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x00000000004171c6: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add eax, 0x16fe40; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000445e14: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x10; mov rbx, qword ptr [rdx]; nop; call rbx; 
0x0000000000493df4: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x28; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000464f98: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x30; ret; 
0x0000000000426cc0: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x38; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000484c35: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x50; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004833da: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x58; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004575dc: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x70; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x00000000004846fb: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x78; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004997fe: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 8; call rax; 
0x0000000000452dc2: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 8; mov rdx, qword ptr [rsp + 0xc0]; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000047c61b: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; or al, 0x24; call rax; 
0x000000000047c595: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; or al, 0x24; call rdx; 
0x000000000047ffa6: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; or al, 0x24; mov rax, qword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x000000000047c5f8: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; or al, 0x24; nop; call rax; 
0x000000000048adfc: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x000000000040b96e: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8748; 
0x000000000043835e: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x00000000004195d0: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0xb848; 
0x000000000043d49f: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0xf48; 
0x00000000004287ad: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000043c1c8: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ror dword ptr [rax - 0x77], 0x41; cmp qword ptr [rcx + 0x50], 0; jne 0x3c1da; ret; 
0x000000000048aefa: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; shr bl, 1; or ecx, dword ptr [rax - 0x77]; ret 0x8b48; 
0x000000000040e3d3: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; xor al, 0x24; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000402fdd: add byte ptr [rax], al; add byte ptr [rax - 0x7af0f107], al; ret 1; 
0x000000000040c15f: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rsp + rbp*2 + 0x48], 0xf7; ret 7; 
0x0000000000444afa: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x48f8; 
0x0000000000444fa7: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000430790: add byte ptr [rax], al; add byte ptr [rax - 0x7f], cl; ret 0xfc7f; 
0x000000000041aa77: add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret 0x1f0f; 
0x000000000046b962: add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret 0x3948; 
0x000000000040dfa4: add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret 0x8348; 
0x000000000042d37e: add byte ptr [rax], al; add byte ptr [rax - 1], cl; ror dword ptr [rax - 0x7d], 0xf9; jl 0x2d362; ret; 
0x000000000048df72: add byte ptr [rax], al; add byte ptr [rax - 9], cl; fmul dword ptr [rax - 0x77]; and al, 0x38; call 0x5f320; ret; 
0x000000000048dfe1: add byte ptr [rax], al; add byte ptr [rax - 9], cl; fmul dword ptr [rax - 0x77]; and al, 0x50; call 0x5f320; ret; 
0x0000000000414326: add byte ptr [rax], al; add byte ptr [rax - 9], cl; ret 0x1f; 
0x000000000041de9d: add byte ptr [rax], al; add byte ptr [rax - 9], cl; ret; 
0x0000000000462925: add byte ptr [rax], al; add byte ptr [rax], 0x48; add esp, 0x800008; ret; 
0x0000000000461945: add byte ptr [rax], al; add byte ptr [rax], 0x77; or dword ptr [rax - 0x73], ecx; add eax, 0xf2e; jmp rax; 
0x0000000000462e65: add byte ptr [rax], al; add byte ptr [rax], ah; add rsp, 0x20000008; ret; 
0x00000000004619b1: add byte ptr [rax], al; add byte ptr [rax], ah; ja 0x619c0; lea rax, [rip + 0x1402]; jmp rax; 
0x00000000004375fc: add byte ptr [rax], al; add byte ptr [rax], al; add bl, ch; retf; mov rax, qword ptr [rdx]; call rax; 
0x0000000000429dba: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x1480000], al; ret 0x8948; 
0x0000000000412476: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x1480000], al; ret 0xc148; 
0x000000000040b6e4: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x1480000], al; ret; 
0x00000000004222ad: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x1490000], al; ret; 
0x000000000042ee7b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; fmul dword ptr [rdi]; sbb dword ptr [rax + rax - 0x74b80000], 0x34; ret 0x8548; 
0x00000000004518db: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0x820f; 
0x000000000042cb5b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0x870f; 
0x000000000046ba08: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; sub al, 0x24; add rsp, 8; ret; 
0x0000000000402fdb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7af0f107], al; ret 1; 
0x000000000041aa75: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret 0x1f0f; 
0x000000000042d37c: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 1], cl; ror dword ptr [rax - 0x7d], 0xf9; jl 0x2d362; ret; 
0x00000000004547af: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x2c0]; add rsp, 0x2c8; ret; 
0x000000000043d322: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x3d0]; add rsp, 0x3d8; ret; 
0x000000000042e457: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x648]; add rsp, 0x650; ret; 
0x0000000000475abc: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x690]; add rsp, 0x698; ret; 
0x000000000040bb0e: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000044e029: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x000000000048bc29: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x000000000042a5b1: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; or byte ptr [rax - 0x77], 0x44; and al, 0x10; ret; 
0x000000000047393b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbp - 0x5f7bf001], al; add al, byte ptr [rax]; add byte ptr [rcx - 0x77], cl; ret 0x8949; 
0x0000000000447291: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx], al; add byte ptr [rax + 0x39], cl; ret 0x872; 
0x0000000000464906: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi], bh; mov eax, 0x3c; syscall; 
0x000000000044260e: add byte ptr [rax], al; add byte ptr [rax], al; add dword ptr [rax], eax; add byte ptr [rax + 0x39], cl; ret 0x850f; 
0x000000000044265c: add byte ptr [rax], al; add byte ptr [rax], al; add eax, dword ptr [rax]; add byte ptr [rax - 0x79], cl; add dword ptr [rax + 0x39], ecx; ret 0x3d75; 
0x000000000042f3cf: add byte ptr [rax], al; add byte ptr [rax], al; call 0x3bc0; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000460310: add byte ptr [rax], al; add byte ptr [rax], al; call 0x43640; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045db2b: add byte ptr [rax], al; add byte ptr [rax], al; call 0x529e0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045c6c5: add byte ptr [rax], al; add byte ptr [rax], al; call 0x55320; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048df92: add byte ptr [rax], al; add byte ptr [rax], al; call 0x5f320; ret; 
0x000000000042e7ce: add byte ptr [rax], al; add byte ptr [rax], al; call 0x650c0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000461494: add byte ptr [rax], al; add byte ptr [rax], al; call rax; 
0x000000000042d37d: add byte ptr [rax], al; add byte ptr [rax], al; inc rcx; cmp rcx, 0x43; jl 0x2d362; ret; 
0x000000000042a2af: add byte ptr [rax], al; add byte ptr [rax], al; inc rcx; cmp rcx, 8; jl 0x2a2a9; ret; 
0x000000000042fbb1: add byte ptr [rax], al; add byte ptr [rax], al; jne 0x2fbe8; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042fc77: add byte ptr [rax], al; add byte ptr [rax], al; jne 0x2fc87; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000447aad: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rcx + 1]; cmp rax, 0x23; jl 0x47a92; ret; 
0x0000000000464bd2: add byte ptr [rax], al; add byte ptr [rax], al; lea rsi, [rsp]; call rax; 
0x000000000044c281: add byte ptr [rax], al; add byte ptr [rax], al; mov byte ptr [rsp + 0x20], 0; ret; 
0x0000000000473624: add byte ptr [rax], al; add byte ptr [rax], al; mov byte ptr [rsp + 0x58], dl; ret; 
0x000000000044c4eb: add byte ptr [rax], al; add byte ptr [rax], al; mov byte ptr [rsp + 0x68], al; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044c49f: add byte ptr [rax], al; add byte ptr [rax], al; mov byte ptr [rsp + 0x68], cl; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000442fc1: add byte ptr [rax], al; add byte ptr [rax], al; mov dword ptr [rsp + 0x20], 0x7fffffff; ret; 
0x00000000004652f5: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x119; syscall; 
0x00000000004652f5: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x119; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000464a32: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x23; syscall; 
0x000000000046490c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x3c; syscall; 
0x000000000046534e: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x48; syscall; 
0x0000000000464907: add byte ptr [rax], al; add byte ptr [rax], al; mov edi, 0; mov eax, 0x3c; syscall; 
0x00000000004615bd: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rbx + 0x18], 0; mov qword ptr [rbx + 0x30], 0; mov rbx, qword ptr [rbx + 8]; jmp rbx; 
0x00000000004615c5: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rbx + 0x30], 0; mov rbx, qword ptr [rbx + 8]; jmp rbx; 
0x0000000000428641: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x148], rax; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x000000000045eeea: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x18], 0; ret; 
0x0000000000493df3: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000464f97: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x30], rax; ret; 
0x0000000000426cbf: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000484c34: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040bb04: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0xc0], 0; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000047ffa5: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp], rcx; mov rax, qword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x000000000040e0f6: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdx]; call rax; 
0x0000000000464cff: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rip + 0xdc456]; call rax; 
0x0000000000464c19: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rip + 0xdc53c]; call rax; 
0x000000000040d102: add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000041804d: add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004212aa: add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040d647: add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004547b1: add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x2c0]; add rsp, 0x2c8; ret; 
0x0000000000411f5b: add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040e245: add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000043d324: add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x3d0]; add rsp, 0x3d8; ret; 
0x0000000000409317: add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040692b: add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000042643c: add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000042c99b: add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000429edd: add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000042e459: add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x648]; add rsp, 0x650; ret; 
0x0000000000403a79: add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000475abe: add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x690]; add rsp, 0x698; ret; 
0x0000000000404b81: add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000044dc7f: add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000040573d: add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000494944: add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000040bb10: add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000044e02b: add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x0000000000431eca: add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xb8]; add rsp, 0xc0; ret; 
0x0000000000468b6d: add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x000000000047f04c: add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; nop; ret; 
0x000000000047ea6d: add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x0000000000422068: add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000048bc2b: add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x0000000000423088: add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x00000000004060d8: add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x00000000004615cd: add byte ptr [rax], al; add byte ptr [rax], al; mov rbx, qword ptr [rbx + 8]; jmp rbx; 
0x000000000046148d: add byte ptr [rax], al; add byte ptr [rax], al; mov rcx, 0; call rax; 
0x000000000048df71: add byte ptr [rax], al; add byte ptr [rax], al; neg rax; mov qword ptr [rsp + 0x38], rax; call 0x5f320; ret; 
0x000000000048dfe0: add byte ptr [rax], al; add byte ptr [rax], al; neg rax; mov qword ptr [rsp + 0x50], rax; call 0x5f320; ret; 
0x00000000004096bb: add byte ptr [rax], al; add byte ptr [rax], al; nop; ret; 
0x000000000042a5b3: add byte ptr [rax], al; add byte ptr [rax], al; or byte ptr [rax - 0x77], 0x44; and al, 0x10; ret; 
0x000000000040a733: add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x00000000004649ae: add byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x00000000004649ae: add byte ptr [rax], al; add byte ptr [rax], al; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000401c41: add byte ptr [rax], al; add byte ptr [rax], al; xgetbv; mov dword ptr [rsp + 8], eax; mov dword ptr [rsp + 0xc], edx; ret; 
0x0000000000462ca5: add byte ptr [rax], al; add byte ptr [rax], cl; add rsp, 0x8000008; ret; 
0x000000000046198d: add byte ptr [rax], al; add byte ptr [rax], cl; ja 0x6199c; lea rax, [rip + 0x1266]; jmp rax; 
0x0000000000462d85: add byte ptr [rax], al; add byte ptr [rax], dl; add rsp, 0x10000008; ret; 
0x000000000046199f: add byte ptr [rax], al; add byte ptr [rax], dl; ja 0x619ae; lea rax, [rip + 0x1334]; jmp rax; 
0x000000000042d565: add byte ptr [rax], al; add byte ptr [rbp + 0x18], dh; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042fbb2: add byte ptr [rax], al; add byte ptr [rbp + 0x31], dh; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042fc78: add byte ptr [rax], al; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000455da9: add byte ptr [rax], al; add byte ptr [rbp + 0xf], dh; mov byte ptr [rsp + 0x50], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045bde9: add byte ptr [rax], al; add byte ptr [rbp + rcx*4 + 0xc], cl; ret 0x8d4d; 
0x000000000047393d: add byte ptr [rax], al; add byte ptr [rbp - 0x5f7bf001], al; add al, byte ptr [rax]; add byte ptr [rcx - 0x77], cl; ret 0x8949; 
0x000000000045cc5a: add byte ptr [rax], al; add byte ptr [rbp - 0x73], cl; push rax; dec dword ptr [rbp + 0x39]; ret 0x830f; 
0x0000000000422c39: add byte ptr [rax], al; add byte ptr [rbx + rcx*2 + 0xf], dh; xchg eax, esp; ret 0x8b48; 
0x0000000000451115: add byte ptr [rax], al; add byte ptr [rbx + rcx*4 + 0x74], cl; ret 0x4d20; 
0x000000000047f666: add byte ptr [rax], al; add byte ptr [rbx + rcx*4 - 0x6c], cl; and al, 0xb8; add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret 0x4c18; 
0x000000000045b9cc: add byte ptr [rax], al; add byte ptr [rbx - 0x6bf0fd05], al; ret; 
0x000000000047a189: add byte ptr [rax], al; add byte ptr [rcx + 0xf], al; mov bh, 0x59; xor ah, byte ptr [rsi - 9]; ret; 
0x00000000004208e6: add byte ptr [rax], al; add byte ptr [rcx + 0xf], cl; mov ebp, 0x440f48c1; ret 0x4890; 
0x000000000048af49: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 + 0x44], cl; and al, 0x10; call rsi; 
0x000000000048ae5e: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 + 0x44], cl; and al, 8; mov qword ptr [rsp + 0x10], rcx; call rsi; 
0x000000000046510d: add byte ptr [rax], al; add byte ptr [rcx - 0x39], cl; ret 0; 
0x00000000004912cf: add byte ptr [rax], al; add byte ptr [rcx - 0x77], cl; ret 0x294c; 
0x000000000047f66e: add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret 0x4c18; 
0x00000000004106d3: add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret; 
0x000000000040e415: add byte ptr [rax], al; add byte ptr [rcx - 1], cl; ret 0x1f0f; 
0x0000000000447293: add byte ptr [rax], al; add byte ptr [rcx], al; add byte ptr [rax + 0x39], cl; ret 0x872; 
0x00000000004473fa: add byte ptr [rax], al; add byte ptr [rcx], al; add byte ptr [rax + 0x39], cl; ror dword ptr [rdi], cl; xchg eax, edx; ret 0x894c; 
0x0000000000462a05: add byte ptr [rax], al; add byte ptr [rcx], al; add rsp, 0x1000008; ret; 
0x0000000000461957: add byte ptr [rax], al; add byte ptr [rcx], al; ja 0x61966; lea rax, [rip + 0xffc]; jmp rax; 
0x0000000000454f79: add byte ptr [rax], al; add byte ptr [rcx], al; jne 0x54f89; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004557bf: add byte ptr [rax], al; add byte ptr [rcx], al; jne 0x557cf; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000045aa2a: add byte ptr [rax], al; add byte ptr [rcx], al; mov qword ptr [rcx + 0xa0], rdx; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000044f001: add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045baaf: add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000426306: add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000045e278: add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000473f5e: add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000404df7: add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000478c8b: add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000405851: add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000448c5f: add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x000000000047eb4c: add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; nop; ret; 
0x000000000047f0b6: add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x000000000042213e: add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000047d657: add byte ptr [rax], al; add byte ptr [rcx], dh; fucomi st(3); add ecx, dword ptr [rax - 1]; ret; 
0x00000000004064dd: add byte ptr [rax], al; add byte ptr [rdi + 0x10], dh; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000461826: add byte ptr [rax], al; add byte ptr [rdi + 9], dh; lea rax, [rip + 0x2ee]; jmp rax; 
0x00000000004618a3: add byte ptr [rax], al; add byte ptr [rdi + 9], dh; lea rax, [rip + 0x7f0]; jmp rax; 
0x0000000000461933: add byte ptr [rax], al; add byte ptr [rdi + 9], sil; lea rax, [rip + 0xe60]; jmp rax; 
0x000000000046197b: add byte ptr [rax], al; add byte ptr [rdi + rsi*2], al; or dword ptr [rax - 0x73], ecx; add eax, 0x1198; jmp rax; 
0x0000000000464908: add byte ptr [rax], al; add byte ptr [rdi], bh; mov eax, 0x3c; syscall; 
0x00000000004649c7: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0x10244489; ret; 
0x0000000000464990: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0x20244489; ret; 
0x0000000000464d76: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0x28244489; ret; 
0x00000000004650de: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0x30244489; ret; 
0x0000000000464a62: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0x8244489; ret; 
0x0000000000465128: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xf88348; je 0x65138; mov dword ptr [rsp + 0x30], eax; ret; 
0x0000000000401c42: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, edx; mov dword ptr [rsp + 8], eax; mov dword ptr [rsp + 0xc], edx; ret; 
0x00000000004683f9: add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0x50; add dword ptr [rsi - 0x3f], esp; ret 0x4808; 
0x0000000000468ece: add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0x52; add dword ptr [rsi - 0x3f], esp; ret 0x4808; 
0x000000000047a1e1: add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0x59; xor ah, byte ptr [rsi - 9]; ret; 
0x0000000000468023: add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0x5a; add dword ptr [rsi - 0x3f], esp; ret; 
0x0000000000467ba7: add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0x5a; xor ah, byte ptr [rsi - 9]; ret; 
0x000000000047e651: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x50; adc al, 0xf6; ret 0x7404; 
0x000000000047a1cf: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x51; adc al, 0xf6; ret 0xf01; 
0x000000000040f86c: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x59; or dh, dh; ret; 
0x00000000004510a6: add byte ptr [rax], al; add byte ptr [rdi], cl; sbb dword ptr [rsi + 1], 0; add byte ptr [rbx + rcx*4 + 0x54], cl; ret 0x4d08; 
0x000000000041dea4: add byte ptr [rax], al; add byte ptr [rdi], cl; test edx, eax; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000463274: add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, esp; and al, 8; ret; 
0x0000000000436c86: add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, esp; ret; 
0x000000000043da5f: add byte ptr [rax], al; add byte ptr [rdx + rcx + 0x48], dh; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000443799: add byte ptr [rax], al; add byte ptr [rdx + rcx + 0x48], dh; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000462ae5: add byte ptr [rax], al; add byte ptr [rdx], al; add rsp, 0x2000008; ret; 
0x0000000000461969: add byte ptr [rax], al; add byte ptr [rdx], al; ja 0x61978; lea rax, [rip + 0x10ca]; jmp rax; 
0x00000000004640e8: add byte ptr [rax], al; add byte ptr [rsi + rax + 0x48], dh; mov ecx, ebx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000043f4c7: add byte ptr [rax], al; add byte ptr [rsi - 0x1c], bh; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x00000000004168d6: add byte ptr [rax], al; add byte ptr [rsi - 0x63], dh; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x00000000004340bb: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; call 0x344e0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000436f7b: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; call 0x43640; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045261b: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; call 0x51480; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000452a9b: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; call 0x51480; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004552fb: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; call 0x55320; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000049ab5b: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; call 0x94260; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000041cb5b: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; jne 0x1cc4b; mov rbp, qword ptr [rsp + 0x1f8]; add rsp, 0x200; ret; 
0x000000000040664d: add byte ptr [rax], al; add cl, ch; cmp esi, -1; dec dword ptr [rax - 0x77]; shr al, 1; ret; 
0x0000000000421c77: add byte ptr [rax], al; add cl, ch; imul edi, edi, 0xb60fffff; jl 0x21ca7; xor dword ptr [rax - 0x77], ecx; ret 0x894d; 
0x0000000000478796: add byte ptr [rax], al; add cl, ch; ret 0xfff7; 
0x0000000000468dc9: add byte ptr [rax], al; add cl, ch; ret; 
0x000000000046196a: add byte ptr [rax], al; add dh, byte ptr [rdi + 9]; lea rax, [rip + 0x10ca]; jmp rax; 
0x000000000044f002: add byte ptr [rax], al; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x0000000000446ba7: add byte ptr [rax], al; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x000000000045bab0: add byte ptr [rax], al; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x0000000000426307: add byte ptr [rax], al; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x50; add rsp, 0x58; ret; 
0x000000000045e279: add byte ptr [rax], al; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x58; add rsp, 0x60; ret; 
0x0000000000473f5f: add byte ptr [rax], al; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x60; add rsp, 0x68; ret; 
0x0000000000404df8: add byte ptr [rax], al; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x70; add rsp, 0x78; ret; 
0x0000000000478c8c: add byte ptr [rax], al; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x78; sub rsp, -0x80; ret; 
0x000000000045aa2b: add byte ptr [rax], al; add dword ptr [rax - 0x77], ecx; xchg eax, ecx; movabs al, byte ptr [0x58246c8b48000000]; add rsp, 0x60; ret; 
0x0000000000442610: add byte ptr [rax], al; add dword ptr [rax], eax; add byte ptr [rax + 0x39], cl; ret 0x850f; 
0x000000000042e979: add byte ptr [rax], al; add dword ptr [rax], eax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x2020]; add rsp, 0x2028; ret; 
0x000000000048bc0d: add byte ptr [rax], al; add dword ptr [rax], eax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x000000000046139d: add byte ptr [rax], al; add dword ptr [rax], eax; add rsp, 0x10008; ret; 
0x00000000004618c7: add byte ptr [rax], al; add dword ptr [rax], eax; ja 0x618d6; lea rax, [rip + 0x98c]; jmp rax; 
0x000000000043301a: add byte ptr [rax], al; add dword ptr [rax], eax; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000454f7a: add byte ptr [rax], al; add dword ptr [rbp + 0xa], esi; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004557c0: add byte ptr [rax], al; add dword ptr [rbp + 0xa], esi; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000461958: add byte ptr [rax], al; add dword ptr [rdi + 9], esi; lea rax, [rip + 0xffc]; jmp rax; 
0x000000000044265e: add byte ptr [rax], al; add eax, dword ptr [rax]; add byte ptr [rax - 0x79], cl; add dword ptr [rax + 0x39], ecx; ret 0x3d75; 
0x000000000041dda3: add byte ptr [rax], al; add qword ptr [rax + 0x10], rdx; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000046111f: add byte ptr [rax], al; add rsp, 0x1008; ret; 
0x000000000044d84f: add byte ptr [rax], al; add rsp, 0x100; ret; 
0x000000000044cb9d: add byte ptr [rax], al; add rsp, 0x108; ret; 
0x0000000000406deb: add byte ptr [rax], al; add rsp, 0x110; ret; 
0x0000000000480a94: add byte ptr [rax], al; add rsp, 0x118; ret; 
0x0000000000458b96: add byte ptr [rax], al; add rsp, 0x128; nop; ret; 
0x0000000000428653: add byte ptr [rax], al; add rsp, 0x128; ret; 
0x00000000004680ad: add byte ptr [rax], al; add rsp, 0x130; ret; 
0x000000000047a761: add byte ptr [rax], al; add rsp, 0x140; ret; 
0x000000000047b5a0: add byte ptr [rax], al; add rsp, 0x158; ret; 
0x000000000047b380: add byte ptr [rax], al; add rsp, 0x160; ret; 
0x0000000000479ef9: add byte ptr [rax], al; add rsp, 0x168; ret; 
0x000000000042b7f6: add byte ptr [rax], al; add rsp, 0x170; nop; ret; 
0x000000000042b4ab: add byte ptr [rax], al; add rsp, 0x170; ret; 
0x0000000000474c56: add byte ptr [rax], al; add rsp, 0x190; nop; ret; 
0x00000000004745db: add byte ptr [rax], al; add rsp, 0x190; ret; 
0x000000000045550f: add byte ptr [rax], al; add rsp, 0x1a0; ret; 
0x00000000004499ab: add byte ptr [rax], al; add rsp, 0x1a8; ret; 
0x00000000004495cb: add byte ptr [rax], al; add rsp, 0x1b0; ret; 
0x0000000000419c36: add byte ptr [rax], al; add rsp, 0x1b8; nop; ret; 
0x00000000004813b2: add byte ptr [rax], al; add rsp, 0x1b8; ret; 
0x0000000000498017: add byte ptr [rax], al; add rsp, 0x1d0; ret; 
0x00000000004611bf: add byte ptr [rax], al; add rsp, 0x2008; ret; 
0x000000000041cb6c: add byte ptr [rax], al; add rsp, 0x200; ret; 
0x000000000042e96a: add byte ptr [rax], al; add rsp, 0x2028; ret; 
0x0000000000460f8d: add byte ptr [rax], al; add rsp, 0x208; ret; 
0x000000000047c8ca: add byte ptr [rax], al; add rsp, 0x210; ret; 
0x000000000043df1e: add byte ptr [rax], al; add rsp, 0x268; ret; 
0x0000000000454ec5: add byte ptr [rax], al; add rsp, 0x280; ret; 
0x0000000000458359: add byte ptr [rax], al; add rsp, 0x2c0; ret; 
0x0000000000453447: add byte ptr [rax], al; add rsp, 0x2c8; ret; 
0x000000000043d32e: add byte ptr [rax], al; add rsp, 0x3d8; ret; 
0x0000000000474ff6: add byte ptr [rax], al; add rsp, 0x3f0; nop; ret; 
0x0000000000462f46: add byte ptr [rax], al; add rsp, 0x40000008; ret; 
0x0000000000462846: add byte ptr [rax], al; add rsp, 0x400008; ret; 
0x000000000046125f: add byte ptr [rax], al; add rsp, 0x4008; ret; 
0x000000000046100d: add byte ptr [rax], al; add rsp, 0x408; ret; 
0x000000000044134a: add byte ptr [rax], al; add rsp, 0x438; ret; 
0x000000000042ed38: add byte ptr [rax], al; add rsp, 0x450; ret; 
0x000000000042e463: add byte ptr [rax], al; add rsp, 0x650; ret; 
0x0000000000475945: add byte ptr [rax], al; add rsp, 0x698; ret; 
0x00000000004612ff: add byte ptr [rax], al; add rsp, 0x8008; ret; 
0x000000000046108d: add byte ptr [rax], al; add rsp, 0x808; ret; 
0x000000000041d116: add byte ptr [rax], al; add rsp, 0x88; nop; ret; 
0x0000000000405747: add byte ptr [rax], al; add rsp, 0x88; ret; 
0x00000000004064e8: add byte ptr [rax], al; add rsp, 0x90; ret; 
0x0000000000402c94: add byte ptr [rax], al; add rsp, 0x98; ret; 
0x0000000000469ef6: add byte ptr [rax], al; add rsp, 0xa0; nop; ret; 
0x000000000040b9b2: add byte ptr [rax], al; add rsp, 0xa0; ret; 
0x000000000044e035: add byte ptr [rax], al; add rsp, 0xa8; ret; 
0x0000000000409cc4: add byte ptr [rax], al; add rsp, 0xb0; ret; 
0x00000000004274cb: add byte ptr [rax], al; add rsp, 0xc0; ret; 
0x0000000000448c69: add byte ptr [rax], al; add rsp, 0xc8; ret; 
0x0000000000413d56: add byte ptr [rax], al; add rsp, 0xd0; nop; ret; 
0x0000000000401620: add byte ptr [rax], al; add rsp, 0xd0; ret; 
0x000000000045fdf2: add byte ptr [rax], al; add rsp, 0xd8; ret; 
0x0000000000407765: add byte ptr [rax], al; add rsp, 0xe0; ret; 
0x0000000000440b80: add byte ptr [rax], al; add rsp, 0xe8; ret; 
0x000000000048be76: add byte ptr [rax], al; add rsp, 0xf0; nop; ret; 
0x000000000048bb3f: add byte ptr [rax], al; add rsp, 0xf0; ret; 
0x000000000044cfca: add byte ptr [rax], al; add rsp, 0xf8; ret; 
0x000000000044761a: add byte ptr [rax], al; and byte ptr [rax], al; add byte ptr [rcx + 0x39], cl; fimul dword ptr [rdi]; xchg eax, edx; ret 0x894c; 
0x0000000000462765: add byte ptr [rax], al; and byte ptr [rax], al; add rsp, 0x200008; ret; 
0x0000000000461921: add byte ptr [rax], al; and byte ptr [rax], al; ja 0x61930; lea rax, [rip + 0xd92]; jmp rax; 
0x000000000042a5a8: add byte ptr [rax], al; and byte ptr [rax], al; jne 0x2a5be; movabs rax, 0x8000000000000000; mov qword ptr [rsp + 0x10], rax; ret; 
0x00000000004619b2: add byte ptr [rax], al; and byte ptr [rdi + 9], dh; lea rax, [rip + 0x1402]; jmp rax; 
0x0000000000482275: add byte ptr [rax], al; bt eax, 8; jae 0x822f7; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000041b7ad: add byte ptr [rax], al; call 0x1d8e0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045b1fe: add byte ptr [rax], al; call 0x21300; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000042ede2: add byte ptr [rax], al; call 0x2ee20; mov rbp, qword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x000000000040388b: add byte ptr [rax], al; call 0x2f0e0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000431278: add byte ptr [rax], al; call 0x33b60; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000444a5e: add byte ptr [rax], al; call 0x33b60; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x0000000000434013: add byte ptr [rax], al; call 0x33be0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000433e38: add byte ptr [rax], al; call 0x344e0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043410c: add byte ptr [rax], al; call 0x344e0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000043c7a9: add byte ptr [rax], al; call 0x38f20; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000043bdc3: add byte ptr [rax], al; call 0x3ad60; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042f3d1: add byte ptr [rax], al; call 0x3bc0; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000043db1e: add byte ptr [rax], al; call 0x3db00; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043db5e: add byte ptr [rax], al; call 0x3db40; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043db9e: add byte ptr [rax], al; call 0x3db80; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043dbde: add byte ptr [rax], al; call 0x3dbc0; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043dc1e: add byte ptr [rax], al; call 0x3dc00; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043dc5e: add byte ptr [rax], al; call 0x3dc40; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000460312: add byte ptr [rax], al; call 0x43640; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000419115: add byte ptr [rax], al; call 0x43640; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000418bc8: add byte ptr [rax], al; call 0x43640; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000444eab: add byte ptr [rax], al; call 0x46380; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000446573: add byte ptr [rax], al; call 0x46380; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000446b03: add byte ptr [rax], al; call 0x46c80; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x00000000004529be: add byte ptr [rax], al; call 0x51480; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000452246: add byte ptr [rax], al; call 0x51480; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000452907: add byte ptr [rax], al; call 0x51480; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000045270d: add byte ptr [rax], al; call 0x51480; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000045db2d: add byte ptr [rax], al; call 0x529e0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045c6c7: add byte ptr [rax], al; call 0x55320; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048df94: add byte ptr [rax], al; call 0x5f320; ret; 
0x000000000046afd8: add byte ptr [rax], al; call 0x60220; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046c203: add byte ptr [rax], al; call 0x60340; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000434ebe: add byte ptr [rax], al; call 0x615e0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045d362: add byte ptr [rax], al; call 0x648e0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000446aa8: add byte ptr [rax], al; call 0x64d20; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004385c4: add byte ptr [rax], al; call 0x64d20; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000042e75f: add byte ptr [rax], al; call 0x650c0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000446e88: add byte ptr [rax], al; call 0x651a0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000046bf1e: add byte ptr [rax], al; call 0x6ba80; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000049304f: add byte ptr [rax], al; call 0x91400; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; nop; ret; 
0x0000000000491ae2: add byte ptr [rax], al; call 0x91760; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000497c11: add byte ptr [rax], al; call 0x91760; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000494f5e: add byte ptr [rax], al; call 0x91ec0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000049528c: add byte ptr [rax], al; call 0x931a0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004974a1: add byte ptr [rax], al; call 0x96100; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000429702: add byte ptr [rax], al; call rax; 
0x00000000004287f3: add byte ptr [rax], al; call rcx; 
0x0000000000427e29: add byte ptr [rax], al; call rsi; 
0x000000000042e958: add byte ptr [rax], al; cmove edx, eax; mov dword ptr [rsp + 0x2030], edx; mov rbp, qword ptr [rsp + 0x2020]; add rsp, 0x2028; ret; 
0x000000000042de9f: add byte ptr [rax], al; cmove rax, rcx; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000042a730: add byte ptr [rax], al; cmove rcx, rdx; shl rax, 6; add rax, rcx; mov qword ptr [rsp + 0x18], rax; ret; 
0x000000000045e919: add byte ptr [rax], al; cmp byte ptr [rip + 0x127d43], 0; jne 0x5e92e; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000441184: add byte ptr [rax], al; cmp byte ptr [rsp + 0x18], 0; je 0x4114e; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000403f9d: add byte ptr [rax], al; cmp byte ptr [rsp + 8], 0; je 0x3fb0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042b5da: add byte ptr [rax], al; cmp byte ptr [rsp + 8], 0; jne 0x2b5ed; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041f9f0: add byte ptr [rax], al; cmp cl, 1; je 0x1fa01; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000433b98: add byte ptr [rax], al; cmp cl, 1; je 0x33ba9; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x00000000004174ec: add byte ptr [rax], al; cmp dword ptr [rip + 0x16f2df], 0; jg 0x17501; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000045ea83: add byte ptr [rax], al; cmp dword ptr [rsp + 0x30], 0; jl 0x5ea96; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000401a1e: add byte ptr [rax], al; cmp eax, 7; jae 0x1a2f; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000041cc1e: add byte ptr [rax], al; cmp ecx, 6; jne 0x1cd37; mov rbp, qword ptr [rsp + 0x1f8]; add rsp, 0x200; ret; 
0x00000000004064d6: add byte ptr [rax], al; cmp qword ptr [rbx + 0x1f68], 0; ja 0x64f2; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000049a413: add byte ptr [rax], al; cmp rax, rcx; jl 0x9a342; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000044d83e: add byte ptr [rax], al; cmp rcx, rax; jg 0x4d772; mov rbp, qword ptr [rsp + 0xf8]; add rsp, 0x100; ret; 
0x000000000040a77e: add byte ptr [rax], al; cmp rcx, rax; jne 0xa78f; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004046fe: add byte ptr [rax], al; cmp rdi, rbx; jb 0x46c2; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x000000000043c95f: add byte ptr [rax], al; inc dword ptr [rax + 0x14]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004734f0: add byte ptr [rax], al; inc qword ptr [rbx + 0x328]; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042589a: add byte ptr [rax], al; inc qword ptr [rcx + 0x1228]; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004593cb: add byte ptr [rax], al; inc rax; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042d37f: add byte ptr [rax], al; inc rcx; cmp rcx, 0x43; jl 0x2d362; ret; 
0x000000000042a2b1: add byte ptr [rax], al; inc rcx; cmp rcx, 8; jl 0x2a2a9; ret; 
0x0000000000433505: add byte ptr [rax], al; ja 0x33513; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000461827: add byte ptr [rax], al; ja 0x61834; lea rax, [rip + 0x2ee]; jmp rax; 
0x0000000000461839: add byte ptr [rax], al; ja 0x61846; lea rax, [rip + 0x39c]; jmp rax; 
0x000000000046184b: add byte ptr [rax], al; ja 0x61858; lea rax, [rip + 0x44a]; jmp rax; 
0x000000000046185d: add byte ptr [rax], al; ja 0x6186a; lea rax, [rip + 0x4f8]; jmp rax; 
0x000000000046186f: add byte ptr [rax], al; ja 0x6187c; lea rax, [rip + 0x5a6]; jmp rax; 
0x0000000000461881: add byte ptr [rax], al; ja 0x6188e; lea rax, [rip + 0x654]; jmp rax; 
0x0000000000461893: add byte ptr [rax], al; ja 0x618a0; lea rax, [rip + 0x722]; jmp rax; 
0x00000000004618a5: add byte ptr [rax], al; ja 0x618b2; lea rax, [rip + 0x7f0]; jmp rax; 
0x00000000004618b7: add byte ptr [rax], al; ja 0x618c4; lea rax, [rip + 0x8be]; jmp rax; 
0x0000000000461934: add byte ptr [rax], al; ja 0x61942; lea rax, [rip + 0xe60]; jmp rax; 
0x00000000004619c4: add byte ptr [rax], al; ja 0x619d2; lea rax, [rip + 0x14d0]; jmp rax; 
0x00000000004064de: add byte ptr [rax], al; ja 0x64f2; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x00000000004168d7: add byte ptr [rax], al; jbe 0x16878; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x0000000000418d4c: add byte ptr [rax], al; je 0x18d58; mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000401f05: add byte ptr [rax], al; je 0x1f15; mov qword ptr [rip + 0x184584], 0x3f; ret; 
0x0000000000420391: add byte ptr [rax], al; je 0x203a4; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040221d: add byte ptr [rax], al; je 0x21bd; mov byte ptr [rax], 0; ret; 
0x000000000042cd71: add byte ptr [rax], al; je 0x2cd84; mov qword ptr [rsp + 0x30], rbx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000435560: add byte ptr [rax], al; je 0x3556c; mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x00000000004362de: add byte ptr [rax], al; je 0x362ea; mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000438975: add byte ptr [rax], al; je 0x38981; mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004389da: add byte ptr [rax], al; je 0x389e6; mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000403919: add byte ptr [rax], al; je 0x3927; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043da60: add byte ptr [rax], al; je 0x3da6e; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000443261: add byte ptr [rax], al; je 0x4326d; mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044379a: add byte ptr [rax], al; je 0x437a8; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000451acc: add byte ptr [rax], al; je 0x51ad8; mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000452310: add byte ptr [rax], al; je 0x5231c; mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000452b70: add byte ptr [rax], al; je 0x52b7c; mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000406125: add byte ptr [rax], al; je 0x6133; xor eax, 1; mov byte ptr [rip + 0x180301], al; ret; 
0x00000000004640e9: add byte ptr [rax], al; je 0x640f3; mov rcx, rbx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000472c85: add byte ptr [rax], al; je 0x72c97; movzx eax, byte ptr [rip + 0x113df7]; mov byte ptr [rip + 0x11378b], al; ret; 
0x000000000040aa9b: add byte ptr [rax], al; je 0xaaa7; mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004174f3: add byte ptr [rax], al; jg 0x17501; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000472399: add byte ptr [rax], al; jl 0x723b5; mov qword ptr [rsp + 0xa0], rax; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000043f4c8: add byte ptr [rax], al; jle 0x3f4b0; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000046180f: add byte ptr [rax], al; jmp rax; 
0x0000000000411d20: add byte ptr [rax], al; jne 0x11d2e; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000041a474: add byte ptr [rax], al; jne 0x1a488; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000422acb: add byte ptr [rax], al; jne 0x22ad9; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004244ef: add byte ptr [rax], al; jne 0x2450b; mov qword ptr [rsp + 0xd8], rcx; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000042d146: add byte ptr [rax], al; jne 0x2d154; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042d566: add byte ptr [rax], al; jne 0x2d582; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042fbb3: add byte ptr [rax], al; jne 0x2fbe8; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042fc79: add byte ptr [rax], al; jne 0x2fc87; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000430985: add byte ptr [rax], al; jne 0x3099a; mov qword ptr [rip + 0x126130], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000430c86: add byte ptr [rax], al; jne 0x30c98; mov qword ptr [rsi + rcx*8], rax; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000434ab1: add byte ptr [rax], al; jne 0x34b47; mov rax, qword ptr [rip + 0x91aa8]; lea rdx, [rip + 0x91aa1]; call rax; 
0x000000000043a8f1: add byte ptr [rax], al; jne 0x3a904; mov byte ptr [rsp + 0x28], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043c870: add byte ptr [rax], al; jne 0x3c883; mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000043e253: add byte ptr [rax], al; jne 0x3e261; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000043ef82: add byte ptr [rax], al; jne 0x3ef90; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000440d94: add byte ptr [rax], al; jne 0x40d6b; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044413e: add byte ptr [rax], al; jne 0x44150; mov qword ptr [rdx + 0x10], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044429e: add byte ptr [rax], al; jne 0x442b0; mov qword ptr [rdx + 0x10], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045062c: add byte ptr [rax], al; jne 0x505ac; mov qword ptr [rsp + 0x48], -1; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000450fe0: add byte ptr [rax], al; jne 0x50ff2; mov qword ptr [rdx + rax*8], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000451181: add byte ptr [rax], al; jne 0x51193; mov qword ptr [rdx + r8*8], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000455daa: add byte ptr [rax], al; jne 0x55dbd; mov byte ptr [rsp + 0x50], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045d6ed: add byte ptr [rax], al; jne 0x5d6c4; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045dca4: add byte ptr [rax], al; jne 0x5dcb2; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000045e920: add byte ptr [rax], al; jne 0x5e92e; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045f4d9: add byte ptr [rax], al; jne 0x5f4e7; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000469620: add byte ptr [rax], al; jne 0x69635; mov qword ptr [rip + 0xed62d], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046c257: add byte ptr [rax], al; jne 0x6c26c; mov qword ptr [rip + 0xea8d6], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046c61e: add byte ptr [rax], al; jne 0x6c633; mov qword ptr [rip + 0xea6ff], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004722e8: add byte ptr [rax], al; jne 0x722fd; mov qword ptr [rip + 0xe4955], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000472b9b: add byte ptr [rax], al; jne 0x72bb0; mov qword ptr [rip + 0xe4002], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000478a6c: add byte ptr [rax], al; jne 0x78a0d; mov byte ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000487458: add byte ptr [rax], al; jne 0x8746d; mov qword ptr [rip + 0xcf61d], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048d1c4: add byte ptr [rax], al; jne 0x8d1d9; mov qword ptr [rip + 0xc9ab9], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048df00: add byte ptr [rax], al; jne 0x8df15; mov qword ptr [rip + 0xc21bd], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048e530: add byte ptr [rax], al; jne 0x8e545; mov qword ptr [rip + 0xc5655], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000048fce6: add byte ptr [rax], al; jne 0x8fcfb; mov qword ptr [rip + 0xc7017], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000490be6: add byte ptr [rax], al; jne 0x90bfb; mov qword ptr [rip + 0xc62ff], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000490f69: add byte ptr [rax], al; jne 0x90f7e; mov qword ptr [rip + 0xc5ea4], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000491302: add byte ptr [rax], al; jne 0x91313; mov qword ptr [rdi], r8; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004946c2: add byte ptr [rax], al; jne 0x946d3; mov qword ptr [rdi], rbx; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000495b5e: add byte ptr [rax], al; jne 0x95b75; mov qword ptr [rdi], rdx; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x0000000000496b90: add byte ptr [rax], al; jne 0x96ba7; mov qword ptr [rdi], rbx; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000049879e: add byte ptr [rax], al; jne 0x987b5; mov qword ptr [rdi], rdx; mov rbp, qword ptr [rsp + 0x1c8]; add rsp, 0x1d0; ret; 
0x0000000000499040: add byte ptr [rax], al; jne 0x99057; mov qword ptr [rdi], rdx; mov rbp, qword ptr [rsp + 0x1c8]; add rsp, 0x1d0; ret; 
0x000000000049a7ea: add byte ptr [rax], al; jne 0x9a7ff; mov qword ptr [rip + 0xbc473], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000049abc3: add byte ptr [rax], al; jne 0x9abd8; mov qword ptr [rip + 0xbbe92], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040f2e8: add byte ptr [rax], al; jne 0xf2fa; mov qword ptr [rcx + 0x10], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044c5da: add byte ptr [rax], al; lea eax, [rdx + rbx]; mov dword ptr [rsp + 8], eax; ret; 
0x000000000049a3a7: add byte ptr [rax], al; lea r9, [rip + 0x44650]; mov rax, qword ptr [r9 + 0x98]; mov qword ptr [rsp], r8; call rax; 
0x0000000000447aaf: add byte ptr [rax], al; lea rax, [rcx + 1]; cmp rax, 0x23; jl 0x47a92; ret; 
0x000000000044104d: add byte ptr [rax], al; lea rcx, [rip + 0x116202]; lock xadd dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000494828: add byte ptr [rax], al; lea rcx, [rip + 0x4a1cf]; mov rcx, qword ptr [rcx + 0xf8]; mov qword ptr [rsp], rax; call rcx; 
0x00000000004287eb: add byte ptr [rax], al; lea rdx, [rsp + 0x110]; call rcx; 
0x0000000000427e21: add byte ptr [rax], al; lea rdx, [rsp + 0x110]; call rsi; 
0x0000000000459e89: add byte ptr [rax], al; lea rdx, [rsp + 0x80]; call rax; 
0x00000000004296fa: add byte ptr [rax], al; lea rdx, [rsp + 0x90]; call rax; 
0x0000000000464bd4: add byte ptr [rax], al; lea rsi, [rsp]; call rax; 
0x000000000044f24d: add byte ptr [rax], al; lock xadd dword ptr [rax + 0x2788], ecx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000493ac0: add byte ptr [rax], al; mov byte ptr [rcx + 0xe], al; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x0000000000493fc5: add byte ptr [rax], al; mov byte ptr [rsp + 0x18], al; ret; 
0x000000000044c283: add byte ptr [rax], al; mov byte ptr [rsp + 0x20], 0; ret; 
0x0000000000467e1d: add byte ptr [rax], al; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000473614: add byte ptr [rax], al; mov byte ptr [rsp + 0x40], dl; mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], 0; mov byte ptr [rsp + 0x58], dl; ret; 
0x0000000000473626: add byte ptr [rax], al; mov byte ptr [rsp + 0x58], dl; ret; 
0x000000000044c4ed: add byte ptr [rax], al; mov byte ptr [rsp + 0x68], al; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044c4a1: add byte ptr [rax], al; mov byte ptr [rsp + 0x68], cl; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000439b72: add byte ptr [rax], al; mov byte ptr [rsp + 0xf0], cl; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000046a252: add byte ptr [rax], al; mov byte ptr [rsp + 0xf0], dl; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x00000000004392ba: add byte ptr [rax], al; mov byte ptr [rsp + 8], 1; call 0x38cc0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004971dd: add byte ptr [rax], al; mov dword ptr [rsp + 0x18], ecx; call rax; 
0x0000000000442fc3: add byte ptr [rax], al; mov dword ptr [rsp + 0x20], 0x7fffffff; ret; 
0x0000000000459c84: add byte ptr [rax], al; mov dword ptr [rsp + 0x60], eax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000049663b: add byte ptr [rax], al; mov dword ptr [rsp + 8], eax; call 0x94740; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x00000000004652f7: add byte ptr [rax], al; mov eax, 0x119; syscall; 
0x00000000004652f7: add byte ptr [rax], al; mov eax, 0x119; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000464a34: add byte ptr [rax], al; mov eax, 0x23; syscall; 
0x0000000000464a34: add byte ptr [rax], al; mov eax, 0x23; syscall; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046490e: add byte ptr [rax], al; mov eax, 0x3c; syscall; 
0x0000000000465330: add byte ptr [rax], al; mov eax, 0x48; syscall; 
0x0000000000465330: add byte ptr [rax], al; mov eax, 0x48; syscall; ret; 
0x000000000044f703: add byte ptr [rax], al; mov eax, 0xffffffff; lock xadd dword ptr [rbx + 0x2788], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044f248: add byte ptr [rax], al; mov ecx, 1; lock xadd dword ptr [rax + 0x2788], ecx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000464909: add byte ptr [rax], al; mov edi, 0; mov eax, 0x3c; syscall; 
0x0000000000443a38: add byte ptr [rax], al; mov qword ptr [r8 + 0x48], 0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042d670: add byte ptr [rax], al; mov qword ptr [rax + 0x1748], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004615bf: add byte ptr [rax], al; mov qword ptr [rbx + 0x18], 0; mov qword ptr [rbx + 0x30], 0; mov rbx, qword ptr [rbx + 8]; jmp rbx; 
0x00000000004615b7: add byte ptr [rax], al; mov qword ptr [rbx + 0x20], 0; mov qword ptr [rbx + 0x18], 0; mov qword ptr [rbx + 0x30], 0; mov rbx, qword ptr [rbx + 8]; jmp rbx; 
0x00000000004615c7: add byte ptr [rax], al; mov qword ptr [rbx + 0x30], 0; mov rbx, qword ptr [rbx + 8]; jmp rbx; 
0x000000000042c887: add byte ptr [rax], al; mov qword ptr [rbx + 8], rdi; sub qword ptr [rbx + 0x18], r8; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000043d588: add byte ptr [rax], al; mov qword ptr [rdi], rax; mov qword ptr [rsp + 0x3e8], rdi; mov rbp, qword ptr [rsp + 0x3d0]; add rsp, 0x3d8; ret; 
0x0000000000493803: add byte ptr [rax], al; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x0000000000424a32: add byte ptr [rax], al; mov qword ptr [rdx + 0x1228], rax; mov qword ptr [rsp + 0x38], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004171c7: add byte ptr [rax], al; mov qword ptr [rip + 0x16fe40], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000047767e: add byte ptr [rax], al; mov qword ptr [rsp + 0x100], rcx; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x0000000000475d20: add byte ptr [rax], al; mov qword ptr [rsp + 0x100], rdi; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000045fde2: add byte ptr [rax], al; mov qword ptr [rsp + 0x108], r8; mov rbp, qword ptr [rsp + 0xd0]; add rsp, 0xd8; ret; 
0x0000000000407755: add byte ptr [rax], al; mov qword ptr [rsp + 0x108], rcx; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000045d44f: add byte ptr [rax], al; mov qword ptr [rsp + 0x10], -1; call 0x386a0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042edd9: add byte ptr [rax], al; mov qword ptr [rsp + 0x10], 0x80; call 0x2ee20; mov rbp, qword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x000000000043400a: add byte ptr [rax], al; mov qword ptr [rsp + 0x10], 0xe; call 0x33be0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048af4a: add byte ptr [rax], al; mov qword ptr [rsp + 0x10], r8; call rsi; 
0x0000000000482da7: add byte ptr [rax], al; mov qword ptr [rsp + 0x10], rax; call 0x6b1a0; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x00000000004971d1: add byte ptr [rax], al; mov qword ptr [rsp + 0x10], rcx; mov ecx, dword ptr [rsp + 0x278]; mov dword ptr [rsp + 0x18], ecx; call rax; 
0x0000000000445e15: add byte ptr [rax], al; mov qword ptr [rsp + 0x10], rcx; mov rbx, qword ptr [rdx]; nop; call rbx; 
0x0000000000406ddb: add byte ptr [rax], al; mov qword ptr [rsp + 0x128], rcx; mov rbp, qword ptr [rsp + 0x108]; add rsp, 0x110; ret; 
0x0000000000480a84: add byte ptr [rax], al; mov qword ptr [rsp + 0x130], rcx; mov rbp, qword ptr [rsp + 0x110]; add rsp, 0x118; ret; 
0x0000000000428643: add byte ptr [rax], al; mov qword ptr [rsp + 0x148], rax; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x000000000047fccd: add byte ptr [rax], al; mov qword ptr [rsp + 0x170], rax; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x000000000045eeec: add byte ptr [rax], al; mov qword ptr [rsp + 0x18], 0; ret; 
0x000000000047a418: add byte ptr [rax], al; mov qword ptr [rsp + 0x1c8], rax; mov rbp, qword ptr [rsp + 0x160]; add rsp, 0x168; ret; 
0x0000000000474853: add byte ptr [rax], al; mov qword ptr [rsp + 0x1d8], rax; mov qword ptr [rsp + 0x1e0], rcx; mov rbp, qword ptr [rsp + 0x188]; add rsp, 0x190; ret; 
0x000000000047470d: add byte ptr [rax], al; mov qword ptr [rsp + 0x1d8], rcx; mov qword ptr [rsp + 0x1e0], rdx; mov rbp, qword ptr [rsp + 0x188]; add rsp, 0x190; ret; 
0x00000000004745cb: add byte ptr [rax], al; mov qword ptr [rsp + 0x1e0], rax; mov rbp, qword ptr [rsp + 0x188]; add rsp, 0x190; ret; 
0x000000000047485b: add byte ptr [rax], al; mov qword ptr [rsp + 0x1e0], rcx; mov rbp, qword ptr [rsp + 0x188]; add rsp, 0x190; ret; 
0x0000000000474c46: add byte ptr [rax], al; mov qword ptr [rsp + 0x1e0], rdx; mov rbp, qword ptr [rsp + 0x188]; add rsp, 0x190; nop; ret; 
0x0000000000474715: add byte ptr [rax], al; mov qword ptr [rsp + 0x1e0], rdx; mov rbp, qword ptr [rsp + 0x188]; add rsp, 0x190; ret; 
0x000000000048139a: add byte ptr [rax], al; mov qword ptr [rsp + 0x1e8], rbx; mov qword ptr [rsp + 0x1f0], rsi; mov rbp, qword ptr [rsp + 0x1b0]; add rsp, 0x1b8; ret; 
0x00000000004813a2: add byte ptr [rax], al; mov qword ptr [rsp + 0x1f0], rsi; mov rbp, qword ptr [rsp + 0x1b0]; add rsp, 0x1b8; ret; 
0x0000000000464bfd: add byte ptr [rax], al; mov qword ptr [rsp + 0x20], rax; mov dword ptr [rsp + 0x28], edx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000493df5: add byte ptr [rax], al; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046307e: add byte ptr [rax], al; mov qword ptr [rsp + 0x28], rdx; mov rdi, rbx; mov rcx, rbx; call rax; 
0x0000000000451a16: add byte ptr [rax], al; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000464f99: add byte ptr [rax], al; mov qword ptr [rsp + 0x30], rax; ret; 
0x0000000000453437: add byte ptr [rax], al; mov qword ptr [rsp + 0x320], rdi; mov rbp, qword ptr [rsp + 0x2c0]; add rsp, 0x2c8; ret; 
0x0000000000426cc1: add byte ptr [rax], al; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000424a39: add byte ptr [rax], al; mov qword ptr [rsp + 0x38], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045dfdb: add byte ptr [rax], al; mov qword ptr [rsp + 0x40], rax; mov byte ptr [rsp + 0x48], cl; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000474fe6: add byte ptr [rax], al; mov qword ptr [rsp + 0x448], rcx; mov rbp, qword ptr [rsp + 0x3e8]; add rsp, 0x3f0; nop; ret; 
0x000000000043f182: add byte ptr [rax], al; mov qword ptr [rsp + 0x48], rdx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048f078: add byte ptr [rax], al; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004417d7: add byte ptr [rax], al; mov qword ptr [rsp + 0x50], rbx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000443e69: add byte ptr [rax], al; mov qword ptr [rsp + 0x50], rcx; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000484c36: add byte ptr [rax], al; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004833db: add byte ptr [rax], al; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004124ba: add byte ptr [rax], al; mov qword ptr [rsp + 0x58], rcx; mov qword ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048337c: add byte ptr [rax], al; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000482ff6: add byte ptr [rax], al; mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042185c: add byte ptr [rax], al; mov qword ptr [rsp + 0x68], -1; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000046b4a6: add byte ptr [rax], al; mov qword ptr [rsp + 0x68], r9; mov qword ptr [rsp + 0x70], r10; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000045792f: add byte ptr [rax], al; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; nop; ret; 
0x000000000045778e: add byte ptr [rax], al; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004216a8: add byte ptr [rax], al; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x00000000004575dd: add byte ptr [rax], al; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000045743b: add byte ptr [rax], al; mov qword ptr [rsp + 0x70], rbx; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x00000000004846fc: add byte ptr [rax], al; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004570cc: add byte ptr [rax], al; mov qword ptr [rsp + 0x78], rcx; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x00000000004820cb: add byte ptr [rax], al; mov qword ptr [rsp + 0xa8], rax; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000481ff5: add byte ptr [rax], al; mov qword ptr [rsp + 0xa8], rcx; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000044bbc4: add byte ptr [rax], al; mov qword ptr [rsp + 0xb8], r11; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000040bb06: add byte ptr [rax], al; mov qword ptr [rsp + 0xc0], 0; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000044b272: add byte ptr [rax], al; mov qword ptr [rsp + 0xc0], rax; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000044b1d3: add byte ptr [rax], al; mov qword ptr [rsp + 0xc0], rcx; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000040b9a2: add byte ptr [rax], al; mov qword ptr [rsp + 0xc0], rcx; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000048f993: add byte ptr [rax], al; mov qword ptr [rsp + 0xc8], rax; mov qword ptr [rsp + 0xd0], rcx; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x00000000004200ef: add byte ptr [rax], al; mov qword ptr [rsp + 0xc8], rcx; mov qword ptr [rsp + 0xd0], rax; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000420243: add byte ptr [rax], al; mov qword ptr [rsp + 0xc8], rsi; mov qword ptr [rsp + 0xd0], r9; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000042024b: add byte ptr [rax], al; mov qword ptr [rsp + 0xd0], r9; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x00000000004200f7: add byte ptr [rax], al; mov qword ptr [rsp + 0xd0], rax; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000048f99b: add byte ptr [rax], al; mov qword ptr [rsp + 0xd0], rcx; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000044e021: add byte ptr [rax], al; mov qword ptr [rsp + 0xe8], 0; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x000000000047f717: add byte ptr [rax], al; mov qword ptr [rsp + 0xe8], rcx; mov qword ptr [rsp + 0xf0], rax; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x000000000047f71f: add byte ptr [rax], al; mov qword ptr [rsp + 0xf0], rax; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x000000000047636c: add byte ptr [rax], al; mov qword ptr [rsp + 0xf0], rsi; mov qword ptr [rsp + 0xf8], rdi; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000477676: add byte ptr [rax], al; mov qword ptr [rsp + 0xf8], rax; mov qword ptr [rsp + 0x100], rcx; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x0000000000475d18: add byte ptr [rax], al; mov qword ptr [rsp + 0xf8], rcx; mov qword ptr [rsp + 0x100], rdi; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000476374: add byte ptr [rax], al; mov qword ptr [rsp + 0xf8], rdi; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000048ae5f: add byte ptr [rax], al; mov qword ptr [rsp + 8], r8; mov qword ptr [rsp + 0x10], rcx; call rsi; 
0x000000000045b38f: add byte ptr [rax], al; mov qword ptr [rsp + 8], rax; call 0x36ac0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000452dc3: add byte ptr [rax], al; mov qword ptr [rsp + 8], rax; mov rdx, qword ptr [rsp + 0xc0]; mov rcx, qword ptr [rdx]; call rcx; 
0x00000000004997ff: add byte ptr [rax], al; mov qword ptr [rsp + 8], rcx; call rax; 
0x00000000004540c6: add byte ptr [rax], al; mov qword ptr [rsp + 8], rcx; mov rbx, qword ptr [rax]; mov rdx, rax; call rbx; 
0x000000000047ca50: add byte ptr [rax], al; mov qword ptr [rsp], r13; mov qword ptr [rsp + 8], r14; mov rax, qword ptr [rdx]; nop; call rax; 
0x000000000049a3b5: add byte ptr [rax], al; mov qword ptr [rsp], r8; call rax; 
0x000000000042d900: add byte ptr [rax], al; mov qword ptr [rsp], rax; call 0x2d520; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000045c76f: add byte ptr [rax], al; mov qword ptr [rsp], rax; call 0x2d6c0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000047fe0e: add byte ptr [rax], al; mov qword ptr [rsp], rax; call 0x6af00; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x000000000047326d: add byte ptr [rax], al; mov qword ptr [rsp], rax; call 0x72ca0; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048f7ee: add byte ptr [rax], al; mov qword ptr [rsp], rax; call 0x8eb60; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x00000000004802c6: add byte ptr [rax], al; mov qword ptr [rsp], rax; call rbx; 
0x0000000000494836: add byte ptr [rax], al; mov qword ptr [rsp], rax; call rcx; 
0x000000000040e78b: add byte ptr [rax], al; mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], rsi; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000047ff03: add byte ptr [rax], al; mov qword ptr [rsp], rax; mov rax, qword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x0000000000445dcb: add byte ptr [rax], al; mov qword ptr [rsp], rax; mov rcx, qword ptr [rdx]; call rcx; 
0x00000000004973f8: add byte ptr [rax], al; mov qword ptr [rsp], rax; nop; call rcx; 
0x00000000004346cf: add byte ptr [rax], al; mov qword ptr [rsp], rbx; mov rax, qword ptr [rip + 0x91e64]; lea rdx, [rip + 0x91e5d]; call rax; 
0x000000000047c61c: add byte ptr [rax], al; mov qword ptr [rsp], rcx; call rax; 
0x000000000047c596: add byte ptr [rax], al; mov qword ptr [rsp], rcx; call rdx; 
0x000000000047ffa7: add byte ptr [rax], al; mov qword ptr [rsp], rcx; mov rax, qword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x000000000047c5f9: add byte ptr [rax], al; mov qword ptr [rsp], rcx; nop; call rax; 
0x000000000041ffe7: add byte ptr [rax], al; mov qword ptr [rsp], rdi; mov qword ptr [rsp + 8], r11; mov rax, qword ptr [rsp + 0x70]; lea rdx, [rsp + 0x70]; call rax; 
0x0000000000472fa3: add byte ptr [rax], al; mov qword ptr [rsp], rdx; call 0x72ca0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000472de8: add byte ptr [rax], al; mov qword ptr [rsp], rdx; call 0x72ca0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000047c5e2: add byte ptr [rax], al; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000497fb2: add byte ptr [rax], al; mov qword ptr [rsp], rsi; call rbx; 
0x000000000040e3d4: add byte ptr [rax], al; mov qword ptr [rsp], rsi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x00000000004616f8: add byte ptr [rax], al; mov qword ptr fs:[0xfffffffffffffff8], rax; mov rsp, qword ptr [rax + 0x38]; mov qword ptr [rax + 0x38], 0; ret; 
0x0000000000465115: add byte ptr [rax], al; mov r8, qword ptr [rsp + 0x18]; mov r9, qword ptr [rsp + 0x20]; mov r12, qword ptr [rsp + 0x28]; mov eax, 0x38; syscall; 
0x00000000004651fa: add byte ptr [rax], al; mov rax, 0x9e; syscall; 
0x000000000047c610: add byte ptr [rax], al; mov rax, qword ptr [rax + 0x48]; mov rcx, qword ptr [rsp + 0x90]; mov qword ptr [rsp], rcx; call rax; 
0x000000000047c4f0: add byte ptr [rax], al; mov rax, qword ptr [rax + 0x50]; mov qword ptr [rsp], rcx; mov qword ptr [rsp + 8], rbx; nop; call rax; 
0x000000000045f571: add byte ptr [rax], al; mov rax, qword ptr [rax + 0xd0]; movsxd rax, dword ptr [rax]; mov qword ptr [rsp + 8], rax; ret; 
0x000000000040e0f8: add byte ptr [rax], al; mov rax, qword ptr [rdx]; call rax; 
0x000000000041ab3e: add byte ptr [rax], al; mov rax, qword ptr [rip + 0x16e749]; mov qword ptr [rip + 0x16c4f2], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000434ab7: add byte ptr [rax], al; mov rax, qword ptr [rip + 0x91aa8]; lea rdx, [rip + 0x91aa1]; call rax; 
0x0000000000464d01: add byte ptr [rax], al; mov rax, qword ptr [rip + 0xdc456]; call rax; 
0x0000000000464c1b: add byte ptr [rax], al; mov rax, qword ptr [rip + 0xdc53c]; call rax; 
0x0000000000452083: add byte ptr [rax], al; mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000047a410: add byte ptr [rax], al; mov rax, qword ptr [rsp + 0x178]; mov qword ptr [rsp + 0x1c8], rax; mov rbp, qword ptr [rsp + 0x160]; add rsp, 0x168; ret; 
0x0000000000402543: add byte ptr [rax], al; mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004203dd: add byte ptr [rax], al; mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040c18d: add byte ptr [rax], al; mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000048493a: add byte ptr [rax], al; mov rax, qword ptr [rsp + 0x18]; mov rcx, qword ptr [rsp + 0x20]; mov rax, qword ptr [rax + 0xf8]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004246e4: add byte ptr [rax], al; mov rax, qword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040cd16: add byte ptr [rax], al; mov rax, qword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000409caf: add byte ptr [rax], al; mov rax, qword ptr [rsp + 0x40]; mov qword ptr [rsp + 0xc8], rax; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x000000000044cfb5: add byte ptr [rax], al; mov rax, qword ptr [rsp + 0x48]; mov qword ptr [rsp + 0x118], rax; mov rbp, qword ptr [rsp + 0xf0]; add rsp, 0xf8; ret; 
0x000000000041f849: add byte ptr [rax], al; mov rax, qword ptr [rsp + 0x48]; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000044e1bc: add byte ptr [rax], al; mov rax, qword ptr [rsp + 0x58]; mov qword ptr [rsp + 0xe8], rax; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x000000000044aa33: add byte ptr [rax], al; mov rax, qword ptr [rsp + 0x78]; mov qword ptr [rsp + 0xd8], rax; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x00000000004745c3: add byte ptr [rax], al; mov rax, qword ptr [rsp + 0x98]; mov qword ptr [rsp + 0x1e0], rax; mov rbp, qword ptr [rsp + 0x188]; add rsp, 0x190; ret; 
0x000000000047fcc5: add byte ptr [rax], al; mov rax, qword ptr [rsp + 0xa0]; mov qword ptr [rsp + 0x170], rax; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x0000000000460423: add byte ptr [rax], al; mov rax, qword ptr [rsp]; mov qword ptr [rsp + 0x18], rax; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000044cb95: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x100]; add rsp, 0x108; ret; 
0x0000000000406de3: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x108]; add rsp, 0x110; ret; 
0x0000000000433d74: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; nop; ret; 
0x000000000040103b: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000480a8c: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x110]; add rsp, 0x118; ret; 
0x0000000000458b8e: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; nop; ret; 
0x000000000042864b: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x00000000004682cd: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x128]; add rsp, 0x130; ret; 
0x000000000047a759: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x138]; add rsp, 0x140; ret; 
0x000000000047b598: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x150]; add rsp, 0x158; ret; 
0x000000000047b378: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x158]; add rsp, 0x160; ret; 
0x000000000047a420: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x160]; add rsp, 0x168; ret; 
0x0000000000474c4e: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x188]; add rsp, 0x190; nop; ret; 
0x00000000004745d3: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x188]; add rsp, 0x190; ret; 
0x00000000004152a3: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000047d3b5: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x1a0]; add rsp, 0x1a8; ret; 
0x00000000004813aa: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x1b0]; add rsp, 0x1b8; ret; 
0x000000000041cb64: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x1f8]; add rsp, 0x200; ret; 
0x000000000042e962: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x2020]; add rsp, 0x2028; ret; 
0x000000000047c8c2: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x208]; add rsp, 0x210; ret; 
0x0000000000404098: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043df16: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x260]; add rsp, 0x268; ret; 
0x0000000000454ebd: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x278]; add rsp, 0x280; ret; 
0x0000000000404b13: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045343f: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x2c0]; add rsp, 0x2c8; ret; 
0x00000000004213d4: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; nop; ret; 
0x00000000004067b0: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000409e33: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000043d326: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x3d0]; add rsp, 0x3d8; ret; 
0x0000000000474fee: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x3e8]; add rsp, 0x3f0; nop; ret; 
0x0000000000428b74: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; nop; ret; 
0x0000000000409319: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044138d: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x430]; add rsp, 0x438; ret; 
0x000000000042ede7: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x000000000040be94: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; nop; ret; 
0x000000000040692d: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000042104f: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000411583: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000427151: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000042e45b: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x648]; add rsp, 0x650; ret; 
0x0000000000403a5d: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000475ac0: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x690]; add rsp, 0x698; ret; 
0x0000000000469754: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; nop; ret; 
0x0000000000404b83: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000404283: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000040573f: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x00000000004200ff: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000402c8c: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000040b9aa: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000044e02d: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x0000000000409cbc: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x0000000000431ecc: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xb8]; add rsp, 0xc0; ret; 
0x0000000000468b6f: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x000000000047ebce: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; nop; ret; 
0x000000000047ea6f: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x000000000045fdea: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xd0]; add rsp, 0xd8; ret; 
0x000000000040775d: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000048bc11: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x000000000044cfc2: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xf0]; add rsp, 0xf8; ret; 
0x000000000040aa29: add byte ptr [rax], al; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x00000000004060da: add byte ptr [rax], al; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x00000000004615cf: add byte ptr [rax], al; mov rbx, qword ptr [rbx + 8]; jmp rbx; 
0x000000000047e822: add byte ptr [rax], al; mov rbx, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rbx; call rdx; 
0x000000000046148f: add byte ptr [rax], al; mov rcx, 0; call rax; 
0x0000000000467ced: add byte ptr [rax], al; mov rcx, qword ptr [rax + 0x38]; mov rdx, qword ptr [rsp + 0x38]; mov qword ptr [rsp], rdx; call rcx; 
0x000000000047c5d6: add byte ptr [rax], al; mov rcx, qword ptr [rax + 0x48]; mov rdx, qword ptr [rsp + 0x90]; mov qword ptr [rsp], rdx; call rcx; 
0x000000000040518f: add byte ptr [rax], al; mov rcx, qword ptr [rax]; mov qword ptr [rsp + 0x18], rcx; mov rdx, qword ptr [rsp + 0x48]; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000405e39: add byte ptr [rax], al; mov rcx, qword ptr [rax]; mov qword ptr [rsp + 0x20], rcx; mov rdx, qword ptr [rsp + 0x50]; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000452dd0: add byte ptr [rax], al; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000044807a: add byte ptr [rax], al; mov rcx, qword ptr [rsp + 0x20]; mov qword ptr [rdx + rax + 0x460], rcx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000041ec8e: add byte ptr [rax], al; mov rcx, qword ptr [rsp + 0x38]; add qword ptr [rax + 0x16b0], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048538b: add byte ptr [rax], al; mov rcx, qword ptr [rsp + 0x40]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004855cb: add byte ptr [rax], al; mov rcx, qword ptr [rsp + 0x48]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004238e8: add byte ptr [rax], al; mov rcx, qword ptr [rsp + 0x50]; mov qword ptr [rdx + rax*8], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000047e845: add byte ptr [rax], al; mov rcx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000486e37: add byte ptr [rax], al; mov rcx, qword ptr [rsp + 0x78]; mov qword ptr [rsp], rcx; call rax; 
0x000000000048ccdf: add byte ptr [rax], al; mov rcx, qword ptr [rsp + 0xa8]; mov qword ptr [rsp], rcx; call rax; 
0x000000000043c1c9: add byte ptr [rax], al; mov rcx, rax; mov qword ptr [rcx + 0x48], rax; cmp qword ptr [rcx + 0x50], 0; jne 0x3c1da; ret; 
0x0000000000461f3e: add byte ptr [rax], al; mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x1018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461c28: add byte ptr [rax], al; mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x118]; mov rax, qword ptr [rdx]; call rax; 
0x000000000046201e: add byte ptr [rax], al; mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x2018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461ce8: add byte ptr [rax], al; mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x218]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462efd: add byte ptr [rax], al; mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x40000018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004627fd: add byte ptr [rax], al; mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x400018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004620fe: add byte ptr [rax], al; mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x4018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461da8: add byte ptr [rax], al; mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x418]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004621de: add byte ptr [rax], al; mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x8018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461e68: add byte ptr [rax], al; mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x818]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461b65: add byte ptr [rax], al; mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x98]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000465349: add byte ptr [rax], al; mov rdx, 0; mov eax, 0x48; syscall; 
0x0000000000465362: add byte ptr [rax], al; mov rdx, 0x800; or edx, eax; mov eax, 0x48; syscall; 
0x0000000000465362: add byte ptr [rax], al; mov rdx, 0x800; or edx, eax; mov eax, 0x48; syscall; ret; 
0x0000000000465329: add byte ptr [rax], al; mov rdx, 1; mov eax, 0x48; syscall; 
0x0000000000465329: add byte ptr [rax], al; mov rdx, 1; mov eax, 0x48; syscall; ret; 
0x0000000000497de0: add byte ptr [rax], al; mov rdx, qword ptr [rax + 0x48]; mov qword ptr [rsp], rcx; call rdx; 
0x000000000047d9d4: add byte ptr [rax], al; mov rdx, qword ptr [rsp + 0x38]; mov qword ptr [rsp], rdx; nop; call rcx; 
0x000000000047e797: add byte ptr [rax], al; mov rdx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rdx; call rcx; 
0x000000000047e866: add byte ptr [rax], al; mov rdx, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000486375: add byte ptr [rax], al; mov rdx, qword ptr [rsp + 0x70]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000486d8b: add byte ptr [rax], al; mov rdx, qword ptr [rsp + 0x78]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000497faa: add byte ptr [rax], al; mov rsi, qword ptr [rsp + 0x100]; mov qword ptr [rsp], rsi; call rbx; 
0x000000000047e7c2: add byte ptr [rax], al; mov rsi, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rsi; call rbx; 
0x0000000000486df5: add byte ptr [rax], al; mov rsi, qword ptr [rsp + 0x78]; mov qword ptr [rsp], rsi; call rbx; 
0x000000000045f578: add byte ptr [rax], al; movsxd rax, dword ptr [rax]; mov qword ptr [rsp + 8], rax; ret; 
0x000000000048df73: add byte ptr [rax], al; neg rax; mov qword ptr [rsp + 0x38], rax; call 0x5f320; ret; 
0x000000000048dfe2: add byte ptr [rax], al; neg rax; mov qword ptr [rsp + 0x50], rax; call 0x5f320; ret; 
0x0000000000452bf9: add byte ptr [rax], al; nop dword ptr [rax + rax]; call 0x51480; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000045d3fd: add byte ptr [rax], al; nop; call 0x33be0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004340bc: add byte ptr [rax], al; nop; call 0x344e0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000436f7c: add byte ptr [rax], al; nop; call 0x43640; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045261c: add byte ptr [rax], al; nop; call 0x51480; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000452a9c: add byte ptr [rax], al; nop; call 0x51480; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004552fc: add byte ptr [rax], al; nop; call 0x55320; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000049ab5c: add byte ptr [rax], al; nop; call 0x94260; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000041cb5c: add byte ptr [rax], al; nop; jne 0x1cc4b; mov rbp, qword ptr [rsp + 0x1f8]; add rsp, 0x200; ret; 
0x000000000043613c: add byte ptr [rax], al; nop; jne 0x3614c; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042dc08: add byte ptr [rax], al; nop; mov qword ptr [rdx], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004096bd: add byte ptr [rax], al; nop; ret; 
0x000000000042a5b5: add byte ptr [rax], al; or byte ptr [rax - 0x77], 0x44; and al, 0x10; ret; 
0x00000000004291dc: add byte ptr [rax], al; or byte ptr [rax - 0x77], 0x44; and al, 0x40; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004625a5: add byte ptr [rax], al; or byte ptr [rax], al; add rsp, 0x80008; ret; 
0x00000000004618fd: add byte ptr [rax], al; or byte ptr [rax], al; ja 0x6190c; lea rax, [rip + 0xbf6]; jmp rax; 
0x000000000046198e: add byte ptr [rax], al; or byte ptr [rdi + 9], dh; lea rax, [rip + 0x1266]; jmp rax; 
0x0000000000465369: add byte ptr [rax], al; or edx, eax; mov eax, 0x48; syscall; 
0x0000000000465369: add byte ptr [rax], al; or edx, eax; mov eax, 0x48; syscall; ret; 
0x00000000004648aa: add byte ptr [rax], al; popfq; pop rbp; ret; 
0x0000000000401627: add byte ptr [rax], al; ret; 
0x0000000000463275: add byte ptr [rax], al; sete byte ptr [rsp + 8]; ret; 
0x000000000042a11c: add byte ptr [rax], al; shl rbx, cl; or qword ptr [rdx + rax*8], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004648e7: add byte ptr [rax], al; syscall; 
0x0000000000465129: add byte ptr [rax], al; syscall; cmp rax, 0; je 0x65138; mov dword ptr [rsp + 0x30], eax; ret; 
0x00000000004649c8: add byte ptr [rax], al; syscall; mov dword ptr [rsp + 0x10], eax; ret; 
0x00000000004649ec: add byte ptr [rax], al; syscall; mov dword ptr [rsp + 0x18], eax; ret; 
0x0000000000464991: add byte ptr [rax], al; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000464d77: add byte ptr [rax], al; syscall; mov dword ptr [rsp + 0x28], eax; ret; 
0x00000000004650df: add byte ptr [rax], al; syscall; mov dword ptr [rsp + 0x30], eax; ret; 
0x0000000000464a63: add byte ptr [rax], al; syscall; mov dword ptr [rsp + 8], eax; ret; 
0x0000000000465388: add byte ptr [rax], al; syscall; mov qword ptr [rsp + 0x10], rax; ret; 
0x00000000004653ad: add byte ptr [rax], al; syscall; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000464ae3: add byte ptr [rax], al; syscall; mov qword ptr [rsp + 8], rax; ret; 
0x0000000000464a39: add byte ptr [rax], al; syscall; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004648e7: add byte ptr [rax], al; syscall; ret; 
0x000000000047d6bd: add byte ptr [rax], al; test byte ptr [rcx], al; mov qword ptr [rsp + 0xb0], rcx; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000044d37e: add byte ptr [rax], al; test rax, rax; jne 0x4d366; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000408dee: add byte ptr [rax], al; test rbx, rbx; setne byte ptr [rsp + 0x140]; mov rbp, qword ptr [rsp + 0x108]; add rsp, 0x110; ret; 
0x000000000045eba9: add byte ptr [rax], al; test rdx, rdx; je 0x5ebba; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000401c43: add byte ptr [rax], al; xgetbv; mov dword ptr [rsp + 8], eax; mov dword ptr [rsp + 0xc], edx; ret; 
0x000000000044d07e: add byte ptr [rax], al; xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x110], xmm0; mov rbp, qword ptr [rsp + 0xf0]; add rsp, 0xf8; ret; 
0x000000000047759c: add byte ptr [rax], al; xorps xmm0, xmm0; movups xmmword ptr [rsp + 0xf8], xmm0; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x000000000046108b: add byte ptr [rax], cl; add byte ptr [rax], al; add rsp, 0x808; ret; 
0x000000000046186d: add byte ptr [rax], cl; add byte ptr [rax], al; ja 0x6187c; lea rax, [rip + 0x5a6]; jmp rax; 
0x0000000000465367: add byte ptr [rax], cl; add byte ptr [rax], al; or edx, eax; mov eax, 0x48; syscall; 
0x0000000000465367: add byte ptr [rax], cl; add byte ptr [rax], al; or edx, eax; mov eax, 0x48; syscall; ret; 
0x00000000004618fe: add byte ptr [rax], cl; add byte ptr [rdi + 9], dh; lea rax, [rip + 0xbf6]; jmp rax; 
0x0000000000462ca7: add byte ptr [rax], cl; add rsp, 0x8000008; ret; 
0x000000000046198f: add byte ptr [rax], cl; ja 0x6199c; lea rax, [rip + 0x1266]; jmp rax; 
0x0000000000462c6b: add byte ptr [rax], cl; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462c5e: add byte ptr [rax], cl; mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x8000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462cae: add byte ptr [rax], cl; ret; 
0x000000000046111d: add byte ptr [rax], dl; add byte ptr [rax], al; add rsp, 0x1008; ret; 
0x000000000046187f: add byte ptr [rax], dl; add byte ptr [rax], al; ja 0x6188e; lea rax, [rip + 0x654]; jmp rax; 
0x0000000000461910: add byte ptr [rax], dl; add byte ptr [rdi + 9], dh; lea rax, [rip + 0xcc4]; jmp rax; 
0x0000000000462d87: add byte ptr [rax], dl; add rsp, 0x10000008; ret; 
0x00000000004619a1: add byte ptr [rax], dl; ja 0x619ae; lea rax, [rip + 0x1334]; jmp rax; 
0x0000000000462d4b: add byte ptr [rax], dl; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462d3e: add byte ptr [rax], dl; mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x10000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462d8e: add byte ptr [rax], dl; ret; 
0x000000000042b5d8: add byte ptr [rax], r8b; add byte ptr [rax + 0x8247c], al; jne 0x2b5ed; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004219f8: add byte ptr [rax], r8b; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000045b1fd: add byte ptr [rax], r8b; call 0x21300; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000444a5d: add byte ptr [rax], r8b; call 0x33b60; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x000000000043db1d: add byte ptr [rax], r8b; call 0x3db00; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043db5d: add byte ptr [rax], r8b; call 0x3db40; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043db9d: add byte ptr [rax], r8b; call 0x3db80; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043dbdd: add byte ptr [rax], r8b; call 0x3dbc0; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043dc1d: add byte ptr [rax], r8b; call 0x3dc00; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043dc5d: add byte ptr [rax], r8b; call 0x3dc40; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x00000000004529bd: add byte ptr [rax], r8b; call 0x51480; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000452bfd: add byte ptr [rax], r8b; call 0x51480; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000434ebd: add byte ptr [rax], r8b; call 0x615e0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046bf1d: add byte ptr [rax], r8b; call 0x6ba80; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000401a1d: add byte ptr [rax], r8b; cmp eax, 7; jae 0x1a2f; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000041cc1d: add byte ptr [rax], r8b; cmp ecx, 6; jne 0x1cd37; mov rbp, qword ptr [rsp + 0x1f8]; add rsp, 0x200; ret; 
0x000000000044d83d: add byte ptr [rax], r8b; cmp rcx, rax; jg 0x4d772; mov rbp, qword ptr [rsp + 0xf8]; add rsp, 0x100; ret; 
0x000000000040a77d: add byte ptr [rax], r8b; cmp rcx, rax; jne 0xa78f; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004046fd: add byte ptr [rax], r8b; cmp rdi, rbx; jb 0x46c2; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x000000000041a475: add byte ptr [rbp + 0x10], dh; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000042a5ab: add byte ptr [rbp + 0x10], dh; movabs rax, 0x8000000000000000; mov qword ptr [rsp + 0x10], rax; ret; 
0x00000000004654c2: add byte ptr [rbp + 0x10], dh; xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040f156: add byte ptr [rbp + 0x10], dh; xorps xmm0, xmm0; movups xmmword ptr [rdi], xmm0; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000045e636: add byte ptr [rbp + 0x11], dh; mov qword ptr [rdi], rax; mov qword ptr [rdi + 8], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000430986: add byte ptr [rbp + 0x11], dh; mov qword ptr [rip + 0x126130], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000049abc4: add byte ptr [rbp + 0x11], dh; mov qword ptr [rip + 0xbbe92], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000049a7eb: add byte ptr [rbp + 0x11], dh; mov qword ptr [rip + 0xbc473], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048df01: add byte ptr [rbp + 0x11], dh; mov qword ptr [rip + 0xc21bd], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048e531: add byte ptr [rbp + 0x11], dh; mov qword ptr [rip + 0xc5655], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000490f6a: add byte ptr [rbp + 0x11], dh; mov qword ptr [rip + 0xc5ea4], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000490be7: add byte ptr [rbp + 0x11], dh; mov qword ptr [rip + 0xc62ff], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048fce7: add byte ptr [rbp + 0x11], dh; mov qword ptr [rip + 0xc7017], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048d1c5: add byte ptr [rbp + 0x11], dh; mov qword ptr [rip + 0xc9ab9], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000487459: add byte ptr [rbp + 0x11], dh; mov qword ptr [rip + 0xcf61d], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000472b9c: add byte ptr [rbp + 0x11], dh; mov qword ptr [rip + 0xe4002], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004722e9: add byte ptr [rbp + 0x11], dh; mov qword ptr [rip + 0xe4955], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046c61f: add byte ptr [rbp + 0x11], dh; mov qword ptr [rip + 0xea6ff], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046c258: add byte ptr [rbp + 0x11], dh; mov qword ptr [rip + 0xea8d6], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000469621: add byte ptr [rbp + 0x11], dh; mov qword ptr [rip + 0xed62d], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040d82f: add byte ptr [rbp + 0x12], dh; mov qword ptr [rdi], rdx; mov qword ptr [rsp + 0x78], rdx; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000048451b: add byte ptr [rbp + 0x12], dh; mov rax, qword ptr [rsp + 0x50]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004842af: add byte ptr [rbp + 0x12], dh; mov rax, qword ptr [rsp + 0x58]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000493c9c: add byte ptr [rbp + 0x12], dh; mov rax, qword ptr [rsp + 0x58]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000045cb3a: add byte ptr [rbp + 0x12], dh; mov rcx, qword ptr [rsp + 0x20]; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048b529: add byte ptr [rbp + 0x13], dh; mov qword ptr [rbx + r13*8], rdx; mov qword ptr [rbx + r13*8 + 8], r8; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000496b91: add byte ptr [rbp + 0x13], dh; mov qword ptr [rdi], rbx; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000049879f: add byte ptr [rbp + 0x13], dh; mov qword ptr [rdi], rdx; mov rbp, qword ptr [rsp + 0x1c8]; add rsp, 0x1d0; ret; 
0x0000000000495b5f: add byte ptr [rbp + 0x13], dh; mov qword ptr [rdi], rdx; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x000000000043c7a3: add byte ptr [rbp + 0x14], dh; call 0x3f100; call 0x38f20; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045a6c8: add byte ptr [rbp + 0x14], dh; lea rax, [rip + 0x6693a]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000045a5c1: add byte ptr [rbp + 0x14], dh; lea rax, [rip + 0x676da]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000417fab: add byte ptr [rbp + 0x14], dh; mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045eae1: add byte ptr [rbp + 0x15], dh; mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rip + 0xf8000], rax; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000040a262: add byte ptr [rbp + 0x16], dh; lea rax, [rip + 0x17d4d4]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004244f0: add byte ptr [rbp + 0x18], dh; mov qword ptr [rsp + 0xd8], rcx; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000042d567: add byte ptr [rbp + 0x18], dh; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000458c20: add byte ptr [rbp + 0x19], dh; xor eax, eax; mov byte ptr [rsp + 0x148], al; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x000000000046934d: add byte ptr [rbp + 0x19], dh; xor eax, eax; mov byte ptr [rsp + 0xe8], al; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x000000000047f238: add byte ptr [rbp + 0x19], dh; xor eax, eax; mov byte ptr [rsp + 0xf0], al; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x00000000004937fa: add byte ptr [rbp + 0x1b], dh; mov rax, qword ptr [rsp + 0xe0]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x000000000042f8a0: add byte ptr [rbp + 0x1e], dh; lea rax, [rip + 0x96e06]; mov qword ptr [rip + 0x127267], rax; mov rbp, qword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x0000000000410641: add byte ptr [rbp + 0x2b], dh; cmp qword ptr [r8 + 0x20], rdi; je 0x1065a; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000041128c: add byte ptr [rbp + 0x2b], dh; cmp qword ptr [r9 + 0x20], r8; je 0x112a5; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000040f9a3: add byte ptr [rbp + 0x2b], dh; cmp qword ptr [r9 + 0x20], r8; je 0xf9bc; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x0000000000411bd6: add byte ptr [rbp + 0x2e], dh; cmp qword ptr [r9 + 0x20], r8; je 0x11bef; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000042fbb4: add byte ptr [rbp + 0x31], dh; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040a893: add byte ptr [rbp + 0x3f8c0fd2], al; add dword ptr [rax], eax; add bh, bh; ret 0x9189; 
0x000000000040da4d: add byte ptr [rbp + 0x41893304], cl; or al, 0x48; mov dword ptr [rsp + 0x20], ecx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044c5db: add byte ptr [rbp + 0x44891a04], cl; and al, 8; ret; 
0x000000000040ae82: add byte ptr [rbp + 0x44950fc0], al; and al, 0x48; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042daa2: add byte ptr [rbp + 0x480a74c0], al; mov ebp, dword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000043928c: add byte ptr [rbp + 0x480a74c9], al; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042fa86: add byte ptr [rbp + 0x480a75c0], al; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042ea9f: add byte ptr [rbp + 0x480a7cc0], al; mov ebp, dword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000464edf: add byte ptr [rbp + 0x481775c9], al; mov ecx, dword ptr [rip + 0xf1bcd]; lea r9, [rip - 0xf2]; mov rax, qword ptr [rip + 0xf1b27]; jmp rax; 
0x000000000043d317: add byte ptr [rbp + 0x481c7fc0], al; mov dword ptr [rsp + 0x3e8], 0; mov rbp, qword ptr [rsp + 0x3d0]; add rsp, 0x3d8; ret; 
0x000000000040e9ae: add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040f42e: add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045f4da: add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000411d21: add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000043e254: add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000043ac74: add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000492c00: add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000043ef83: add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000491303: add byte ptr [rbp + 0xd], dh; mov qword ptr [rdi], r8; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004946c3: add byte ptr [rbp + 0xd], dh; mov qword ptr [rdi], rbx; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000040f2e9: add byte ptr [rbp + 0xe], dh; mov qword ptr [rcx + 0x10], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044413f: add byte ptr [rbp + 0xe], dh; mov qword ptr [rdx + 0x10], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000451182: add byte ptr [rbp + 0xe], dh; mov qword ptr [rdx + r8*8], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000450fe1: add byte ptr [rbp + 0xe], dh; mov qword ptr [rdx + rax*8], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000430c87: add byte ptr [rbp + 0xe], dh; mov qword ptr [rsi + rcx*8], rax; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000043a8f2: add byte ptr [rbp + 0xf], dh; mov byte ptr [rsp + 0x28], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043c871: add byte ptr [rbp + 0xf], dh; mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000455dab: add byte ptr [rbp + 0xf], dh; mov byte ptr [rsp + 0x50], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000041702c: add byte ptr [rbp + 0xf], dh; mov qword ptr [rsp + 0x48], rbx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000041702b: add byte ptr [rbp + 0xf], sil; mov qword ptr [rsp + 0x48], rbx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044d472: add byte ptr [rbp + 1], cl; ret; 
0x000000000043c1d6: add byte ptr [rbp + 1], dh; ret; 
0x000000000045d4a2: add byte ptr [rbp + 9], dh; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000465130: add byte ptr [rbp + rax - 0x77], dh; and al, 0x30; ret; 
0x00000000004922a8: add byte ptr [rbp + rcx*4 + 0x68], cl; inc dword ptr [rcx + 0xf]; mov dh, 0x14; adc ecx, dword ptr [rcx + 0x39]; int 0x72; ret 0x7ce9; 
0x000000000045bdeb: add byte ptr [rbp + rcx*4 + 0xc], cl; ret 0x8d4d; 
0x000000000049a3a8: add byte ptr [rbp + rcx*4 + 0xd], cl; push rax; add al, 0; mov rax, qword ptr [r9 + 0x98]; mov qword ptr [rsp], r8; call rax; 
0x000000000041a960: add byte ptr [rbp - 0x10], dh; call 0x2b120; call 0x2b1a0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000444ea3: add byte ptr [rbp - 0x1d], dh; mov dword ptr [rsp], 0xd; call 0x46380; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045d6ee: add byte ptr [rbp - 0x2d], dh; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000440d95: add byte ptr [rbp - 0x2d], dh; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000466981: add byte ptr [rbp - 0x42], dh; mov byte ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000047393f: add byte ptr [rbp - 0x5f7bf001], al; add al, byte ptr [rax]; add byte ptr [rcx - 0x77], cl; ret 0x8949; 
0x0000000000478a6d: add byte ptr [rbp - 0x63], dh; mov byte ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045cc5c: add byte ptr [rbp - 0x73], cl; push rax; dec dword ptr [rbp + 0x39]; ret 0x830f; 
0x0000000000427486: add byte ptr [rbp - 0x75], cl; pop rsp; ret 0x4c08; 
0x0000000000452ddb: add byte ptr [rbp - 0x79], dh; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x000000000040fe7f: add byte ptr [rbp - 0x7b], cl; sal byte ptr [rcx + 0xf], 0xb6; push rdx; or dh, dh; ret 0x7408; 
0x00000000004360b4: add byte ptr [rbx + 0x12091], cl; add byte ptr [rcx], cl; ret 0x1f0f; 
0x00000000004174ed: add byte ptr [rbx + 0x16f2df3d], al; add byte ptr [rax], al; jg 0x17501; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000045ea84: add byte ptr [rbx + 0x30247c], al; jl 0x5ea96; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000456829: add byte ptr [rbx + 0x448801f0], al; and al, 0x40; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000420bce: add byte ptr [rbx + 0x47], dh; mov qword ptr [rdi + rax*8 + 0x20], rdx; inc qword ptr [rdi + 0x10]; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045a346: add byte ptr [rbx + 0x48182444], cl; mov ecx, dword ptr [rsp + 0x20]; mov dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045190c: add byte ptr [rbx + 0x48202444], cl; mov dword ptr [rsp + 0x70], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x0000000000410ca8: add byte ptr [rbx + 0x4e88fbe1], al; or byte ptr [rax - 0x77], cl; and al, 0x58; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004100d8: add byte ptr [rbx + 0x5688fbe2], al; or byte ptr [rax - 0x77], cl; and al, 0x58; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000422f45: add byte ptr [rbx + 0x75], dh; mov rax, qword ptr [rbx + rdx*8 + 0x10]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045b9c8: add byte ptr [rbx + 0x9098], cl; add byte ptr [rbx - 0x6bf0fd05], al; ret; 
0x0000000000401a1f: add byte ptr [rbx + 0xa7307f8], al; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004310bc: add byte ptr [rbx + rbx*2 + 0x48], dh; mov eax, dword ptr [rax + 0x18]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000422c3b: add byte ptr [rbx + rcx*2 + 0xf], dh; xchg eax, esp; ret 0x8b48; 
0x0000000000465116: add byte ptr [rbx + rcx*4 + 0x44], cl; and al, 0x18; mov r9, qword ptr [rsp + 0x20]; mov r12, qword ptr [rsp + 0x28]; mov eax, 0x38; syscall; 
0x00000000004510ae: add byte ptr [rbx + rcx*4 + 0x54], cl; ret 0x4d08; 
0x00000000004510fb: add byte ptr [rbx + rcx*4 + 0x54], cl; ret 0x4d18; 
0x00000000004510ce: add byte ptr [rbx + rcx*4 + 0x64], cl; ret 0x4d10; 
0x0000000000451117: add byte ptr [rbx + rcx*4 + 0x74], cl; ret 0x4d20; 
0x0000000000453e6d: add byte ptr [rbx + rcx*4 - 0x4c], cl; and al, 0x20; add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; ret; 
0x000000000047f668: add byte ptr [rbx + rcx*4 - 0x6c], cl; and al, 0xb8; add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret 0x4c18; 
0x000000000045b9ce: add byte ptr [rbx - 0x6bf0fd05], al; ret; 
0x0000000000477f88: add byte ptr [rbx - 0x73f0df08], al; add dword ptr [rdx], 0xff3d0000; call qword ptr [rax]; 
0x0000000000403ddd: add byte ptr [rbx - 0x76e3dbbc], cl; and al, 0x48; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042eda4: add byte ptr [rbx - 0x7acbdbbc], cl; sar byte ptr [rbp + 0x10], 0x48; mov ebp, dword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x000000000042e83b: add byte ptr [rbx - 0x7ad7dbbc], cl; sar byte ptr [rdx + rcx + 0x48], 0x8b; insb byte ptr [rdi], dx; and al, 0x48; add rsp, 0x50; ret; 
0x000000000042e269: add byte ptr [rbx - 0x8e7dbbc], cl; fmul dword ptr [rcx + 0x48502444]; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044761e: add byte ptr [rcx + 0x39], cl; fimul dword ptr [rdi]; xchg eax, edx; ret 0x894c; 
0x000000000041267e: add byte ptr [rcx + 0x48442444], cl; lea eax, [rcx + 0x1fffff]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000459c85: add byte ptr [rcx + 0x48602444], cl; mov ebp, dword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000047a18b: add byte ptr [rcx + 0xf], al; mov bh, 0x59; xor ah, byte ptr [rsi - 9]; ret; 
0x000000000042403c: add byte ptr [rcx + 0xf], al; xchg eax, esp; ret; 
0x00000000004208e8: add byte ptr [rcx + 0xf], cl; mov ebp, 0x440f48c1; ret 0x4890; 
0x000000000044f249: add byte ptr [rcx + 1], bh; lock xadd dword ptr [rax + 0x2788], ecx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004222b4: add byte ptr [rcx + 1], cl; ret; 
0x000000000047d6be: add byte ptr [rcx + rax + 0x248c8948], al; mov al, 0; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000464bce: add byte ptr [rcx + rax*2 - 0x41], dh; add byte ptr [rax], al; add byte ptr [rax], al; lea rsi, [rsp]; call rax; 
0x000000000044118a: add byte ptr [rcx + rax*8 + 0x48], dh; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000432215: add byte ptr [rcx + rcx + 0xf], dh; push rdi; ror byte ptr [rdi], 0x11; and al, 0x10; ret; 
0x000000000047ca51: add byte ptr [rcx + rcx*4 + 0x2c], cl; and al, 0x4c; mov dword ptr [rsp + 8], esi; mov rax, qword ptr [rdx]; nop; call rax; 
0x000000000048af4b: add byte ptr [rcx + rcx*4 + 0x44], cl; and al, 0x10; call rsi; 
0x000000000048ae60: add byte ptr [rcx + rcx*4 + 0x44], cl; and al, 8; mov qword ptr [rsp + 0x10], rcx; call rsi; 
0x000000000046b4a7: add byte ptr [rcx + rcx*4 + 0x4c], cl; and al, 0x68; mov qword ptr [rsp + 0x70], r10; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000496e54: add byte ptr [rcx - 0x17e7dbbc], cl; ret 0xffe7; 
0x0000000000443a39: add byte ptr [rcx - 0x39], cl; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046510f: add byte ptr [rcx - 0x39], cl; ret 0; 
0x000000000044e057: add byte ptr [rcx - 0x75], cl; or byte ptr [rbp - 0x75], cl; or byte ptr [rbp - 0x75], cl; push rax; adc byte ptr [rax + 0x63], cl; ret 0x3948; 
0x000000000044223b: add byte ptr [rcx - 0x76b7dbfc], cl; and al, 8; call 0x2eba0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004912d1: add byte ptr [rcx - 0x77], cl; ret 0x294c; 
0x000000000040c42d: add byte ptr [rcx - 0x77], cl; ret 0x8948; 
0x0000000000473947: add byte ptr [rcx - 0x77], cl; ret 0x8949; 
0x0000000000418d17: add byte ptr [rcx - 0x7a0fd639], cl; ror byte ptr [rdi], 0x9f; ret; 
0x00000000004129c9: add byte ptr [rcx - 0x7d], cl; ret 0x4c10; 
0x000000000047f670: add byte ptr [rcx - 0x7d], cl; ret 0x4c18; 
0x00000000004106d5: add byte ptr [rcx - 0x7d], cl; ret; 
0x000000000041db3f: add byte ptr [rcx - 0xa], al; ret 0xf01; 
0x000000000040e417: add byte ptr [rcx - 1], cl; ret 0x1f0f; 
0x0000000000427d7b: add byte ptr [rcx - 1], cl; ret; 
0x0000000000482ff4: add byte ptr [rcx], 0; add byte ptr [rax - 0x77], cl; and al, 0x60; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000467495: add byte ptr [rcx], al; add al, ch; ret; 
0x0000000000447295: add byte ptr [rcx], al; add byte ptr [rax + 0x39], cl; ret 0x872; 
0x00000000004473fc: add byte ptr [rcx], al; add byte ptr [rax + 0x39], cl; ror dword ptr [rdi], cl; xchg eax, edx; ret 0x894c; 
0x0000000000426e08: add byte ptr [rcx], al; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000041fb43: add byte ptr [rcx], al; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000043301b: add byte ptr [rcx], al; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x68; add rsp, 0x70; ret; 
0x000000000044cb9b: add byte ptr [rcx], al; add byte ptr [rax], al; add rsp, 0x108; ret; 
0x0000000000461837: add byte ptr [rcx], al; add byte ptr [rax], al; ja 0x61846; lea rax, [rip + 0x39c]; jmp rax; 
0x000000000045fde0: add byte ptr [rcx], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x108], r8; mov rbp, qword ptr [rsp + 0xd0]; add rsp, 0xd8; ret; 
0x0000000000407753: add byte ptr [rcx], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x108], rcx; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000047d0b2: add byte ptr [rcx], al; add byte ptr [rax], al; mov qword ptr [rsp], rcx; call rax; 
0x0000000000497fb0: add byte ptr [rcx], al; add byte ptr [rax], al; mov qword ptr [rsp], rsi; call rbx; 
0x0000000000475d26: add byte ptr [rcx], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000477684: add byte ptr [rcx], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x0000000000485389: add byte ptr [rcx], al; add byte ptr [rax], al; mov rcx, qword ptr [rsp + 0x40]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004855c9: add byte ptr [rcx], al; add byte ptr [rax], al; mov rcx, qword ptr [rsp + 0x48]; mov qword ptr [rsp], rcx; call rax; 
0x000000000047e843: add byte ptr [rcx], al; add byte ptr [rax], al; mov rcx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000486e35: add byte ptr [rcx], al; add byte ptr [rax], al; mov rcx, qword ptr [rsp + 0x78]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000497dde: add byte ptr [rcx], al; add byte ptr [rax], al; mov rdx, qword ptr [rax + 0x48]; mov qword ptr [rsp], rcx; call rdx; 
0x000000000047e864: add byte ptr [rcx], al; add byte ptr [rax], al; mov rdx, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000486d89: add byte ptr [rcx], al; add byte ptr [rax], al; mov rdx, qword ptr [rsp + 0x78]; mov qword ptr [rsp], rdx; call rcx; 
0x000000000044d854: add byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x00000000004618c8: add byte ptr [rcx], al; add byte ptr [rdi + 9], dh; lea rax, [rip + 0x98c]; jmp rax; 
0x0000000000462a07: add byte ptr [rcx], al; add rsp, 0x1000008; ret; 
0x0000000000461959: add byte ptr [rcx], al; ja 0x61966; lea rax, [rip + 0xffc]; jmp rax; 
0x0000000000422c69: add byte ptr [rcx], al; je 0x22c77; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000422e76: add byte ptr [rcx], al; je 0x22e84; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000423157: add byte ptr [rcx], al; je 0x23165; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000454f7b: add byte ptr [rcx], al; jne 0x54f89; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004557c1: add byte ptr [rcx], al; jne 0x557cf; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000045aa2c: add byte ptr [rcx], al; mov qword ptr [rcx + 0xa0], rdx; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x00000000004629cb: add byte ptr [rcx], al; mov rax, qword ptr [rdx]; call rax; 
0x0000000000458833: add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x00000000004680a5: add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x128]; add rsp, 0x130; ret; 
0x000000000047a801: add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x138]; add rsp, 0x140; ret; 
0x000000000040385c: add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000047d399: add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x1a0]; add rsp, 0x1a8; ret; 
0x0000000000417391: add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044f003: add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000446ba8: add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000045bab1: add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000441342: add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x430]; add rsp, 0x438; ret; 
0x0000000000426308: add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000045e27a: add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000473f60: add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000404df9: add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000478c8d: add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000041d10e: add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; nop; ret; 
0x0000000000405853: add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000448c61: add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x000000000047eb4e: add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; nop; ret; 
0x000000000047f0b8: add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x000000000047c1e0: add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0xd0]; add rsp, 0xd8; ret; 
0x0000000000422140: add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x00000000004629be: add byte ptr [rcx], al; mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x1000018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004972ab: add byte ptr [rcx], al; nop; call 0x30e60; mov rbp, qword ptr [rsp + 0x260]; add rsp, 0x268; ret; 
0x0000000000438cb2: add byte ptr [rcx], al; ret; 
0x000000000047d97d: add byte ptr [rcx], al; xor edx, esi; cmp rbx, rcx; jl 0x7d972; mov dword ptr [rsp + 0x28], edx; ret; 
0x000000000042161f: add byte ptr [rcx], bh; ret 0xcb74; 
0x0000000000435ed4: add byte ptr [rcx], bh; sar dword ptr [rdi + 0xa], 0x48; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000441243: add byte ptr [rcx], ch; ret 0xead1; 
0x00000000004360ba: add byte ptr [rcx], cl; ret 0x1f0f; 
0x000000000046536a: add byte ptr [rcx], cl; ret 0x48b8; 
0x000000000047d659: add byte ptr [rcx], dh; fucomi st(3); add ecx, dword ptr [rax - 1]; ret; 
0x000000000042d729: add byte ptr [rcx], dh; sal byte ptr [rcx], cl; fucomi st(3); add ecx, dword ptr [rax - 1]; ret 0x3948; 
0x0000000000437ba2: add byte ptr [rcx], dh; shr bl, cl; add ecx, dword ptr [rax - 1]; ret 0x3948; 
0x0000000000418853: add byte ptr [rcx], dh; shr bl, cl; or byte ptr [rax - 1], cl; ret 0x1f0f; 
0x000000000042161e: add byte ptr [rcx], dil; ret 0xcb74; 
0x00000000004064df: add byte ptr [rdi + 0x10], dh; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000043ec7f: add byte ptr [rdi + 0x448b4801], al; and al, 0x68; mov qword ptr [rsp + 0x98], rax; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000042fa3f: add byte ptr [rdi + 0x6c8b4801], al; and al, 0x18; add rsp, 0x20; ret; 
0x000000000043e207: add byte ptr [rdi + 0x6c8b4801], al; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000406256: add byte ptr [rdi + 0x6c8b4801], al; and al, 0x50; add rsp, 0x58; ret; 
0x00000000004174f4: add byte ptr [rdi + 0xa], bh; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000433506: add byte ptr [rdi + 0xa], dh; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000461828: add byte ptr [rdi + 9], dh; lea rax, [rip + 0x2ee]; jmp rax; 
0x000000000046183a: add byte ptr [rdi + 9], dh; lea rax, [rip + 0x39c]; jmp rax; 
0x000000000046184c: add byte ptr [rdi + 9], dh; lea rax, [rip + 0x44a]; jmp rax; 
0x000000000046185e: add byte ptr [rdi + 9], dh; lea rax, [rip + 0x4f8]; jmp rax; 
0x0000000000461870: add byte ptr [rdi + 9], dh; lea rax, [rip + 0x5a6]; jmp rax; 
0x0000000000461882: add byte ptr [rdi + 9], dh; lea rax, [rip + 0x654]; jmp rax; 
0x0000000000461894: add byte ptr [rdi + 9], dh; lea rax, [rip + 0x722]; jmp rax; 
0x00000000004618a6: add byte ptr [rdi + 9], dh; lea rax, [rip + 0x7f0]; jmp rax; 
0x00000000004618b8: add byte ptr [rdi + 9], dh; lea rax, [rip + 0x8be]; jmp rax; 
0x00000000004618ca: add byte ptr [rdi + 9], dh; lea rax, [rip + 0x98c]; jmp rax; 
0x00000000004618dc: add byte ptr [rdi + 9], dh; lea rax, [rip + 0xa5a]; jmp rax; 
0x00000000004618ee: add byte ptr [rdi + 9], dh; lea rax, [rip + 0xb28]; jmp rax; 
0x0000000000461900: add byte ptr [rdi + 9], dh; lea rax, [rip + 0xbf6]; jmp rax; 
0x0000000000461912: add byte ptr [rdi + 9], dh; lea rax, [rip + 0xcc4]; jmp rax; 
0x0000000000461924: add byte ptr [rdi + 9], dh; lea rax, [rip + 0xd92]; jmp rax; 
0x0000000000461936: add byte ptr [rdi + 9], dh; lea rax, [rip + 0xe60]; jmp rax; 
0x0000000000461948: add byte ptr [rdi + 9], dh; lea rax, [rip + 0xf2e]; jmp rax; 
0x0000000000461935: add byte ptr [rdi + 9], sil; lea rax, [rip + 0xe60]; jmp rax; 
0x0000000000464cae: add byte ptr [rdi + rax*2 - 0x41], dh; add dword ptr [rax], eax; add byte ptr [rax], al; lea rsi, [rsp]; call rax; 
0x000000000046513e: add byte ptr [rdi + rbp + 0x49], dh; cmp ecx, 0; je 0x65170; mov eax, 0xba; syscall; 
0x000000000042cd72: add byte ptr [rdi + rcx + 0x48], dh; mov dword ptr [rsp + 0x30], ebx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043d8c7: add byte ptr [rdi + rcx + 0x48], dh; mov dword ptr [rsp + 0x38], ecx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000427c55: add byte ptr [rdi + rcx + 0x48], dh; mov dword ptr [rsp + 0x40], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000420392: add byte ptr [rdi + rcx + 0x48], dh; mov dword ptr [rsp + 0x58], ecx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000409042: add byte ptr [rdi + rcx - 0x51], cl; ret 0x98eb; 
0x000000000046197d: add byte ptr [rdi + rsi*2], al; or dword ptr [rax - 0x73], ecx; add eax, 0x1198; jmp rax; 
0x000000000041f1ad: add byte ptr [rdi - 0x18], dh; mov qword ptr [rip + 0x15e7f9], rdi; ret; 
0x00000000004168cf: add byte ptr [rdi - 0x5a], dh; cmp qword ptr [rcx + 0xa8], rax; jbe 0x16878; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000046490a: add byte ptr [rdi], bh; mov eax, 0x3c; syscall; 
0x00000000004649c9: add byte ptr [rdi], cl; add eax, 0x10244489; ret; 
0x00000000004649ed: add byte ptr [rdi], cl; add eax, 0x18244489; ret; 
0x0000000000464992: add byte ptr [rdi], cl; add eax, 0x20244489; ret; 
0x0000000000464d78: add byte ptr [rdi], cl; add eax, 0x28244489; ret; 
0x00000000004650e0: add byte ptr [rdi], cl; add eax, 0x30244489; ret; 
0x0000000000464ac4: add byte ptr [rdi], cl; add eax, 0x748bc789; and al, 8; mov eax, 0x3e; syscall; ret; 
0x0000000000464a64: add byte ptr [rdi], cl; add eax, 0x8244489; ret; 
0x000000000046512a: add byte ptr [rdi], cl; add eax, 0xf88348; je 0x65138; mov dword ptr [rsp + 0x30], eax; ret; 
0x0000000000401c44: add byte ptr [rdi], cl; add eax, edx; mov dword ptr [rsp + 8], eax; mov dword ptr [rsp + 0xc], edx; ret; 
0x0000000000467ff4: add byte ptr [rdi], cl; mov bh, 0x50; add dword ptr [rsi - 0x3f], esp; ret 0x4808; 
0x0000000000468ed0: add byte ptr [rdi], cl; mov bh, 0x52; add dword ptr [rsi - 0x3f], esp; ret 0x4808; 
0x000000000047a1e3: add byte ptr [rdi], cl; mov bh, 0x59; xor ah, byte ptr [rsi - 9]; ret; 
0x0000000000468025: add byte ptr [rdi], cl; mov bh, 0x5a; add dword ptr [rsi - 0x3f], esp; ret; 
0x0000000000467ba9: add byte ptr [rdi], cl; mov bh, 0x5a; xor ah, byte ptr [rsi - 9]; ret; 
0x0000000000468175: add byte ptr [rdi], cl; mov bh, 0x5b; add dword ptr [rsi - 0x3f], esp; ret; 
0x0000000000458758: add byte ptr [rdi], cl; mov bh, 0x7b; xor byte ptr [rcx], al; dec byte ptr [rax + 1]; ret; 
0x000000000047e653: add byte ptr [rdi], cl; mov dh, 0x50; adc al, 0xf6; ret 0x7404; 
0x000000000047a1d1: add byte ptr [rdi], cl; mov dh, 0x51; adc al, 0xf6; ret 0xf01; 
0x000000000040f86e: add byte ptr [rdi], cl; mov dh, 0x59; or dh, dh; ret; 
0x00000000004169cc: add byte ptr [rdi], cl; mov dh, 0x5e; adc al, 0xf6; ret; 
0x0000000000482276: add byte ptr [rdi], cl; mov edx, 0x7a7308e0; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000401a7d: add byte ptr [rdi], cl; mov edx, 0x920f13e0; add eax, 0x184ff8; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000444e82: add byte ptr [rdi], cl; mov edx, 0xa730de0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048b3ac: add byte ptr [rdi], cl; pushfq; and al, 0x60; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000043facb: add byte ptr [rdi], cl; pushfq; ret 0xebe9; 
0x000000000042e959: add byte ptr [rdi], cl; ror byte ptr [rcx + 0x20302494], 1; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x2020]; add rsp, 0x2028; ret; 
0x00000000004510a8: add byte ptr [rdi], cl; sbb dword ptr [rsi + 1], 0; add byte ptr [rbx + rcx*4 + 0x54], cl; ret 0x4d08; 
0x00000000004372ff: add byte ptr [rdi], cl; test dword ptr [rcx], edx; add dword ptr [rax], eax; add byte ptr [rax + 0xa058d48], dl; call qword ptr [rcx]; 
0x0000000000434ab2: add byte ptr [rdi], cl; test dword ptr [rsi + 0x48000000], ecx; mov eax, dword ptr [rip + 0x91aa8]; lea rdx, [rip + 0x91aa1]; call rax; 
0x000000000041dea6: add byte ptr [rdi], cl; test edx, eax; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000467ea9: add byte ptr [rdi], cl; xchg eax, ebp; and al, 0x10; ret; 
0x0000000000483b73: add byte ptr [rdi], cl; xchg eax, ebp; and al, 0x30; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000047dbd4: add byte ptr [rdi], cl; xchg eax, ebp; and al, 0x40; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000418cba: add byte ptr [rdi], cl; xchg eax, ebx; ret; 
0x000000000042683b: add byte ptr [rdi], cl; xchg eax, edi; ret 0x8490; 
0x000000000042687e: add byte ptr [rdi], cl; xchg eax, edi; ret 0xd284; 
0x000000000046abf1: add byte ptr [rdi], cl; xchg eax, esp; and al, 0x38; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000463276: add byte ptr [rdi], cl; xchg eax, esp; and al, 8; ret; 
0x0000000000487090: add byte ptr [rdi], cl; xchg eax, esp; ret 0x74e9; 
0x0000000000484f6a: add byte ptr [rdi], cl; xchg eax, esp; ret 0x8b48; 
0x0000000000404b75: add byte ptr [rdi], cl; xchg eax, esp; ret 0xd284; 
0x000000000040606c: add byte ptr [rdi], cl; xchg eax, esp; ret; 
0x000000000045b461: add byte ptr [rdx + 0x48], dh; mov eax, dword ptr [rsp + 0x28]; mov byte ptr [rax], 1; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000426158: add byte ptr [rdx + rax + 0x408b4890], al; sbb byte ptr [rax - 0x45], cl; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x1480000], al; ret; 
0x0000000000425ed4: add byte ptr [rdx + rax - 0x74b76f70], al; sbb byte ptr [rax - 0x45], cl; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x1480000], al; ret; 
0x000000000045ea89: add byte ptr [rdx + rcx + 0x48], bh; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040391a: add byte ptr [rdx + rcx + 0x48], dh; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045ad64: add byte ptr [rdx + rcx + 0x48], dh; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000404061: add byte ptr [rdx + rcx + 0x48], dh; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000403fa3: add byte ptr [rdx + rcx + 0x48], dh; mov ebp, dword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045b0ba: add byte ptr [rdx + rcx + 0x48], dh; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000442a0e: add byte ptr [rdx + rcx + 0x48], dh; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000043e431: add byte ptr [rdx + rcx + 0x48], sil; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000493fbf: add byte ptr [rdx + rcx - 0x48], dh; add dword ptr [rax], eax; add byte ptr [rax], al; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000493fbe: add byte ptr [rdx + rcx - 0x48], r14b; add dword ptr [rax], eax; add byte ptr [rax], al; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000460f8b: add byte ptr [rdx], al; add byte ptr [rax], al; add rsp, 0x208; ret; 
0x0000000000461849: add byte ptr [rdx], al; add byte ptr [rax], al; ja 0x61858; lea rax, [rip + 0x44a]; jmp rax; 
0x000000000041cb71: add byte ptr [rdx], al; add byte ptr [rax], al; ret; 
0x00000000004618da: add byte ptr [rdx], al; add byte ptr [rdi + 9], dh; lea rax, [rip + 0xa5a]; jmp rax; 
0x0000000000462ae7: add byte ptr [rdx], al; add rsp, 0x2000008; ret; 
0x000000000046196b: add byte ptr [rdx], al; ja 0x61978; lea rax, [rip + 0x10ca]; jmp rax; 
0x0000000000462aab: add byte ptr [rdx], al; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462a9e: add byte ptr [rdx], al; mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x2000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462aee: add byte ptr [rdx], al; ret; 
0x0000000000463223: add byte ptr [rsi + 0xf], ah; cmp ah, bl; add eax, 0x123663; aesenc xmm0, xmmword ptr [rip + 0x12366a]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x000000000046322c: add byte ptr [rsi + 0xf], ah; cmp ah, bl; add eax, 0x12366a; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x00000000004631c2: add byte ptr [rsi + 0xf], ah; cmp ah, bl; add eax, 0x1236c4; aesenc xmm0, xmmword ptr [rip + 0x1236cb]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x00000000004631cb: add byte ptr [rsi + 0xf], ah; cmp ah, bl; add eax, 0x1236cb; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x00000000004640ea: add byte ptr [rsi + rax + 0x48], dh; mov ecx, ebx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000472c86: add byte ptr [rsi + rcx + 0xf], dh; mov dh, 5; idiv dword ptr [rip + 0x5880011]; mov esi, dword ptr [rdi]; adc dword ptr [rax], eax; ret; 
0x0000000000452403: add byte ptr [rsi + rdx + 0x48], dh; mov ecx, dword ptr [rsp + 0x40]; add qword ptr [rax + 0x1640], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000043f4c9: add byte ptr [rsi - 0x1c], bh; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x00000000004168d8: add byte ptr [rsi - 0x63], dh; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000042f0bd: add byte ptr [rsi - 0x70], ah; call 0x2f5a0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x00000000004340bd: add byte ptr [rsi - 0x70], ah; call 0x344e0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000436f7d: add byte ptr [rsi - 0x70], ah; call 0x43640; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045261d: add byte ptr [rsi - 0x70], ah; call 0x51480; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000452a9d: add byte ptr [rsi - 0x70], ah; call 0x51480; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004552fd: add byte ptr [rsi - 0x70], ah; call 0x55320; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000049ab5d: add byte ptr [rsi - 0x70], ah; call 0x94260; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000041cb5d: add byte ptr [rsi - 0x70], ah; jne 0x1cc4b; mov rbp, qword ptr [rsp + 0x1f8]; add rsp, 0x200; ret; 
0x000000000043613d: add byte ptr [rsi - 0x70], ah; jne 0x3614c; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040221e: add byte ptr [rsp + rbx*4 - 0x3a], dh; add byte ptr [rax], al; ret; 
0x0000000000401f06: add byte ptr [rsp + rcx + 0x48], dh; mov dword ptr [rip + 0x184584], 0x3f; ret; 
0x000000000048f1e1: add byte ptr [rsp + rdx + 0x48], dh; mov dword ptr [rsp + 0x40], eax; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000424645: add byte ptr fs:[rax - 0x75], cl; and al, 0x10; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000473418: add byte ptr fs:[rax], al; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000041729f: add byte ptr fs:[rax], al; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000043d49e: add byte ptr fs:[rax], al; add byte ptr [rax - 0x77], cl; ret 0xf48; 
0x000000000048afd1: add cl, byte ptr [rax + 0x39]; ret 0x8e0f; 
0x000000000042dc9c: add cl, byte ptr [rax + 0x4828244c]; mov ebp, dword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000406354: add cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000042dc0d: add cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x00000000004819fe: add cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x58; add rsp, 0x60; ret; 
0x00000000004593e6: add cl, byte ptr [rax - 0x77]; and al, 0x40; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044c017: add cl, byte ptr [rax - 0x77]; and al, 0x60; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000045dc02: add cl, byte ptr [rax - 0x77]; or byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000462a9f: add cl, byte ptr [rax - 0x77]; out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x2000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000475d8f: add cl, byte ptr [rax - 0x77]; ret; 
0x000000000040b046: add cl, byte ptr [rax]; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004875ff: add cl, byte ptr [rax]; mov qword ptr [rsp + 0x50], rcx; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042a913: add cl, byte ptr [rbx + rcx*4 + 4]; ret 0x8349; 
0x000000000041b0e7: add cl, byte ptr [rcx + 0x16bede05]; add byte ptr [rax - 0x75], cl; sub al, 0x24; add rsp, 8; ret; 
0x000000000042f55d: add cl, byte ptr [rdi]; xchg eax, esp; ret 0x7ae8; 
0x000000000045b9d1: add cl, byte ptr [rdi]; xchg eax, esp; ret; 
0x000000000040664f: add cl, ch; cmp esi, -1; dec dword ptr [rax - 0x77]; shr al, 1; ret; 
0x0000000000403c94: add cl, ch; imul edi, edi, -1; jmp qword ptr [rsi + 0xf]; 
0x0000000000421c79: add cl, ch; imul edi, edi, 0xb60fffff; jl 0x21ca7; xor dword ptr [rax - 0x77], ecx; ret 0x894d; 
0x000000000043e13f: add cl, ch; mov ebx, 0x48fffffb; mov ebp, dword ptr [rsp + 0x260]; add rsp, 0x268; ret; 
0x0000000000478798: add cl, ch; ret 0xfff7; 
0x000000000048001f: add cl, ch; ret 0xfffc; 
0x0000000000445018: add cl, ch; ret 0xfffe; 
0x000000000040c0f7: add cl, ch; ret; 
0x000000000049205d: add dh, al; cmp sil, r15b; xor byte ptr [rbx + rbx*8 - 0x72b6958c], al; dec dword ptr [rax + 0x39]; ret 0x860f; 
0x000000000046b0d4: add dh, byte ptr [rbp + 0x25]; test al, 1; jne 0x6b0e5; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000457a2a: add dh, byte ptr [rbp + 0xa]; mov qword ptr [rsp + 0x10], 0; ret; 
0x000000000046196c: add dh, byte ptr [rdi + 9]; lea rax, [rip + 0x10ca]; jmp rax; 
0x00000000004687bf: add dh, dh; ret 0x7404; 
0x0000000000467b9f: add dh, dh; ret; 
0x0000000000425ed6: add dl, byte ptr [rax + 0x408b4890]; sbb byte ptr [rax - 0x45], cl; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x1480000], al; ret; 
0x00000000004222a3: add dl, byte ptr [rax - 0x74b76f70]; sbb byte ptr [rcx - 0x45], r9b; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x1490000], al; ret; 
0x00000000004651f8: add dl, byte ptr [rax]; add byte ptr [rax], al; mov rax, 0x9e; syscall; 
0x000000000043613a: add dl, byte ptr [rip - 0x6f9a0000]; jne 0x3614c; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000044c969: add dword ptr [r11 + r9*4 + 0x4a], ecx; sbb byte ptr [rbx + rcx*4 + 0x52], cl; sub byte ptr [rbp + 0x39], cl; ret 0x6f72; 
0x000000000040153d: add dword ptr [r8 + 0xfd03948], edx; xchg dword ptr [rdx + rax], edx; add byte ptr [rax + 0x29], cl; ret 0x8948; 
0x0000000000451d5e: add dword ptr [r8 - 0x77], ecx; adc byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000041dda6: add dword ptr [rax + 0x10], edx; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000045240c: add dword ptr [rax + 0x1640], ecx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000041ec96: add dword ptr [rax + 0x16b0], ecx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000417083: add dword ptr [rax + 0x30], edx; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000448c55: add dword ptr [rax + 0x39], ecx; fdivr dword ptr [rdi - 0x32]; mov byte ptr [rsp + 0xe0], 1; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x0000000000442665: add dword ptr [rax + 0x39], ecx; ret 0x3d75; 
0x0000000000480a52: add dword ptr [rax + 0x39], ecx; ret; 
0x000000000042bdaf: add dword ptr [rax + 0x39], ecx; ror byte ptr [rdi], 1; xchg eax, esi; ret 0x8b48; 
0x0000000000480a51: add dword ptr [rax + 0x39], r9d; ret; 
0x0000000000446dee: add dword ptr [rax + 0x48000000], 0x28246c8b; add rsp, 0x30; ret; 
0x000000000045682c: add dword ptr [rax + 0x48402444], ecx; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040153e: add dword ptr [rax + 0xfd03948], edx; xchg dword ptr [rdx + rax], edx; add byte ptr [rax + 0x29], cl; ret 0x8948; 
0x00000000004490fb: add dword ptr [rax + rax + 0x6c8b4800], ebx; and al, 0x18; add rsp, 0x20; ret; 
0x0000000000429942: add dword ptr [rax - 0x3f], ecx; out 0xd, eax; mov qword ptr [rsp + 0x48], rdi; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040910f: add dword ptr [rax - 0x50f0b770], edx; ret 0xc148; 
0x00000000004090a5: add dword ptr [rax - 0x50f0b770], edx; ret; 
0x0000000000410989: add dword ptr [rax - 0x73], ecx; mov qword ptr [rsp + 0x40], rax; mov byte ptr [rsp + 0x48], 1; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004107c9: add dword ptr [rax - 0x73], ecx; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040fc07: add dword ptr [rax - 0x73], ecx; sub byte ptr [rax - 0x77], cl; and al, 0x40; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004100cb: add dword ptr [rax - 0x73], ecx; sub sil, sil; ret 0xf04; 
0x000000000044312d: add dword ptr [rax - 0x75], ecx; add dword ptr [rax], r9d; mov qword ptr [rsp + 0x10], rdx; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000430aa6: add dword ptr [rax - 0x75], ecx; and al, 0x18; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000043ec81: add dword ptr [rax - 0x75], ecx; and al, 0x68; mov qword ptr [rsp + 0x98], rax; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000046bb35: add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; nop; ret; 
0x0000000000403963: add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000040fdd5: add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; nop; ret; 
0x000000000040385d: add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x0000000000401db5: add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; nop; ret; 
0x000000000040a4c2: add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000040adad: add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x000000000040e077: add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x0000000000403627: add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; ret; 
0x000000000045ceb5: add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; nop; ret; 
0x000000000045bab2: add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x00000000004453a2: add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x48; add rsp, 0x50; ret; 
0x0000000000406258: add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x50; add rsp, 0x58; ret; 
0x00000000004254b0: add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x58; add rsp, 0x60; ret; 
0x000000000045172a: add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x60; add rsp, 0x68; ret; 
0x0000000000404dfa: add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x70; add rsp, 0x78; ret; 
0x0000000000478c8e: add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x78; sub rsp, -0x80; ret; 
0x0000000000405fe9: add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x0000000000432237: add dword ptr [rax - 0x75], ecx; or byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x77], cl; and al, 0x10; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000406a53: add dword ptr [rax - 0x75], ecx; push rsp; and al, 0x18; mov rax, qword ptr [rdx]; call rax; 
0x0000000000451d5f: add dword ptr [rax - 0x77], ecx; adc byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000425cbb: add dword ptr [rax - 0x77], ecx; adc byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x000000000045b275: add dword ptr [rax - 0x77], ecx; add eax, 0x12be0b; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040e06d: add dword ptr [rax - 0x77], ecx; and al, 0x58; mov byte ptr [rsp + 0x60], 1; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042a4b6: add dword ptr [rax - 0x77], ecx; and al, 0x58; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000475992: add dword ptr [rax - 0x77], ecx; and al, 8; call 0x733a0; mov rbp, qword ptr [rsp + 0x690]; add rsp, 0x698; ret; 
0x0000000000475934: add dword ptr [rax - 0x77], ecx; and al, 8; call 0x73480; mov rbp, qword ptr [rsp + 0x690]; add rsp, 0x698; ret; 
0x00000000004734d2: add dword ptr [rax - 0x77], ecx; and dword ptr [rax], 3; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000493cd9: add dword ptr [rax - 0x77], ecx; jo 0x93ce6; mov byte ptr [rdx + rcx], bl; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x00000000004629bf: add dword ptr [rax - 0x77], ecx; out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x1000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000417c9a: add dword ptr [rax - 0x77], ecx; ret 0xd148; 
0x000000000045aa2d: add dword ptr [rax - 0x77], ecx; xchg eax, ecx; movabs al, byte ptr [0x58246c8b48000000]; add rsp, 0x60; ret; 
0x0000000000475956: add dword ptr [rax - 0x7b], ecx; leave; jge 0x7596c; mov rbp, qword ptr [rsp + 0x690]; add rsp, 0x698; ret; 
0x000000000048e639: add dword ptr [rax - 0x7d], ecx; ret 0x6608; 
0x0000000000412166: add dword ptr [rax - 9], ecx; ret 0x3f; 
0x0000000000434c72: add dword ptr [rax], 0x6c8b4800; and al, 0x10; add rsp, 0x18; ret; 
0x000000000040a899: add dword ptr [rax], eax; add bh, bh; ret 0x9189; 
0x000000000040df73: add dword ptr [rax], eax; add byte ptr [rax + 0x21], cl; ret; 
0x00000000004599a6: add dword ptr [rax], eax; add byte ptr [rax + 0x29], cl; ret 0x8948; 
0x0000000000442612: add dword ptr [rax], eax; add byte ptr [rax + 0x39], cl; ret 0x850f; 
0x000000000043f96c: add dword ptr [rax], eax; add byte ptr [rax + 0x39], cl; ret 0x8f0f; 
0x0000000000401f46: add dword ptr [rax], eax; add byte ptr [rax + 0x39], cl; ror dword ptr [rcx - 0x77], cl; ror byte ptr [rdi + rcx + 0x4c], 1; ret; 
0x00000000004912c6: add dword ptr [rax], eax; add byte ptr [rax + 0x39], cl; ror dword ptr [rdi], 0x82; test dword ptr [rax], 0x89490000; ret 0x294c; 
0x0000000000437303: add dword ptr [rax], eax; add byte ptr [rax + 0xa058d48], dl; call qword ptr [rcx]; 
0x000000000041f9ef: add dword ptr [rax], eax; add byte ptr [rax + 0xa7401f9], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000433b97: add dword ptr [rax], eax; add byte ptr [rax + 0xa7401f9], al; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000417f4b: add dword ptr [rax], eax; add byte ptr [rax - 0x39], cl; ret 0xffff; 
0x0000000000498973: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; push rsi; sbb byte ptr [rax - 0x77], cl; ret; 
0x000000000048538a: add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; and al, 0x40; mov qword ptr [rsp], rcx; call rax; 
0x00000000004855ca: add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; and al, 0x48; mov qword ptr [rsp], rcx; call rax; 
0x000000000047e844: add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; and al, 0x58; mov qword ptr [rsp], rcx; call rax; 
0x0000000000486e36: add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; and al, 0x78; mov qword ptr [rsp], rcx; call rax; 
0x0000000000433b27: add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000420e85: add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x0000000000404097: add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000043c356: add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x0000000000444de9: add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; ret; 
0x000000000043c741: add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x58; add rsp, 0x60; ret; 
0x0000000000442025: add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x78; sub rsp, -0x80; ret; 
0x0000000000497ddf: add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; push rax; mov qword ptr [rsp], rcx; call rdx; 
0x000000000047e865: add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; push rsp; and al, 0x68; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000486d8a: add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; push rsp; and al, 0x78; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000446b07: add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; sub al, 0x24; add rsp, 8; ret; 
0x0000000000482ff5: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; and al, 0x60; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045778d: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; and al, 0x68; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004216a7: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; and al, 0x68; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x00000000004570cb: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; and al, 0x78; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000047d0b3: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; or al, 0x24; call rax; 
0x0000000000498751: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x00000000004804c4: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret; 
0x00000000004346ce: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; sbb al, 0x24; mov rax, qword ptr [rip + 0x91e64]; lea rdx, [rip + 0x91e5d]; call rax; 
0x0000000000497fb1: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; xor al, 0x24; call rbx; 
0x000000000044d37d: add dword ptr [rax], eax; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp - 0x1f], 0x48; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045eba8: add dword ptr [rax], eax; add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rcx + 0x48], cl; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041deaa: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000041bda7: add dword ptr [rax], eax; add byte ptr [rax - 1], cl; ret 0x8948; 
0x000000000041aa73: add dword ptr [rax], eax; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret 0x1f0f; 
0x0000000000452244: add dword ptr [rax], eax; add byte ptr [rax], al; call 0x51480; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000452905: add dword ptr [rax], eax; add byte ptr [rax], al; call 0x51480; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000046afd6: add dword ptr [rax], eax; add byte ptr [rax], al; call 0x60220; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000443798: add dword ptr [rax], eax; add byte ptr [rax], al; je 0x437a8; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000464cb2: add dword ptr [rax], eax; add byte ptr [rax], al; lea rsi, [rsp]; call rax; 
0x000000000044f24b: add dword ptr [rax], eax; add byte ptr [rax], al; lock xadd dword ptr [rax + 0x2788], ecx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000493fc3: add dword ptr [rax], eax; add byte ptr [rax], al; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000467e1b: add dword ptr [rax], eax; add byte ptr [rax], al; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046532e: add dword ptr [rax], eax; add byte ptr [rax], al; mov eax, 0x48; syscall; 
0x000000000046532e: add dword ptr [rax], eax; add byte ptr [rax], al; mov eax, 0x48; syscall; ret; 
0x00000000004171c5: add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rip + 0x16fe40], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044cd49: add dword ptr [rax], eax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x100]; add rsp, 0x108; ret; 
0x0000000000408e5b: add dword ptr [rax], eax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x108]; add rsp, 0x110; ret; 
0x0000000000441678: add dword ptr [rax], eax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000458b8c: add dword ptr [rax], eax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; nop; ret; 
0x00000000004584f5: add dword ptr [rax], eax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x00000000004682cb: add dword ptr [rax], eax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x128]; add rsp, 0x130; ret; 
0x000000000047a757: add dword ptr [rax], eax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x138]; add rsp, 0x140; ret; 
0x000000000042e97b: add dword ptr [rax], eax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x2020]; add rsp, 0x2028; ret; 
0x000000000044b639: add dword ptr [rax], eax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043eff3: add dword ptr [rax], eax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000047c3c8: add dword ptr [rax], eax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000047c1f6: add dword ptr [rax], eax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xd0]; add rsp, 0xd8; ret; 
0x000000000048bc0f: add dword ptr [rax], eax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x000000000046498f: add dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x000000000046498f: add dword ptr [rax], eax; add byte ptr [rax], al; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x000000000040a891: add dword ptr [rax], eax; add byte ptr [rbp + 0x3f8c0fd2], al; add dword ptr [rax], eax; add bh, bh; ret 0x9189; 
0x000000000044c5d9: add dword ptr [rax], eax; add byte ptr [rbp + 0x44891a04], cl; and al, 8; ret; 
0x00000000004360b2: add dword ptr [rax], eax; add byte ptr [rbx + 0x12091], cl; add byte ptr [rcx], cl; ret 0x1f0f; 
0x000000000045b9c6: add dword ptr [rax], eax; add byte ptr [rbx + 0x9098], cl; add byte ptr [rbx - 0x6bf0fd05], al; ret; 
0x00000000004510ac: add dword ptr [rax], eax; add byte ptr [rbx + rcx*4 + 0x54], cl; ret 0x4d08; 
0x00000000004510f9: add dword ptr [rax], eax; add byte ptr [rbx + rcx*4 + 0x54], cl; ret 0x4d18; 
0x00000000004510cc: add dword ptr [rax], eax; add byte ptr [rbx + rcx*4 + 0x64], cl; ret 0x4d10; 
0x0000000000458831: add dword ptr [rax], eax; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x00000000004680a3: add dword ptr [rax], eax; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x128]; add rsp, 0x130; ret; 
0x000000000047a7ff: add dword ptr [rax], eax; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x138]; add rsp, 0x140; ret; 
0x0000000000446ba6: add dword ptr [rax], eax; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000041d10c: add dword ptr [rax], eax; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; nop; ret; 
0x000000000047c1de: add dword ptr [rax], eax; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0xd0]; add rsp, 0xd8; ret; 
0x0000000000438cb0: add dword ptr [rax], eax; add byte ptr [rcx], al; ret; 
0x00000000004360b8: add dword ptr [rax], eax; add byte ptr [rcx], cl; ret 0x1f0f; 
0x000000000042d727: add dword ptr [rax], eax; add byte ptr [rcx], dh; sal byte ptr [rcx], cl; fucomi st(3); add ecx, dword ptr [rax - 1]; ret 0x3948; 
0x0000000000461838: add dword ptr [rax], eax; add byte ptr [rdi + 9], dh; lea rax, [rip + 0x39c]; jmp rax; 
0x0000000000420390: add dword ptr [rax], eax; add byte ptr [rdi + rcx + 0x48], dh; mov dword ptr [rsp + 0x58], ecx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004652a6: add dword ptr [rax], eax; add byte ptr [rdi], cl; add eax, 0x10244489; ret; 
0x00000000004649eb: add dword ptr [rax], eax; add byte ptr [rdi], cl; add eax, 0x18244489; ret; 
0x00000000004652fb: add dword ptr [rax], eax; add byte ptr [rdi], cl; add eax, 0x20244489; ret; 
0x0000000000467ff2: add dword ptr [rax], eax; add byte ptr [rdi], cl; mov bh, 0x50; add dword ptr [rsi - 0x3f], esp; ret 0x4808; 
0x0000000000468173: add dword ptr [rax], eax; add byte ptr [rdi], cl; mov bh, 0x5b; add dword ptr [rsi - 0x3f], esp; ret; 
0x00000000004169ca: add dword ptr [rax], eax; add byte ptr [rdi], cl; mov dh, 0x5e; adc al, 0xf6; ret; 
0x0000000000482274: add dword ptr [rax], eax; add byte ptr [rdi], cl; mov edx, 0x7a7308e0; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000040606a: add dword ptr [rax], eax; add byte ptr [rdi], cl; xchg eax, esp; ret; 
0x000000000047d97c: add dword ptr [rax], eax; add dword ptr [rcx], esi; cmp rbx, rcx; jl 0x7d972; mov dword ptr [rsp + 0x28], edx; ret; 
0x000000000046139f: add dword ptr [rax], eax; add rsp, 0x10008; ret; 
0x000000000041a966: add dword ptr [rax], eax; call 0x2b1a0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004618c9: add dword ptr [rax], eax; ja 0x618d6; lea rax, [rip + 0x98c]; jmp rax; 
0x0000000000442f23: add dword ptr [rax], eax; mov eax, dword ptr [rip + 0xfe105]; mov dword ptr [rip + 0x143563], eax; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x00000000004873d4: add dword ptr [rax], eax; mov qword ptr [rsp + 0x20], rcx; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004622cb: add dword ptr [rax], eax; mov rax, qword ptr [rdx]; call rax; 
0x0000000000447114: add dword ptr [rax], eax; mov rax, qword ptr [rsp + 0x30]; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000415be3: add dword ptr [rax], eax; mov rax, qword ptr [rsp + 0x38]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000451291: add dword ptr [rax], eax; mov rax, qword ptr [rsp]; mov qword ptr [rsp + 0x18], rax; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000044640f: add dword ptr [rax], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040cf4e: add dword ptr [rax], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004499a3: add dword ptr [rax], eax; mov rbp, qword ptr [rsp + 0x1a0]; add rsp, 0x1a8; ret; 
0x000000000041fb44: add dword ptr [rax], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000446aad: add dword ptr [rax], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042f148: add dword ptr [rax], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041eb53: add dword ptr [rax], eax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000043301c: add dword ptr [rax], eax; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x00000000004459ef: add dword ptr [rax], eax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x00000000004622be: add dword ptr [rax], eax; mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x10018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004613a6: add dword ptr [rax], eax; ret; 
0x0000000000443131: add dword ptr [rax], ecx; mov qword ptr [rsp + 0x10], rdx; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000443130: add dword ptr [rax], r9d; mov qword ptr [rsp + 0x10], rdx; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000403f75: add dword ptr [rbp + 0xa], esi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000454f7c: add dword ptr [rbp + 0xa], esi; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004557c2: add dword ptr [rbp + 0xa], esi; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x00000000004567ef: add dword ptr [rbp + 0xf], esi; mov byte ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044688f: add dword ptr [rbp + 0xf], esi; mov byte ptr [rsp + 0x60], 1; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000467ba2: add dword ptr [rbp + rdi*2 - 0x48], esi; add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0x5a; xor ah, byte ptr [rsi - 9]; ret; 
0x0000000000462f88: add dword ptr [rbp - 7], esi; ret; 
0x000000000042c3aa: add dword ptr [rbx + 0x18], ebx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000430fdb: add dword ptr [rbx + rax], esp; add byte ptr [rax - 0x74b71f15], dl; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x000000000044c96a: add dword ptr [rbx + rcx*4 + 0x4a], ecx; sbb byte ptr [rbx + rcx*4 + 0x52], cl; sub byte ptr [rbp + 0x39], cl; ret 0x6f72; 
0x000000000040612e: add dword ptr [rbx], eax; sbb byte ptr [rax], al; ret; 
0x0000000000459dd6: add dword ptr [rcx + r15 - 0x3a], r9d; jg 0x59d87; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000459dd7: add dword ptr [rcx + rdi - 0x3a], ecx; jg 0x59d87; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000044158a: add dword ptr [rcx - 0x4ef00f30], ecx; mov cl, 0xf0; add eax, 0x940f0000; ret 0xd284; 
0x0000000000414937: add dword ptr [rcx - 1], ecx; ret 0x894c; 
0x000000000041fe42: add dword ptr [rcx - 9], ecx; ret; 
0x000000000044c58f: add dword ptr [rcx], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000464934: add dword ptr [rcx], eax; add byte ptr [rax], al; syscall; 
0x000000000042403a: add dword ptr [rcx], eax; add byte ptr [rcx + 0xf], al; xchg eax, esp; ret; 
0x000000000048520b: add dword ptr [rcx], edx; add al, 0; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000047d97e: add dword ptr [rcx], esi; cmp rbx, rcx; jl 0x7d972; mov dword ptr [rsp + 0x28], edx; ret; 
0x0000000000456a30: add dword ptr [rcx], esi; shr bl, cl; or byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x00000000004411a5: add dword ptr [rdi + 0x5f481], eax; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x00000000004411a4: add dword ptr [rdi + 0x5f481], r8d; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x0000000000423aa4: add dword ptr [rdi + 0xa], esi; cmp qword ptr [rcx + 0x70], rax; seta byte ptr [rsp + 0x10]; ret; 
0x000000000043e302: add dword ptr [rdi + 0xf], esi; mov byte ptr [rsp + 0x30], 1; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046195a: add dword ptr [rdi + 9], esi; lea rax, [rip + 0xffc]; jmp rax; 
0x00000000004507ee: add dword ptr [rdi + rcx - 0x51], ecx; ret 0x8d49; 
0x000000000044331b: add dword ptr [rdi + rdi*8], ebx; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000447ad2: add dword ptr [rdi - 0xc], esi; mov qword ptr [rsp + 0x10], rcx; ret; 
0x0000000000423b35: add dword ptr [rdi], ecx; xchg eax, ebp; ret 0xd284; 
0x0000000000432a90: add dword ptr [rdi], ecx; xchg eax, edx; ret 0x3de9; 
0x000000000040326e: add dword ptr [rdi], ecx; xchg eax, esp; and al, 0x18; ret; 
0x000000000048e78e: add dword ptr [rdi], ecx; xchg eax, esp; and al, 0x28; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048ea07: add dword ptr [rdi], ecx; xchg eax, esp; and al, 0x38; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042dd6e: add dword ptr [rdi], ecx; xchg eax, esp; and al, 0x48; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000041dd2b: add dword ptr [rdx + 0x10], edx; add qword ptr [r10 + 0x18], r11; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000041dd2f: add dword ptr [rdx + 0x18], ebx; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000423158: add dword ptr [rdx + rcx + 0x48], esi; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000422c6a: add dword ptr [rdx + rcx + 0x48], esi; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041f9f4: add dword ptr [rdx + rcx + 0x48], esi; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000422e77: add dword ptr [rdx + rcx + 0x48], esi; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000433b9c: add dword ptr [rdx + rcx + 0x48], esi; mov ebp, dword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000040c09b: add dword ptr [rdx], 0x58d4800; ret; 
0x00000000004042bb: add dword ptr [rdx], 0x8b480000; insb byte ptr [rdi], dx; and al, 0x78; sub rsp, -0x80; ret; 
0x0000000000477f8e: add dword ptr [rdx], 0xff3d0000; call qword ptr [rax]; 
0x000000000045b4d3: add dword ptr [rip + 0x12bbc7], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045b26d: add dword ptr [rip + 0x12be2d], eax; mov rax, qword ptr [rcx]; mov qword ptr [rip + 0x12be0b], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040acc2: add dword ptr [rip + 0x4897eb00], -0x75; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x0000000000467314: add dword ptr [rsi - 0x3f], esp; ret 0x4808; 
0x0000000000457b38: add dword ptr [rsi - 0x3f], esp; ret 0xf08; 
0x0000000000468029: add dword ptr [rsi - 0x3f], esp; ret; 
0x000000000042f147: add dword ptr ds:[rax], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004510cb: add dword ptr ss:[rax], eax; add byte ptr [rbx + rcx*4 + 0x64], cl; ret 0x4d10; 
0x0000000000451726: add eax, -2; mov byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x00000000004616f5: add eax, 0; add byte ptr [rax], al; mov qword ptr fs:[0xfffffffffffffff8], rax; mov rsp, qword ptr [rax + 0x38]; mov qword ptr [rax + 0x38], 0; ret; 
0x00000000004649cb: add eax, 0x10244489; ret; 
0x0000000000461971: add eax, 0x10ca; jmp rax; 
0x0000000000472c91: add eax, 0x11378b; ret; 
0x0000000000472c8b: add eax, 0x113df7; mov byte ptr [rip + 0x11378b], al; ret; 
0x0000000000427c69: add eax, 0x1194c2; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000461983: add eax, 0x1198; jmp rax; 
0x0000000000451a52: add eax, 0x11bd71; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046321f: add eax, 0x12365c; aesenc xmm0, xmmword ptr [rip + 0x123663]; aesenc xmm0, xmmword ptr [rip + 0x12366a]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x0000000000463228: add eax, 0x123663; aesenc xmm0, xmmword ptr [rip + 0x12366a]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x0000000000463231: add eax, 0x12366a; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x00000000004631be: add eax, 0x1236bd; aesenc xmm0, xmmword ptr [rip + 0x1236c4]; aesenc xmm0, xmmword ptr [rip + 0x1236cb]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x00000000004631c7: add eax, 0x1236c4; aesenc xmm0, xmmword ptr [rip + 0x1236cb]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x00000000004631d0: add eax, 0x1236cb; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x000000000043098b: add eax, 0x126130; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000461995: add eax, 0x1266; jmp rax; 
0x000000000045f947: add eax, 0x126b48; lea rcx, [rip + 0xe16dd]; xchg dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042f8ac: add eax, 0x127267; mov rbp, qword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x000000000045e454: add eax, 0x12808f; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045b4d4: add eax, 0x12bbc7; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045b4cd: add eax, 0x12bbd6; add qword ptr [rip + 0x12bbc7], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045b278: add eax, 0x12be0b; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045b26e: add eax, 0x12be2d; mov rax, qword ptr [rcx]; mov qword ptr [rip + 0x12be0b], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004619a7: add eax, 0x1334; jmp rax; 
0x000000000041aca5: add eax, 0x13c61e; mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x00000000004619b9: add eax, 0x1402; jmp rax; 
0x0000000000444e7e: add eax, 0x1419bd; bt eax, 0xd; jae 0x44e93; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000442f2c: add eax, 0x143563; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000044d470: add eax, 0x14d0000; ret; 
0x00000000004619cb: add eax, 0x14d0; jmp rax; 
0x0000000000438444: add eax, 0x14e0bf; xchg qword ptr [rax], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000435b4c: add eax, 0x1508d2; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000435b46: add eax, 0x150fdd; mov byte ptr [rip + 0x1508d2], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040634c: add eax, 0x1534c7; xor eax, eax; xchg dword ptr [rdx], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042fa82: add eax, 0x156a09; test eax, eax; jne 0x2fa95; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042e089: add eax, 0x1584ea; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000042ba2c: add eax, 0x15abc7; mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000426524: add eax, 0x15fe8f; mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000451a13: add eax, 0x1630; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000423ddc: add eax, 0x163df7; mov qword ptr [rsp + 0x10], rax; call 0x26d60; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000418322: add eax, 0x165681; call 0x1f0e0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000041c61b: add eax, 0x16aa28; mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000041b0e9: add eax, 0x16bede; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000041b0df: add eax, 0x16bf24; add rax, 2; mov dword ptr [rip + 0x16bede], eax; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000041ab49: add eax, 0x16c4f2; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000041ab42: add eax, 0x16e749; mov qword ptr [rip + 0x16c4f2], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000041a46a: add eax, 0x16ee29; cmp byte ptr [rip + 0x14329a], 0; jne 0x1a488; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x00000000004171cb: add eax, 0x16fe40; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000041738d: add eax, 0x17187d; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000042d8fd: add eax, 0x1748; mov qword ptr [rsp], rax; call 0x2d520; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000410a7a: add eax, 0x176cc1; mov qword ptr [rsp + 0x40], rax; mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004109c8: add eax, 0x176d73; mov qword ptr [rsp + 0x40], rax; mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004108ab: add eax, 0x176e90; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000410804: add eax, 0x176f37; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040e0cb: add eax, 0x179670; mov qword ptr [rsp + 0x58], rax; mov byte ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040dfc6: add eax, 0x179775; mov qword ptr [rsp + 0x58], rax; mov byte ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040cad7: add eax, 0x179b34; mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000040a267: add eax, 0x17d4d4; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040a1c9: add eax, 0x17d572; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040612d: add eax, 0x180301; ret; 
0x00000000004649ef: add eax, 0x18244489; ret; 
0x0000000000401a84: add eax, 0x184ff8; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000046180c: add eax, 0x1cf; jmp rax; 
0x0000000000461543: add eax, 0x1f38; ret; 
0x0000000000464994: add eax, 0x20244489; ret; 
0x0000000000403ddc: add eax, 0x24448b00; sbb al, 0x89; and al, 0x48; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000457b48: add eax, 0x244c8948; sub byte ptr [rax - 0x77], cl; and al, 0x30; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046181b: add eax, 0x260; jmp rax; 
0x0000000000464d7a: add eax, 0x28244489; ret; 
0x000000000046182d: add eax, 0x2ee; jmp rax; 
0x00000000004650e2: add eax, 0x30244489; ret; 
0x0000000000456eb0: add eax, 0x30; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000048e5e2: add eax, 0x30c23; mov qword ptr [rsp + 0x10], rax; mov qword ptr [rsp + 0x18], 0xb; ret; 
0x0000000000467257: add eax, 0x38; mov qword ptr [rsp + 0x10], rax; nop; ret; 
0x0000000000456ed3: add eax, 0x38; mov qword ptr [rsp + 0x10], rax; ret; 
0x00000000004398ae: add eax, 0x38; mov qword ptr [rsp], rax; call 0x61580; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046183f: add eax, 0x39c; jmp rax; 
0x0000000000456eba: add eax, 0x40; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000049740b: add eax, 0x40; mov qword ptr [rsp], rax; call 0x926c0; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x00000000004852ed: add eax, 0x4107e; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004852d7: add eax, 0x4108c; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048520a: add eax, 0x41101; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000485220: add eax, 0x4113b; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000485187: add eax, 0x41194; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048512d: add eax, 0x411e6; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004850d9: add eax, 0x4124a; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004850c3: add eax, 0x41268; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000485060: add eax, 0x4132b; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048504a: add eax, 0x41331; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000485034: add eax, 0x4134f; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000484fe9: add eax, 0x4136a; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000484fd3: add eax, 0x41370; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000484fa7: add eax, 0x41374; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000484fbd: add eax, 0x4138e; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000484f47: add eax, 0x413d4; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000484ea3: add eax, 0x414d0; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004840a9: add eax, 0x422ea; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000047bda8: add eax, 0x4256b; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], 4; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000047be2d: add eax, 0x427ba; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], 6; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000403151: add eax, 0x448b4800; and al, 0x18; mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x0000000000411ed0: add eax, 0x448b4800; and al, 0x28; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040d1a3: add eax, 0x448b4800; and al, 8; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000430aa5: add eax, 0x448b4801; and al, 0x18; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000461851: add eax, 0x44a; jmp rax; 
0x00000000004152a0: add eax, 0x48000006; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000430677: add eax, 0x4800032c; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004060cf: add eax, 0x4882eb00; mov dword ptr [rsp + 0x18], 0; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000040acc3: add eax, 0x4897eb00; mov ebp, dword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000456ec4: add eax, 0x48; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000045cd37: add eax, 0x48fffadd; mov ebp, dword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000490995: add eax, 0x4b7c6; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000465959: add eax, 0x4c894800; and al, 0x18; mov qword ptr [rsp + 0x20], rax; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x00000000004658a1: add eax, 0x4c894800; and al, 0x28; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000484a78: add eax, 0x4c894800; and al, 0x50; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000461863: add eax, 0x4f8; jmp rax; 
0x0000000000456edd: add eax, 0x50; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000456ef1: add eax, 0x58; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000045a524: add eax, 0x58; mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000461875: add eax, 0x5a6; jmp rax; 
0x0000000000461887: add eax, 0x654; jmp rax; 
0x000000000046045f: add eax, 0x661ec; mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000045a6cd: add eax, 0x6693a; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000045a5c6: add eax, 0x676da; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000045a72e: add eax, 0x68678; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; nop; ret; 
0x0000000000411e12: add eax, 0x6c8b4800; and al, 0x18; add rsp, 0x20; ret; 
0x0000000000403b68: add eax, 0x6c8b4800; and al, 0x28; add rsp, 0x30; ret; 
0x0000000000406a74: add eax, 0x6c8b4800; and al, 0x30; add rsp, 0x38; nop; ret; 
0x00000000004044b7: add eax, 0x6c8b4800; and al, 0x78; sub rsp, -0x80; ret; 
0x00000000004069ae: add eax, 0x6c8b4800; and al, 8; add rsp, 0x10; ret; 
0x0000000000461899: add eax, 0x722; jmp rax; 
0x0000000000441585: add eax, 0x728d0000; add dword ptr [rcx - 0x4ef00f30], ecx; mov cl, 0xf0; add eax, 0x940f0000; ret 0xd284; 
0x0000000000464ac6: add eax, 0x748bc789; and al, 8; mov eax, 0x3e; syscall; 
0x0000000000464ac6: add eax, 0x748bc789; and al, 8; mov eax, 0x3e; syscall; ret; 
0x00000000004400f8: add eax, 0x751a3948; shufps xmm0, xmmword ptr [rsp + 0x28], 0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042f4ec: add eax, 0x7540f883; or cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x000000000044310b: add eax, 0x7d76a; mov qword ptr [rsp + 0x10], rax; mov qword ptr [rsp + 0x18], 0x13; ret; 
0x00000000004618ab: add eax, 0x7f0; jmp rax; 
0x0000000000464a66: add eax, 0x8244489; ret; 
0x0000000000465358: add eax, 0x8247c8b; mov rsi, 4; mov rdx, 0x800; or edx, eax; mov eax, 0x48; syscall; 
0x0000000000485098: add eax, 0x83482676; ret 0x90f3; 
0x0000000000442f27: add eax, 0x89000fe1; add eax, 0x143563; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000464a90: add eax, 0x8944c689; out 0x8b, eax; push rsp; and al, 8; mov eax, 0xea; syscall; 
0x00000000004417d6: add eax, 0x89480000; pop rsp; and al, 0x50; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004411a9: add eax, 0x8b480000; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x0000000000451542: add eax, 0x8b480000; insb byte ptr [rdi], dx; and al, 0x50; add rsp, 0x58; ret; 
0x000000000045a4cd: add eax, 0x8b48fffb; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x00000000004944a2: add eax, 0x8b48ffff; and al, 0x18; mov rcx, qword ptr [rsp + 0x20]; mov rax, qword ptr [rax + 0xf8]; mov qword ptr [rsp], rcx; call rax; 
0x000000000043acf5: add eax, 0x8b84e; lea rdx, [rip + 0x8b847]; call rax; 
0x00000000004618bd: add eax, 0x8be; jmp rax; 
0x0000000000434abb: add eax, 0x91aa8; lea rdx, [rip + 0x91aa1]; call rax; 
0x00000000004346d7: add eax, 0x91e64; lea rdx, [rip + 0x91e5d]; call rax; 
0x0000000000418cb8: add eax, 0x930f0017; ret; 
0x0000000000441592: add eax, 0x940f0000; ret 0xd284; 
0x0000000000441286: add eax, 0x940f0000; ret; 
0x000000000042f8a5: add eax, 0x96e06; mov qword ptr [rip + 0x127267], rax; mov rbp, qword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x00000000004618cf: add eax, 0x98c; jmp rax; 
0x0000000000429550: add eax, 0x9ce4b; lea rdx, [rip + 0x9ce44]; call rax; 
0x00000000004618e1: add eax, 0xa5a; jmp rax; 
0x0000000000443c78: add eax, 0xafeb0000; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004618f3: add eax, 0xb28; jmp rax; 
0x0000000000406825: add eax, 0xbbddb; mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], 0x1d; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040679f: add eax, 0xbbe61; mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], 0x1d; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000049abc9: add eax, 0xbbe92; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000049a7f0: add eax, 0xbc473; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000461905: add eax, 0xbf6; jmp rax; 
0x000000000048fe82: add eax, 0xbfe69; mov rcx, qword ptr [rip + 0xbfe6a]; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000048df06: add eax, 0xc21bd; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048e536: add eax, 0xc5655; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000490f6f: add eax, 0xc5ea4; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000490bec: add eax, 0xc62ff; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048fe42: add eax, 0xc6e39; mov rcx, qword ptr [rip + 0xc6e3a]; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000048fe02: add eax, 0xc6e89; mov rcx, qword ptr [rip + 0xc6e8a]; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000048fdc2: add eax, 0xc6ed9; mov rcx, qword ptr [rip + 0xc6eda]; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000048fcec: add eax, 0xc7017; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048d1ca: add eax, 0xc9ab9; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000461917: add eax, 0xcc4; jmp rax; 
0x0000000000461929: add eax, 0xd92; jmp rax; 
0x0000000000464d05: add eax, 0xdc456; call rax; 
0x0000000000464c1f: add eax, 0xdc53c; call rax; 
0x0000000000472ba1: add eax, 0xe4002; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004722ee: add eax, 0xe4955; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000471806: add eax, 0xe534d; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000046193b: add eax, 0xe60; jmp rax; 
0x000000000046c624: add eax, 0xea6ff; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046c25d: add eax, 0xea8d6; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045f2d7: add eax, 0xeb000025; ret; 
0x0000000000469626: add eax, 0xed62d; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046507a: add eax, 0xf19b9; mov rbx, rsp; and rsp, 0xfffffffffffffff0; mov qword ptr [rsp], rbx; call rax; 
0x0000000000464fec: add eax, 0xf1a3f; mov rbx, rsp; and rsp, 0xfffffffffffffff0; mov qword ptr [rsp], rbx; call rax; 
0x0000000000464f34: add eax, 0xf1ae7; jmp rax; 
0x0000000000464ef4: add eax, 0xf1b27; jmp rax; 
0x0000000000464d9f: add eax, 0xf1ca4; mov rbx, rsp; and rsp, 0xfffffffffffffff0; call rax; 
0x000000000046194d: add eax, 0xf2e; jmp rax; 
0x000000000045eaeb: add eax, 0xf8000; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000046512c: add eax, 0xf88348; je 0x65138; mov dword ptr [rsp + 0x30], eax; ret; 
0x0000000000442f26: add eax, 0xfe105; mov dword ptr [rip + 0x143563], eax; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000046195f: add eax, 0xffc; jmp rax; 
0x00000000004619d4: add eax, 0xfffd3da7; jmp rax; 
0x000000000046161e: add eax, 0xfffd40dd; jmp rax; 
0x000000000046163e: add eax, 0xfffd40fd; jmp rax; 
0x0000000000464e3c: add eax, 0xfffe01ff; call rax; 
0x000000000046171a: add eax, 0xfffeae41; call rax; 
0x00000000004630ee: add eax, 0xffffcce8; dec dword ptr [rax + 0x3b]; and byte ptr [rdi + 5], dh; call 0x630c0; ret; 
0x000000000041b0e5: add eax, 2; mov dword ptr [rip + 0x16bede], eax; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x00000000004593e4: add eax, 2; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000457aad: add eax, 3; mov qword ptr [rsp + 0x10], rax; mov qword ptr [rsp + 0x18], rcx; ret; 
0x0000000000459463: add eax, 3; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000459524: add eax, 4; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004734d7: add eax, dword ptr [rax]; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x00000000004340e5: add eax, dword ptr [rax]; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x0000000000444f41: add eax, dword ptr [rax]; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x0000000000412c3a: add eax, dword ptr [rax]; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x78; sub rsp, -0x80; ret; 
0x00000000004540c5: add eax, dword ptr [rax]; add byte ptr [rax - 0x77], cl; and al, 8; mov rbx, qword ptr [rax]; mov rdx, rax; call rbx; 
0x0000000000442660: add eax, dword ptr [rax]; add byte ptr [rax - 0x79], cl; add dword ptr [rax + 0x39], ecx; ret 0x3d75; 
0x000000000045270b: add eax, dword ptr [rax]; add byte ptr [rax], al; call 0x51480; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000459635: add eax, dword ptr [rax]; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000465347: add eax, dword ptr [rax]; add byte ptr [rax], al; mov rdx, 0; mov eax, 0x48; syscall; 
0x0000000000464965: add eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x0000000000477f86: add eax, dword ptr [rax]; add byte ptr [rbx - 0x73f0df08], al; add dword ptr [rdx], 0xff3d0000; call qword ptr [rax]; 
0x0000000000433504: add eax, dword ptr [rax]; add byte ptr [rdi + 0xa], dh; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000049205b: add eax, dword ptr [rax]; add dh, al; cmp sil, r15b; xor byte ptr [rbx + rbx*8 - 0x72b6958c], al; dec dword ptr [rax + 0x39]; ret 0x860f; 
0x000000000048e5e5: add eax, dword ptr [rax]; mov qword ptr [rsp + 0x10], rax; mov qword ptr [rsp + 0x18], 0xb; ret; 
0x0000000000482171: add eax, dword ptr [rax]; mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x48], 0xe; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000406723: add eax, dword ptr [rax]; mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000430679: add eax, dword ptr [rax]; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042b4a3: add eax, dword ptr [rax]; mov rbp, qword ptr [rsp + 0x168]; add rsp, 0x170; ret; 
0x000000000042f583: add eax, dword ptr [rax]; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042565a: add eax, dword ptr [rax]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000431399: add eax, dword ptr [rax]; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042e764: add eax, dword ptr [rax]; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000041206b: add eax, dword ptr [rcx + 0x48]; mov rax, qword ptr [rax]; not rax; nop; mov qword ptr [rcx + 0x40], rax; ret; 
0x00000000004599d8: add eax, dword ptr [rcx]; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000041b0de: add eax, dword ptr [rip + 0x16bf24]; add rax, 2; mov dword ptr [rip + 0x16bede], eax; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000405685: add eax, ebp; adc eax, 0x48000000; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045b680: add eax, ebp; fidivr dword ptr [rbx - 0x74b70003]; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000045d4f2: add eax, ebp; or byte ptr [rbp - 0x74b70003], cl; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000045c4b7: add eax, ebx; and rax, r8; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046b5e2: add eax, ebx; mov qword ptr [rsp + 0x30], rax; mov qword ptr [rsp + 0x38], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000401e4b: add eax, ecx; and rax, 0x7f; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000042a73b: add eax, ecx; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000456e38: add eax, ecx; mov qword ptr [rsp + 0x30], rax; mov qword ptr [rsp + 0x38], rdx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044c3d8: add eax, ecx; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000042ef03: add eax, ecx; sar rax, 1; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000406b5a: add eax, edi; mov qword ptr [rsp + 0x68], rax; mov qword ptr [rsp + 0x70], rdx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000401c46: add eax, edx; mov dword ptr [rsp + 8], eax; mov dword ptr [rsp + 0xc], edx; ret; 
0x0000000000464ce7: add eax, edx; mov qword ptr [rsp + 0x20], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000467696: add eax, edx; mov qword ptr [rsp + 0x30], rax; mov qword ptr [rsp + 0x38], rbx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046734f: add eax, edx; mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004831c7: add eax, edx; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042a3e2: add eax, edx; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000463118: add eax, edx; mov qword ptr [rsp + 8], rax; ret; 
0x000000000041d7a0: add eax, esi; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000420e7f: add ebp, dword ptr [rax]; inc qword ptr [rdx + 0x140]; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000406254: add ebx, dword ptr [rax]; add byte ptr [rdi + 0x6c8b4801], al; and al, 0x50; add rsp, 0x58; ret; 
0x0000000000457ca3: add ebx, dword ptr [rdi + 0xf]; xchg eax, esp; and al, 0x10; ret; 
0x00000000004231a8: add ebx, ebp; cmpsd dword ptr [rsi], dword ptr [rdi]; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042c0b8: add ebx, edi; cmp r8, rbx; jae 0x2c095; mov qword ptr [rsp + 0x18], rsi; ret; 
0x00000000004287db: add ebx, esi; sub rbx, rcx; mov qword ptr [rsp + 8], rbx; mov rcx, qword ptr [rsp + 0x110]; lea rdx, [rsp + 0x110]; call rcx; 
0x00000000004489b3: add ecx, dword ptr [rax + 3]; or byte ptr [r15 + r9 - 0x4a], r8b; sub bl, ch; ret 0x8b48; 
0x0000000000452167: add ecx, dword ptr [rax - 0x73]; or byte ptr [rax - 0x77], cl; and al, 0x40; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000484084: add ecx, dword ptr [rax - 0x75]; add byte ptr [rax - 0x77], cl; and al, 0x40; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046b141: add ecx, dword ptr [rax - 0x75]; push rsp; and al, 0x58; mov rax, qword ptr [rdx]; call rax; 
0x0000000000414588: add ecx, dword ptr [rax - 0x75]; xchg eax, esp; and al, 0x80; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0x7575; 
0x00000000004419ff: add ecx, dword ptr [rax - 0x75]; xor al, 0xd8; lea rdx, [rax + rbx*8]; call rsi; 
0x0000000000457aaf: add ecx, dword ptr [rax - 0x77]; and al, 0x10; mov qword ptr [rsp + 0x18], rcx; ret; 
0x0000000000459465: add ecx, dword ptr [rax - 0x77]; and al, 0x40; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000479bac: add ecx, dword ptr [rax - 0x77]; and al, 0x50; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004433e5: add ecx, dword ptr [rax - 0x77]; ret; 
0x000000000043f4c1: add ecx, dword ptr [rax - 0x7d]; mov ebx, 0x2778; add byte ptr [rsi - 0x1c], bh; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000413be2: add ecx, dword ptr [rax - 0x7f]; ret 0xffff; 
0x000000000040d28a: add ecx, dword ptr [rax - 0x7f]; ret; 
0x0000000000412bf4: add ecx, dword ptr [rax - 1]; ret 0x3948; 
0x00000000004017d2: add ecx, dword ptr [rax - 1]; ret; 
0x000000000041e40f: add ecx, dword ptr [rbx + 0x68]; mov qword ptr [rax + 0x10], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x00000000004248f1: add ecx, dword ptr [rcx + 0x39]; fld dword ptr [rcx + 0xf]; xchg eax, edi; ret; 
0x000000000049078d: add ecx, dword ptr [rdi]; xchg eax, esp; ret; 
0x000000000040eee6: add ecx, ebp; ret 0xfffe; 
0x000000000045a1f0: add ecx, ebx; cmp rax, rcx; setb al; mov byte ptr [rsp + 0x10], al; ret; 
0x000000000042883c: add ecx, ebx; mov qword ptr [rsp + 0x140], rcx; mov qword ptr [rsp + 0x148], rax; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x0000000000448fa2: add ecx, edx; mov qword ptr [rax + 0x68], rcx; ret; 
0x00000000004286db: add ecx, edx; mov qword ptr [rsp + 0x140], rcx; mov qword ptr [rsp + 0x148], rax; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x0000000000463d6f: add edi, 0x10; movups xmm0, xmmword ptr [rsi]; add rsi, 0x10; movups xmmword ptr [rdi], xmm0; add rdi, 0x10; ret; 
0x0000000000463d7d: add edi, 0x10; ret; 
0x0000000000402212: add edi, 0x40; sub rbx, 0x40; cmp edx, 0xffff; je 0x21bd; mov byte ptr [rax], 0; ret; 
0x00000000004651ef: add edi, 8; mov rsi, rdi; mov rdi, 0x1002; mov rax, 0x9e; syscall; 
0x000000000040227c: add edi, 8; sub rbx, 8; cmp rcx, rdx; je 0x226b; mov byte ptr [rax], 0; ret; 
0x0000000000494562: add edi, dword ptr [rdi]; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x00000000004819fc: add edi, edi; add cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x58; add rsp, 0x60; ret; 
0x000000000040d016: add edi, edi; ret 0x570f; 
0x00000000004023c6: add edi, edx; mov qword ptr [r8], rdi; ret; 
0x000000000046ac8e: add edi, esi; ret 4; 
0x0000000000422b56: add edx, 4; cmp rax, rdx; ja 0x22b4e; ret; 
0x000000000040246e: add edx, edi; mov qword ptr [r8], rdx; vzeroupper; ret; 
0x0000000000463d76: add esi, 0x10; movups xmmword ptr [rdi], xmm0; add rdi, 0x10; ret; 
0x000000000047e554: add esi, dword ptr [rax + rdx + 0x31]; ror byte ptr [rax + 0x48602444], 0x8b; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x00000000004599d6: add esi, eax; add eax, dword ptr [rcx]; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000462d77: add esi, ebx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x10000000]; add rsp, 0x10000008; ret; 
0x00000000004629f7: add esi, ebx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x1000000]; add rsp, 0x1000008; ret; 
0x0000000000462677: add esi, ebx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x100000]; add rsp, 0x100008; ret; 
0x00000000004622f7: add esi, ebx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x10000]; add rsp, 0x10008; ret; 
0x0000000000461f77: add esi, ebx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x1000]; add rsp, 0x1008; ret; 
0x0000000000461c61: add esi, ebx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x100]; add rsp, 0x108; ret; 
0x0000000000462e57: add esi, ebx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x20000000]; add rsp, 0x20000008; ret; 
0x0000000000462ad7: add esi, ebx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x2000000]; add rsp, 0x2000008; ret; 
0x0000000000462757: add esi, ebx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x200000]; add rsp, 0x200008; ret; 
0x00000000004623d7: add esi, ebx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x20000]; add rsp, 0x20008; ret; 
0x0000000000462057: add esi, ebx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x2000]; add rsp, 0x2008; ret; 
0x0000000000461d21: add esi, ebx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x200]; add rsp, 0x208; ret; 
0x0000000000461a37: add esi, ebx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000462837: add esi, ebx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x400000]; add rsp, 0x400008; ret; 
0x00000000004624b7: add esi, ebx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x40000]; add rsp, 0x40008; ret; 
0x0000000000461de1: add esi, ebx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x400]; add rsp, 0x408; ret; 
0x0000000000461ad7: add esi, ebx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000462c97: add esi, ebx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x8000000]; add rsp, 0x8000008; ret; 
0x0000000000462917: add esi, ebx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x800000]; add rsp, 0x800008; ret; 
0x0000000000462597: add esi, ebx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x80000]; add rsp, 0x80008; ret; 
0x0000000000461ea1: add esi, ebx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x800]; add rsp, 0x808; ret; 
0x0000000000461b9e: add esi, ebx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000462d8a: add esp, 0x10000008; ret; 
0x0000000000462a0a: add esp, 0x1000008; ret; 
0x000000000046268a: add esp, 0x100008; ret; 
0x00000000004613a2: add esp, 0x10008; ret; 
0x0000000000461122: add esp, 0x1008; ret; 
0x000000000044d852: add esp, 0x100; ret; 
0x000000000044cba0: add esp, 0x108; ret; 
0x0000000000437d9c: add esp, 0x10; nop; ret; 
0x0000000000405ff0: add esp, 0x10; ret; 
0x0000000000406dee: add esp, 0x110; ret; 
0x0000000000480a97: add esp, 0x118; ret; 
0x0000000000458b99: add esp, 0x128; nop; ret; 
0x0000000000428656: add esp, 0x128; ret; 
0x00000000004680b0: add esp, 0x130; ret; 
0x000000000047a764: add esp, 0x140; ret; 
0x000000000047b5a3: add esp, 0x158; ret; 
0x000000000047b383: add esp, 0x160; ret; 
0x0000000000479efc: add esp, 0x168; ret; 
0x000000000042b7f9: add esp, 0x170; nop; ret; 
0x00000000004648a6: add esp, 0x170; popfq; pop rbp; ret; 
0x000000000042b4ae: add esp, 0x170; ret; 
0x000000000040719c: add esp, 0x18; nop; ret; 
0x0000000000401043: add esp, 0x18; ret; 
0x0000000000474c59: add esp, 0x190; nop; ret; 
0x00000000004745de: add esp, 0x190; ret; 
0x0000000000455512: add esp, 0x1a0; ret; 
0x00000000004499ae: add esp, 0x1a8; ret; 
0x00000000004495ce: add esp, 0x1b0; ret; 
0x0000000000419c39: add esp, 0x1b8; nop; ret; 
0x00000000004813b5: add esp, 0x1b8; ret; 
0x000000000049801a: add esp, 0x1d0; ret; 
0x0000000000462e6a: add esp, 0x20000008; ret; 
0x0000000000462aea: add esp, 0x2000008; ret; 
0x000000000046276a: add esp, 0x200008; ret; 
0x00000000004623ea: add esp, 0x20008; ret; 
0x00000000004611c2: add esp, 0x2008; ret; 
0x000000000041cb6f: add esp, 0x200; ret; 
0x000000000042e96d: add esp, 0x2028; ret; 
0x0000000000460f90: add esp, 0x208; ret; 
0x000000000040fddc: add esp, 0x20; nop; ret; 
0x0000000000402823: add esp, 0x20; ret; 
0x000000000047c8cd: add esp, 0x210; ret; 
0x000000000043df21: add esp, 0x268; ret; 
0x0000000000454ec8: add esp, 0x280; ret; 
0x0000000000401dbc: add esp, 0x28; nop; ret; 
0x0000000000401cc7: add esp, 0x28; ret; 
0x000000000045835c: add esp, 0x2c0; ret; 
0x000000000045344a: add esp, 0x2c8; ret; 
0x000000000043237c: add esp, 0x30; nop; ret; 
0x0000000000403b70: add esp, 0x30; ret; 
0x0000000000406a7c: add esp, 0x38; nop; ret; 
0x0000000000401a2b: add esp, 0x38; ret; 
0x000000000043d331: add esp, 0x3d8; ret; 
0x0000000000474ff9: add esp, 0x3f0; nop; ret; 
0x0000000000462f4a: add esp, 0x40000008; ret; 
0x0000000000462bca: add esp, 0x4000008; ret; 
0x000000000046284a: add esp, 0x400008; ret; 
0x00000000004624ca: add esp, 0x40008; ret; 
0x0000000000461262: add esp, 0x4008; ret; 
0x0000000000461010: add esp, 0x408; ret; 
0x000000000040371c: add esp, 0x40; nop; ret; 
0x0000000000402956: add esp, 0x40; ret; 
0x000000000044134d: add esp, 0x438; ret; 
0x000000000042ed3b: add esp, 0x450; ret; 
0x0000000000428b7c: add esp, 0x48; nop; ret; 
0x0000000000409321: add esp, 0x48; ret; 
0x000000000040be9c: add esp, 0x50; nop; ret; 
0x0000000000443825: add esp, 0x50; ret; 
0x000000000043f5bc: add esp, 0x58; nop; ret; 
0x0000000000403c0b: add esp, 0x58; ret; 
0x0000000000437c3c: add esp, 0x60; nop; ret; 
0x000000000041158b: add esp, 0x60; ret; 
0x000000000042e466: add esp, 0x650; ret; 
0x000000000045a73c: add esp, 0x68; nop; ret; 
0x000000000041eaa4: add esp, 0x68; ret; 
0x0000000000475948: add esp, 0x698; ret; 
0x000000000042417c: add esp, 0x70; nop; ret; 
0x0000000000403a65: add esp, 0x70; ret; 
0x00000000004503fc: add esp, 0x78; nop; ret; 
0x0000000000404b8b: add esp, 0x78; ret; 
0x0000000000462caa: add esp, 0x8000008; ret; 
0x000000000046292a: add esp, 0x800008; ret; 
0x00000000004625aa: add esp, 0x80008; ret; 
0x0000000000461302: add esp, 0x8008; ret; 
0x0000000000461090: add esp, 0x808; ret; 
0x000000000041d119: add esp, 0x88; nop; ret; 
0x000000000040574a: add esp, 0x88; ret; 
0x00000000004064eb: add esp, 0x90; ret; 
0x0000000000402c97: add esp, 0x98; ret; 
0x0000000000469ef9: add esp, 0xa0; nop; ret; 
0x000000000040b9b5: add esp, 0xa0; ret; 
0x000000000044e038: add esp, 0xa8; ret; 
0x0000000000409cc7: add esp, 0xb0; ret; 
0x00000000004274ce: add esp, 0xc0; ret; 
0x0000000000448c6c: add esp, 0xc8; ret; 
0x0000000000413d59: add esp, 0xd0; nop; ret; 
0x0000000000401623: add esp, 0xd0; ret; 
0x000000000045fdf5: add esp, 0xd8; ret; 
0x0000000000407768: add esp, 0xe0; ret; 
0x0000000000440b83: add esp, 0xe8; ret; 
0x000000000048be79: add esp, 0xf0; nop; ret; 
0x000000000048bb42: add esp, 0xf0; ret; 
0x000000000044cfcd: add esp, 0xf8; ret; 
0x000000000040607e: add esp, 8; ret; 
0x0000000000420e79: add esp, dword ptr [rax + rdx*4]; mov qword ptr [rbx + rax + 0x28], rcx; inc qword ptr [rdx + 0x140]; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044a8a9: add esp, edi; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x68; add rsp, 0x70; ret; 
0x000000000041dd2a: add qword ptr [r10 + 0x10], rdx; add qword ptr [r10 + 0x18], r11; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000041dd2e: add qword ptr [r10 + 0x18], r11; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000475955: add qword ptr [r8 - 0x7b], rcx; leave; jge 0x7596c; mov rbp, qword ptr [rsp + 0x690]; add rsp, 0x698; ret; 
0x000000000041dda5: add qword ptr [rax + 0x10], rdx; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000045240b: add qword ptr [rax + 0x1640], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000041ec95: add qword ptr [rax + 0x16b0], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000417082: add qword ptr [rax + 0x30], rdx; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000473d0b: add qword ptr [rax - 0x75], rcx; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000040fdd4: add qword ptr [rax - 0x75], rcx; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; nop; ret; 
0x0000000000410996: add qword ptr [rax - 0x75], rcx; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000040adac: add qword ptr [rax - 0x75], rcx; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x000000000043c8cf: add qword ptr [rax - 0x75], rcx; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x000000000040e1e6: add qword ptr [rax], rax; add byte ptr [rax + 0x21], cl; ret; 
0x0000000000498972: add qword ptr [rax], rax; add byte ptr [rax - 0x73], cl; push rsi; sbb byte ptr [rax - 0x77], cl; ret; 
0x0000000000458b8b: add qword ptr [rax], rax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; nop; ret; 
0x00000000004584f4: add qword ptr [rax], rax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x00000000004682ca: add qword ptr [rax], rax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x128]; add rsp, 0x130; ret; 
0x000000000047c1f5: add qword ptr [rax], rax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xd0]; add rsp, 0xd8; ret; 
0x0000000000458830: add qword ptr [rax], rax; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x00000000004680a2: add qword ptr [rax], rax; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x128]; add rsp, 0x130; ret; 
0x000000000047c1dd: add qword ptr [rax], rax; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0xd0]; add rsp, 0xd8; ret; 
0x000000000042c3a9: add qword ptr [rbx + 0x18], r11; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000045b4d2: add qword ptr [rip + 0x12bbc7], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045b26c: add qword ptr [rip + 0x12be2d], rax; mov rax, qword ptr [rcx]; mov qword ptr [rip + 0x12be0b], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000420e7e: add r13, qword ptr [rax]; inc qword ptr [rdx + 0x140]; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000475e26: add r9, qword ptr [rax - 0x77]; ret; 
0x0000000000475d8e: add r9b, byte ptr [rax - 0x77]; ret; 
0x000000000040b045: add r9b, byte ptr [rax]; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004875fe: add r9b, byte ptr [rax]; mov qword ptr [rsp + 0x50], rcx; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000451725: add rax, -2; mov byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000451a12: add rax, 0x1630; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042d8fc: add rax, 0x1748; mov qword ptr [rsp], rax; call 0x2d520; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000457b47: add rax, 0x244c8948; sub byte ptr [rax - 0x77], cl; and al, 0x30; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000456eaf: add rax, 0x30; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000467256: add rax, 0x38; mov qword ptr [rsp + 0x10], rax; nop; ret; 
0x0000000000456ed2: add rax, 0x38; mov qword ptr [rsp + 0x10], rax; ret; 
0x00000000004398ad: add rax, 0x38; mov qword ptr [rsp], rax; call 0x61580; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000456eb9: add rax, 0x40; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000049740a: add rax, 0x40; mov qword ptr [rsp], rax; call 0x926c0; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000456ec3: add rax, 0x48; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000456edc: add rax, 0x50; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000456ef0: add rax, 0x58; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000045a523: add rax, 0x58; mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000041b0e4: add rax, 2; mov dword ptr [rip + 0x16bede], eax; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x00000000004593e3: add rax, 2; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000457aac: add rax, 3; mov qword ptr [rsp + 0x10], rax; mov qword ptr [rsp + 0x18], rcx; ret; 
0x0000000000459462: add rax, 3; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000459523: add rax, 4; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000041206a: add rax, qword ptr [rcx + 0x48]; mov rax, qword ptr [rax]; not rax; nop; mov qword ptr [rcx + 0x40], rax; ret; 
0x000000000041b0dd: add rax, qword ptr [rip + 0x16bf24]; add rax, 2; mov dword ptr [rip + 0x16bede], eax; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000045c4b6: add rax, rbx; and rax, r8; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046b5e1: add rax, rbx; mov qword ptr [rsp + 0x30], rax; mov qword ptr [rsp + 0x38], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000401e4a: add rax, rcx; and rax, 0x7f; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000042a73a: add rax, rcx; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000456e37: add rax, rcx; mov qword ptr [rsp + 0x30], rax; mov qword ptr [rsp + 0x38], rdx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044c3d7: add rax, rcx; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000042ef02: add rax, rcx; sar rax, 1; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000406b59: add rax, rdi; mov qword ptr [rsp + 0x68], rax; mov qword ptr [rsp + 0x70], rdx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000464ce6: add rax, rdx; mov qword ptr [rsp + 0x20], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000467695: add rax, rdx; mov qword ptr [rsp + 0x30], rax; mov qword ptr [rsp + 0x38], rbx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046734e: add rax, rdx; mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004831c6: add rax, rdx; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042a3e1: add rax, rdx; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000463117: add rax, rdx; mov qword ptr [rsp + 8], rax; ret; 
0x000000000041d79f: add rax, rsi; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042c0b7: add rbx, rdi; cmp r8, rbx; jae 0x2c095; mov qword ptr [rsp + 0x18], rsi; ret; 
0x00000000004287da: add rbx, rsi; sub rbx, rcx; mov qword ptr [rsp + 8], rbx; mov rcx, qword ptr [rsp + 0x110]; lea rdx, [rsp + 0x110]; call rcx; 
0x000000000041e40e: add rcx, qword ptr [rbx + 0x68]; mov qword ptr [rax + 0x10], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x000000000045a1ef: add rcx, rbx; cmp rax, rcx; setb al; mov byte ptr [rsp + 0x10], al; ret; 
0x000000000042883b: add rcx, rbx; mov qword ptr [rsp + 0x140], rcx; mov qword ptr [rsp + 0x148], rax; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x0000000000448fa1: add rcx, rdx; mov qword ptr [rax + 0x68], rcx; ret; 
0x00000000004286da: add rcx, rdx; mov qword ptr [rsp + 0x140], rcx; mov qword ptr [rsp + 0x148], rax; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x0000000000463d6e: add rdi, 0x10; movups xmm0, xmmword ptr [rsi]; add rsi, 0x10; movups xmmword ptr [rdi], xmm0; add rdi, 0x10; ret; 
0x0000000000463d7c: add rdi, 0x10; ret; 
0x0000000000402211: add rdi, 0x40; sub rbx, 0x40; cmp edx, 0xffff; je 0x21bd; mov byte ptr [rax], 0; ret; 
0x00000000004651ee: add rdi, 8; mov rsi, rdi; mov rdi, 0x1002; mov rax, 0x9e; syscall; 
0x000000000040227b: add rdi, 8; sub rbx, 8; cmp rcx, rdx; je 0x226b; mov byte ptr [rax], 0; ret; 
0x00000000004023c5: add rdi, rdx; mov qword ptr [r8], rdi; ret; 
0x0000000000422b55: add rdx, 4; cmp rax, rdx; ja 0x22b4e; ret; 
0x000000000040246d: add rdx, rdi; mov qword ptr [r8], rdx; vzeroupper; ret; 
0x0000000000463d75: add rsi, 0x10; movups xmmword ptr [rdi], xmm0; add rdi, 0x10; ret; 
0x0000000000462d76: add rsi, rbx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x10000000]; add rsp, 0x10000008; ret; 
0x00000000004629f6: add rsi, rbx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x1000000]; add rsp, 0x1000008; ret; 
0x0000000000462676: add rsi, rbx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x100000]; add rsp, 0x100008; ret; 
0x00000000004622f6: add rsi, rbx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x10000]; add rsp, 0x10008; ret; 
0x0000000000461f76: add rsi, rbx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x1000]; add rsp, 0x1008; ret; 
0x0000000000461c60: add rsi, rbx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x100]; add rsp, 0x108; ret; 
0x0000000000462e56: add rsi, rbx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x20000000]; add rsp, 0x20000008; ret; 
0x0000000000462ad6: add rsi, rbx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x2000000]; add rsp, 0x2000008; ret; 
0x0000000000462756: add rsi, rbx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x200000]; add rsp, 0x200008; ret; 
0x00000000004623d6: add rsi, rbx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x20000]; add rsp, 0x20008; ret; 
0x0000000000462056: add rsi, rbx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x2000]; add rsp, 0x2008; ret; 
0x0000000000461d20: add rsi, rbx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x200]; add rsp, 0x208; ret; 
0x0000000000461a36: add rsi, rbx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000462836: add rsi, rbx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x400000]; add rsp, 0x400008; ret; 
0x00000000004624b6: add rsi, rbx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x40000]; add rsp, 0x40008; ret; 
0x0000000000461de0: add rsi, rbx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x400]; add rsp, 0x408; ret; 
0x0000000000461ad6: add rsi, rbx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000462c96: add rsi, rbx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x8000000]; add rsp, 0x8000008; ret; 
0x0000000000462916: add rsi, rbx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x800000]; add rsp, 0x800008; ret; 
0x0000000000462596: add rsi, rbx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x80000]; add rsp, 0x80008; ret; 
0x0000000000461ea0: add rsi, rbx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x800]; add rsp, 0x808; ret; 
0x0000000000461b9d: add rsi, rbx; sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000462d89: add rsp, 0x10000008; ret; 
0x0000000000462a09: add rsp, 0x1000008; ret; 
0x0000000000462689: add rsp, 0x100008; ret; 
0x00000000004613a1: add rsp, 0x10008; ret; 
0x0000000000461121: add rsp, 0x1008; ret; 
0x000000000044d851: add rsp, 0x100; ret; 
0x000000000044cb9f: add rsp, 0x108; ret; 
0x0000000000437d9b: add rsp, 0x10; nop; ret; 
0x0000000000405fef: add rsp, 0x10; ret; 
0x0000000000406ded: add rsp, 0x110; ret; 
0x0000000000480a96: add rsp, 0x118; ret; 
0x0000000000458b98: add rsp, 0x128; nop; ret; 
0x0000000000428655: add rsp, 0x128; ret; 
0x00000000004680af: add rsp, 0x130; ret; 
0x000000000047a763: add rsp, 0x140; ret; 
0x000000000047b5a2: add rsp, 0x158; ret; 
0x000000000047b382: add rsp, 0x160; ret; 
0x0000000000479efb: add rsp, 0x168; ret; 
0x000000000042b7f8: add rsp, 0x170; nop; ret; 
0x00000000004648a5: add rsp, 0x170; popfq; pop rbp; ret; 
0x000000000042b4ad: add rsp, 0x170; ret; 
0x000000000040719b: add rsp, 0x18; nop; ret; 
0x0000000000401042: add rsp, 0x18; ret; 
0x0000000000474c58: add rsp, 0x190; nop; ret; 
0x00000000004745dd: add rsp, 0x190; ret; 
0x0000000000455511: add rsp, 0x1a0; ret; 
0x00000000004499ad: add rsp, 0x1a8; ret; 
0x00000000004495cd: add rsp, 0x1b0; ret; 
0x0000000000419c38: add rsp, 0x1b8; nop; ret; 
0x00000000004813b4: add rsp, 0x1b8; ret; 
0x0000000000498019: add rsp, 0x1d0; ret; 
0x0000000000462e69: add rsp, 0x20000008; ret; 
0x0000000000462ae9: add rsp, 0x2000008; ret; 
0x0000000000462769: add rsp, 0x200008; ret; 
0x00000000004623e9: add rsp, 0x20008; ret; 
0x00000000004611c1: add rsp, 0x2008; ret; 
0x000000000041cb6e: add rsp, 0x200; ret; 
0x000000000042e96c: add rsp, 0x2028; ret; 
0x0000000000460f8f: add rsp, 0x208; ret; 
0x000000000040fddb: add rsp, 0x20; nop; ret; 
0x0000000000402822: add rsp, 0x20; ret; 
0x000000000047c8cc: add rsp, 0x210; ret; 
0x000000000043df20: add rsp, 0x268; ret; 
0x0000000000454ec7: add rsp, 0x280; ret; 
0x0000000000401dbb: add rsp, 0x28; nop; ret; 
0x0000000000401cc6: add rsp, 0x28; ret; 
0x000000000045835b: add rsp, 0x2c0; ret; 
0x0000000000453449: add rsp, 0x2c8; ret; 
0x000000000043237b: add rsp, 0x30; nop; ret; 
0x0000000000403b6f: add rsp, 0x30; ret; 
0x0000000000406a7b: add rsp, 0x38; nop; ret; 
0x0000000000401a2a: add rsp, 0x38; ret; 
0x000000000043d330: add rsp, 0x3d8; ret; 
0x0000000000474ff8: add rsp, 0x3f0; nop; ret; 
0x0000000000462f49: add rsp, 0x40000008; ret; 
0x0000000000462bc9: add rsp, 0x4000008; ret; 
0x0000000000462849: add rsp, 0x400008; ret; 
0x00000000004624c9: add rsp, 0x40008; ret; 
0x0000000000461261: add rsp, 0x4008; ret; 
0x000000000046100f: add rsp, 0x408; ret; 
0x000000000040371b: add rsp, 0x40; nop; ret; 
0x0000000000402955: add rsp, 0x40; ret; 
0x000000000044134c: add rsp, 0x438; ret; 
0x000000000042ed3a: add rsp, 0x450; ret; 
0x0000000000428b7b: add rsp, 0x48; nop; ret; 
0x0000000000409320: add rsp, 0x48; ret; 
0x000000000040be9b: add rsp, 0x50; nop; ret; 
0x0000000000406934: add rsp, 0x50; ret; 
0x000000000043f5bb: add rsp, 0x58; nop; ret; 
0x0000000000403c0a: add rsp, 0x58; ret; 
0x0000000000437c3b: add rsp, 0x60; nop; ret; 
0x000000000041158a: add rsp, 0x60; ret; 
0x000000000042e465: add rsp, 0x650; ret; 
0x000000000045a73b: add rsp, 0x68; nop; ret; 
0x000000000041eaa3: add rsp, 0x68; ret; 
0x0000000000475947: add rsp, 0x698; ret; 
0x000000000042417b: add rsp, 0x70; nop; ret; 
0x0000000000403a64: add rsp, 0x70; ret; 
0x00000000004503fb: add rsp, 0x78; nop; ret; 
0x0000000000404b8a: add rsp, 0x78; ret; 
0x0000000000462ca9: add rsp, 0x8000008; ret; 
0x0000000000462929: add rsp, 0x800008; ret; 
0x00000000004625a9: add rsp, 0x80008; ret; 
0x0000000000461301: add rsp, 0x8008; ret; 
0x000000000046108f: add rsp, 0x808; ret; 
0x000000000041d118: add rsp, 0x88; nop; ret; 
0x0000000000405749: add rsp, 0x88; ret; 
0x00000000004064ea: add rsp, 0x90; ret; 
0x0000000000402c96: add rsp, 0x98; ret; 
0x0000000000469ef8: add rsp, 0xa0; nop; ret; 
0x000000000040b9b4: add rsp, 0xa0; ret; 
0x000000000044e037: add rsp, 0xa8; ret; 
0x0000000000409cc6: add rsp, 0xb0; ret; 
0x00000000004274cd: add rsp, 0xc0; ret; 
0x0000000000448c6b: add rsp, 0xc8; ret; 
0x0000000000413d58: add rsp, 0xd0; nop; ret; 
0x0000000000401622: add rsp, 0xd0; ret; 
0x000000000045fdf4: add rsp, 0xd8; ret; 
0x0000000000407767: add rsp, 0xe0; ret; 
0x0000000000440b82: add rsp, 0xe8; ret; 
0x000000000048be78: add rsp, 0xf0; nop; ret; 
0x000000000048bb41: add rsp, 0xf0; ret; 
0x000000000044cfcc: add rsp, 0xf8; ret; 
0x000000000040607d: add rsp, 8; ret; 
0x000000000046847e: add sil, sil; ret; 
0x00000000004608be: aesenc xmm0, xmm0; movq qword ptr [rdx], xmm0; ret; 
0x000000000046321b: aesenc xmm0, xmmword ptr [rip + 0x12365c]; aesenc xmm0, xmmword ptr [rip + 0x123663]; aesenc xmm0, xmmword ptr [rip + 0x12366a]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x0000000000463224: aesenc xmm0, xmmword ptr [rip + 0x123663]; aesenc xmm0, xmmword ptr [rip + 0x12366a]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x000000000046322d: aesenc xmm0, xmmword ptr [rip + 0x12366a]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x00000000004631ba: aesenc xmm0, xmmword ptr [rip + 0x1236bd]; aesenc xmm0, xmmword ptr [rip + 0x1236c4]; aesenc xmm0, xmmword ptr [rip + 0x1236cb]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x00000000004631c3: aesenc xmm0, xmmword ptr [rip + 0x1236c4]; aesenc xmm0, xmmword ptr [rip + 0x1236cb]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x00000000004631cc: aesenc xmm0, xmmword ptr [rip + 0x1236cb]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x0000000000460892: aesenc xmm1, xmm1; aesenc xmm1, xmm1; aesenc xmm1, xmm1; movq qword ptr [rdx], xmm1; ret; 
0x0000000000460897: aesenc xmm1, xmm1; aesenc xmm1, xmm1; movq qword ptr [rdx], xmm1; ret; 
0x000000000046089c: aesenc xmm1, xmm1; movq qword ptr [rdx], xmm1; ret; 
0x0000000000460901: aesenc xmm2, xmm2; aesenc xmm3, xmm3; pxor xmm2, xmm3; movq qword ptr [rdx], xmm2; ret; 
0x00000000004608fc: aesenc xmm3, xmm3; aesenc xmm2, xmm2; aesenc xmm3, xmm3; pxor xmm2, xmm3; movq qword ptr [rdx], xmm2; ret; 
0x0000000000460906: aesenc xmm3, xmm3; pxor xmm2, xmm3; movq qword ptr [rdx], xmm2; ret; 
0x000000000046099f: aesenc xmm7, xmm7; pxor xmm4, xmm6; pxor xmm5, xmm7; pxor xmm4, xmm5; movq qword ptr [rdx], xmm4; ret; 
0x00000000004624c4: and al, 0; add byte ptr [rax + rax], al; add rsp, 0x40008; ret; 
0x00000000004612fc: and al, 0; add byte ptr [rax], 0; add rsp, 0x8008; ret; 
0x0000000000462bc4: and al, 0; add byte ptr [rax], al; add al, 0x48; add esp, 0x4000008; ret; 
0x0000000000434b13: and al, 0; add byte ptr [rax], al; add al, ch; ret; 
0x0000000000462f44: and al, 0; add byte ptr [rax], al; add rsp, 0x40000008; ret; 
0x0000000000462844: and al, 0; add byte ptr [rax], al; add rsp, 0x400008; ret; 
0x000000000046125c: and al, 0; add byte ptr [rax], al; add rsp, 0x4008; ret; 
0x0000000000497ddd: and al, 0; add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; push rax; mov qword ptr [rsp], rcx; call rdx; 
0x0000000000497faf: and al, 0; add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; xor al, 0x24; call rbx; 
0x0000000000437691: and al, 0; call 0x44b80; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000442a0d: and al, 0; je 0x42a1b; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000042ea40: and al, 0; syscall; 
0x0000000000484e15: and al, 0x10; add al, ch; ret; 
0x0000000000403887: and al, 0x10; add byte ptr [rax], 0; add al, ch; movabs rax, 0x4818246c8b480002; add esp, 0x20; ret; 
0x000000000040a731: and al, 0x10; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000048eb34: and al, 0x10; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046697f: and al, 0x10; add byte ptr [rbp - 0x42], dh; mov byte ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000452dd9: and al, 0x10; add byte ptr [rbp - 0x79], dh; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x0000000000484f68: and al, 0x10; add byte ptr [rdi], cl; xchg eax, esp; ret 0x8b48; 
0x00000000004265ec: and al, 0x10; add byte ptr [rdx + rcx + 0x48], dh; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000405683: and al, 0x10; add eax, ebp; adc eax, 0x48000000; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000407199: and al, 0x10; add rsp, 0x18; nop; ret; 
0x0000000000401040: and al, 0x10; add rsp, 0x18; ret; 
0x000000000045e838: and al, 0x10; call 0x11cc0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000423de4: and al, 0x10; call 0x26d60; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042ab04: and al, 0x10; call 0x2a180; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041fd4a: and al, 0x10; call 0x2c220; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000434551: and al, 0x10; call 0x33be0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004342ae: and al, 0x10; call 0x33be0; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000456769: and al, 0x10; call 0x34660; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000438d82: and al, 0x10; call 0x386a0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000460257: and al, 0x10; call 0x43640; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000445d4e: and al, 0x10; call 0x44a80; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x00000000004490f8: and al, 0x10; call 0x52d00; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000411e0d: and al, 0x10; call 0x64040; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004052ee: and al, 0x10; call 0x64040; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000043584b: and al, 0x10; call 0x64980; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000482dac: and al, 0x10; call 0x6b1a0; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x000000000048ac2c: and al, 0x10; call 0x8ac60; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048aab3: and al, 0x10; call rax; 
0x000000000048abb3: and al, 0x10; call rdx; 
0x000000000048ae69: and al, 0x10; call rsi; 
0x000000000045d49e: and al, 0x10; cmp byte ptr [rax], 0; jne 0x5d4ae; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000462fc8: and al, 0x10; lea rsp, [rbx - 8]; mov rbp, qword ptr [rsp - 8]; sub qword ptr [rsp], 5; mov rbx, qword ptr [rdx]; jmp rbx; 
0x0000000000493f70: and al, 0x10; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000440e5c: and al, 0x10; mov byte ptr [rsp + 0x30], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040af14: and al, 0x10; mov byte ptr [rsp + 0x38], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000467d32: and al, 0x10; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000403613: and al, 0x10; mov byte ptr [rsp + 0x60], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000401c2c: and al, 0x10; mov dword ptr [rsp + 0x14], ebx; mov dword ptr [rsp + 0x18], ecx; mov dword ptr [rsp + 0x1c], edx; ret; 
0x00000000004653a8: and al, 0x10; mov eax, 0x95; syscall; 
0x00000000004653a8: and al, 0x10; mov eax, 0x95; syscall; mov qword ptr [rsp + 0x18], rax; ret; 
0x00000000004032a3: and al, 0x10; mov eax, dword ptr [rax]; mov rcx, qword ptr [rsp + 8]; cmp dword ptr [rcx], eax; sete byte ptr [rsp + 0x18]; ret; 
0x00000000004971d6: and al, 0x10; mov ecx, dword ptr [rsp + 0x278]; mov dword ptr [rsp + 0x18], ecx; call rax; 
0x00000000004649a7: and al, 0x10; mov edx, dword ptr [rsp + 0x18]; mov eax, 0; syscall; 
0x00000000004649a7: and al, 0x10; mov edx, dword ptr [rsp + 0x18]; mov eax, 0; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000464988: and al, 0x10; mov edx, dword ptr [rsp + 0x18]; mov eax, 1; syscall; 
0x0000000000464988: and al, 0x10; mov edx, dword ptr [rsp + 0x18]; mov eax, 1; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x00000000004652e7: and al, 0x10; mov edx, dword ptr [rsp + 0x18]; mov r10d, dword ptr [rsp + 0x1c]; mov r8, 0; mov eax, 0x119; syscall; 
0x00000000004650a8: and al, 0x10; mov edx, dword ptr [rsp + 0x18]; mov rax, 0x1c; syscall; 
0x00000000004650a8: and al, 0x10; mov edx, dword ptr [rsp + 0x18]; mov rax, 0x1c; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x00000000004649e3: and al, 0x10; mov esi, dword ptr [rsp + 8]; mov eax, 0x125; syscall; 
0x00000000004649e3: and al, 0x10; mov esi, dword ptr [rsp + 8]; mov eax, 0x125; syscall; mov dword ptr [rsp + 0x18], eax; ret; 
0x000000000045e450: and al, 0x10; mov qword ptr [rip + 0x12808f], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045eae7: and al, 0x10; mov qword ptr [rip + 0xf8000], rax; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000443113: and al, 0x10; mov qword ptr [rsp + 0x18], 0x13; ret; 
0x000000000048e5ea: and al, 0x10; mov qword ptr [rsp + 0x18], 0xb; ret; 
0x000000000042f13e: and al, 0x10; mov qword ptr [rsp + 0x18], rax; call 0x43000; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000432243: and al, 0x10; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000457ab3: and al, 0x10; mov qword ptr [rsp + 0x18], rcx; ret; 
0x00000000004726f9: and al, 0x10; mov qword ptr [rsp + 0x18], rdi; call rax; 
0x00000000004941e2: and al, 0x10; mov qword ptr [rsp + 0x18], rsi; call rax; 
0x000000000040724d: and al, 0x10; mov qword ptr [rsp + 0x20], rax; ret; 
0x00000000004235e8: and al, 0x10; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000456fa4: and al, 0x10; mov qword ptr [rsp + 0x30], rax; mov qword ptr [rsp + 0x38], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004066dd: and al, 0x10; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000457c43: and al, 0x10; mov qword ptr [rsp + 0x38], rax; mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000402816: and al, 0x10; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046750e: and al, 0x10; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000414fb8: and al, 0x10; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000482156: and al, 0x10; mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040d469: and al, 0x10; mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000040680d: and al, 0x10; mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042bf7c: and al, 0x10; mov qword ptr [rsp + 0x48], rcx; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042a6c8: and al, 0x10; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048d3bc: and al, 0x10; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004268ed: and al, 0x10; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042464a: and al, 0x10; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000047d8cf: and al, 0x10; mov qword ptr [rsp + 0xb0], rax; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000402cd1: and al, 0x10; mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x0000000000464e2f: and al, 0x10; mov qword ptr [rsp + 8], rsi; mov qword ptr [rsp], rdi; lea rax, [rip - 0x1fe01]; call rax; 
0x000000000042d61b: and al, 0x10; mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000403b5f: and al, 0x10; mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004652ca: and al, 0x10; mov r10, qword ptr [rsp + 0x18]; mov eax, 0xe9; syscall; 
0x00000000004652ca: and al, 0x10; mov r10, qword ptr [rsp + 0x18]; mov eax, 0xe9; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x000000000046492c: and al, 0x10; mov r10d, dword ptr [rsp + 0x14]; mov eax, 0x101; syscall; 
0x00000000004651a8: and al, 0x10; mov rax, 0x83; syscall; 
0x0000000000465028: and al, 0x10; mov rax, 0xb; syscall; 
0x000000000047d0ad: and al, 0x10; mov rax, qword ptr [rax + 0x100]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000482594: and al, 0x10; mov rax, qword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; call rax; 
0x000000000047c5f2: and al, 0x10; mov rax, qword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; nop; call rax; 
0x0000000000485245: and al, 0x10; mov rax, qword ptr [rax + 0xe8]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000485312: and al, 0x10; mov rax, qword ptr [rax + 0xe8]; mov qword ptr [rsp], rcx; nop; call rax; 
0x00000000004356e3: and al, 0x10; mov rax, qword ptr [rax]; mov qword ptr [rsp + 0x18], rax; ret; 
0x00000000004032c3: and al, 0x10; mov rax, qword ptr [rax]; mov rcx, qword ptr [rsp + 8]; cmp qword ptr [rcx], rax; sete byte ptr [rsp + 0x18]; ret; 
0x000000000042954c: and al, 0x10; mov rax, qword ptr [rip + 0x9ce4b]; lea rdx, [rip + 0x9ce44]; call rax; 
0x000000000044c500: and al, 0x10; mov rax, qword ptr [rsp + 0x20]; lea rdx, [rsp + 0x20]; call rax; 
0x00000000004296f2: and al, 0x10; mov rax, qword ptr [rsp + 0x90]; lea rdx, [rsp + 0x90]; call rax; 
0x000000000045c5c9: and al, 0x10; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000445e1a: and al, 0x10; mov rbx, qword ptr [rdx]; nop; call rbx; 
0x0000000000401e68: and al, 0x10; mov rcx, qword ptr [rsp + 0x18]; lock cmpxchg qword ptr [rbx], rcx; sete byte ptr [rsp + 0x20]; ret; 
0x000000000045ae09: and al, 0x10; mov rcx, qword ptr [rsp + 0x18]; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004695f9: and al, 0x10; mov rcx, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax + 0x28]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000464b48: and al, 0x10; mov rdx, qword ptr [rsp + 0x18]; mov eax, 0x1b; syscall; 
0x0000000000464b27: and al, 0x10; mov rdx, qword ptr [rsp + 0x18]; mov eax, 0x26; syscall; 
0x0000000000464b27: and al, 0x10; mov rdx, qword ptr [rsp + 0x18]; mov eax, 0x26; syscall; ret; 
0x0000000000465268: and al, 0x10; mov rdx, qword ptr [rsp + 0x18]; mov eax, 0xcc; syscall; 
0x0000000000464b08: and al, 0x10; mov rdx, qword ptr [rsp + 0x18]; mov eax, 0xea; syscall; 
0x0000000000464b08: and al, 0x10; mov rdx, qword ptr [rsp + 0x18]; mov eax, 0xea; syscall; ret; 
0x0000000000464d68: and al, 0x10; mov rdx, qword ptr [rsp + 0x18]; mov r10, qword ptr [rsp + 0x20]; mov eax, 0xd; syscall; 
0x0000000000464d27: and al, 0x10; mov rdx, qword ptr [rsp + 0x18]; mov r10d, dword ptr [rsp + 0x20]; mov eax, 0xe; syscall; 
0x000000000045c5eb: and al, 0x10; mov rdx, qword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004508a4: and al, 0x10; mov rdx, qword ptr [rsp + 0x38]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000472613: and al, 0x10; mov rdx, qword ptr [rsp + 0x68]; mov qword ptr [rsp + 0x18], rdx; nop; call rax; 
0x0000000000403263: and al, 0x10; movzx eax, byte ptr [rax]; mov rcx, qword ptr [rsp + 8]; cmp byte ptr [rcx], al; sete byte ptr [rsp + 0x18]; ret; 
0x0000000000403283: and al, 0x10; movzx eax, word ptr [rax]; mov rcx, qword ptr [rsp + 8]; cmp word ptr [rcx], ax; sete byte ptr [rsp + 0x18]; ret; 
0x000000000046bf19: and al, 0x10; nop dword ptr [rax + rax]; call 0x6ba80; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000049271a: and al, 0x10; nop dword ptr [rax]; call 0x91760; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042f57c: and al, 0x10; nop; call 0x64b00; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000492f9c: and al, 0x10; nop; call 0x91760; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000048aebd: and al, 0x10; nop; call rdx; 
0x000000000046725d: and al, 0x10; nop; ret; 
0x0000000000401e54: and al, 0x10; ret; 
0x0000000000401ec7: and al, 0x10; xchg dword ptr [rbx], eax; ret; 
0x0000000000401ee8: and al, 0x10; xchg qword ptr [rbx], rax; ret; 
0x000000000046b13f: and al, 0x12; add ecx, dword ptr [rax - 0x75]; push rsp; and al, 0x58; mov rax, qword ptr [rdx]; call rax; 
0x0000000000496193: and al, 0x14; call 0x94ee0; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000438286: and al, 0x14; cmp eax, ecx; ja 0x38274; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000401c30: and al, 0x14; mov dword ptr [rsp + 0x18], ecx; mov dword ptr [rsp + 0x1c], edx; ret; 
0x0000000000464931: and al, 0x14; mov eax, 0x101; syscall; 
0x00000000004650cb: and al, 0x14; mov r10, qword ptr [rsp + 0x18]; mov r8, qword ptr [rsp + 0x20]; mov r9d, dword ptr [rsp + 0x28]; mov eax, 0xca; syscall; 
0x0000000000443118: and al, 0x18; adc eax, dword ptr [rax]; add byte ptr [rax], al; ret; 
0x00000000004628e8: and al, 0x18; add byte ptr [rax + 0x28b4800], al; call rax; 
0x0000000000462488: and al, 0x18; add byte ptr [rax + rax], al; mov rax, qword ptr [rdx]; call rax; 
0x00000000004621e8: and al, 0x18; add byte ptr [rax], 0; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462b88: and al, 0x18; add byte ptr [rax], al; add al, 0x48; mov eax, dword ptr [rdx]; call rax; 
0x000000000044c27f: and al, 0x18; add byte ptr [rax], al; add byte ptr [rax], al; mov byte ptr [rsp + 0x20], 0; ret; 
0x00000000004060d6: and al, 0x18; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000421102: and al, 0x18; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000462108: and al, 0x18; add byte ptr [rax], al; mov rax, qword ptr [rdx]; call rax; 
0x0000000000441188: and al, 0x18; add byte ptr [rcx + rax*8 + 0x48], dh; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000427c53: and al, 0x18; add byte ptr [rdi + rcx + 0x48], dh; mov dword ptr [rsp + 0x40], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000041813f: and al, 0x18; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x0000000000467ff0: and al, 0x18; add dword ptr [rax], eax; add byte ptr [rdi], cl; mov bh, 0x50; add dword ptr [rsi - 0x3f], esp; ret 0x4808; 
0x000000000040fdd9: and al, 0x18; add rsp, 0x20; nop; ret; 
0x0000000000402820: and al, 0x18; add rsp, 0x20; ret; 
0x0000000000483663: and al, 0x18; and rax, 0x1f; mov qword ptr [rsp + 0x20], rax; ret; 
0x0000000000484c14: and al, 0x18; bts rax, 7; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004487f6: and al, 0x18; call 0x39a0; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000404093: and al, 0x18; call 0x41a0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042f143: and al, 0x18; call 0x43000; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000404862: and al, 0x18; call 0x4540; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x00000000004042b8: and al, 0x18; call 0x4540; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000045a47e: and al, 0x18; call 0x4640; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000404b0e: and al, 0x18; call 0x4b20; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000452825: and al, 0x18; call 0x51480; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004927ae: and al, 0x18; call 0x91400; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000049390f: and al, 0x18; call 0x91400; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x00000000004726fe: and al, 0x18; call rax; 
0x000000000048fa36: and al, 0x18; lea rbp, [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000401e6d: and al, 0x18; lock cmpxchg qword ptr [rbx], rcx; sete byte ptr [rsp + 0x20]; ret; 
0x0000000000458da8: and al, 0x18; mov byte ptr [rsp + 0x148], al; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x000000000044c2d1: and al, 0x18; mov byte ptr [rsp + 0x20], 1; ret; 
0x00000000004655a1: and al, 0x18; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000455dff: and al, 0x18; mov byte ptr [rsp + 0x50], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045e588: and al, 0x18; mov byte ptr [rsp + 0x50], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000468999: and al, 0x18; mov byte ptr [rsp + 0x78], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000401c34: and al, 0x18; mov dword ptr [rsp + 0x1c], edx; ret; 
0x0000000000459e77: and al, 0x18; mov dword ptr [rsp + 0x1c], r15d; mov qword ptr [rsp + 0x20], r9; mov rax, qword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x0000000000459f60: and al, 0x18; mov dword ptr [rsp + 0x1c], r8d; mov qword ptr [rsp + 0x20], r9; mov rax, qword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x000000000043ffcd: and al, 0x18; mov dword ptr [rsp + 0x50], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004649ab: and al, 0x18; mov eax, 0; syscall; 
0x00000000004649ab: and al, 0x18; mov eax, 0; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000464b4d: and al, 0x18; mov eax, 0x1b; syscall; 
0x0000000000464b4d: and al, 0x18; mov eax, 0x1b; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000464b2c: and al, 0x18; mov eax, 0x26; syscall; 
0x0000000000464b2c: and al, 0x18; mov eax, 0x26; syscall; ret; 
0x000000000046526d: and al, 0x18; mov eax, 0xcc; syscall; 
0x000000000046526d: and al, 0x18; mov eax, 0xcc; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x00000000004652cf: and al, 0x18; mov eax, 0xe9; syscall; 
0x00000000004652cf: and al, 0x18; mov eax, 0xe9; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000464b0d: and al, 0x18; mov eax, 0xea; syscall; 
0x0000000000464b0d: and al, 0x18; mov eax, 0xea; syscall; ret; 
0x000000000046498c: and al, 0x18; mov eax, 1; syscall; 
0x000000000046498c: and al, 0x18; mov eax, 1; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000422ba2: and al, 0x18; mov qword ptr [rcx + 8], rax; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000045ae0e: and al, 0x18; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000438d7d: and al, 0x18; mov qword ptr [rsp + 0x10], rax; call 0x386a0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042c751: and al, 0x18; mov qword ptr [rsp + 0x20], r8; ret; 
0x0000000000412c31: and al, 0x18; mov qword ptr [rsp + 0x20], rax; call 0x12f60; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000445e7c: and al, 0x18; mov qword ptr [rsp + 0x20], rax; call 0x3dc80; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000048b2db: and al, 0x18; mov qword ptr [rsp + 0x20], rax; call 0x8ab60; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000046595e: and al, 0x18; mov qword ptr [rsp + 0x20], rax; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000467c94: and al, 0x18; mov qword ptr [rsp + 0x20], rax; ret; 
0x000000000042c73e: and al, 0x18; mov qword ptr [rsp + 0x20], rbx; ret; 
0x0000000000466e12: and al, 0x18; mov qword ptr [rsp + 0x20], rcx; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000044dd2e: and al, 0x18; mov qword ptr [rsp + 0x38], rax; mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040cddb: and al, 0x18; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042996d: and al, 0x18; mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040264f: and al, 0x18; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x00000000004024e1: and al, 0x18; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045ed45: and al, 0x18; mov qword ptr [rsp + 0x40], rcx; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000484d0a: and al, 0x18; mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], 0x16; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044726f: and al, 0x18; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x000000000044e604: and al, 0x18; mov qword ptr [rsp + 0x48], rcx; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000426971: and al, 0x18; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000044e6d5: and al, 0x18; mov qword ptr [rsp + 0x50], rcx; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004203e2: and al, 0x18; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000426141: and al, 0x18; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042a86a: and al, 0x18; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048d498: and al, 0x18; mov qword ptr [rsp + 0x60], rcx; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000430aaa: and al, 0x18; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000403156: and al, 0x18; mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x0000000000456d5d: and al, 0x18; mov qword ptr [rsp + 8], rcx; mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; 
0x00000000004344c0: and al, 0x18; mov qword ptr [rsp], rax; call 0x34380; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000040b0f1: and al, 0x18; mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000040aa20: and al, 0x18; mov qword ptr [rsp], rax; call 0xb0e0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000043aced: and al, 0x18; mov qword ptr [rsp], rax; mov rax, qword ptr [rip + 0x8b84e]; lea rdx, [rip + 0x8b847]; call rax; 
0x0000000000464d6d: and al, 0x18; mov r10, qword ptr [rsp + 0x20]; mov eax, 0xd; syscall; 
0x0000000000464d6d: and al, 0x18; mov r10, qword ptr [rsp + 0x20]; mov eax, 0xd; syscall; mov dword ptr [rsp + 0x28], eax; ret; 
0x00000000004652eb: and al, 0x18; mov r10d, dword ptr [rsp + 0x1c]; mov r8, 0; mov eax, 0x119; syscall; 
0x0000000000464f6c: and al, 0x18; mov r10d, dword ptr [rsp + 0x1c]; mov r8d, dword ptr [rsp + 0x20]; mov r9d, dword ptr [rsp + 0x24]; mov eax, 9; syscall; 
0x0000000000464d2c: and al, 0x18; mov r10d, dword ptr [rsp + 0x20]; mov eax, 0xe; syscall; 
0x00000000004650d0: and al, 0x18; mov r8, qword ptr [rsp + 0x20]; mov r9d, dword ptr [rsp + 0x28]; mov eax, 0xca; syscall; 
0x000000000046511a: and al, 0x18; mov r9, qword ptr [rsp + 0x20]; mov r12, qword ptr [rsp + 0x28]; mov eax, 0x38; syscall; 
0x00000000004650ac: and al, 0x18; mov rax, 0x1c; syscall; 
0x00000000004650ac: and al, 0x18; mov rax, 0x1c; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x00000000004695fe: and al, 0x18; mov rax, qword ptr [rax + 0x28]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000406a57: and al, 0x18; mov rax, qword ptr [rdx]; call rax; 
0x0000000000407248: and al, 0x18; mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x20], rax; ret; 
0x000000000044c4b4: and al, 0x18; mov rax, qword ptr [rsp + 0x20]; lea rdx, [rsp + 0x20]; call rax; 
0x000000000048abfb: and al, 0x18; mov rax, qword ptr [rsp + 0x28]; mov rcx, qword ptr [rax + 0x18]; mov rdx, qword ptr [rsp + 0x30]; mov qword ptr [rsp], rdx; call rcx; 
0x000000000048537f: and al, 0x18; mov rax, qword ptr [rsp + 0x38]; mov rax, qword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x40]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004855bf: and al, 0x18; mov rax, qword ptr [rsp + 0x40]; mov rax, qword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x48]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004181a0: and al, 0x18; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000406077: and al, 0x18; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000045a349: and al, 0x18; mov rcx, qword ptr [rsp + 0x20]; mov dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045ae88: and al, 0x18; mov rcx, qword ptr [rsp + 0x20]; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000486228: and al, 0x18; mov rcx, qword ptr [rsp + 0x20]; mov rax, qword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; call rax; 
0x000000000048493f: and al, 0x18; mov rcx, qword ptr [rsp + 0x20]; mov rax, qword ptr [rax + 0xf8]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004983cc: and al, 0x18; mov rcx, qword ptr [rsp + 0x20]; mov rax, qword ptr [rax + 0xf8]; mov qword ptr [rsp], rcx; nop; call rax; 
0x000000000045d2ea: and al, 0x18; mov rcx, qword ptr [rsp + 0x40]; mov byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000048df4d: and al, 0x18; mov rdx, qword ptr [rsp + 0x20]; mov rax, qword ptr [rsp + 8]; syscall; 
0x000000000048fa3b: and al, 0x18; mov rdx, qword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000405197: and al, 0x18; mov rdx, qword ptr [rsp + 0x48]; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000042e26c: and al, 0x18; neg eax; mov dword ptr [rsp + 0x50], eax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004529b9: and al, 0x18; nop dword ptr [rax + rax]; call 0x51480; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040427c: and al, 0x18; nop; call 0x4540; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000047261d: and al, 0x18; nop; call rax; 
0x000000000046571d: and al, 0x18; nop; ret; 
0x000000000048e5ef: and al, 0x18; or eax, dword ptr [rax]; add byte ptr [rax], al; ret; 
0x0000000000403272: and al, 0x18; ret; 
0x0000000000442fb8: and al, 0x18; test rax, rax; je 0x42fc5; mov dword ptr [rax], 0; mov dword ptr [rsp + 0x20], 0x7fffffff; ret; 
0x0000000000442fd1: and al, 0x18; test rax, rax; je 0x42fda; mov dword ptr [rax], edx; mov dword ptr [rsp + 0x20], ebx; ret; 
0x0000000000403de0: and al, 0x1c; mov dword ptr [rsp + 0x48], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000459e7c: and al, 0x1c; mov qword ptr [rsp + 0x20], r9; mov rax, qword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x00000000004652f0: and al, 0x1c; mov r8, 0; mov eax, 0x119; syscall; 
0x00000000004652f0: and al, 0x1c; mov r8, 0; mov eax, 0x119; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000464f71: and al, 0x1c; mov r8d, dword ptr [rsp + 0x20]; mov r9d, dword ptr [rsp + 0x24]; mov eax, 9; syscall; 
0x0000000000401c38: and al, 0x1c; ret; 
0x000000000045ba75: and al, 0x1d; test al, al; jne 0x5ba85; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040afbd: and al, 0x1f; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043b434: and al, 0x1f; mov byte ptr [rsp + 0x70], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000453e71: and al, 0x20; add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; ret; 
0x000000000043ca69: and al, 0x20; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000441bd1: and al, 0x20; add byte ptr [rax - 0x75], cl; sub al, 0x24; add rsp, 8; ret; 
0x00000000004096b9: and al, 0x20; add byte ptr [rax], al; add byte ptr [rax], al; nop; ret; 
0x000000000043ca5a: and al, 0x20; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x00000000004804c2: and al, 0x20; add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret; 
0x00000000004651ec: and al, 0x20; add rdi, 8; mov rsi, rdi; mov rdi, 0x1002; mov rax, 0x9e; syscall; 
0x0000000000401db9: and al, 0x20; add rsp, 0x28; nop; ret; 
0x0000000000401cc4: and al, 0x20; add rsp, 0x28; ret; 
0x000000000042f43d: and al, 0x20; bt eax, 0x1b; jae 0x2f44f; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000412c36: and al, 0x20; call 0x12f60; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000445e81: and al, 0x20; call 0x3dc80; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000048b2e0: and al, 0x20; call 0x8ab60; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000044c470: and al, 0x20; call rax; 
0x00000000004310b6: and al, 0x20; cmp byte ptr [rsp + 0x28], 0; je 0x3111a; mov rax, qword ptr [rax + 0x18]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000423200: and al, 0x20; cmp qword ptr [rax + 0x10], 0; je 0x23213; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000423260: and al, 0x20; cmp qword ptr [rax + 0x10], 0; jne 0x23273; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043e42c: and al, 0x20; cmp qword ptr [rax + 0x40], 0; je 0x3e43f; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000460364: and al, 0x20; cmp rax, 0x20; jne 0x60376; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000461802: and al, 0x20; cmp rcx, 0x20; ja 0x61813; lea rax, [rip + 0x1cf]; jmp rax; 
0x000000000044c45c: and al, 0x20; lea rax, [rsp + 0x40]; mov qword ptr [rsp + 0x28], rax; mov rax, qword ptr [rsp + 0x20]; lea rdx, [rsp + 0x20]; call rax; 
0x000000000044c46b: and al, 0x20; lea rdx, [rsp + 0x20]; call rax; 
0x000000000045a34e: and al, 0x20; mov dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000464c02: and al, 0x20; mov dword ptr [rsp + 0x28], edx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000464d72: and al, 0x20; mov eax, 0xd; syscall; 
0x0000000000464d72: and al, 0x20; mov eax, 0xd; syscall; mov dword ptr [rsp + 0x28], eax; ret; 
0x0000000000464d31: and al, 0x20; mov eax, 0xe; syscall; 
0x000000000045ae8d: and al, 0x20; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044807f: and al, 0x20; mov qword ptr [rdx + rax + 0x460], rcx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000041510d: and al, 0x20; mov qword ptr [rdx + rcx*8 + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040774d: and al, 0x20; mov qword ptr [rsp + 0x100], rax; mov qword ptr [rsp + 0x108], rcx; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000045089f: and al, 0x20; mov qword ptr [rsp + 0x10], rax; mov rdx, qword ptr [rsp + 0x38]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000480a7c: and al, 0x20; mov qword ptr [rsp + 0x128], rax; mov qword ptr [rsp + 0x130], rcx; mov rbp, qword ptr [rsp + 0x110]; add rsp, 0x118; ret; 
0x00000000004873d9: and al, 0x20; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042a9dd: and al, 0x20; mov qword ptr [rsp + 0x28], rax; ret; 
0x0000000000441ab4: and al, 0x20; mov qword ptr [rsp + 0x28], rbx; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000042aa0a: and al, 0x20; mov qword ptr [rsp + 0x28], rsi; ret; 
0x00000000004204f7: and al, 0x20; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000466b3d: and al, 0x20; mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042df93: and al, 0x20; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000046bd75: and al, 0x20; mov qword ptr [rsp + 0x48], rax; mov byte ptr [rsp + 0x50], 1; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048f13e: and al, 0x20; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045be4b: and al, 0x20; mov qword ptr [rsp + 0x50], rax; mov byte ptr [rsp + 0x58], 1; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042a657: and al, 0x20; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040a06c: and al, 0x20; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040cd1b: and al, 0x20; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000415a81: and al, 0x20; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000045c5ff: and al, 0x20; mov qword ptr [rsp + 0x58], rax; mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000451c37: and al, 0x20; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000044b3cf: and al, 0x20; mov qword ptr [rsp + 0x68], rcx; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000483591: and al, 0x20; mov qword ptr [rsp + 0x70], rax; mov qword ptr [rsp + 0x78], rcx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000045190f: and al, 0x20; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x000000000045f2fa: and al, 0x20; mov qword ptr [rsp + 8], rax; call 0x3c200; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043ac4c: and al, 0x20; mov qword ptr [rsp], rax; mov rcx, qword ptr [rip + 0x8b8ef]; lea rdx, [rip + 0x8b8e8]; call rcx; 
0x000000000048dfb2: and al, 0x20; mov r10, qword ptr [rsp + 0x28]; mov r8, qword ptr [rsp + 0x30]; mov r9, qword ptr [rsp + 0x38]; mov rax, qword ptr [rsp + 8]; syscall; 
0x000000000046511f: and al, 0x20; mov r12, qword ptr [rsp + 0x28]; mov eax, 0x38; syscall; 
0x0000000000464f76: and al, 0x20; mov r9d, dword ptr [rsp + 0x24]; mov eax, 9; syscall; 
0x00000000004650d5: and al, 0x20; mov r9d, dword ptr [rsp + 0x28]; mov eax, 0xca; syscall; 
0x00000000004650d5: and al, 0x20; mov r9d, dword ptr [rsp + 0x28]; mov eax, 0xca; syscall; mov dword ptr [rsp + 0x30], eax; ret; 
0x00000000004997ef: and al, 0x20; mov rax, qword ptr [rax + 0x50]; mov qword ptr [rsp], rcx; mov rcx, qword ptr [rsp + 0xc8]; mov qword ptr [rsp + 8], rcx; call rax; 
0x000000000048622d: and al, 0x20; mov rax, qword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000484944: and al, 0x20; mov rax, qword ptr [rax + 0xf8]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004983d1: and al, 0x20; mov rax, qword ptr [rax + 0xf8]; mov qword ptr [rsp], rcx; nop; call rax; 
0x000000000041d495: and al, 0x20; mov rax, qword ptr [rdx]; call rax; 
0x0000000000459e81: and al, 0x20; mov rax, qword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x000000000048df52: and al, 0x20; mov rax, qword ptr [rsp + 8]; syscall; 
0x000000000040da57: and al, 0x20; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004636f7: and al, 0x20; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000441bc4: and al, 0x20; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000045a27b: and al, 0x20; mov rcx, qword ptr [rsp + 0x28]; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000045c108: and al, 0x20; mov rcx, qword ptr [rsp + 0x40]; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000046892f: and al, 0x20; mov rcx, qword ptr [rsp + 0x60]; mov rdx, qword ptr [rcx + 0x38]; mov rbx, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rbx; call rdx; 
0x0000000000405e41: and al, 0x20; mov rdx, qword ptr [rsp + 0x50]; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000464dd1: and al, 0x20; push rbp; mov rbp, rsp; and rsp, 0xfffffffffffffff0; call rax; 
0x00000000004017e8: and al, 0x20; ret; 
0x000000000040395f: and al, 0x20; xchg qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000464f7b: and al, 0x24; mov eax, 9; syscall; 
0x0000000000465000: and al, 0x24; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004111ef: and al, 0x24; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; call rax; 
0x000000000046508e: and al, 0x24; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004922dd: and al, 0x25; mov rcx, qword ptr [rsp + 0x48]; mov byte ptr [rcx + 0xe], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004920bd: and al, 0x26; mov rcx, qword ptr [rsp + 0x48]; mov byte ptr [rcx + 0xe], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000403ed6: and al, 0x28; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000432627: and al, 0x28; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x00000000004415a3: and al, 0x28; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x0000000000441ce4: and al, 0x28; add byte ptr [rax - 0x75], cl; sub al, 0x24; add rsp, 8; ret; 
0x0000000000464f95: and al, 0x28; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x30], rax; ret; 
0x000000000043ac72: and al, 0x28; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x00000000004310ba: and al, 0x28; add byte ptr [rbx + rbx*2 + 0x48], dh; mov eax, dword ptr [rax + 0x18]; mov qword ptr [rsp], rcx; call rax; 
0x000000000045b0b8: and al, 0x28; add byte ptr [rdx + rcx + 0x48], dh; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000403ec7: and al, 0x28; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x00000000004326f7: and al, 0x28; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x0000000000405fe7: and al, 0x28; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x000000000044c3d5: and al, 0x28; add rax, rcx; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000432379: and al, 0x28; add rsp, 0x30; nop; ret; 
0x0000000000403b6d: and al, 0x28; add rsp, 0x30; ret; 
0x00000000004994f1: and al, 0x28; call 0x97ca0; mov rbp, qword ptr [rsp + 0x1c8]; add rsp, 0x1d0; ret; 
0x000000000045ad60: and al, 0x28; cmp byte ptr [rax], 0; je 0x5ad71; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041b4a6: and al, 0x28; cmp rsi, rcx; jl 0x1b442; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000045b467: and al, 0x28; mov byte ptr [rax], 1; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004692a0: and al, 0x28; mov byte ptr [rsp + 0xe8], al; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x000000000047f16b: and al, 0x28; mov byte ptr [rsp + 0xf0], al; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x0000000000465124: and al, 0x28; mov eax, 0x38; syscall; 
0x00000000004650da: and al, 0x28; mov eax, 0xca; syscall; 
0x00000000004650da: and al, 0x28; mov eax, 0xca; syscall; mov dword ptr [rsp + 0x30], eax; ret; 
0x000000000045a280: and al, 0x28; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000471802: and al, 0x28; mov qword ptr [rip + 0xe534d], rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000048aaae: and al, 0x28; mov qword ptr [rsp + 0x10], rcx; call rax; 
0x0000000000407025: and al, 0x28; mov qword ptr [rsp + 0x120], rax; mov qword ptr [rsp + 0x128], rcx; mov rbp, qword ptr [rsp + 0x108]; add rsp, 0x110; ret; 
0x000000000041d490: and al, 0x28; mov qword ptr [rsp + 0x20], rcx; mov rax, qword ptr [rdx]; call rax; 
0x0000000000464fa4: and al, 0x28; mov qword ptr [rsp + 0x30], 0; ret; 
0x000000000046744c: and al, 0x28; mov qword ptr [rsp + 0x30], rax; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046772f: and al, 0x28; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; nop; ret; 
0x000000000040b04b: and al, 0x28; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000498005: and al, 0x28; mov qword ptr [rsp + 0x30], rcx; call 0x95800; mov rbp, qword ptr [rsp + 0x1c8]; add rsp, 0x1d0; ret; 
0x0000000000473708: and al, 0x28; mov qword ptr [rsp + 0x30], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048df86: and al, 0x28; mov qword ptr [rsp + 0x30], rdx; mov qword ptr [rsp + 0x38], 0; call 0x5f320; ret; 
0x00000000004671c3: and al, 0x28; mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048d2ed: and al, 0x28; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000414eff: and al, 0x28; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000481e5e: and al, 0x28; mov qword ptr [rsp + 0x58], rax; mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000041fc7d: and al, 0x28; mov qword ptr [rsp + 0x58], rcx; mov dword ptr [rsp + 0x60], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000450f1b: and al, 0x28; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000411ed5: and al, 0x28; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004373e0: and al, 0x28; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000401031: and al, 0x28; mov qword ptr [rsp + 8], rax; call 0x1060; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045e9e9: and al, 0x28; mov qword ptr [rsp + 8], rax; call 0x11f80; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000415ef2: and al, 0x28; mov qword ptr [rsp + 8], rax; call 0x3b00; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000456c9b: and al, 0x28; mov qword ptr [rsp + 8], rcx; mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; 
0x0000000000425720: and al, 0x28; mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000434743: and al, 0x28; mov qword ptr [rsp], rax; mov rcx, qword ptr [rip + 0x91df0]; lea rdx, [rip + 0x91de9]; call rcx; 
0x000000000046305c: and al, 0x28; mov qword ptr fs:[0xfffffffffffffff8], rdi; mov rsp, rsi; mov dword ptr [rsp + 0x18], eax; ret; 
0x00000000004636f2: and al, 0x28; mov r15, qword ptr [rsp + 0x20]; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000048dfb7: and al, 0x28; mov r8, qword ptr [rsp + 0x30]; mov r9, qword ptr [rsp + 0x38]; mov rax, qword ptr [rsp + 8]; syscall; 
0x000000000048371b: and al, 0x28; mov rax, qword ptr [rax + 0x40]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040a56b: and al, 0x28; mov rax, qword ptr [rdx]; call rax; 
0x0000000000465076: and al, 0x28; mov rax, qword ptr [rip + 0xf19b9]; mov rbx, rsp; and rsp, 0xfffffffffffffff0; mov qword ptr [rsp], rbx; call rax; 
0x000000000044c466: and al, 0x28; mov rax, qword ptr [rsp + 0x20]; lea rdx, [rsp + 0x20]; call rax; 
0x0000000000486c9f: and al, 0x28; mov rax, qword ptr [rsp + 0x50]; mov rax, qword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rcx; call rax; 
0x000000000040d0e0: and al, 0x28; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004235ed: and al, 0x28; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042dc9f: and al, 0x28; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000441cd1: and al, 0x28; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000048ac00: and al, 0x28; mov rcx, qword ptr [rax + 0x18]; mov rdx, qword ptr [rsp + 0x30]; mov qword ptr [rsp], rdx; call rcx; 
0x000000000040395a: and al, 0x28; mov rcx, qword ptr [rsp + 0x20]; xchg qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000463046: and al, 0x28; mov rdi, rbx; mov rcx, rbx; call rax; 
0x0000000000463090: and al, 0x28; mov rsp, rsi; mov dword ptr [rsp + 0x18], eax; ret; 
0x000000000042a9e2: and al, 0x28; ret; 
0x000000000042e83e: and al, 0x28; test eax, eax; jl 0x2e84e; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004733c4: and al, 0x28; test rax, rax; jge 0x733d5; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000041e0e4: and al, 0x28; test rax, rax; jne 0x1e0f5; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000045f188: and al, 0x28; test rax, rax; jne 0x5f199; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000041529d: and al, 0x28; xchg dword ptr [rcx + 0x6c0], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000442957: and al, 0x2b; jmp qword ptr [rsi + 0xf]; 
0x00000000004600b3: and al, 0x2c; mov dword ptr [rsp + 0x48], eax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000412798: and al, 0x2c; mov dword ptr [rsp + 0x4c], eax; mov qword ptr [rsp + 0x50], r9; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000491c9d: and al, 0x2f; mov rcx, qword ptr [rsp + 0x70]; mov byte ptr [rcx + 0xe], al; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000040b06b: and al, 0x30; add al, 0; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000047d3b1: and al, 0x30; add al, byte ptr [rax]; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x1a0]; add rsp, 0x1a8; ret; 
0x000000000047d395: and al, 0x30; add al, byte ptr [rax]; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x1a0]; add rsp, 0x1a8; ret; 
0x000000000043e31e: and al, 0x30; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000041c449: and al, 0x30; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000464fa9: and al, 0x30; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000045ea87: and al, 0x30; add byte ptr [rdx + rcx + 0x48], bh; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043e307: and al, 0x30; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000041c487: and al, 0x30; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000406a79: and al, 0x30; add rsp, 0x38; nop; ret; 
0x0000000000401a28: and al, 0x30; add rsp, 0x38; ret; 
0x000000000049800a: and al, 0x30; call 0x95800; mov rbp, qword ptr [rsp + 0x1c8]; add rsp, 0x1d0; ret; 
0x000000000043e24c: and al, 0x30; cmp dword ptr [rip + 0x148367], 0; jne 0x3e261; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004102e8: and al, 0x30; cmp qword ptr [rax + 0x18], 0; jne 0x102fb; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000410ea8: and al, 0x30; cmp qword ptr [rax + 0x18], 0; jne 0x10ebb; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000411808: and al, 0x30; cmp qword ptr [rax + 0x18], 0; jne 0x1181b; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040f428: and al, 0x30; cmp qword ptr [rax + 0x18], 0; jne 0xf43b; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000438440: and al, 0x30; lea rax, [rip + 0x14e0bf]; xchg qword ptr [rax], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000044ec88: and al, 0x30; mov dword ptr [rsp + 0x78], eax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040ee4b: and al, 0x30; mov qword ptr [rdx + 0x58], rax; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000042e085: and al, 0x30; mov qword ptr [rip + 0x1584ea], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000048c653: and al, 0x30; mov qword ptr [rsp + 0x128], rax; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x0000000000404b09: and al, 0x30; mov qword ptr [rsp + 0x18], rax; call 0x4b20; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048df8b: and al, 0x30; mov qword ptr [rsp + 0x38], 0; call 0x5f320; ret; 
0x000000000048fa70: and al, 0x30; mov qword ptr [rsp + 0x38], rax; mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000467451: and al, 0x30; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000408ec8: and al, 0x30; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042bdcb: and al, 0x30; mov qword ptr [rsp + 0x38], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046769b: and al, 0x30; mov qword ptr [rsp + 0x38], rbx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000456e51: and al, 0x30; mov qword ptr [rsp + 0x38], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000408eea: and al, 0x30; mov qword ptr [rsp + 0x38], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000456e3d: and al, 0x30; mov qword ptr [rsp + 0x38], rdx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000466bed: and al, 0x30; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040721b: and al, 0x30; mov qword ptr [rsp + 0x58], rax; mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004908fd: and al, 0x30; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000042e59c: and al, 0x30; mov qword ptr [rsp + 0x660], rax; mov rbp, qword ptr [rsp + 0x648]; add rsp, 0x650; ret; 
0x0000000000460559: and al, 0x30; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000447119: and al, 0x30; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000043462d: and al, 0x30; mov qword ptr [rsp], rax; call 0x34380; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043b5f1: and al, 0x30; mov qword ptr [rsp], rcx; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; nop; call rax; 
0x000000000048ac09: and al, 0x30; mov qword ptr [rsp], rdx; call rcx; 
0x00000000004636ed: and al, 0x30; mov r14, qword ptr [rsp + 0x28]; mov r15, qword ptr [rsp + 0x20]; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000048dfbc: and al, 0x30; mov r9, qword ptr [rsp + 0x38]; mov rax, qword ptr [rsp + 8]; syscall; 
0x0000000000483792: and al, 0x30; mov rax, qword ptr [rax + 8]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048402f: and al, 0x30; mov rax, qword ptr [rax]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000464d9b: and al, 0x30; mov rax, qword ptr [rip + 0xf1ca4]; mov rbx, rsp; and rsp, 0xfffffffffffffff0; call rax; 
0x0000000000467734: and al, 0x30; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; nop; ret; 
0x000000000040b050: and al, 0x30; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004066e2: and al, 0x30; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004172af: and al, 0x30; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004148db: and al, 0x30; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000046896d: and al, 0x30; mov rcx, qword ptr [rsp + 0x60]; mov rcx, qword ptr [rcx + 0x60]; mov rdx, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000464f9e: and al, 0x30; ret; 
0x0000000000405a91: and al, 0x30; test rax, rax; setne byte ptr [rsp + 0xa9]; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000451f55: and al, 0x34; mov dword ptr [rsp + 0x78], eax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000042eda7: and al, 0x34; test eax, eax; jge 0x2edbd; mov rbp, qword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x0000000000494eb7: and al, 0x37; mov rcx, qword ptr [rsp + 0x48]; mov byte ptr [rcx + 0x4c], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000496e35: and al, 0x38; add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; or al, 0x24; nop; call rax; 
0x000000000046bb4a: and al, 0x38; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x00000000004237ef: and al, 0x38; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000048df90: and al, 0x38; add byte ptr [rax], al; add byte ptr [rax], al; call 0x5f320; ret; 
0x000000000046bc3c: and al, 0x38; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000045bbbf: and al, 0x38; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000046abde: and al, 0x38; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000041ec93: and al, 0x38; add qword ptr [rax + 0x16b0], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004593e1: and al, 0x38; add rax, 2; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000459460: and al, 0x38; add rax, 3; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000459521: and al, 0x38; add rax, 4; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000403719: and al, 0x38; add rsp, 0x40; nop; ret; 
0x0000000000402953: and al, 0x38; add rsp, 0x40; ret; 
0x0000000000483dd1: and al, 0x38; bts rax, 7; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048df7b: and al, 0x38; call 0x5f320; ret; 
0x000000000041c642: and al, 0x38; lea rcx, [rip + 0x16a53d]; lock xadd qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004735bf: and al, 0x38; mov byte ptr [rsp + 0x40], sil; mov qword ptr [rsp + 0x48], rbx; mov qword ptr [rsp + 0x50], rcx; mov byte ptr [rsp + 0x58], sil; ret; 
0x000000000044f12e: and al, 0x38; mov dword ptr [rsp + 0x3c], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042d9e0: and al, 0x38; mov dword ptr [rsp + 0x3c], edx; mov dword ptr [rsp + 0x40], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044ee15: and al, 0x38; mov dword ptr [rsp + 0x70], eax; mov qword ptr [rsp + 0x78], rcx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000045e833: and al, 0x38; mov qword ptr [rsp + 0x10], rax; call 0x11cc0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042aaff: and al, 0x38; mov qword ptr [rsp + 0x10], rax; call 0x2a180; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000456764: and al, 0x38; mov qword ptr [rsp + 0x10], rax; call 0x34660; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000460252: and al, 0x38; mov qword ptr [rsp + 0x10], rax; call 0x43640; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004605d3: and al, 0x38; mov qword ptr [rsp + 0x10], rax; call 0x64040; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046064f: and al, 0x38; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x000000000044dcfe: and al, 0x38; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045c548: and al, 0x38; mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048fa75: and al, 0x38; mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044dd33: and al, 0x38; mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000483dfc: and al, 0x38; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000484af6: and al, 0x38; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044bc88: and al, 0x38; mov qword ptr [rsp + 0x60], rax; mov qword ptr [rsp + 0x68], rcx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000415be8: and al, 0x38; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000428bdd: and al, 0x38; mov qword ptr [rsp + 0x60], rcx; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000490736: and al, 0x38; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004820c3: and al, 0x38; mov qword ptr [rsp + 0xa0], rcx; mov qword ptr [rsp + 0xa8], rax; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000040cf44: and al, 0x38; mov qword ptr [rsp + 8], rax; call 0x2b300; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000436f06: and al, 0x38; mov qword ptr [rsp + 8], rax; call 0x36d40; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043b9a9: and al, 0x38; mov qword ptr [rsp], rax; call 0x3b700; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000467cf6: and al, 0x38; mov qword ptr [rsp], rdx; call rcx; 
0x000000000047d9d9: and al, 0x38; mov qword ptr [rsp], rdx; nop; call rcx; 
0x000000000040fc64: and al, 0x38; mov qword ptr [rsp], rsi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000040fe30: and al, 0x38; mov qword ptr [rsp], rsi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; nop; call rbx; 
0x0000000000485384: and al, 0x38; mov rax, qword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x40]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000483f13: and al, 0x38; mov rax, qword ptr [rax + 0x40]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004508a9: and al, 0x38; mov rax, qword ptr [rdx]; call rax; 
0x000000000048dfc1: and al, 0x38; mov rax, qword ptr [rsp + 8]; syscall; 
0x000000000042492f: and al, 0x38; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045efd4: and al, 0x38; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; nop; ret; 
0x000000000040281b: and al, 0x38; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000408ecd: and al, 0x38; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000414fbd: and al, 0x38; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000464e5a: and al, 0x38; mov rbx, qword ptr [rsp + 0x40]; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000045d0e5: and al, 0x38; movups xmmword ptr [rsp + 0x40], xmm0; call 0x52f40; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000042d9e4: and al, 0x3c; mov dword ptr [rsp + 0x40], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000464fe8: and al, 0x3c; mov rax, qword ptr [rip + 0xf1a3f]; mov rbx, rsp; and rsp, 0xfffffffffffffff0; mov qword ptr [rsp], rbx; call rax; 
0x000000000044f132: and al, 0x3c; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045969f: and al, 0x40; add al, 0; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000496f5f: and al, 0x40; add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; or al, 0x24; call rax; 
0x00000000004595d5: and al, 0x40; add al, byte ptr [rax]; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000445a33: and al, 0x40; add al, r13b; ret; 
0x000000000042c1c9: and al, 0x40; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x0000000000401da4: and al, 0x40; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000478ff5: and al, 0x40; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x000000000046c8b8: and al, 0x40; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044eefe: and al, 0x40; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042c144: and al, 0x40; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x00000000004206b2: and al, 0x40; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000408e59: and al, 0x40; add dword ptr [rax], eax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x108]; add rsp, 0x110; ret; 
0x0000000000459593: and al, 0x40; add dword ptr [rax], eax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000459633: and al, 0x40; add eax, dword ptr [rax]; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000452409: and al, 0x40; add qword ptr [rax + 0x1640], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000428b79: and al, 0x40; add rsp, 0x48; nop; ret; 
0x000000000040931e: and al, 0x40; add rsp, 0x48; ret; 
0x000000000045d0ea: and al, 0x40; call 0x52f40; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000048afb0: and al, 0x40; cmp rcx, rax; jl 0x8af7c; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000041b750: and al, 0x40; cmp rdx, rax; ja 0x1b761; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045d2ef: and al, 0x40; mov byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000040fec2: and al, 0x40; mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000410991: and al, 0x40; mov byte ptr [rsp + 0x48], 1; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045df90: and al, 0x40; mov byte ptr [rsp + 0x48], cl; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; nop; ret; 
0x000000000045dfe0: and al, 0x40; mov byte ptr [rsp + 0x48], cl; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000046bda0: and al, 0x40; mov byte ptr [rsp + 0x50], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000451f2c: and al, 0x40; mov eax, dword ptr [rax + 0x10]; mov dword ptr [rsp + 0x78], eax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000042abfb: and al, 0x40; mov qword ptr [rax + 0x28], rcx; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045c10d: and al, 0x40; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000483c87: and al, 0x40; mov qword ptr [rdi + 8], rax; mov qword ptr [rsp + 0x50], rdi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048af9f: and al, 0x40; mov qword ptr [rsp + 0x10], rax; call rdx; 
0x000000000044c461: and al, 0x40; mov qword ptr [rsp + 0x28], rax; mov rax, qword ptr [rsp + 0x20]; lea rdx, [rsp + 0x20]; call rax; 
0x0000000000482176: and al, 0x40; mov qword ptr [rsp + 0x48], 0xe; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000473618: and al, 0x40; mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], 0; mov byte ptr [rsp + 0x58], dl; ret; 
0x000000000045ed4a: and al, 0x40; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004735c4: and al, 0x40; mov qword ptr [rsp + 0x48], rbx; mov qword ptr [rsp + 0x50], rcx; mov byte ptr [rsp + 0x58], sil; ret; 
0x0000000000429972: and al, 0x40; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004675cf: and al, 0x40; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; nop; ret; 
0x0000000000466b42: and al, 0x40; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048215b: and al, 0x40; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042be8d: and al, 0x40; mov qword ptr [rsp + 0x48], rdi; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046c07d: and al, 0x40; mov qword ptr [rsp + 0x48], rdx; mov byte ptr [rsp + 0x50], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048dff5: and al, 0x40; mov qword ptr [rsp + 0x48], rdx; mov qword ptr [rsp + 0x50], 0; call 0x5f320; ret; 
0x000000000040a4b7: and al, 0x40; mov qword ptr [rsp + 0x50], rax; mov byte ptr [rsp + 0x58], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040a3d2: and al, 0x40; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004849a6: and al, 0x40; mov qword ptr [rsp + 0x70], rax; mov qword ptr [rsp + 0x78], rcx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000040d46e: and al, 0x40; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000040be73: and al, 0x40; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000045f78e: and al, 0x40; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000409cb4: and al, 0x40; mov qword ptr [rsp + 0xc8], rax; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x000000000049193d: and al, 0x40; mov qword ptr [rsp + 8], rax; call 0x91260; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000043484d: and al, 0x40; mov qword ptr [rsp], rax; mov rcx, qword ptr [rdx]; call rcx; 
0x0000000000485390: and al, 0x40; mov qword ptr [rsp], rcx; call rax; 
0x00000000004855c4: and al, 0x40; mov rax, qword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x48]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004970be: and al, 0x40; mov rax, qword ptr [rax + 0x18]; mov rcx, qword ptr [rsp + 0x248]; mov qword ptr [rsp], rcx; call rax; 
0x000000000048f139: and al, 0x40; mov rax, qword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004126a8: and al, 0x40; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040fc0f: and al, 0x40; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000402654: and al, 0x40; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x0000000000401cbf: and al, 0x40; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000412131: and al, 0x40; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000440084: and al, 0x40; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000464e5f: and al, 0x40; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000482453: and al, 0x40; movzx eax, byte ptr [rax]; mov byte ptr [rsp + 0x50], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000041f3d1: and al, 0x40; sub rax, rcx; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000412681: and al, 0x44; lea rax, [rcx + 0x1fffff]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004954dc: and al, 0x47; mov byte ptr [rdi + 0x4b], al; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x00000000004970c7: and al, 0x48; add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; or al, 0x24; call rax; 
0x0000000000473d32: and al, 0x48; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000040fec6: and al, 0x48; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x0000000000465b31: and al, 0x48; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x000000000043c876: and al, 0x48; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x0000000000452025: and al, 0x48; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042998f: and al, 0x48; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000440fce: and al, 0x48; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000473d0a: and al, 0x48; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000410995: and al, 0x48; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000040adab: and al, 0x48; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x000000000043c8ce: and al, 0x48; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x0000000000498971: and al, 0x48; add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; push rsi; sbb byte ptr [rax - 0x77], cl; ret; 
0x00000000004584f3: and al, 0x48; add dword ptr [rax], eax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x00000000004682c9: and al, 0x48; add dword ptr [rax], eax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x128]; add rsp, 0x130; ret; 
0x000000000047c1f4: and al, 0x48; add dword ptr [rax], eax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xd0]; add rsp, 0xd8; ret; 
0x000000000045882f: and al, 0x48; add dword ptr [rax], eax; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x00000000004680a1: and al, 0x48; add dword ptr [rax], eax; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x128]; add rsp, 0x130; ret; 
0x000000000047c1dc: and al, 0x48; add dword ptr [rax], eax; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0xd0]; add rsp, 0xd8; ret; 
0x00000000004648a4: and al, 0x48; add esp, 0x170; popfq; pop rbp; ret; 
0x000000000040607c: and al, 0x48; add esp, 8; ret; 
0x000000000040be99: and al, 0x48; add rsp, 0x50; nop; ret; 
0x0000000000406932: and al, 0x48; add rsp, 0x50; ret; 
0x0000000000464e39: and al, 0x48; lea eax, [rip - 0x1fe01]; call rax; 
0x0000000000456d59: and al, 0x48; lea ecx, [rsp + 0x18]; mov qword ptr [rsp + 8], rcx; mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; 
0x000000000048abaa: and al, 0x48; lea r8, [rax + rdi]; mov qword ptr [rsp + 0x10], r8; call rdx; 
0x000000000046ada2: and al, 0x48; lock xadd dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000494ebc: and al, 0x48; mov byte ptr [rcx + 0x4c], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004920c2: and al, 0x48; mov byte ptr [rcx + 0xe], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000046bd7a: and al, 0x48; mov byte ptr [rsp + 0x50], 1; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000046c082: and al, 0x48; mov byte ptr [rsp + 0x50], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040a4d3: and al, 0x48; mov byte ptr [rsp + 0x58], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042f319: and al, 0x48; mov dword ptr [rax + 0x48], ecx; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000451296: and al, 0x48; mov dword ptr [rsp + 0x18], eax; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000465001: and al, 0x48; mov dword ptr [rsp + 0x40], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000041276e: and al, 0x48; mov dword ptr [rsp + 0x4c], eax; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040e0f0: and al, 0x48; mov dword ptr [rsp + 8], 0; mov rax, qword ptr [rdx]; call rax; 
0x00000000004464f3: and al, 0x48; mov dword ptr [rsp + 8], eax; call 0x2f340; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000411fb0: and al, 0x48; mov dword ptr [rsp + 8], eax; call 0x63da0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045a2c8: and al, 0x48; mov dword ptr [rsp + 8], eax; call 0x65060; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042351c: and al, 0x48; mov dword ptr [rsp + 8], eax; call 0xa5a0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048af93: and al, 0x48; mov dword ptr [rsp + 8], eax; dec rax; mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x10], rax; call rdx; 
0x0000000000429543: and al, 0x48; mov dword ptr [rsp + 8], eax; mov qword ptr [rsp + 0x10], rcx; mov rax, qword ptr [rip + 0x9ce4b]; lea rdx, [rip + 0x9ce44]; call rax; 
0x0000000000429788: and al, 0x48; mov dword ptr [rsp + 8], eax; mov qword ptr [rsp + 0x10], rcx; mov rax, qword ptr [rsp + 0x90]; lea rdx, [rsp + 0x90]; call rax; 
0x000000000045c5e2: and al, 0x48; mov dword ptr [rsp + 8], eax; mov qword ptr [rsp + 0x10], rcx; mov rdx, qword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004105a6: and al, 0x48; mov dword ptr [rsp + 8], eax; mov rax, qword ptr [rdx]; call rax; 
0x000000000040f855: and al, 0x48; mov dword ptr [rsp + 8], eax; mov rax, qword ptr [rdx]; nop; call rax; 
0x000000000040f918: and al, 0x48; mov dword ptr [rsp + 8], eax; mov rcx, qword ptr [rdx]; call rcx; 
0x00000000004296e9: and al, 0x48; mov dword ptr [rsp + 8], ebx; mov qword ptr [rsp + 0x10], rax; mov rax, qword ptr [rsp + 0x90]; lea rdx, [rsp + 0x90]; call rax; 
0x000000000040df1d: and al, 0x48; mov dword ptr [rsp + 8], ebx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000040fe35: and al, 0x48; mov dword ptr [rsp + 8], ebx; mov rbx, qword ptr [rdx]; nop; call rbx; 
0x000000000047c4f9: and al, 0x48; mov dword ptr [rsp + 8], ebx; nop; call rax; 
0x000000000044223e: and al, 0x48; mov dword ptr [rsp + 8], ecx; call 0x2eba0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044a632: and al, 0x48; mov dword ptr [rsp + 8], ecx; call 0x49320; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000047332a: and al, 0x48; mov dword ptr [rsp + 8], ecx; call 0x73080; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048aaa2: and al, 0x48; mov dword ptr [rsp + 8], ecx; dec rcx; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x10], rcx; call rax; 
0x000000000048ab13: and al, 0x48; mov dword ptr [rsp + 8], ecx; lea rsi, [rcx - 1]; mov qword ptr [rsp + 0x10], rsi; call rax; 
0x000000000040e289: and al, 0x48; mov dword ptr [rsp + 8], ecx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000040e010: and al, 0x48; mov dword ptr [rsp + 8], ecx; mov rcx, qword ptr [rdx]; call rcx; 
0x00000000004726f0: and al, 0x48; mov dword ptr [rsp + 8], edx; mov qword ptr [rsp + 0x10], rbx; mov qword ptr [rsp + 0x18], rdi; call rax; 
0x00000000004941d9: and al, 0x48; mov dword ptr [rsp + 8], edx; mov qword ptr [rsp + 0x10], rbx; mov qword ptr [rsp + 0x18], rsi; call rax; 
0x000000000040eef7: and al, 0x48; mov dword ptr [rsp + 8], edx; mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; 
0x000000000040e790: and al, 0x48; mov dword ptr [rsp + 8], esi; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000040ef47: and al, 0x48; mov dword ptr [rsp + 8], esi; mov rsi, qword ptr [rcx]; mov rdx, rcx; call rsi; 
0x000000000042f2ae: and al, 0x48; mov eax, dword ptr [rdx]; call rax; 
0x000000000043acf2: and al, 0x48; mov eax, dword ptr [rip + 0x8b84e]; lea rdx, [rip + 0x8b847]; call rax; 
0x00000000004346d4: and al, 0x48; mov eax, dword ptr [rip + 0x91e64]; lea rdx, [rip + 0x91e5d]; call rax; 
0x0000000000403600: and al, 0x48; mov eax, dword ptr [rsp + 0x58]; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; call rax; 
0x000000000047ff08: and al, 0x48; mov eax, dword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x000000000046508f: and al, 0x48; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000434852: and al, 0x48; mov ecx, dword ptr [rdx]; call rcx; 
0x000000000043ac51: and al, 0x48; mov ecx, dword ptr [rip + 0x8b8ef]; lea rdx, [rip + 0x8b8e8]; call rcx; 
0x0000000000434748: and al, 0x48; mov ecx, dword ptr [rip + 0x91df0]; lea rdx, [rip + 0x91de9]; call rcx; 
0x0000000000456c97: and al, 0x48; mov ecx, dword ptr [rsp + 0x28]; mov qword ptr [rsp + 8], rcx; mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; 
0x00000000004997f8: and al, 0x48; mov ecx, dword ptr [rsp + 0xc8]; mov qword ptr [rsp + 8], rcx; call rax; 
0x000000000040a567: and al, 0x48; mov edx, dword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000437a70: and al, 0x48; mov edx, dword ptr [rsp + 0x68]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000464cfb: and al, 0x48; mov esi, 0; mov rax, qword ptr [rip + 0xdc456]; call rax; 
0x0000000000464c15: and al, 0x48; mov esi, 0; mov rax, qword ptr [rip + 0xdc53c]; call rax; 
0x0000000000445234: and al, 0x48; mov qword ptr [rax + 0x80], rcx; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x000000000044cfba: and al, 0x48; mov qword ptr [rsp + 0x118], rax; mov rbp, qword ptr [rsp + 0xf0]; add rsp, 0xf8; ret; 
0x000000000048dffa: and al, 0x48; mov qword ptr [rsp + 0x50], 0; call 0x5f320; ret; 
0x000000000047361d: and al, 0x48; mov qword ptr [rsp + 0x50], 0; mov byte ptr [rsp + 0x58], dl; ret; 
0x0000000000484d0f: and al, 0x48; mov qword ptr [rsp + 0x50], 0x16; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004067a7: and al, 0x48; mov qword ptr [rsp + 0x50], 0x1d; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044b632: and al, 0x48; mov qword ptr [rsp + 0x50], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042bf81: and al, 0x48; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044e609: and al, 0x48; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040bfaf: and al, 0x48; mov qword ptr [rsp + 0x50], rcx; mov byte ptr [rsp + 0x58], dl; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004735c9: and al, 0x48; mov qword ptr [rsp + 0x50], rcx; mov byte ptr [rsp + 0x58], sil; ret; 
0x000000000044bd46: and al, 0x48; mov qword ptr [rsp + 0x50], rcx; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044be48: and al, 0x48; mov qword ptr [rsp + 0x50], rcx; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048fafe: and al, 0x48; mov qword ptr [rsp + 0x50], rcx; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048ed81: and al, 0x48; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048ec39: and al, 0x48; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000406812: and al, 0x48; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000490c72: and al, 0x48; mov qword ptr [rsp + 0x50], rdx; mov qword ptr [rsp + 0x58], rbx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040718f: and al, 0x48; mov qword ptr [rsp + 0x50], rsi; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; nop; ret; 
0x000000000042bf55: and al, 0x48; mov qword ptr [rsp + 0x50], rsi; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000041f84e: and al, 0x48; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000045726e: and al, 0x48; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000045c5ba: and al, 0x48; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rsp + 0x50]; mov qword ptr [rsp + 0x10], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x00000000004855d0: and al, 0x48; mov qword ptr [rsp], rcx; call rax; 
0x0000000000437a6b: and al, 0x48; mov qword ptr [rsp], rcx; mov rdx, qword ptr [rsp + 0x68]; mov rax, qword ptr [rdx]; call rax; 
0x000000000040a067: and al, 0x48; mov rax, qword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040a3cd: and al, 0x48; mov rax, qword ptr [rsp + 0x40]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000041268d: and al, 0x48; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000447274: and al, 0x48; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x000000000040a26f: and al, 0x48; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004675d4: and al, 0x48; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; nop; ret; 
0x0000000000403de4: and al, 0x48; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045df94: and al, 0x48; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; nop; ret; 
0x0000000000417032: and al, 0x48; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000043f187: and al, 0x48; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040519c: and al, 0x48; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000461a0d: and al, 0x48; mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x38]; mov rax, qword ptr [rdx]; call rax; 
0x000000000046b31a: and al, 0x48; mov rdx, qword ptr [rcx + 0x20]; test rdx, rdx; je 0x6b2fe; mov rax, qword ptr [rdx]; call rax; 
0x0000000000429a5f: and al, 0x48; shl rsi, 0xd; mov qword ptr [rsp + 0x50], rsi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000433216: and al, 0x49; test al, al; jne 0x33226; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000041ffec: and al, 0x4c; mov dword ptr [rsp + 8], ebx; mov rax, qword ptr [rsp + 0x70]; lea rdx, [rsp + 0x70]; call rax; 
0x000000000047ca55: and al, 0x4c; mov dword ptr [rsp + 8], esi; mov rax, qword ptr [rdx]; nop; call rax; 
0x000000000041279c: and al, 0x4c; mov qword ptr [rsp + 0x50], r9; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000412772: and al, 0x4c; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044123f: and al, 0x50; add al, 0; add byte ptr [rcx], ch; ret 0xead1; 
0x0000000000474423: and al, 0x50; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000046bda4: and al, 0x50; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x000000000048dfff: and al, 0x50; add byte ptr [rax], al; add byte ptr [rax], al; call 0x5f320; ret; 
0x0000000000473622: and al, 0x50; add byte ptr [rax], al; add byte ptr [rax], al; mov byte ptr [rsp + 0x58], dl; ret; 
0x0000000000429aae: and al, 0x50; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000415a9f: and al, 0x50; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042f01b: and al, 0x50; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000455db0: and al, 0x50; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000046bd7e: and al, 0x50; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x000000000048e8b0: and al, 0x50; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x000000000044b637: and al, 0x50; add dword ptr [rax], eax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043f5b9: and al, 0x50; add rsp, 0x58; nop; ret; 
0x0000000000403c08: and al, 0x50; add rsp, 0x58; ret; 
0x000000000048dfea: and al, 0x50; call 0x5f320; ret; 
0x000000000048abc2: and al, 0x50; cmp rcx, rax; jg 0x8ab82; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040a4bc: and al, 0x50; mov byte ptr [rsp + 0x58], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045be50: and al, 0x50; mov byte ptr [rsp + 0x58], 1; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040bfb4: and al, 0x50; mov byte ptr [rsp + 0x58], dl; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004735ce: and al, 0x50; mov byte ptr [rsp + 0x58], sil; ret; 
0x000000000046c17e: and al, 0x50; mov byte ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040499f: and al, 0x50; mov qword ptr [rax + 8], rcx; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000484521: and al, 0x50; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004238ed: and al, 0x50; mov qword ptr [rdx + rax*8], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000045c5c4: and al, 0x50; mov qword ptr [rsp + 0x10], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x00000000004070a7: and al, 0x50; mov qword ptr [rsp + 0x120], rax; mov qword ptr [rsp + 0x128], rcx; mov rbp, qword ptr [rsp + 0x108]; add rsp, 0x110; ret; 
0x000000000040408e: and al, 0x50; mov qword ptr [rsp + 0x18], rax; call 0x41a0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000047bdb0: and al, 0x50; mov qword ptr [rsp + 0x58], 4; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000047be35: and al, 0x50; mov qword ptr [rsp + 0x58], 6; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048309e: and al, 0x50; mov qword ptr [rsp + 0x58], rax; mov qword ptr [rsp + 0x60], rsi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042a6cd: and al, 0x50; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000047990f: and al, 0x50; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x00000000004029aa: and al, 0x50; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000412568: and al, 0x50; mov qword ptr [rsp + 0x58], rbx; mov qword ptr [rsp + 0x60], rdx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000490c77: and al, 0x50; mov qword ptr [rsp + 0x58], rbx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048d66e: and al, 0x50; mov qword ptr [rsp + 0x58], rbx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004831cc: and al, 0x50; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044bd4b: and al, 0x50; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040ddba: and al, 0x50; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048d2f2: and al, 0x50; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000466bf2: and al, 0x50; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000046c192: and al, 0x50; mov qword ptr [rsp + 0x58], rdx; mov byte ptr [rsp + 0x60], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041fc27: and al, 0x50; mov qword ptr [rsp + 0x58], rdx; mov dword ptr [rsp + 0x60], ecx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041adb7: and al, 0x50; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000443e6e: and al, 0x50; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048fb03: and al, 0x50; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004847e0: and al, 0x50; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040c542: and al, 0x50; mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x00000000004044ae: and al, 0x50; mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000048f4ce: and al, 0x50; mov qword ptr [rsp], rax; call 0x8eb00; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000040e0eb: and al, 0x50; mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], 0; mov rax, qword ptr [rdx]; call rax; 
0x000000000040e00b: and al, 0x50; mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], rcx; mov rcx, qword ptr [rdx]; call rcx; 
0x00000000004035fb: and al, 0x50; mov qword ptr [rsp], rax; mov rax, qword ptr [rsp + 0x58]; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; call rax; 
0x0000000000437aa9: and al, 0x50; mov qword ptr [rsp], rax; mov rdx, qword ptr [rsp + 0x68]; mov rax, qword ptr [rdx]; call rax; 
0x000000000040df18: and al, 0x50; mov qword ptr [rsp], rsi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000047e83e: and al, 0x50; mov rax, qword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000468954: and al, 0x50; mov rax, qword ptr [rax + 0x60]; mov rcx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000483df7: and al, 0x50; mov rax, qword ptr [rsp + 0x38]; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000484af1: and al, 0x50; mov rax, qword ptr [rsp + 0x38]; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000407194: and al, 0x50; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; nop; ret; 
0x0000000000412777: and al, 0x50; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040a3d7: and al, 0x50; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040a071: and al, 0x50; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000406817: and al, 0x50; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000415a86: and al, 0x50; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042f02e: and al, 0x50; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000405e46: and al, 0x50; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000468916: and al, 0x50; mov rcx, qword ptr [rax + 0x38]; mov rdx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rdx; call rcx; 
0x00000000004688b0: and al, 0x50; mov rcx, qword ptr [rax + 0x40]; mov rdx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rdx; nop; call rcx; 
0x000000000047e790: and al, 0x50; mov rcx, qword ptr [rax + 0xb8]; mov rdx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rdx; call rcx; 
0x000000000045e0a9: and al, 0x50; mov rcx, qword ptr [rsp + 0x58]; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x00000000004067ac: and al, 0x50; sbb eax, 0x48000000; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048e131: and al, 0x50; xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x58], xmm0; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000493ab8: and al, 0x57; mov rcx, qword ptr [rsp + 0xf8]; mov byte ptr [rcx + 0xe], al; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x000000000047bdb5: and al, 0x58; add al, 0; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000441389: and al, 0x58; add al, 0; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x430]; add rsp, 0x438; ret; 
0x000000000044133e: and al, 0x58; add al, 0; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x430]; add rsp, 0x438; ret; 
0x000000000040a4d7: and al, 0x58; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000045be7f: and al, 0x58; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x0000000000425fd0: and al, 0x58; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; ret; 
0x000000000040d645: and al, 0x58; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000444087: and al, 0x58; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040a4c0: and al, 0x58; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000045be54: and al, 0x58; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x0000000000425f7d: and al, 0x58; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; ret; 
0x0000000000437c39: and al, 0x58; add rsp, 0x60; nop; ret; 
0x0000000000411588: and al, 0x58; add rsp, 0x60; ret; 
0x00000000004035e4: and al, 0x58; cmp rax, rcx; sete byte ptr [rsp + 0x60]; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000420d14: and al, 0x58; cmp rbx, rsi; sete byte ptr [rsp + 0x60]; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000404163: and al, 0x58; cmp rdx, rax; jg 0x4115; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000490991: and al, 0x58; lea rax, [rip + 0x4b7c6]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040dfce: and al, 0x58; mov byte ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040e071: and al, 0x58; mov byte ptr [rsp + 0x60], 1; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000046c197: and al, 0x58; mov byte ptr [rsp + 0x60], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041fc82: and al, 0x58; mov dword ptr [rsp + 0x60], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041fc2c: and al, 0x58; mov dword ptr [rsp + 0x60], ecx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000045e0ae: and al, 0x58; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x00000000004842b5: and al, 0x58; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000493ca2: and al, 0x58; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x00000000004124bf: and al, 0x58; mov qword ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044c529: and al, 0x58; mov qword ptr [rsp + 0x60], rax; mov byte ptr [rsp + 0x68], cl; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042a885: and al, 0x58; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000047b6b8: and al, 0x58; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000045c604: and al, 0x58; mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000407220: and al, 0x58; mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004825be: and al, 0x58; mov qword ptr [rsp + 0x60], rdx; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000041256d: and al, 0x58; mov qword ptr [rsp + 0x60], rdx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004830a3: and al, 0x58; mov qword ptr [rsp + 0x60], rsi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044e1c1: and al, 0x58; mov qword ptr [rsp + 0xe8], rax; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x00000000004450ed: and al, 0x58; mov qword ptr [rsp + 8], rax; call 0x46780; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000403604: and al, 0x58; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; call rax; 
0x000000000040f913: and al, 0x58; mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], rax; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000040e284: and al, 0x58; mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], rcx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000046895d: and al, 0x58; mov qword ptr [rsp], rcx; call rax; 
0x000000000046891f: and al, 0x58; mov qword ptr [rsp], rdx; call rcx; 
0x00000000004688b9: and al, 0x58; mov qword ptr [rsp], rdx; nop; call rcx; 
0x000000000040e188: and al, 0x58; mov qword ptr [rsp], rsi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000461ab7: and al, 0x58; mov rax, qword ptr [rdx]; call rax; 
0x000000000042a865: and al, 0x58; mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000450f16: and al, 0x58; mov rax, qword ptr [rsp + 0x28]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004908f8: and al, 0x58; mov rax, qword ptr [rsp + 0x30]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000041adbc: and al, 0x58; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000483314: and al, 0x58; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; nop; ret; 
0x00000000004831d1: and al, 0x58; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044bd50: and al, 0x58; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040bfb8: and al, 0x58; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004100e2: and al, 0x58; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000479914: and al, 0x58; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x000000000040294e: and al, 0x58; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000447c13: and al, 0x58; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004735d3: and al, 0x58; ret; 
0x000000000044c012: and al, 0x58; shr rcx, 2; mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000047bed6: and al, 0x58; test rax, rax; jge 0x7bee7; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000048ce08: and al, 0x60; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000040dfd2: and al, 0x60; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x00000000004469e9: and al, 0x60; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; ret; 
0x0000000000420d7c: and al, 0x60; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x00000000004124c4: and al, 0x60; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000415b40: and al, 0x60; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044c3ec: and al, 0x60; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000048ce38: and al, 0x60; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000040e075: and al, 0x60; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x0000000000403625: and al, 0x60; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; ret; 
0x000000000045cfec: and al, 0x60; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x000000000045a739: and al, 0x60; add rsp, 0x68; nop; ret; 
0x000000000041eaa1: and al, 0x60; add rsp, 0x68; ret; 
0x000000000044c52e: and al, 0x60; mov byte ptr [rsp + 0x68], cl; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004825c3: and al, 0x60; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040e2ef: and al, 0x60; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x0000000000428be2: and al, 0x60; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000048d49d: and al, 0x60; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000492539: and al, 0x60; mov qword ptr [rsp + 0x68], rbx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000043b2f8: and al, 0x60; mov qword ptr [rsp + 0x68], rcx; mov byte ptr [rsp + 0x70], 0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044e936: and al, 0x60; mov qword ptr [rsp + 0x68], rcx; mov dword ptr [rsp + 0x70], edx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000044b6d5: and al, 0x60; mov qword ptr [rsp + 0x68], rcx; mov qword ptr [rsp + 0x70], rdx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048392b: and al, 0x60; mov qword ptr [rsp + 0x68], rcx; mov qword ptr [rsp + 0x70], rdx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004924ed: and al, 0x60; mov qword ptr [rsp + 0x68], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041478d: and al, 0x60; mov qword ptr [rsp + 0x68], rcx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044b7a8: and al, 0x60; mov qword ptr [rsp + 0x68], rsi; mov qword ptr [rsp + 0x70], rbx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000492677: and al, 0x60; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000481fed: and al, 0x60; mov qword ptr [rsp + 0xa0], rax; mov qword ptr [rsp + 0xa8], rcx; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000046b88c: and al, 0x60; mov qword ptr [rsp], rax; call 0x6af00; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000460554: and al, 0x60; mov rax, qword ptr [rsp + 0x30]; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000048563c: and al, 0x60; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000412572: and al, 0x60; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042a86f: and al, 0x60; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000403714: and al, 0x60; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x00000000004035ec: and al, 0x60; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000415bed: and al, 0x60; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000041f3d9: and al, 0x60; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000042337b: and al, 0x60; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x00000000004688d9: and al, 0x60; mov rbx, qword ptr [rdx + 0x40]; mov rsi, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rsi; call rbx; 
0x000000000047e7bb: and al, 0x60; mov rbx, qword ptr [rdx + 0xb8]; mov rsi, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rsi; call rbx; 
0x0000000000468972: and al, 0x60; mov rcx, qword ptr [rcx + 0x60]; mov rdx, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000468934: and al, 0x60; mov rdx, qword ptr [rcx + 0x38]; mov rbx, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rbx; call rdx; 
0x000000000048d591: and al, 0x60; xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x68], xmm0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000046a79e: and al, 0x61; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x000000000046a782: and al, 0x61; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x000000000041c35d: and al, 0x66; nop; call 0xaa40; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004266bd: and al, 0x66; nop; call 0xaa40; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000426c1d: and al, 0x66; nop; call 0xaa40; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000496e3d: and al, 0x66; nop; call rax; 
0x00000000004973fd: and al, 0x66; nop; call rcx; 
0x0000000000411f59: and al, 0x68; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040e243: and al, 0x68; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000409315: and al, 0x68; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000455485: and al, 0x68; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000044cd47: and al, 0x68; add dword ptr [rax], eax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x100]; add rsp, 0x108; ret; 
0x0000000000424179: and al, 0x68; add rsp, 0x70; nop; ret; 
0x0000000000403a62: and al, 0x68; add rsp, 0x70; ret; 
0x000000000043b2fd: and al, 0x68; mov byte ptr [rsp + 0x70], 0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044e93b: and al, 0x68; mov dword ptr [rsp + 0x70], edx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000472618: and al, 0x68; mov qword ptr [rsp + 0x18], rdx; nop; call rax; 
0x000000000046b4ab: and al, 0x68; mov qword ptr [rsp + 0x70], r10; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004943d3: and al, 0x68; mov qword ptr [rsp + 0x70], rax; mov qword ptr [rsp + 0x78], rbx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000492654: and al, 0x68; mov qword ptr [rsp + 0x70], rax; mov qword ptr [rsp + 0x78], rdx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048d9d9: and al, 0x68; mov qword ptr [rsp + 0x70], rax; mov qword ptr [rsp + 0x78], rdx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044b3d4: and al, 0x68; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044b7ad: and al, 0x68; mov qword ptr [rsp + 0x70], rbx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000044b6da: and al, 0x68; mov qword ptr [rsp + 0x70], rdx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000406b5f: and al, 0x68; mov qword ptr [rsp + 0x70], rdx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000043ec85: and al, 0x68; mov qword ptr [rsp + 0x98], rax; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000046893d: and al, 0x68; mov qword ptr [rsp], rbx; call rdx; 
0x000000000046897b: and al, 0x68; mov qword ptr [rsp], rdx; call rcx; 
0x00000000004688e2: and al, 0x68; mov qword ptr [rsp], rsi; call rbx; 
0x0000000000463315: and al, 0x68; mov r13, qword ptr [rsp + 0x70]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000437a74: and al, 0x68; mov rax, qword ptr [rdx]; call rax; 
0x0000000000411eda: and al, 0x68; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040e2f4: and al, 0x68; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x00000000004924f2: and al, 0x68; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000409373: and al, 0x68; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000457934: and al, 0x68; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; nop; ret; 
0x0000000000406b2b: and al, 0x68; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004373e5: and al, 0x68; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x00000000004216ad: and al, 0x68; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000461aad: and al, 0x68; mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x58]; mov rax, qword ptr [rdx]; call rax; 
0x000000000043b42f: and al, 0x68; movzx eax, byte ptr [rsp + 0x1f]; mov byte ptr [rsp + 0x70], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000042cbf8: and al, 0x68; xchg qword ptr [rax], rcx; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000043b301: and al, 0x70; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x000000000044551d: and al, 0x70; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x48; add rsp, 0x50; ret; 
0x00000000004453a0: and al, 0x70; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x48; add rsp, 0x50; ret; 
0x00000000004503f9: and al, 0x70; add rsp, 0x78; nop; ret; 
0x0000000000404b88: and al, 0x70; add rsp, 0x78; ret; 
0x000000000041fffa: and al, 0x70; call rax; 
0x000000000041374c: and al, 0x70; cmp rdi, rax; ja 0x13702; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000041fff5: and al, 0x70; lea rdx, [rsp + 0x70]; call rax; 
0x0000000000491ca2: and al, 0x70; mov byte ptr [rcx + 0xe], al; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x00000000004914b1: and al, 0x70; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; nop; ret; 
0x000000000046331a: and al, 0x70; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000454ae2: and al, 0x70; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000420963: and al, 0x70; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040be37: and al, 0x70; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004943d8: and al, 0x70; mov qword ptr [rsp + 0x78], rbx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000044ee19: and al, 0x70; mov qword ptr [rsp + 0x78], rcx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004849ab: and al, 0x70; mov qword ptr [rsp + 0x78], rcx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000492659: and al, 0x70; mov qword ptr [rsp + 0x78], rdx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048d9de: and al, 0x70; mov qword ptr [rsp + 0x78], rdx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000048ba08: and al, 0x70; mov qword ptr [rsp + 0xc8], rax; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x000000000044864a: and al, 0x70; mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x00000000004941d4: and al, 0x70; mov qword ptr [rsp], rdi; mov qword ptr [rsp + 8], rdx; mov qword ptr [rsp + 0x10], rbx; mov qword ptr [rsp + 0x18], rsi; call rax; 
0x000000000048637a: and al, 0x70; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000486e30: and al, 0x70; mov rax, qword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x78]; mov qword ptr [rsp], rcx; call rax; 
0x000000000040be6e: and al, 0x70; mov rax, qword ptr [rsp + 0x40]; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000045f789: and al, 0x70; mov rax, qword ptr [rsp + 0x40]; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x00000000004847db: and al, 0x70; mov rax, qword ptr [rsp + 0x50]; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000492672: and al, 0x70; mov rax, qword ptr [rsp + 0x60]; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000486cf5: and al, 0x70; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044b3d9: and al, 0x70; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000451914: and al, 0x70; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x000000000044b7b2: and al, 0x70; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000043b438: and al, 0x70; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000406b64: and al, 0x70; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000457440: and al, 0x70; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000430aaf: and al, 0x70; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000435201: and al, 0x70; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000486dee: and al, 0x70; mov rbx, qword ptr [rdx + 0xd0]; mov rsi, qword ptr [rsp + 0x78]; mov qword ptr [rsp], rsi; call rbx; 
0x000000000048b060: and al, 0x70; sub r9, rdi; mov qword ptr [rsp + 8], r9; mov qword ptr [rsp + 0x10], rdi; call rdx; 
0x0000000000496973: and al, 0x77; mov qword ptr [rax + 0x48], rcx; mov byte ptr [rax + 0x50], dl; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000496e50: and al, 0x78; add al, byte ptr [rax]; add byte ptr [rcx - 0x17e7dbbc], cl; ret 0xffe7; 
0x0000000000468906: and al, 0x78; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x00000000004255c7: and al, 0x78; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x58; add rsp, 0x60; ret; 
0x00000000004254ae: and al, 0x78; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x58; add rsp, 0x60; ret; 
0x000000000041360c: and al, 0x78; cmp rdi, rax; ja 0x135c2; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000048aeb8: and al, 0x78; mov qword ptr [rsp + 0x10], rcx; nop; call rdx; 
0x000000000045413c: and al, 0x78; mov qword ptr [rsp + 0x320], rax; mov rbp, qword ptr [rsp + 0x2c0]; add rsp, 0x2c8; ret; 
0x000000000044aa38: and al, 0x78; mov qword ptr [rsp + 0xd8], rax; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000486e3c: and al, 0x78; mov qword ptr [rsp], rcx; call rax; 
0x0000000000486d90: and al, 0x78; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000486dfa: and al, 0x78; mov qword ptr [rsp], rsi; call rbx; 
0x00000000004113cb: and al, 0x78; mov qword ptr [rsp], rsi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000044fb5f: and al, 0x78; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000454ae7: and al, 0x78; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000420968: and al, 0x78; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040be3c: and al, 0x78; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000040d838: and al, 0x78; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x00000000004570d1: and al, 0x78; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000048fec4: and al, 0x78; mov rcx, qword ptr [rax + 0x20]; mov rdx, qword ptr [rax + 0x28]; mov rcx, qword ptr [rcx + 0x18]; mov qword ptr [rsp], rdx; call rcx; 
0x00000000004914b9: and al, 0x78; sub rsp, -0x80; nop; ret; 
0x0000000000404288: and al, 0x78; sub rsp, -0x80; ret; 
0x000000000041458c: and al, 0x80; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0x7575; 
0x000000000047a695: and al, 0x80; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000044f08f: and al, 0x80; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000473aa7: and al, 0x80; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000048af47: and al, 0x80; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 + 0x44], cl; and al, 0x10; call rsi; 
0x000000000048ae5c: and al, 0x80; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 + 0x44], cl; and al, 8; mov qword ptr [rsp + 0x10], rcx; call rsi; 
0x000000000044efff: and al, 0x80; add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000473b29: and al, 0x80; add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000047c60d: and al, 0x88; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; mov rcx, qword ptr [rsp + 0x90]; mov qword ptr [rsp], rcx; call rax; 
0x000000000047c5d3: and al, 0x88; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; mov rdx, qword ptr [rsp + 0x90]; mov qword ptr [rsp], rdx; call rcx; 
0x00000000004106d1: and al, 0x88; add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret; 
0x000000000047edb2: and al, 0x88; add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0x52; add dword ptr [rsi - 0x3f], esp; ret 0x4808; 
0x0000000000478794: and al, 0x88; add byte ptr [rax], al; add cl, ch; ret 0xfff7; 
0x0000000000441ab1: and al, 0x89; and al, 0x20; mov qword ptr [rsp + 0x28], rbx; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000045a151: and al, 0x89; and al, 8; call 0x59ce0; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000495660: and al, 0x89; and al, 8; call 0x94740; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000042cb28: and al, 0x89; ret; 
0x0000000000496e4d: and al, 0x8b; test byte ptr [rax + rdi*2], ah; add al, byte ptr [rax]; add byte ptr [rcx - 0x17e7dbbc], cl; ret 0xffe7; 
0x000000000047d075: and al, 0x90; add al, byte ptr [rax]; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x208]; add rsp, 0x210; ret; 
0x0000000000414341: and al, 0x90; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret; 
0x000000000041d087: and al, 0x90; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; push rcx; cmp byte ptr [rax + 0x29], cl; ret 0x8948; 
0x000000000047c5df: and al, 0x90; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; adc al, 0x24; call rcx; 
0x000000000047c619: and al, 0x90; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; or al, 0x24; call rax; 
0x000000000045e176: and al, 0x90; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000478c77: and al, 0x90; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000045e276: and al, 0x90; add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000473f5c: and al, 0x90; add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000478c89: and al, 0x90; add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000468ef9: and al, 0x90; add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0x52; add dword ptr [rsi - 0x3f], esp; ret 0x4808; 
0x000000000044511e: and al, 0x90; call 0x3e240; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x000000000045155e: and al, 0x90; call 0x51a80; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000416ade: and al, 0x90; call 0x61680; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000045651e: and al, 0x90; call 0xaa40; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000047c5fe: and al, 0x90; call rax; 
0x00000000004688be: and al, 0x90; call rcx; 
0x0000000000420e7a: and al, 0x90; mov qword ptr [rbx + rax + 0x28], rcx; inc qword ptr [rdx + 0x140]; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000414324: and al, 0x98; add byte ptr [rax], al; add byte ptr [rax - 9], cl; ret 0x1f; 
0x0000000000404b7f: and al, 0xa0; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000404df5: and al, 0xa0; add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000419118: and al, 0xa5; add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000454e43: and al, 0xa8; add al, byte ptr [rax]; add byte ptr [rax - 0x75], cl; je 0x54e70; cmp byte ptr [rax - 0x77], cl; ret; 
0x0000000000402e20: and al, 0xa8; add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret; 
0x000000000048cce4: and al, 0xa8; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; or al, 0x24; call rax; 
0x000000000048adfa: and al, 0xa8; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x000000000040b96c: and al, 0xa8; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8748; 
0x000000000040c15d: and al, 0xa8; add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rsp + rbp*2 + 0x48], 0xf7; ret 7; 
0x000000000047d655: and al, 0xa8; add byte ptr [rax], al; add byte ptr [rcx], dh; fucomi st(3); add ecx, dword ptr [rax - 1]; ret; 
0x000000000047ed85: and al, 0xa8; add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0x52; add dword ptr [rsi - 0x3f], esp; ret 0x4808; 
0x000000000040573b: and al, 0xa9; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000040584f: and al, 0xa9; add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000468ecc: and al, 0xb0; add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0x52; add dword ptr [rsi - 0x3f], esp; ret 0x4808; 
0x000000000047a755: and al, 0xb0; add dword ptr [rax], eax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x138]; add rsp, 0x140; ret; 
0x000000000047a7fd: and al, 0xb0; add dword ptr [rax], eax; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x138]; add rsp, 0x140; ret; 
0x0000000000445dc8: and al, 0xb8; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add al, 0x24; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000048aee8: and al, 0xb8; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000047f66c: and al, 0xb8; add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret 0x4c18; 
0x00000000004685c3: and al, 0xb8; add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0x50; add dword ptr [rsi - 0x3f], esp; ret 0x4808; 
0x0000000000496c2d: and al, 0xb8; add byte ptr [rax], al; add cl, ch; ret; 
0x0000000000464f7c: and al, 0xb8; or dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x00000000004580e1: and al, 0xc0; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0x8d0f; 
0x0000000000495b0f: and al, 0xc0; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x000000000040f86a: and al, 0xc0; add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x59; or dh, dh; ret; 
0x0000000000425658: and al, 0xc0; add eax, dword ptr [rax]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004997fc: and al, 0xc8; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 8; call rax; 
0x0000000000497532: and al, 0xc; call 0x94dc0; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x00000000004652c6: and al, 0xc; mov edx, dword ptr [rsp + 0x10]; mov r10, qword ptr [rsp + 0x18]; mov eax, 0xe9; syscall; 
0x0000000000401c4e: and al, 0xc; ret; 
0x0000000000448e02: and al, 0xd0; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; push rcx; cmp byte ptr [rax + 0x29], cl; ret 0x8948; 
0x000000000047a1cd: and al, 0xd0; add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x51; adc al, 0xf6; ret 0xf01; 
0x0000000000468021: and al, 0xd8; add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0x5a; add dword ptr [rsi - 0x3f], esp; ret; 
0x0000000000468dc7: and al, 0xd8; add byte ptr [rax], al; add cl, ch; ret; 
0x000000000040109a: and al, 0xe0; add byte ptr [rax], al; add byte ptr [rax - 0x76b7f615], dl; ret 0x8948; 
0x0000000000448c5d: and al, 0xe0; add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x000000000045a52a: and al, 0xe8; adc byte ptr [rip - 0x74b70005], al; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x0000000000425725: and al, 0xe8; adc eax, 0x48fffe53; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042d905: and al, 0xe8; adc eax, 0x48fffffc; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004388c7: and al, 0xe8; adc ebp, dword ptr [rcx - 0x74b80000]; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x0000000000460467: and al, 0xe8; adc edx, dword ptr [rdx]; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000434f76: and al, 0xe8; add al, 0xc7; add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000047ea50: and al, 0xe8; add byte ptr [rax], al; add byte ptr [rax - 0x17dfdbbc], cl; ret 0xfffc; 
0x0000000000468b6b: and al, 0xe8; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x000000000047a187: and al, 0xe8; add byte ptr [rax], al; add byte ptr [rcx + 0xf], al; mov bh, 0x59; xor ah, byte ptr [rsi - 9]; ret; 
0x0000000000468c43: and al, 0xe8; add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x000000000046842c: and al, 0xe8; add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0x5a; add dword ptr [rsi - 0x3f], esp; ret; 
0x000000000049874f: and al, 0xe8; add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x000000000040c098: and al, 0xe8; add dword ptr [rdx], 0x58d4800; ret; 
0x000000000045cd35: and al, 0xe8; add eax, 0x48fffadd; mov ebp, dword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000425656: and al, 0xe8; and al, 0xc0; add eax, dword ptr [rax]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048dd22: and al, 0xe8; clc; ret; 
0x000000000046b891: and al, 0xe8; imul esi, esi, 0x8b48ffff; insb byte ptr [rdi], dx; and al, 0x70; add rsp, 0x78; ret; 
0x0000000000431395: and al, 0xe8; in eax, 2; add eax, dword ptr [rax]; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000043ce08: and al, 0xe8; jb 0x3ce54; add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040aa25: and al, 0xe8; mov ch, 6; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000437dab: and al, 0xe8; outsd dx, dword ptr [rsi]; sub eax, 0xd2ebfffd; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000045c774: and al, 0xe8; paddw mm7, mm7; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000042d620: and al, 0xe8; pop rdx; add eax, dword ptr [rax]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000415023: and al, 0xe8; push rdi; mov byte ptr [rax + rax], 0x48; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000419fb8: and al, 0xe8; ret 0x476; 
0x000000000041d518: and al, 0xe8; ret 0x59; 
0x000000000042bbb8: and al, 0xe8; ret 0x87; 
0x0000000000463598: and al, 0xe8; ret 0xfa32; 
0x0000000000441498: and al, 0xe8; ret 0xfc93; 
0x0000000000455ab8: and al, 0xe8; ret 0xfde8; 
0x00000000004551b8: and al, 0xe8; ret 0xfdf1; 
0x00000000004123b7: and al, 0xe8; ret; 
0x0000000000417baf: and al, 0xe8; retf; ret 1; 
0x000000000048ebab: and al, 0xe8; syscall; 
0x0000000000497411: and al, 0xe8; test eax, 0x48ffffb2; mov ebp, dword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000043888f: and al, 0xe8; test rax, -0x74b80000; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x00000000004069aa: and al, 0xe8; xor byte ptr [rbp + rax + 0x6c8b4800], ch; and al, 8; add rsp, 0x10; ret; 
0x0000000000440c93: and al, 0xe8; xor eax, 0x2e8ffff; xor edi, edi; jmp qword ptr [rsi - 0x70]; 
0x000000000043f307: and al, 0xe8; xor esi, dword ptr [rdi - 0x74b70004]; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x00000000004287ab: and al, 0xf0; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000047ea6b: and al, 0xf0; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x0000000000439bbe: and al, 0xf0; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000047f0b4: and al, 0xf0; add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x0000000000498fd7: and al, 0xf0; add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x000000000047af68: and al, 0xf0; call 0x63d2c; mov rbp, qword ptr [rbp]; mov rbp, qword ptr [rsp + 0xe0]; add rsp, 0xe8; ret; 
0x000000000047b128: and al, 0xf0; call 0x63d2c; mov rbp, qword ptr [rbp]; mov rbp, qword ptr [rsp + 0xf0]; add rsp, 0xf8; ret; 
0x0000000000479ee8: and al, 0xf0; call 0x63d3a; mov rbp, qword ptr [rbp]; mov rbp, qword ptr [rsp + 0x160]; add rsp, 0x168; ret; 
0x0000000000422066: and al, 0xf8; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000042213c: and al, 0xf8; add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x00000000004683f7: and al, 0xf8; add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0x50; add dword ptr [rsi - 0x3f], esp; ret 0x4808; 
0x0000000000462fd1: and al, 0xf8; sub qword ptr [rsp], 5; mov rbx, qword ptr [rdx]; jmp rbx; 
0x0000000000406a51: and al, 0xf; add dword ptr [rax - 0x75], ecx; push rsp; and al, 0x18; mov rax, qword ptr [rdx]; call rax; 
0x0000000000465089: and al, 0xff; ror byte ptr [rax - 0x75], 1; and al, 0x24; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044c5d8: and al, 1; add byte ptr [rax], al; lea eax, [rdx + rbx]; mov dword ptr [rsp + 8], eax; ret; 
0x000000000045b67f: and al, 1; call 0x37260; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000430f25: and al, 3; add bl, ch; ret 0x8d48; 
0x0000000000430fdc: and al, 3; add byte ptr [rax - 0x74b71f15], dl; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x0000000000462fd6: and al, 5; mov rbx, qword ptr [rdx]; jmp rbx; 
0x0000000000430693: and al, 8; adc eax, 0xe8000000; ret 0x1b; 
0x0000000000454c13: and al, 8; adc eax, 0xe8000000; ret 0xfdf8; 
0x000000000040e0f4: and al, 8; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rdx]; call rax; 
0x000000000042b5de: and al, 8; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040405f: and al, 8; add byte ptr [rdx + rcx + 0x48], dh; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000403fa1: and al, 8; add byte ptr [rdx + rcx + 0x48], dh; mov ebp, dword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000468171: and al, 8; add dword ptr [rax], eax; add byte ptr [rdi], cl; mov bh, 0x5b; add dword ptr [rsi - 0x3f], esp; ret; 
0x0000000000437d99: and al, 8; add rsp, 0x10; nop; ret; 
0x0000000000405fed: and al, 8; add rsp, 0x10; ret; 
0x00000000004421c7: and al, 8; bt rax, 0x20; jb 0x421da; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000401036: and al, 8; call 0x1060; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045e9ee: and al, 8; call 0x11f80; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045ddd0: and al, 8; call 0x29ae0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040cf49: and al, 8; call 0x2b300; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000442242: and al, 8; call 0x2eba0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004464f7: and al, 8; call 0x2f340; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004051d5: and al, 8; call 0x34f20; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000405e7f: and al, 8; call 0x34f20; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000043bb68: and al, 8; call 0x36560; call 0x3ad60; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045b394: and al, 8; call 0x36ac0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000436f0b: and al, 8; call 0x36d40; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043aeec: and al, 8; call 0x397c0; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000415ef7: and al, 8; call 0x3b00; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045f2ff: and al, 8; call 0x3c200; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000434c6e: and al, 8; call 0x3cda0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004450f2: and al, 8; call 0x46780; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x000000000044a636: and al, 8; call 0x49320; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045a154: and al, 8; call 0x59ce0; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000411fb4: and al, 8; call 0x63da0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000413d49: and al, 8; call 0x63da0; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; nop; ret; 
0x000000000045a2cc: and al, 8; call 0x65060; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000047332e: and al, 8; call 0x73080; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000475996: and al, 8; call 0x733a0; mov rbp, qword ptr [rsp + 0x690]; add rsp, 0x698; ret; 
0x0000000000475938: and al, 8; call 0x73480; mov rbp, qword ptr [rsp + 0x690]; add rsp, 0x698; ret; 
0x00000000004915ef: and al, 8; call 0x91260; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; nop; ret; 
0x0000000000491942: and al, 8; call 0x91260; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000495663: and al, 8; call 0x94740; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000049663f: and al, 8; call 0x94740; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000423520: and al, 8; call 0xa5a0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000499804: and al, 8; call rax; 
0x0000000000493fef: and al, 8; cmp byte ptr [rax + 0x4b], 0; je 0x94001; mov eax, 1; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000493fba: and al, 8; cmp byte ptr [rax + 0x4c], 0; je 0x93fcc; mov eax, 1; mov byte ptr [rsp + 0x18], al; ret; 
0x000000000040326b: and al, 8; cmp byte ptr [rcx], al; sete byte ptr [rsp + 0x18]; ret; 
0x00000000004032aa: and al, 8; cmp dword ptr [rcx], eax; sete byte ptr [rsp + 0x18]; ret; 
0x0000000000467ea3: and al, 8; cmp qword ptr [rax + 0x18], 0; setne byte ptr [rsp + 0x10]; ret; 
0x00000000004032cb: and al, 8; cmp qword ptr [rcx], rax; sete byte ptr [rsp + 0x18]; ret; 
0x000000000040328b: and al, 8; cmp word ptr [rcx], ax; sete byte ptr [rsp + 0x18]; ret; 
0x000000000048af97: and al, 8; dec rax; mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x10], rax; call rdx; 
0x000000000048aaa6: and al, 8; dec rcx; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x10], rcx; call rax; 
0x000000000048aeb0: and al, 8; inc rcx; mov qword ptr [rsp + 0x78], rcx; mov qword ptr [rsp + 0x10], rcx; nop; call rdx; 
0x000000000048ab17: and al, 8; lea rsi, [rcx - 1]; mov qword ptr [rsp + 0x10], rsi; call rax; 
0x0000000000464903: and al, 8; mov dword ptr [rax], 0; mov edi, 0; mov eax, 0x3c; syscall; 
0x0000000000435847: and al, 8; mov dword ptr [rsp + 0x10], ecx; call 0x64980; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000049752e: and al, 8; mov dword ptr [rsp + 0xc], ebx; call 0x94dc0; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000401c4a: and al, 8; mov dword ptr [rsp + 0xc], edx; ret; 
0x000000000044656c: and al, 8; mov dword ptr [rsp], 6; call 0x46380; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x00000000004652a2: and al, 8; mov eax, 0x123; syscall; 
0x00000000004652a2: and al, 8; mov eax, 0x123; syscall; mov dword ptr [rsp + 0x10], eax; ret; 
0x00000000004649e7: and al, 8; mov eax, 0x125; syscall; 
0x00000000004649e7: and al, 8; mov eax, 0x125; syscall; mov dword ptr [rsp + 0x18], eax; ret; 
0x00000000004649c3: and al, 8; mov eax, 0x16; syscall; 
0x00000000004649c3: and al, 8; mov eax, 0x16; syscall; mov dword ptr [rsp + 0x10], eax; ret; 
0x0000000000464acb: and al, 8; mov eax, 0x3e; syscall; 
0x0000000000464acb: and al, 8; mov eax, 0x3e; syscall; ret; 
0x0000000000465383: and al, 8; mov eax, 0x3f; syscall; 
0x0000000000465383: and al, 8; mov eax, 0x3f; syscall; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000465282: and al, 8; mov eax, 0xd5; syscall; 
0x0000000000465282: and al, 8; mov eax, 0xd5; syscall; mov dword ptr [rsp + 0x10], eax; ret; 
0x00000000004648e2: and al, 8; mov eax, 0xe7; syscall; 
0x00000000004648e2: and al, 8; mov eax, 0xe7; syscall; ret; 
0x0000000000464a98: and al, 8; mov eax, 0xea; syscall; 
0x0000000000464a98: and al, 8; mov eax, 0xea; syscall; ret; 
0x0000000000464962: and al, 8; mov eax, 3; syscall; 
0x0000000000401ec3: and al, 8; mov eax, dword ptr [rsp + 0x10]; xchg dword ptr [rbx], eax; ret; 
0x0000000000464928: and al, 8; mov edx, dword ptr [rsp + 0x10]; mov r10d, dword ptr [rsp + 0x14]; mov eax, 0x101; syscall; 
0x0000000000497c08: and al, 8; mov qword ptr [rsp + 0x10], 5; call 0x91760; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000041fd45: and al, 8; mov qword ptr [rsp + 0x10], rax; call 0x2c220; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000411e08: and al, 8; mov qword ptr [rsp + 0x10], rax; call 0x64040; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004052e9: and al, 8; mov qword ptr [rsp + 0x10], rax; call 0x64040; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048ac27: and al, 8; mov qword ptr [rsp + 0x10], rax; call 0x8ac60; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004296ed: and al, 8; mov qword ptr [rsp + 0x10], rax; mov rax, qword ptr [rsp + 0x90]; lea rdx, [rsp + 0x90]; call rax; 
0x00000000004321e3: and al, 8; mov qword ptr [rsp + 0x10], rax; ret; 
0x00000000004726f4: and al, 8; mov qword ptr [rsp + 0x10], rbx; mov qword ptr [rsp + 0x18], rdi; call rax; 
0x00000000004941dd: and al, 8; mov qword ptr [rsp + 0x10], rbx; mov qword ptr [rsp + 0x18], rsi; call rax; 
0x000000000043454c: and al, 8; mov qword ptr [rsp + 0x10], rcx; call 0x33be0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000043444c: and al, 8; mov qword ptr [rsp + 0x10], rcx; call 0x33be0; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000048ae64: and al, 8; mov qword ptr [rsp + 0x10], rcx; call rsi; 
0x0000000000429547: and al, 8; mov qword ptr [rsp + 0x10], rcx; mov rax, qword ptr [rip + 0x9ce4b]; lea rdx, [rip + 0x9ce44]; call rax; 
0x000000000042978c: and al, 8; mov qword ptr [rsp + 0x10], rcx; mov rax, qword ptr [rsp + 0x90]; lea rdx, [rsp + 0x90]; call rax; 
0x000000000045c5e6: and al, 8; mov qword ptr [rsp + 0x10], rcx; mov rdx, qword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x000000000048fdd1: and al, 8; mov qword ptr [rsp + 0x10], rcx; ret; 
0x0000000000445d49: and al, 8; mov qword ptr [rsp + 0x10], rdi; call 0x44a80; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000048b068: and al, 8; mov qword ptr [rsp + 0x10], rdi; call rdx; 
0x0000000000407243: and al, 8; mov qword ptr [rsp + 0x18], rax; mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x20], rax; ret; 
0x00000000004162d0: and al, 8; mov qword ptr [rsp + 0x20], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000426b4e: and al, 8; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000483e75: and al, 8; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000424a68: and al, 8; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000483700: and al, 8; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040d1a8: and al, 8; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041501e: and al, 8; mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000425651: and al, 8; mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000431390: and al, 8; mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000043ce03: and al, 8; mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040a562: and al, 8; mov qword ptr [rsp], rbx; mov rdx, qword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000464e34: and al, 8; mov qword ptr [rsp], rdi; lea rax, [rip - 0x1fe01]; call rax; 
0x00000000004630a3: and al, 8; mov qword ptr fs:[0xfffffffffffffff8], rbx; ret; 
0x000000000045e7c3: and al, 8; mov rax, qword ptr [rax + 8]; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000045e7a3: and al, 8; mov rax, qword ptr [rax]; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000403609: and al, 8; mov rax, qword ptr [rdx]; call rax; 
0x000000000040f859: and al, 8; mov rax, qword ptr [rdx]; nop; call rax; 
0x0000000000401e63: and al, 8; mov rax, qword ptr [rsp + 0x10]; mov rcx, qword ptr [rsp + 0x18]; lock cmpxchg qword ptr [rbx], rcx; sete byte ptr [rsp + 0x20]; ret; 
0x0000000000401ee3: and al, 8; mov rax, qword ptr [rsp + 0x10]; xchg qword ptr [rbx], rax; ret; 
0x000000000045089a: and al, 8; mov rax, qword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x10], rax; mov rdx, qword ptr [rsp + 0x38]; mov rax, qword ptr [rdx]; call rax; 
0x000000000041fff0: and al, 8; mov rax, qword ptr [rsp + 0x70]; lea rdx, [rsp + 0x70]; call rax; 
0x000000000046489f: and al, 8; mov rax, qword ptr [rsp]; add rsp, 0x170; popfq; pop rbp; ret; 
0x00000000004540cb: and al, 8; mov rbx, qword ptr [rax]; mov rdx, rax; call rbx; 
0x000000000040df21: and al, 8; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000040fe39: and al, 8; mov rbx, qword ptr [rdx]; nop; call rbx; 
0x000000000045c5bf: and al, 8; mov rbx, qword ptr [rsp + 0x50]; mov qword ptr [rsp + 0x10], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000493f63: and al, 8; mov rcx, qword ptr [rax + 0x58]; movzx eax, byte ptr [rax + 0x48]; mov qword ptr [rsp + 0x10], rcx; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000493f83: and al, 8; mov rcx, qword ptr [rax + 0x60]; movzx eax, byte ptr [rax + 0x49]; mov qword ptr [rsp + 0x10], rcx; mov byte ptr [rsp + 0x18], al; ret; 
0x00000000004695a3: and al, 8; mov rcx, qword ptr [rax]; mov rax, qword ptr [rax + 8]; mov qword ptr [rsp + 0x10], rcx; mov qword ptr [rsp + 0x18], rax; ret; 
0x000000000040eefb: and al, 8; mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; 
0x000000000040e014: and al, 8; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000047d0a8: and al, 8; mov rcx, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0x100]; mov qword ptr [rsp], rcx; call rax; 
0x000000000048258f: and al, 8; mov rcx, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; call rax; 
0x000000000047c5ed: and al, 8; mov rcx, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; nop; call rax; 
0x0000000000485240: and al, 8; mov rcx, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0xe8]; mov qword ptr [rsp], rcx; call rax; 
0x000000000048530d: and al, 8; mov rcx, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0xe8]; mov qword ptr [rsp], rcx; nop; call rax; 
0x00000000004287e3: and al, 8; mov rcx, qword ptr [rsp + 0x110]; lea rdx, [rsp + 0x110]; call rcx; 
0x000000000048aba5: and al, 8; mov rdi, qword ptr [rsp + 0x48]; lea r8, [rax + rdi]; mov qword ptr [rsp + 0x10], r8; call rdx; 
0x0000000000464a2c: and al, 8; mov rdi, rsp; mov esi, 0; mov eax, 0x23; syscall; 
0x0000000000452dc8: and al, 8; mov rdx, qword ptr [rsp + 0xc0]; mov rcx, qword ptr [rdx]; call rcx; 
0x0000000000465322: and al, 8; mov rsi, 2; mov rdx, 1; mov eax, 0x48; syscall; 
0x0000000000465342: and al, 8; mov rsi, 3; mov rdx, 0; mov eax, 0x48; syscall; 
0x000000000046535b: and al, 8; mov rsi, 4; mov rdx, 0x800; or edx, eax; mov eax, 0x48; syscall; 
0x000000000040ef4b: and al, 8; mov rsi, qword ptr [rcx]; mov rdx, rcx; call rsi; 
0x00000000004653a3: and al, 8; mov rsi, qword ptr [rsp + 0x10]; mov eax, 0x95; syscall; 
0x00000000004653a3: and al, 8; mov rsi, qword ptr [rsp + 0x10]; mov eax, 0x95; syscall; mov qword ptr [rsp + 0x18], rax; ret; 
0x00000000004649a2: and al, 8; mov rsi, qword ptr [rsp + 0x10]; mov edx, dword ptr [rsp + 0x18]; mov eax, 0; syscall; 
0x0000000000464983: and al, 8; mov rsi, qword ptr [rsp + 0x10]; mov edx, dword ptr [rsp + 0x18]; mov eax, 1; syscall; 
0x00000000004650a3: and al, 8; mov rsi, qword ptr [rsp + 0x10]; mov edx, dword ptr [rsp + 0x18]; mov rax, 0x1c; syscall; 
0x00000000004651a3: and al, 8; mov rsi, qword ptr [rsp + 0x10]; mov rax, 0x83; syscall; 
0x0000000000465023: and al, 8; mov rsi, qword ptr [rsp + 0x10]; mov rax, 0xb; syscall; 
0x0000000000427e19: and al, 8; mov rsi, qword ptr [rsp + 0x110]; lea rdx, [rsp + 0x110]; call rsi; 
0x0000000000408f24: and al, 8; movsd qword ptr [rsp + 0x10], xmm0; ret; 
0x0000000000479c63: and al, 8; movzx eax, byte ptr [rax + 0x15]; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000479c83: and al, 8; movzx eax, byte ptr [rax + 0x16]; mov qword ptr [rsp + 0x10], rax; ret; 
0x00000000004673c3: and al, 8; movzx eax, byte ptr [rax + 0x17]; and eax, 0x1f; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000494024: and al, 8; movzx eax, byte ptr [rax + 0x4a]; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000493fdb: and al, 8; movzx eax, byte ptr [rax + 0x4d]; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000494016: and al, 8; movzx eax, byte ptr [rax + 0x4e]; mov byte ptr [rsp + 0x18], al; ret; 
0x00000000004495bb: and al, 8; nop dword ptr [rax]; call 0x48560; mov rbp, qword ptr [rsp + 0x1a8]; add rsp, 0x1b0; ret; 
0x0000000000494dfc: and al, 8; nop; call 0x91aa0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000047c4fd: and al, 8; nop; call rax; 
0x0000000000440513: and al, 8; or eax, 0xe8000000; ret 0xff3f; 
0x0000000000462f82: and al, 8; pause; sub eax, 1; jne 0x62f84; ret; 
0x000000000044c5e1: and al, 8; ret; 
0x0000000000426002: and al, 8; sbb eax, 0xe8000000; push rbx; ret 0; 
0x000000000045b4c9: and al, 8; sub rax, qword ptr [rip + 0x12bbd6]; add qword ptr [rip + 0x12bbc7], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048df57: and al, 8; syscall; 
0x000000000045e5c3: and al, 8; test rax, rax; je 0x5e5d3; mov rax, qword ptr [rax]; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000045e7e3: and al, 8; test rax, rax; je 0x5e7f3; mov rax, qword ptr [rax]; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000423859: and al, 8; test rax, rax; setne byte ptr [rsp + 0x38]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004840ab: and al, byte ptr [rax + rax]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000441f62: and al, byte ptr [rcx]; ret 0x948; 
0x000000000046189a: and al, byte ptr [rdi]; add byte ptr [rax], al; jmp rax; 
0x0000000000411e11: and al, byte ptr [rip + 0x6c8b4800]; and al, 0x18; add rsp, 0x20; ret; 
0x0000000000412c37: and al, ch; and eax, dword ptr [rbx]; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000412ca0: and al, ch; mov edx, 0x48000002; mov ebp, dword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000049a278: and al, ch; nop; cld; jmp qword ptr [rsi - 0x70]; 
0x0000000000436718: and al, ch; ret 0xffd3; 
0x000000000047ea58: and al, ch; ret 0xfffc; 
0x000000000046aa5a: and bh, byte ptr [rdi]; cli; jmp qword ptr [rsi - 0x70]; 
0x0000000000438795: and bh, ch; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x000000000044007f: and bl, ch; mov ebp, 0x40245c88; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048ab47: and bl, ch; movsd dword ptr [rdi], dword ptr [rsi]; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000433d07: and bl, ch; scasb al, byte ptr [rdi]; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048e8ab: and bl, ch; xchg eax, ebp; mov byte ptr [rsp + 0x50], 1; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004639e6: and byte ptr [r15], r9b; adc dword ptr [rdi + 0x30], eax; lea rdi, [rdi + 0x40]; ret; 
0x0000000000411291: and byte ptr [r8 + rdx + 0x48], sil; mov ebp, dword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000040f9a8: and byte ptr [r8 + rdx + 0x48], sil; mov ebp, dword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x000000000048ab0e: and byte ptr [r8 - 0x77], cl; adc al, 0x24; mov qword ptr [rsp + 8], rcx; lea rsi, [rcx - 1]; mov qword ptr [rsp + 0x10], rsi; call rax; 
0x00000000004310b7: and byte ptr [rax + 0x28247c], al; je 0x3111a; mov rax, qword ptr [rax + 0x18]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000448036: and byte ptr [rax + 0x29], cl; ret 0x8948; 
0x0000000000409220: and byte ptr [rax + 0x31], cl; ror dword ptr [rax - 0x77], 0x4c; and al, 0x18; ret; 
0x00000000004090d2: and byte ptr [rax + 0x31], cl; ror dword ptr [rax - 0x77], 0x4c; and al, 0x20; ret; 
0x0000000000464d73: and byte ptr [rax + 0xd], bh; syscall; 
0x0000000000464d73: and byte ptr [rax + 0xd], bh; syscall; mov dword ptr [rsp + 0x28], eax; ret; 
0x0000000000464d32: and byte ptr [rax + 0xe], bh; syscall; 
0x0000000000463116: and byte ptr [rax + 1], cl; ror byte ptr [rax - 0x77], 1; and al, 8; ret; 
0x00000000004669f9: and byte ptr [rax + r10 + 0x31], sil; ror byte ptr [rax + 0x48402444], 0x8b; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x00000000004669fa: and byte ptr [rax + rdx + 0x31], dh; ror byte ptr [rax + 0x48402444], 0x8b; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000410647: and byte ptr [rax + rdx + 0x48], dh; mov ebp, dword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000040f9a9: and byte ptr [rax + rdx + 0x48], dh; mov ebp, dword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x000000000044c45d: and byte ptr [rax - 0x73], cl; and al, 0x40; mov qword ptr [rsp + 0x28], rax; mov rax, qword ptr [rsp + 0x20]; lea rdx, [rsp + 0x20]; call rax; 
0x000000000044c46c: and byte ptr [rax - 0x73], cl; push rsp; and al, 0x20; call rax; 
0x0000000000441f7e: and byte ptr [rax - 0x74b7f58e], dl; insb byte ptr [rdi], dx; and al, 0x78; sub rsp, -0x80; ret; 
0x000000000048e761: and byte ptr [rax - 0x75], cl; adc dword ptr [rax - 9], ecx; ret 0xfff8; 
0x000000000045a27c: and byte ptr [rax - 0x75], cl; and al, 0x28; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000045c109: and byte ptr [rax - 0x75], cl; and al, 0x40; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000468930: and byte ptr [rax - 0x75], cl; and al, 0x60; mov rdx, qword ptr [rcx + 0x38]; mov rbx, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rbx; call rdx; 
0x000000000048df53: and byte ptr [rax - 0x75], cl; and al, 8; syscall; 
0x0000000000484945: and byte ptr [rax - 0x75], cl; cmp al, 0; add byte ptr [rax], al; mov qword ptr [rsp], rcx; call rax; 
0x00000000004983d2: and byte ptr [rax - 0x75], cl; cmp al, 0; add byte ptr [rax], al; mov qword ptr [rsp], rcx; nop; call rax; 
0x000000000040da58: and byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x00000000004997f0: and byte ptr [rax - 0x75], cl; push rax; mov qword ptr [rsp], rcx; mov rcx, qword ptr [rsp + 0xc8]; mov qword ptr [rsp + 8], rcx; call rax; 
0x000000000048fec9: and byte ptr [rax - 0x75], cl; push rax; sub byte ptr [rax - 0x75], cl; sbb byte ptr [r8 - 0x77], cl; adc al, 0x24; call rcx; 
0x0000000000405e42: and byte ptr [rax - 0x75], cl; push rsp; and al, 0x50; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000048622e: and byte ptr [rax - 0x75], cl; sbb byte ptr [rax + 0x48000000], 0x89; or al, 0x24; call rax; 
0x0000000000441bc5: and byte ptr [rax - 0x75], cl; sub al, 0x24; add rsp, 8; ret; 
0x000000000048ab0f: and byte ptr [rax - 0x77], cl; adc al, 0x24; mov qword ptr [rsp + 8], rcx; lea rsi, [rcx - 1]; mov qword ptr [rsp + 0x10], rsi; call rax; 
0x000000000043ac4d: and byte ptr [rax - 0x77], cl; add al, 0x24; mov rcx, qword ptr [rip + 0x8b8ef]; lea rdx, [rip + 0x8b8e8]; call rcx; 
0x000000000045ae8e: and byte ptr [rax - 0x77], cl; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x00000000004508a0: and byte ptr [rax - 0x77], cl; and al, 0x10; mov rdx, qword ptr [rsp + 0x38]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004873da: and byte ptr [rax - 0x77], cl; and al, 0x28; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042a9de: and byte ptr [rax - 0x77], cl; and al, 0x28; ret; 
0x00000000004204f8: and byte ptr [rax - 0x77], cl; and al, 0x30; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000466b3e: and byte ptr [rax - 0x77], cl; and al, 0x40; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042df94: and byte ptr [rax - 0x77], cl; and al, 0x40; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000046bd76: and byte ptr [rax - 0x77], cl; and al, 0x48; mov byte ptr [rsp + 0x50], 1; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048f13f: and byte ptr [rax - 0x77], cl; and al, 0x48; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045be4c: and byte ptr [rax - 0x77], cl; and al, 0x50; mov byte ptr [rsp + 0x58], 1; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042a658: and byte ptr [rax - 0x77], cl; and al, 0x50; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040a06d: and byte ptr [rax - 0x77], cl; and al, 0x50; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040cd1c: and byte ptr [rax - 0x77], cl; and al, 0x50; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000415a82: and byte ptr [rax - 0x77], cl; and al, 0x50; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000045c600: and byte ptr [rax - 0x77], cl; and al, 0x58; mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000451c38: and byte ptr [rax - 0x77], cl; and al, 0x58; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000044b3d0: and byte ptr [rax - 0x77], cl; and al, 0x68; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000483592: and byte ptr [rax - 0x77], cl; and al, 0x70; mov qword ptr [rsp + 0x78], rcx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000451910: and byte ptr [rax - 0x77], cl; and al, 0x70; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x000000000045f2fb: and byte ptr [rax - 0x77], cl; and al, 8; call 0x3c200; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000462e1f: and byte ptr [rax - 0x77], cl; out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x20000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000441ab5: and byte ptr [rax - 0x77], cl; pop rsp; and al, 0x28; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000043ff20: and byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x000000000041510e: and byte ptr [rax - 0x77], cl; retf 0x4828; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000403960: and byte ptr [rax - 0x79], cl; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000046b31f: and byte ptr [rax - 0x7b], cl; sal byte ptr [rcx + rbx*8 + 0x48], cl; mov eax, dword ptr [rdx]; call rax; 
0x0000000000460365: and byte ptr [rax - 0x7d], cl; clc; and byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000423201: and byte ptr [rax - 0x7d], cl; js 0x23216; add byte ptr [rdx + rcx + 0x48], dh; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000423261: and byte ptr [rax - 0x7d], cl; js 0x23276; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043e42d: and byte ptr [rax - 0x7d], cl; js 0x3e472; add byte ptr [rdx + rcx + 0x48], dh; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000461803: and byte ptr [rax - 0x7d], cl; stc; and byte ptr [rdi + 9], dh; lea rax, [rip + 0x1cf]; jmp rax; 
0x0000000000420bd5: and byte ptr [rax - 1], cl; adc byte ptr [r8 - 0x75], r9b; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x0000000000436b60: and byte ptr [rax - 1], cl; mov dword ptr [rbx + rcx*4 + 0x44], 0x89445424; ret 0x8b48; 
0x0000000000441a99: and byte ptr [rax - 1], cl; ret 0xc148; 
0x000000000042e968: and byte ptr [rax], ah; add byte ptr [rax], al; add rsp, 0x2028; ret; 
0x000000000044bec1: and byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0x876; 
0x000000000046c201: and byte ptr [rax], al; add byte ptr [rax], al; call 0x60340; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000044761c: and byte ptr [rax], al; add byte ptr [rcx + 0x39], cl; fimul dword ptr [rdi]; xchg eax, edx; ret 0x894c; 
0x0000000000461892: and byte ptr [rax], al; add byte ptr [rdi + 9], dh; lea rax, [rip + 0x722]; jmp rax; 
0x0000000000462767: and byte ptr [rax], al; add rsp, 0x200008; ret; 
0x0000000000461923: and byte ptr [rax], al; ja 0x61930; lea rax, [rip + 0xd92]; jmp rax; 
0x000000000042a5aa: and byte ptr [rax], al; jne 0x2a5be; movabs rax, 0x8000000000000000; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000046272b: and byte ptr [rax], al; mov rax, qword ptr [rdx]; call rax; 
0x000000000043ca6a: and byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000441bd2: and byte ptr [rax], al; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000046271e: and byte ptr [rax], al; mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x200018]; mov rax, qword ptr [rdx]; call rax; 
0x000000000044c288: and byte ptr [rax], al; ret; 
0x000000000049749e: and byte ptr [rax], dh; add byte ptr [rax], al; call 0x96100; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000464dd2: and byte ptr [rbp + 0x48], dl; mov ebp, esp; and rsp, 0xfffffffffffffff0; call rax; 
0x000000000042e44c: and byte ptr [rbp + 0x48bb7ec0], al; mov dword ptr [rsp + 0x660], 0; mov rbp, qword ptr [rsp + 0x648]; add rsp, 0x650; ret; 
0x0000000000460369: and byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044c966: and byte ptr [rbp + rcx*4 + 0x43], cl; add dword ptr [rbx + rcx*4 + 0x4a], ecx; sbb byte ptr [rbx + rcx*4 + 0x52], cl; sub byte ptr [rbp + 0x39], cl; ret 0x6f72; 
0x0000000000464f77: and byte ptr [rbx + rcx*4 + 0x4c], al; and al, 0x24; mov eax, 9; syscall; 
0x00000000004650d6: and byte ptr [rbx + rcx*4 + 0x4c], al; and al, 0x28; mov eax, 0xca; syscall; 
0x00000000004650d6: and byte ptr [rbx + rcx*4 + 0x4c], al; and al, 0x28; mov eax, 0xca; syscall; mov dword ptr [rsp + 0x30], eax; ret; 
0x000000000048dfb3: and byte ptr [rbx + rcx*4 + 0x54], cl; and al, 0x28; mov r8, qword ptr [rsp + 0x30]; mov r9, qword ptr [rsp + 0x38]; mov rax, qword ptr [rsp + 8]; syscall; 
0x0000000000465120: and byte ptr [rbx + rcx*4 + 0x64], cl; and al, 0x28; mov eax, 0x38; syscall; 
0x0000000000430f16: and byte ptr [rbx], al; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x0000000000433503: and byte ptr [rbx], al; add byte ptr [rax], al; ja 0x33513; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004734d6: and byte ptr [rbx], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045343d: and byte ptr [rbx], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x2c0]; add rsp, 0x2c8; ret; 
0x0000000000464c03: and byte ptr [rcx + 0x48282454], cl; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045a34f: and byte ptr [rcx + 0x6c8b4801], cl; and al, 0x28; add rsp, 0x30; ret; 
0x0000000000458b94: and byte ptr [rcx], al; add byte ptr [rax], al; add rsp, 0x128; nop; ret; 
0x0000000000428651: and byte ptr [rcx], al; add byte ptr [rax], al; add rsp, 0x128; ret; 
0x0000000000406dd9: and byte ptr [rcx], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x128], rcx; mov rbp, qword ptr [rsp + 0x108]; add rsp, 0x110; ret; 
0x000000000043ca5b: and byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000402301: and byte ptr [rcx], al; ret; 
0x000000000041e2a7: and byte ptr [rcx], dh; rol byte ptr [rax + rax*8 - 0x74b7f58c], 0x6c; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000419d58: and byte ptr [rcx], dh; shr bl, cl; add ecx, dword ptr [rax - 1]; ret 0x3948; 
0x00000000004630f6: and byte ptr [rdi + 5], dh; call 0x630c0; ret; 
0x00000000004619b4: and byte ptr [rdi + 9], dh; lea rax, [rip + 0x1402]; jmp rax; 
0x0000000000461807: and byte ptr [rdi + 9], dh; lea rax, [rip + 0x1cf]; jmp rax; 
0x000000000049672f: and byte ptr [rdi + rcx + 0x44], cl; ret 0x9090; 
0x00000000004639e7: and byte ptr [rdi], cl; adc dword ptr [rdi + 0x30], eax; lea rdi, [rdi + 0x40]; ret; 
0x0000000000457b34: and byte ptr [rdi], cl; mov bh, 0x51; add dword ptr [rsi - 0x3f], esp; ret 0xf08; 
0x000000000042f43e: and byte ptr [rdi], cl; mov edx, 0xa731be0; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004421cd: and byte ptr [rdx + 0xa], dh; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040212e: and ch, al; in eax, 0x74; ret 0xfdc5; 
0x0000000000441f5b: and cl, byte ptr [rax - 1]; ror dword ptr [rax - 0x3f], 0xe1; and al, byte ptr [rcx]; ret 0x948; 
0x00000000004022f8: and cl, ch; movabs byte ptr [0x1202444c6fffffe], al; ret; 
0x000000000048dd08: and dword ptr [rax + rax], ecx; mov qword ptr [rsp + 0x58], rax; mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048df08: and dword ptr [rax + rax], ecx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043af60: and dword ptr [rax - 0x70000000], 0x1b158948; ret; 
0x00000000004734d5: and dword ptr [rax], 3; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000041b7b1: and dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x000000000042f4ea: and dword ptr [rbp + rax - 0x7d], esi; clc; jne 0x2f4fc; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040fcb2: and dword ptr [rdi], ecx; mov dh, 0x52; or dh, dh; ret 0x7408; 
0x000000000042a250: and dword ptr [rdx + rax*8], ebx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042a21c: and dword ptr [rdx + rsi*8], ebx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044381b: and dword ptr [rdx - 4], esi; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x48; add rsp, 0x50; ret; 
0x0000000000411ecf: and dword ptr [rip + 0x448b4800], eax; and al, 0x28; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004673c9: and eax, 0x1f; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000048772e: and eax, 0x1f; mov qword ptr [rsp + 0x18], rax; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000483666: and eax, 0x1f; mov qword ptr [rsp + 0x20], rax; ret; 
0x00000000004922de: and eax, 0x244c8b48; mov byte ptr [rcx + 0xe], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000407f37: and eax, 0x480002bc; mov ebp, dword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000045b397: and eax, 0x48fffdb7; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000485297: and eax, 0x48ffff5a; mov eax, dword ptr [rsp + 8]; mov rcx, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004792c4: and eax, 0x60; or rax, 0x13; mov qword ptr [rsp + 0xc8], rax; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000401e4e: and eax, 0x7f; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000459c81: and eax, 0x7fff; mov dword ptr [rsp + 0x60], eax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000411d17: and eax, 0x80000523; cmp eax, 0x174943; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000047bdaa: and eax, 0x89480004; and al, 0x50; mov qword ptr [rsp + 0x58], 4; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048d8e2: and eax, 0x8948000c; and al, 0x50; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000047d8c9: and eax, 0x8b48fffe; and al, 0x10; mov qword ptr [rsp + 0xb0], rax; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000424a62: and eax, 0x8b48ffff; and al, 8; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046b0d6: and eax, 0xa7501a8; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004649ea: and eax, 0xf000001; add eax, 0x18244489; ret; 
0x0000000000465166: and eax, 0xfffffff8; call 0x630e0; call r12; mov edi, 0x6f; mov eax, 0x3c; syscall; 
0x0000000000445024: and eax, 0xfffffff8; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000045f5a4: and eax, 0xfffffff8; mov rax, qword ptr [rax + 0x30]; dec dword ptr [rax + 0x108]; ret; 
0x000000000043df09: and eax, 0xfffffff8; mov rax, qword ptr [rax + 0x30]; dec dword ptr [rax + 0xf0]; mov rbp, qword ptr [rsp + 0x260]; add rsp, 0x268; ret; 
0x0000000000438ca4: and eax, 0xfffffff8; mov rax, qword ptr [rax + 0x30]; mov byte ptr [rax + 0x114], 1; ret; 
0x00000000004616fe: and eax, 0xfffffff8; mov rsp, qword ptr [rax + 0x38]; mov qword ptr [rax + 0x38], 0; ret; 
0x00000000004617c1: and eax, 0xfffffff8; mov rsp, qword ptr [rbx + 0x38]; call 0x496e0; call 0x630c0; ret; 
0x0000000000461629: and eax, 0xfffffff8; mov rsp, qword ptr [rsi + 0x38]; push rax; mov rdx, rdi; mov rdi, qword ptr [rdi]; call rdi; 
0x0000000000463062: and eax, 0xfffffff8; mov rsp, rsi; mov dword ptr [rsp + 0x18], eax; ret; 
0x0000000000460804: and eax, 0xfffffff8; ret; 
0x000000000040200a: and eax, 1; lea rax, [rax*2 - 1]; mov qword ptr [r9], rax; ret; 
0x000000000042a4b4: and eax, 1; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000401039: and eax, dword ptr [rax]; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000464a37: and eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x0000000000464a37: and eax, dword ptr [rax]; add byte ptr [rax], al; syscall; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000412c39: and eax, dword ptr [rbx]; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x00000000004652a5: and eax, dword ptr [rcx]; add byte ptr [rax], al; syscall; 
0x00000000004652a5: and eax, dword ptr [rcx]; add byte ptr [rax], al; syscall; mov dword ptr [rsp + 0x10], eax; ret; 
0x000000000045c4ba: and eax, eax; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004496b8: and ebx, edx; cmp eax, ebx; jg 0x496a8; mov dword ptr [rsp + 0x10], ebx; ret; 
0x00000000004141f0: and ebx, edx; or ebx, r9d; mov byte ptr [rsi], bl; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x000000000040fb4a: and ecx, 0xfffffff7; mov byte ptr [rax + 8], cl; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000410ca9: and ecx, 0xfffffffb; mov byte ptr [rsi + 8], cl; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048e5e3: and ecx, dword ptr [rbx + rax]; add byte ptr [rax - 0x77], cl; and al, 0x10; mov qword ptr [rsp + 0x18], 0xb; ret; 
0x000000000040333b: and ecx, eax; mov byte ptr [rsp + 0x18], cl; ret; 
0x00000000004033d2: and ecx, edx; mov byte ptr [rsp + 0x18], cl; ret; 
0x0000000000429940: and edi, 1; shl rdi, 0xd; mov qword ptr [rsp + 0x48], rdi; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000418697: and edi, edi; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000448652: and edi, esp; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x78; sub rsp, -0x80; ret; 
0x00000000004100d9: and edx, 0xfffffffb; mov byte ptr [rsi + 8], dl; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044429c: and edx, dword ptr [rax + rax]; add byte ptr [rbp + 0xe], dh; mov qword ptr [rdx + 0x10], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004033d0: and edx, eax; and ecx, edx; mov byte ptr [rsp + 0x18], cl; ret; 
0x0000000000415e85: and edx, eax; cmp rcx, rdx; jb 0x15e96; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000402065: and esi, 1; lea rax, [rsi*2 - 1]; mov qword ptr [r9], rax; ret; 
0x0000000000464da8: and esp, 0xfffffff0; call rax; 
0x0000000000464dd8: and esp, 0xfffffff0; call rax; mov rsp, rbp; pop rbp; ret; 
0x0000000000464ff5: and esp, 0xfffffff0; mov qword ptr [rsp], rbx; call rax; 
0x000000000042a24f: and qword ptr [rdx + rax*8], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042a21b: and qword ptr [rdx + rsi*8], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048772d: and rax, 0x1f; mov qword ptr [rsp + 0x18], rax; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000483665: and rax, 0x1f; mov qword ptr [rsp + 0x20], rax; ret; 
0x00000000004792c3: and rax, 0x60; or rax, 0x13; mov qword ptr [rsp + 0xc8], rax; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000401e4d: and rax, 0x7f; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000402009: and rax, 1; lea rax, [rax*2 - 1]; mov qword ptr [r9], rax; ret; 
0x000000000042a4b3: and rax, 1; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000045c4b9: and rax, r8; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042993f: and rdi, 1; shl rdi, 0xd; mov qword ptr [rsp + 0x48], rdi; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000415e84: and rdx, rax; cmp rcx, rdx; jb 0x15e96; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000402064: and rsi, 1; lea rax, [rsi*2 - 1]; mov qword ptr [r9], rax; ret; 
0x0000000000464da7: and rsp, 0xfffffffffffffff0; call rax; 
0x0000000000464dd7: and rsp, 0xfffffffffffffff0; call rax; mov rsp, rbp; pop rbp; ret; 
0x0000000000464ff4: and rsp, 0xfffffffffffffff0; mov qword ptr [rsp], rbx; call rax; 
0x000000000040d5cf: bnd ja 0xd5e1; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000475a99: bnd jmp 0x7577f; mov rbp, qword ptr [rsp + 0x690]; add rsp, 0x698; ret; 
0x00000000004023e7: bsf edx, edx; je 0x23ba; cmp edx, ebx; jae 0x23ba; mov qword ptr [r8], rdx; ret; 
0x0000000000402409: bsf edx, edx; je 0x23ba; mov qword ptr [r8], rdx; ret; 
0x00000000004023b5: bsf edx, edx; jne 0x23c2; mov qword ptr [r8], -1; ret; 
0x0000000000402467: bsf edx, edx; sub rdi, rsi; add rdx, rdi; mov qword ptr [r8], rdx; vzeroupper; ret; 
0x0000000000402003: bsr ecx, ecx; shr rax, cl; and rax, 1; lea rax, [rax*2 - 1]; mov qword ptr [r9], rax; ret; 
0x000000000040205e: bsr ecx, edi; shr rsi, cl; and rsi, 1; lea rax, [rsi*2 - 1]; mov qword ptr [r9], rax; ret; 
0x0000000000402002: bsr rcx, rcx; shr rax, cl; and rax, 1; lea rax, [rax*2 - 1]; mov qword ptr [r9], rax; ret; 
0x000000000040205d: bsr rcx, rdi; shr rsi, cl; and rsi, 1; lea rax, [rsi*2 - 1]; mov qword ptr [r9], rax; ret; 
0x0000000000401a7e: bt eax, 0x13; setb byte ptr [rip + 0x184ff8]; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042f43f: bt eax, 0x1b; jae 0x2f44f; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004421ca: bt eax, 0x20; jb 0x421da; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000441f7b: bt eax, 0x20; nop; jb 0x41f8c; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000444e83: bt eax, 0xd; jae 0x44e93; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000482277: bt eax, 8; jae 0x822f7; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x00000000004421c9: bt rax, 0x20; jb 0x421da; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000441f7a: bt rax, 0x20; nop; jb 0x41f8c; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000484c17: bts eax, 7; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000483dd4: bts eax, 7; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004853e7: bts edx, 7; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000485635: bts edx, 7; mov qword ptr [rsp + 0x60], rdx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000484c16: bts rax, 7; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000483dd3: bts rax, 7; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004853e6: bts rdx, 7; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000485634: bts rdx, 7; mov qword ptr [rsp + 0x60], rdx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000401038: call 0x1060; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000468c44: call 0x1068c49; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x0000000000468dd4: call 0x1068dd9; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x00000000004691ef: call 0x10691f4; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x00000000004692e8: call 0x10692ed; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x00000000004693fa: call 0x10693ff; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x000000000046942a: call 0x106942f; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x000000000045e83a: call 0x11cc0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045e9f0: call 0x11f80; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000412c38: call 0x12f60; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000414ef7: call 0x147e0; mov rax, qword ptr [rsp + 0x28]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000424a60: call 0x16fe0; mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000041b7af: call 0x1d8e0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000402008: call 0x1e0a355; lea rax, [rax*2 - 1]; mov qword ptr [r9], rax; ret; 
0x000000000042a4b2: call 0x1e327ff; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000418327: call 0x1f0e0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000045bc00: call 0x1f240; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000421241: call 0x21120; mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045b200: call 0x21300; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x00000000004219f7: call 0x21a40; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004235e0: call 0x231e0; mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004236ae: call 0x23540; mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004369f1: call 0x2457f502; sub al, 0x39; ret 0x2075; 
0x000000000048ae58: call 0x248d37a9; add byte ptr [rax], 0; add byte ptr [rcx + rcx*4 + 0x44], cl; and al, 8; mov qword ptr [rsp + 0x10], rcx; call rsi; 
0x000000000048af43: call 0x248d3894; add byte ptr [rax], 0; add byte ptr [rcx + rcx*4 + 0x44], cl; and al, 0x10; call rsi; 
0x000000000040280e: call 0x2580; mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000403040: call 0x2580; mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x00000000004265e5: call 0x25de0; cmp byte ptr [rsp + 0x10], 0; je 0x265fb; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000426b46: call 0x26780; mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040288e: call 0x26a0; mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000423de6: call 0x26d60; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042714e: call 0x271a0; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000402d04: call 0x28c0; mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000045ddd2: call 0x29ae0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042ab06: call 0x2a180; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042ab5a: call 0x2a2a0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000402cc9: call 0x2a40; mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000041a963: call 0x2b120; call 0x2b1a0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041a968: call 0x2b1a0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040cf4b: call 0x2b300; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042b5d7: call 0x2b620; cmp byte ptr [rsp + 8], 0; jne 0x2b5ed; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041fd4c: call 0x2c220; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042d906: call 0x2d520; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000045c775: call 0x2d6c0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000043a9b3: call 0x2e2a0; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000442244: call 0x2eba0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042ede4: call 0x2ee20; mov rbp, qword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x000000000040388d: call 0x2f0e0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004464f9: call 0x2f340; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000403c00: call 0x2f4a0; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000042f0c0: call 0x2f5a0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000430fc6: call 0x30b80; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004803c7: call 0x30e60; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x0000000000496d40: call 0x30e60; mov rbp, qword ptr [rsp + 0x260]; add rsp, 0x268; ret; 
0x0000000000406a81: call 0x30e60; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000434c11: call 0x30e60; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; nop; ret; 
0x00000000004311c4: call 0x30e60; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000048f9ec: call 0x30e60; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x00000000004803c1: call 0x31980; nop; call 0x30e60; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x0000000000455165: call 0x33ae0; call 0x33da0; call 0x33b60; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000455a69: call 0x33ae0; call 0x33da0; call 0x33b60; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000043127a: call 0x33b60; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045c82b: call 0x33b60; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000456185: call 0x33b60; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004348a0: call 0x33b60; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000041eb50: call 0x33b60; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000045516f: call 0x33b60; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000455a73: call 0x33b60; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000407875: call 0x33b60; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000444a60: call 0x33b60; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x0000000000434899: call 0x33b60; nop; call 0x33b60; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000434015: call 0x33be0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000434553: call 0x33be0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004342b0: call 0x33be0; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000045c826: call 0x33da0; call 0x33b60; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045516a: call 0x33da0; call 0x33b60; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000455a6e: call 0x33da0; call 0x33b60; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000444a56: call 0x33da0; nop dword ptr [rax + rax]; call 0x33b60; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x0000000000407870: call 0x33e00; call 0x33b60; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000043432b: call 0x341e0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045c821: call 0x34300; call 0x33da0; call 0x33b60; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000434633: call 0x34380; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004344c6: call 0x34380; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000407f31: call 0x344a0; call 0x33b60; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x00000000004341b2: call 0x344e0; call 0x33b60; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000456180: call 0x344e0; call 0x33b60; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000045d180: call 0x344e0; call 0x33da0; call 0x33b60; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000433d71: call 0x344e0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; nop; ret; 
0x0000000000433e3a: call 0x344e0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004340c0: call 0x344e0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045676b: call 0x34660; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000044331a: call 0x34f20; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004051d7: call 0x34f20; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000405e81: call 0x34f20; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044354a: call 0x35340; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x00000000004607ef: call 0x35860; ret; 
0x0000000000435f99: call 0x35ea0; mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045d4f3: call 0x36200; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043bb6a: call 0x36560; call 0x3ad60; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045b396: call 0x36ac0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000436f0d: call 0x36d40; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045b681: call 0x37260; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000461536: call 0x374a0; call 0x630c0; ret; 
0x00000000004467b9: call 0x384a0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045d45a: call 0x386a0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000438d84: call 0x386a0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000439640: call 0x38b20; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000438f6d: call 0x38cc0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043c7ab: call 0x38f20; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000043aa34: call 0x39260; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044d2f3: call 0x3940; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000043aeee: call 0x397c0; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x00000000004487f8: call 0x39a0; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x00000000004375ce: call 0x3ad60; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043b5d8: call 0x3ad60; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043b7d5: call 0x3ad60; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000043bdc5: call 0x3ad60; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000415ef9: call 0x3b00; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042ed2d: call 0x3b00; mov rbp, qword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x000000000043b9af: call 0x3b700; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042f3d3: call 0x3bc0; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000045f301: call 0x3c200; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000434c70: call 0x3cda0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046152f: call 0x3cda0; pop rax; pop rax; call 0x374a0; call 0x630c0; ret; 
0x000000000043db20: call 0x3db00; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043db60: call 0x3db40; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043dba0: call 0x3db80; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043dbe0: call 0x3dbc0; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043dc20: call 0x3dc00; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043dc60: call 0x3dc40; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000445e83: call 0x3dc80; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x0000000000445120: call 0x3e240; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000404058: call 0x3e40; cmp byte ptr [rsp + 8], 0; je 0x406e; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043c7a6: call 0x3f100; call 0x38f20; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000043bdc0: call 0x410e0; call 0x3ad60; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000404095: call 0x41a0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042f145: call 0x43000; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000438890: call 0x431e0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000436f80: call 0x43640; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000419117: call 0x43640; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000418aa3: call 0x43640; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000483dd6: call 0x449185e2; and al, 0x58; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000484c19: call 0x44919425; and al, 0x50; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000445d50: call 0x44a80; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x0000000000437693: call 0x44b80; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000404864: call 0x4540; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000404280: call 0x4540; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000444ead: call 0x46380; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000446575: call 0x46380; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000045a480: call 0x4640; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004450f4: call 0x46780; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000446b05: call 0x46c80; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x00000000004489b2: call 0x4707d1ba; or byte ptr [rdi + rcx - 0x4a], al; sub bl, ch; ret 0x8b48; 
0x0000000000437694: call 0x4803776d; mov ebp, dword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000043d591: call 0x4803d599; mov ebp, dword ptr [rsp + 0x3d0]; add rsp, 0x3d8; ret; 
0x000000000044e1c7: call 0x4804e1cc; mov ebp, dword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x0000000000468ccb: call 0x48068cd0; mov ebp, dword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x0000000000468df8: call 0x48068dfd; mov ebp, dword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x00000000004692a5: call 0x480692aa; mov ebp, dword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x0000000000469355: call 0x4806935a; mov ebp, dword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x0000000000474ff4: call 0x48074ffc; add esp, 0x3f0; nop; ret; 
0x000000000047636a: call 0x4807636f; mov dword ptr [rsp + 0xf0], esi; mov qword ptr [rsp + 0xf8], rdi; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000477674: call 0x48077679; mov dword ptr [rsp + 0xf8], eax; mov qword ptr [rsp + 0x100], rcx; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x000000000047b376: call 0x4807b37c; mov ebp, dword ptr [rsp + 0x158]; add rsp, 0x160; ret; 
0x000000000047f71d: call 0x4807f722; mov dword ptr [rsp + 0xf0], eax; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x00000000004813a0: call 0x480813a6; mov dword ptr [rsp + 0x1f0], esi; mov rbp, qword ptr [rsp + 0x1b0]; add rsp, 0x1b8; ret; 
0x00000000004816eb: call 0x480816f1; mov dword ptr [rsp + 0x1f0], esi; mov rbp, qword ptr [rsp + 0x1b0]; add rsp, 0x1b8; ret; 
0x000000000048524a: call 0x4808524f; mov dword ptr [rsp], ecx; call rax; 
0x0000000000485317: call 0x4808531c; mov dword ptr [rsp], ecx; nop; call rax; 
0x000000000048bb3d: call 0x4808bb42; add esp, 0xf0; ret; 
0x000000000048bc17: call 0x4808bc1c; add esp, 0xf0; ret; 
0x000000000048bc33: call 0x4808bc38; add esp, 0xf0; ret; 
0x000000000048bc4f: call 0x4808bc54; add esp, 0xf0; ret; 
0x000000000048bd84: call 0x4808bd89; add esp, 0xf0; ret; 
0x000000000048bda0: call 0x4808bda5; add esp, 0xf0; ret; 
0x000000000048bdbc: call 0x4808bdc1; add esp, 0xf0; ret; 
0x000000000048be3c: call 0x4808be41; add esp, 0xf0; ret; 
0x000000000048be58: call 0x4808be5d; add esp, 0xf0; ret; 
0x000000000048be74: call 0x4808be79; add esp, 0xf0; nop; ret; 
0x000000000048bfd1: call 0x4808bfd6; add esp, 0xf0; ret; 
0x000000000048c0d2: call 0x4808c0d7; add esp, 0xf0; ret; 
0x000000000048c119: call 0x4808c11e; add esp, 0xf0; ret; 
0x000000000048c2ff: call 0x4808c304; add esp, 0xf0; ret; 
0x000000000048c31b: call 0x4808c320; add esp, 0xf0; ret; 
0x000000000048c59b: call 0x4808c5a0; add esp, 0xf0; ret; 
0x000000000048c661: call 0x4808c666; add esp, 0xf0; ret; 
0x000000000048c6d1: call 0x4808c6d6; add esp, 0xf0; ret; 
0x000000000048c7bb: call 0x4808c7c0; add esp, 0xf0; ret; 
0x000000000048c7d7: call 0x4808c7dc; add esp, 0xf0; ret; 
0x000000000048c7f3: call 0x4808c7f8; add esp, 0xf0; ret; 
0x000000000048c80b: call 0x4808c810; add esp, 0xf0; ret; 
0x000000000048c97f: call 0x4808c984; add esp, 0xf0; ret; 
0x000000000048c99b: call 0x4808c9a0; add esp, 0xf0; ret; 
0x000000000048ca9d: call 0x4808caa2; add esp, 0xf0; ret; 
0x000000000048cab9: call 0x4808cabe; add esp, 0xf0; ret; 
0x000000000048cad5: call 0x4808cada; add esp, 0xf0; ret; 
0x000000000048cb61: call 0x4808cb66; add esp, 0xf0; ret; 
0x000000000048cb7d: call 0x4808cb82; add esp, 0xf0; ret; 
0x000000000048cb99: call 0x4808cb9e; add esp, 0xf0; ret; 
0x000000000049380c: call 0x48093811; add esp, 0xf0; ret; 
0x000000000049391a: call 0x4809391f; add esp, 0xf0; ret; 
0x000000000049396b: call 0x48093970; add esp, 0xf0; ret; 
0x0000000000493ac9: call 0x48093ace; add esp, 0xf0; ret; 
0x000000000042d2c0: call 0x480c0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004495c0: call 0x48560; mov rbp, qword ptr [rsp + 0x1a8]; add rsp, 0x1b0; ret; 
0x0000000000447acb: call 0x48c67a18; cmp eax, 1; ja 0x47ac9; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000042f3d4: call 0x4902f120; mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000043a9b4: call 0x4903a8f1; mov ebp, dword ptr [rsp]; add rsp, 8; ret; 
0x0000000000455a74: call 0x49055859; mov ebp, dword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000044a638: call 0x49320; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004617ca: call 0x496e0; call 0x630c0; ret; 
0x0000000000404b10: call 0x4b20; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044ec81: call 0x4df80; mov eax, dword ptr [rsp + 0x30]; mov dword ptr [rsp + 0x78], eax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000452827: call 0x51480; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000452248: call 0x51480; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000452620: call 0x51480; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000452909: call 0x51480; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000045270f: call 0x51480; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000451540: call 0x51a80; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000045db2f: call 0x529e0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045dba0: call 0x529e0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x00000000004490fa: call 0x52d00; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045d0ec: call 0x52f40; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000455300: call 0x55320; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000405686: call 0x56a0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000456965: call 0x56c60; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x000000000044dda5: call 0x584616f2; jbe 0x4dd8e; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000045a156: call 0x59ce0; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x00000000004311b5: call 0x5cda0; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000434b55: call 0x5d480; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000466f20: call 0x5e4e0; call 0x5f600; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000466ea3: call 0x5e4e0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000403dd9: call 0x5f320; mov eax, dword ptr [rsp + 0x1c]; mov dword ptr [rsp + 0x48], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048df7d: call 0x5f320; ret; 
0x000000000046b1f7: call 0x5f5a0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000466f25: call 0x5f600; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000047d8c7: call 0x5fea0; mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0xb0], rax; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000046afda: call 0x60220; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046c205: call 0x60340; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000462d7c: call 0x60780; mov rbp, qword ptr [rsp + 0x10000000]; add rsp, 0x10000008; ret; 
0x00000000004629fc: call 0x60780; mov rbp, qword ptr [rsp + 0x1000000]; add rsp, 0x1000008; ret; 
0x000000000046267c: call 0x60780; mov rbp, qword ptr [rsp + 0x100000]; add rsp, 0x100008; ret; 
0x00000000004622fc: call 0x60780; mov rbp, qword ptr [rsp + 0x10000]; add rsp, 0x10008; ret; 
0x0000000000461f7c: call 0x60780; mov rbp, qword ptr [rsp + 0x1000]; add rsp, 0x1008; ret; 
0x0000000000461c66: call 0x60780; mov rbp, qword ptr [rsp + 0x100]; add rsp, 0x108; ret; 
0x0000000000462e5c: call 0x60780; mov rbp, qword ptr [rsp + 0x20000000]; add rsp, 0x20000008; ret; 
0x0000000000462adc: call 0x60780; mov rbp, qword ptr [rsp + 0x2000000]; add rsp, 0x2000008; ret; 
0x000000000046275c: call 0x60780; mov rbp, qword ptr [rsp + 0x200000]; add rsp, 0x200008; ret; 
0x00000000004623dc: call 0x60780; mov rbp, qword ptr [rsp + 0x20000]; add rsp, 0x20008; ret; 
0x000000000046205c: call 0x60780; mov rbp, qword ptr [rsp + 0x2000]; add rsp, 0x2008; ret; 
0x0000000000461d26: call 0x60780; mov rbp, qword ptr [rsp + 0x200]; add rsp, 0x208; ret; 
0x0000000000461a3c: call 0x60780; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046283c: call 0x60780; mov rbp, qword ptr [rsp + 0x400000]; add rsp, 0x400008; ret; 
0x00000000004624bc: call 0x60780; mov rbp, qword ptr [rsp + 0x40000]; add rsp, 0x40008; ret; 
0x0000000000461de6: call 0x60780; mov rbp, qword ptr [rsp + 0x400]; add rsp, 0x408; ret; 
0x0000000000461adc: call 0x60780; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000462c9c: call 0x60780; mov rbp, qword ptr [rsp + 0x8000000]; add rsp, 0x8000008; ret; 
0x000000000046291c: call 0x60780; mov rbp, qword ptr [rsp + 0x800000]; add rsp, 0x800008; ret; 
0x000000000046259c: call 0x60780; mov rbp, qword ptr [rsp + 0x80000]; add rsp, 0x80008; ret; 
0x0000000000461ea6: call 0x60780; mov rbp, qword ptr [rsp + 0x800]; add rsp, 0x808; ret; 
0x0000000000461ba3: call 0x60780; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x00000000004398b5: call 0x61580; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004499a0: call 0x61580; mov rbp, qword ptr [rsp + 0x1a0]; add rsp, 0x1a8; ret; 
0x0000000000432371: call 0x61580; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; nop; ret; 
0x0000000000434ec0: call 0x615e0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043be71: call 0x615e0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; nop; ret; 
0x00000000004069ab: call 0x615e0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000040d1a0: call 0x61680; mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042b4a0: call 0x61680; mov rbp, qword ptr [rsp + 0x168]; add rsp, 0x170; ret; 
0x0000000000415024: call 0x61680; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000425657: call 0x61680; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000403b65: call 0x61680; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000431396: call 0x61680; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000043ce09: call 0x61680; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004044b4: call 0x61680; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000416ae0: call 0x61680; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x0000000000460468: call 0x61680; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x00000000004630ef: call 0x630c0; cmp rsp, qword ptr [rax]; ja 0x630fe; call 0x630c0; ret; 
0x000000000046153b: call 0x630c0; ret; 
0x000000000046516b: call 0x630e0; call r12; mov edi, 0x6f; mov eax, 0x3c; syscall; 
0x0000000000430676: call 0x63280; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000463442: call 0x632c0; xchg rax, r8; ret; 
0x0000000000463462: call 0x632c0; xchg rax, r9; ret; 
0x0000000000463402: call 0x632c0; xchg rax, rbx; ret; 
0x00000000004633c2: call 0x632c0; xchg rax, rcx; ret; 
0x00000000004633e2: call 0x632c0; xchg rax, rdx; ret; 
0x0000000000463422: call 0x632c0; xchg rax, rsi; ret; 
0x000000000047af6a: call 0x63d2c; mov rbp, qword ptr [rbp]; mov rbp, qword ptr [rsp + 0xe0]; add rsp, 0xe8; ret; 
0x000000000047b12a: call 0x63d2c; mov rbp, qword ptr [rbp]; mov rbp, qword ptr [rsp + 0xf0]; add rsp, 0xf8; ret; 
0x0000000000479eea: call 0x63d3a; mov rbp, qword ptr [rbp]; mov rbp, qword ptr [rsp + 0x160]; add rsp, 0x168; ret; 
0x0000000000411fb6: call 0x63da0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000414530: call 0x63da0; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000413d4b: call 0x63da0; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; nop; ret; 
0x0000000000411d16: call 0x64040; cmp byte ptr [rip + 0x174943], 0; jne 0x11d2e; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000411e0f: call 0x64040; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004052f0: call 0x64040; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004459ec: call 0x648e0; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000045d364: call 0x648e0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000437820: call 0x64900; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000043580d: call 0x64980; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042f580: call 0x64b00; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000446aaa: call 0x64d20; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004385c6: call 0x64d20; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000045a2ce: call 0x65060; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042e761: call 0x650c0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000446e8a: call 0x651a0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000467506: call 0x67400; mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000468b6c: call 0x68b71; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x0000000000468c2c: call 0x68c31; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x0000000000468c5c: call 0x68c61; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x0000000000468c74: call 0x68c79; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x000000000046910c: call 0x69111; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x000000000046918a: call 0x6918f; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x00000000004691bf: call 0x691c4; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x00000000004691d7: call 0x691dc; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x0000000000469207: call 0x6920c; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x000000000046921f: call 0x69224; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x00000000004692d0: call 0x692d5; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x0000000000469412: call 0x69417; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x000000000047fe14: call 0x6af00; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x000000000046b892: call 0x6af00; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000482dae: call 0x6b1a0; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x000000000046bf20: call 0x6ba80; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000472fa9: call 0x72ca0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000472dee: call 0x72ca0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000473273: call 0x72ca0; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000473330: call 0x73080; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000475998: call 0x733a0; mov rbp, qword ptr [rsp + 0x690]; add rsp, 0x698; ret; 
0x0000000000473417: call 0x73480; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000047593a: call 0x73480; mov rbp, qword ptr [rsp + 0x690]; add rsp, 0x698; ret; 
0x0000000000479de6: call 0x79ce0; mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000483e6d: call 0x79da0; mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000484ece: call 0x7acc0; mov rax, qword ptr [rsp + 8]; mov rcx, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0x100]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004843ee: call 0x7acc0; mov rax, qword ptr [rsp + 8]; mov rcx, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000485238: call 0x7acc0; mov rax, qword ptr [rsp + 8]; mov rcx, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0xe8]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004877a9: call 0x83680; mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004878a9: call 0x83e20; mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000487829: call 0x83ee0; mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048b635: call 0x84a00; mov rax, qword ptr [rsp + 0x18]; mov rcx, qword ptr [rsp + 0x20]; mov rax, qword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000498e73: call 0x84a00; mov rax, qword ptr [rsp + 0x18]; mov rcx, qword ptr [rsp + 0x20]; mov rax, qword ptr [rax + 0xf8]; mov qword ptr [rsp], rcx; call rax; 
0x000000000048b2e2: call 0x8ab60; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048ba00: call 0x8abe0; mov rax, qword ptr [rsp + 0x70]; mov qword ptr [rsp + 0xc8], rax; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x000000000048ac2e: call 0x8ac60; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048c64b: call 0x8ba80; mov rax, qword ptr [rsp + 0x30]; mov qword ptr [rsp + 0x128], rax; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x000000000048eb2d: call 0x8e960; cmp byte ptr [rsp + 0x10], 0; jne 0x8eb43; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048eb8d: call 0x8e960; cmp byte ptr [rsp + 0x10], 0; jne 0x8eba3; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048f4d4: call 0x8eb00; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000048f7f4: call 0x8eb60; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x00000000004915f1: call 0x91260; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; nop; ret; 
0x0000000000491944: call 0x91260; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000493051: call 0x91400; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; nop; ret; 
0x00000000004927b0: call 0x91400; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000493911: call 0x91400; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x0000000000491ae4: call 0x91760; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000492720: call 0x91760; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000492fa0: call 0x91760; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000497c13: call 0x91760; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000494e00: call 0x91aa0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000494f60: call 0x91ec0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000497412: call 0x926c0; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x00000000004970e2: call 0x926c0; nop; call 0x30e60; mov rbp, qword ptr [rsp + 0x260]; add rsp, 0x268; ret; 
0x000000000049528e: call 0x931a0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000049ab60: call 0x94260; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000495665: call 0x94740; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000496641: call 0x94740; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000497534: call 0x94dc0; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000496195: call 0x94ee0; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000496f81: call 0x95620; nop; call 0x30e60; mov rbp, qword ptr [rsp + 0x260]; add rsp, 0x268; ret; 
0x000000000049800c: call 0x95800; mov rbp, qword ptr [rsp + 0x1c8]; add rsp, 0x1d0; ret; 
0x00000000004974a3: call 0x96100; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x00000000004994f3: call 0x97ca0; mov rbp, qword ptr [rsp + 0x1c8]; add rsp, 0x1d0; ret; 
0x0000000000413227: call 0xa515; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x50; add rsp, 0x58; ret; 
0x0000000000423522: call 0xa5a0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000440b75: call 0xaa00; mov rbp, qword ptr [rsp + 0xe0]; add rsp, 0xe8; ret; 
0x0000000000439752: call 0xaa40; call 0x38b20; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043b7d0: call 0xaa40; call 0x3ad60; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004600ac: call 0xaa40; mov eax, dword ptr [rsp + 0x2c]; mov dword ptr [rsp + 0x48], eax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004268e5: call 0xaa40; mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004269e6: call 0xaa40; mov rax, qword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004162c8: call 0xaa40; mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x20], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000041c360: call 0xaa40; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042b7eb: call 0xaa40; mov rbp, qword ptr [rsp + 0x168]; add rsp, 0x170; nop; ret; 
0x000000000041f287: call 0xaa40; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004161d4: call 0xaa40; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000041c624: call 0xaa40; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000041b1c9: call 0xaa40; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000409e30: call 0xaa40; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041b8e0: call 0xaa40; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044381a: call 0xaa40; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000042ba35: call 0xaa40; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000045ca42: call 0xaa40; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000448650: call 0xaa40; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000040b0f7: call 0xaa40; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000043f560: call 0xab20; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000439638: call 0xab20; nop dword ptr [rax]; call 0x38b20; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040aa26: call 0xb0e0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000040cdd3: call 0xc100; mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040ce60: call 0xc100; mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046842d: call 0xf068432; mov bh, 0x5a; add dword ptr [rsi - 0x3f], esp; ret; 
0x000000000047e1cd: call 0xf07e1d2; mov bh, 0x5a; add dword ptr [rsi - 0x3f], esp; ret; 
0x00000000004193e0: call 0xffffffff894993fb; ret 0x8748; 
0x00000000004873d3: call 0xffffffff895073d9; and al, 0x20; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043aa36: call 0xffffffff8b4caa3a; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000043aef0: call 0xffffffff8b4caef4; insb byte ptr [rdi], dx; and al, 0x58; add rsp, 0x60; ret; 
0x0000000000452c02: call 0xffffffff8b4e2c06; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x000000000045c21b: call 0xffffffff8b4ec21a; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x0000000000401e48: call 0xffffffffc801666d; and rax, 0x7f; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000042ef00: call 0xffffffffc8043744; sar rax, 1; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040c0f4: call 0xffffffffe900c64f; ret; 
0x000000000041492d: call 0xffffffffebca7a35; or eax, 0x245c8d4d; add dword ptr [rcx - 1], ecx; ret 0x894c; 
0x0000000000451275: call qword ptr [rax + 0x10564e8]; add bl, ch; ret 0xcccc; 
0x000000000043daf5: call qword ptr [rax + 0x23ce4e8]; add bl, ch; ret 0xcccc; 
0x000000000045f2d4: call qword ptr [rax + 0x2505e8]; add bl, ch; ret; 
0x0000000000435775: call qword ptr [rax + 0x2c064e8]; add bl, ch; ret 0xcccc; 
0x0000000000435735: call qword ptr [rax + 0x2c0a4e8]; add bl, ch; ret 0xcccc; 
0x000000000045c895: call qword ptr [rax + 0x4f44e8]; add bl, ch; ret 0xcccc; 
0x0000000000450efb: call qword ptr [rax + 0x58d4890]; ret; 
0x0000000000413dde: call qword ptr [rax + 0x74da3948]; or cl, byte ptr [rax - 1]; ret; 
0x0000000000482617: call qword ptr [rax - 0x20e3d18]; jmp qword ptr [rsi - 0x70]; 
0x0000000000482757: call qword ptr [rax - 0x20f7d18]; jmp qword ptr [rsi - 0x70]; 
0x0000000000466b57: call qword ptr [rax - 0x537d18]; jmp qword ptr [rsi - 0x70]; 
0x0000000000456512: call qword ptr [rax - 0x5afa72b8]; call qword ptr [rdx]; 
0x0000000000444bc7: call qword ptr [rax]; 
0x0000000000407844: call qword ptr [rbx]; 
0x0000000000437032: call qword ptr [rcx]; 
0x0000000000453fd0: call qword ptr [rdx]; 
0x000000000041669f: call qword ptr [rsi]; 
0x0000000000465170: call r12; mov edi, 0x6f; mov eax, 0x3c; syscall; 
0x000000000040360e: call rax; 
0x000000000043ad01: call rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000046308b: call rax; mov rsi, qword ptr [rsp + 0x28]; mov rsp, rsi; mov dword ptr [rsp + 0x18], eax; ret; 
0x0000000000464ffc: call rax; mov rsp, qword ptr [rsp]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046508a: call rax; mov rsp, qword ptr [rsp]; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000464ddb: call rax; mov rsp, rbp; pop rbp; ret; 
0x0000000000464dab: call rax; mov rsp, rbx; mov dword ptr [rsp + 0x38], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004971e3: call rax; nop; call 0x30e60; mov rbp, qword ptr [rsp + 0x260]; add rsp, 0x268; ret; 
0x00000000004051a1: call rbx; 
0x000000000040e019: call rcx; 
0x0000000000452dd5: call rcx; cmp byte ptr [rsp + 0x10], 0; jne 0x52d65; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x0000000000456ca8: call rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000456d6a: call rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000461639: call rdi; 
0x0000000000461639: call rdi; pop rax; lea rax, [rip - 0x2bf03]; jmp rax; 
0x0000000000468943: call rdx; 
0x000000000040ef53: call rsi; 
0x0000000000465171: call rsp; 
0x0000000000465171: call rsp; mov edi, 0x6f; mov eax, 0x3c; syscall; 
0x000000000046b53b: cdq; mov qword ptr [rsp + 0x68], rcx; mov qword ptr [rsp + 0x70], rdx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000414532: clc; add al, 0; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000045f635: clc; add al, 0x7c; shufps xmm0, xmmword ptr [rsp + 0x28], 0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000494834: clc; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add al, 0x24; call rcx; 
0x00000000004973f6: clc; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add al, 0x24; nop; call rcx; 
0x0000000000484949: clc; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; or al, 0x24; call rax; 
0x00000000004983d6: clc; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; or al, 0x24; nop; call rax; 
0x0000000000422067: clc; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000042213d: clc; add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x00000000004683f8: clc; add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0x50; add dword ptr [rsi - 0x3f], esp; ret 0x4808; 
0x000000000046512f: clc; add byte ptr [rbp + rax - 0x77], dh; and al, 0x30; ret; 
0x0000000000464bcd: clc; add byte ptr [rcx + rax*2 - 0x41], dh; add byte ptr [rax], al; add byte ptr [rax], al; lea rsi, [rsp]; call rax; 
0x0000000000464cad: clc; add byte ptr [rdi + rax*2 - 0x41], dh; add dword ptr [rax], eax; add byte ptr [rax], al; lea rsi, [rsp]; call rax; 
0x000000000046513d: clc; add byte ptr [rdi + rbp + 0x49], dh; cmp ecx, 0; je 0x65170; mov eax, 0xba; syscall; 
0x00000000004469a9: clc; add dword ptr [rbp + 0xf], esi; mov byte ptr [rsp + 0x60], 1; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000447ad1: clc; add dword ptr [rdi - 0xc], esi; mov qword ptr [rsp + 0x10], rcx; ret; 
0x0000000000441584: clc; add eax, 0x728d0000; add dword ptr [rcx - 0x4ef00f30], ecx; mov cl, 0xf0; add eax, 0x940f0000; ret 0xd284; 
0x0000000000460368: clc; and byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042e314: clc; cmc; jne 0x2e32c; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000402295: clc; cmp rcx, rdx; sete byte ptr [rax]; ret; 
0x0000000000471b5a: clc; in eax, 0xff; jmp qword ptr [rsi - 0x70]; 
0x0000000000402262: clc; ja 0x222b; add byte ptr [rax], al; ret; 
0x0000000000402459: clc; ja 0x24a5; mov dword ptr [rax], 0xffffffff; ret; 
0x000000000042f4ee: clc; jne 0x2f4fc; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000046417d: clc; mov qword ptr [rdi], rax; mov qword ptr [rdi + rbx - 8], rcx; ret; 
0x000000000042ef07: clc; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000406b5b: clc; mov qword ptr [rsp + 0x68], rax; mov qword ptr [rsp + 0x70], rdx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000462fcd: clc; mov rbp, qword ptr [rsp - 8]; sub qword ptr [rsp], 5; mov rbx, qword ptr [rdx]; jmp rbx; 
0x0000000000402290: clc; mov rdx, qword ptr [rdi + rbx - 8]; cmp rcx, rdx; sete byte ptr [rax]; ret; 
0x0000000000441131: clc; or eax, 0x940f0000; ret 0xd284; 
0x000000000044154a: clc; or eax, 0x940f0000; ret; 
0x0000000000412404: clc; ret 0; 
0x00000000004081e4: clc; ret 2; 
0x000000000045135b: clc; ret; 
0x0000000000401a85: clc; sbb byte ptr [r8], r8b; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004022d0: clc; shr rdi, cl; sub rdi, rsi; shl rdi, cl; sete byte ptr [rax]; ret; 
0x0000000000462fd2: clc; sub qword ptr [rsp], 5; mov rbx, qword ptr [rdx]; jmp rbx; 
0x00000000004640e5: clc; test eax, 7; je 0x640f3; mov rcx, rbx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000049400f: clc; xor byte ptr [rbp - 0x41], dh; mov rax, qword ptr [rsp + 8]; movzx eax, byte ptr [rax + 0x4e]; mov byte ptr [rsp + 0x18], al; ret; 
0x000000000043c563: cld; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000440dfb: cld; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000045ee4b: cld; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x000000000046b177: cld; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x000000000044381d: cld; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x48; add rsp, 0x50; ret; 
0x000000000043f563: cld; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x50; add rsp, 0x58; ret; 
0x000000000044a8aa: cld; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x68; add rsp, 0x70; ret; 
0x000000000046b8c9: cld; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x70; add rsp, 0x78; ret; 
0x0000000000448653: cld; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x78; sub rsp, -0x80; ret; 
0x000000000043c487: cld; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x000000000045b203: cld; dec dword ptr [rax - 0x75]; sub al, 0x24; add rsp, 8; ret; 
0x000000000045b0b4: cld; inc dword ptr [rax + 0x28247c]; je 0x5b0c7; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044329c: cld; jmp qword ptr [rsi - 0x70]; 
0x0000000000464167: cld; mov dword ptr [rdi], eax; mov dword ptr [rdi + rbx - 4], ecx; ret; 
0x0000000000463f6d: cld; ret; 
0x0000000000461960: cld; sldt word ptr [rax]; jmp rax; 
0x000000000040c302: cli; adc byte ptr [rdi], cl; cmp dword ptr [rbx + 0x48000004], -0x75; sbb byte ptr [r9 - 9], r9b; ret 7; 
0x00000000004567ee: cli; add dword ptr [rbp + 0xf], esi; mov byte ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000423aa3: cli; add dword ptr [rdi + 0xa], esi; cmp qword ptr [rcx + 0x70], rax; seta byte ptr [rsp + 0x10]; ret; 
0x0000000000423b34: cli; add dword ptr [rdi], ecx; xchg eax, ebp; ret 0xd284; 
0x0000000000482616: cli; call qword ptr [rax - 0x20e3d18]; jmp qword ptr [rsi - 0x70]; 
0x0000000000482756: cli; call qword ptr [rax - 0x20f7d18]; jmp qword ptr [rsi - 0x70]; 
0x0000000000466b56: cli; call qword ptr [rax - 0x537d18]; jmp qword ptr [rsi - 0x70]; 
0x000000000045b003: cli; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000045af30: cli; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000045a483: cli; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000045cd39: cli; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x000000000045c21c: cli; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x000000000045bc95: cli; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; ret; 
0x000000000048f578: cli; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x60; add rsp, 0x68; ret; 
0x000000000045ca45: cli; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x68; add rsp, 0x70; ret; 
0x000000000045bf0d: cli; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x00000000004600af: cli; dec dword ptr [rbx - 0x76d3dbbc]; and al, 0x48; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000041f1aa: cli; jae 0x1f1c3; add byte ptr [rdi - 0x18], dh; mov qword ptr [rip + 0x15e7f9], rdi; ret; 
0x000000000046aa5c: cli; jmp qword ptr [rsi - 0x70]; 
0x0000000000426837: cli; lock inc dword ptr [rax]; add byte ptr [rdi], cl; xchg eax, edi; ret 0x8490; 
0x000000000042687a: cli; lock inc dword ptr [rax]; add byte ptr [rdi], cl; xchg eax, edi; ret 0xd284; 
0x000000000040246f: cli; mov qword ptr [r8], rdx; vzeroupper; ret; 
0x0000000000461635: cli; mov rdi, qword ptr [rdi]; call rdi; 
0x0000000000461635: cli; mov rdi, qword ptr [rdi]; call rdi; pop rax; lea rax, [rip - 0x2bf03]; jmp rax; 
0x0000000000461712: cli; mov rdi, qword ptr [rdi]; jmp rdi; 
0x0000000000414787: cli; movabs eax, dword ptr [0x8948602444891375]; and al, 0x68; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000437d51: cmc; adc dword ptr [rax], eax; mov qword ptr [rsp], rcx; mov rax, qword ptr [rdx]; call rax; 
0x000000000042e315: cmc; jne 0x2e32c; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000493fd1: cmc; mov byte ptr [rsp + 0x18], 0; ret; 
0x0000000000478261: cmovae ecx, dword ptr [rdi]; mov dh, 0xc; or byte ptr [rax + 0x39], cl; ret; 
0x000000000042dea2: cmove eax, ecx; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000042a733: cmove ecx, edx; shl rax, 6; add rax, rcx; mov qword ptr [rsp + 0x18], rax; ret; 
0x000000000042e95a: cmove edx, eax; mov dword ptr [rsp + 0x2030], edx; mov rbp, qword ptr [rsp + 0x2020]; add rsp, 0x2028; ret; 
0x000000000042dea1: cmove rax, rcx; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000042a732: cmove rcx, rdx; shl rax, 6; add rax, rcx; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000486cec: cmovne eax, edx; or rax, rcx; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044c2cb: cmovne eax, esi; mov qword ptr [rsp + 0x18], rax; mov byte ptr [rsp + 0x20], 1; ret; 
0x0000000000486ceb: cmovne rax, rdx; or rax, rcx; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044c2ca: cmovne rax, rsi; mov qword ptr [rsp + 0x18], rax; mov byte ptr [rsp + 0x20], 1; ret; 
0x000000000044fb5b: cmovo ecx, dword ptr [rax + 0x4878247c]; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000415fa4: cmovs eax, dword ptr [rbp + 0x480a75c0]; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000415c7e: cmovs eax, dword ptr [rcx]; ret; 
0x000000000046b910: cmovs eax, edi; sbb byte ptr [r8], al; add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret 0x1f0f; 
0x000000000048b295: cmovs ebp, dword ptr [rcx]; ret 0x8948; 
0x000000000041bb97: cmovs ecx, dword ptr [rbx + 0x4878246c]; sub esp, -0x80; ret; 
0x0000000000405d21: cmovs ecx, dword ptr [rbx - 0x7ab7b7b0]; ror byte ptr [rdi], cl; xchg eax, esp; ret 0xcae9; 
0x000000000042d076: cmovs ecx, dword ptr [rcx + 0x48302444]; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042cd74: cmovs ecx, dword ptr [rcx + 0x4830245c]; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042cfd6: cmovs ecx, dword ptr [rcx + 0x48382444]; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043d8c9: cmovs ecx, dword ptr [rcx + 0x4838244c]; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000427c57: cmovs ecx, dword ptr [rcx + 0x48402444]; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043ccfd: cmovs ecx, dword ptr [rcx + 0x48482444]; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000041702e: cmovs ecx, dword ptr [rcx + 0x4848245c]; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040d5d1: cmovs ecx, dword ptr [rcx + 0x4858244c]; mov ebp, dword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000447c0f: cmovs ecx, dword ptr [rcx + 0x48582454]; mov ebp, dword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040db44: cmovs ecx, dword ptr [rcx + 0x48602454]; mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040d3b8: cmovs ecx, dword ptr [rcx + 0x48702444]; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000045fbb0: cmovs edi, edi; ret; 
0x000000000046321d: cmp ah, bl; add eax, 0x12365c; aesenc xmm0, xmmword ptr [rip + 0x123663]; aesenc xmm0, xmmword ptr [rip + 0x12366a]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x0000000000463226: cmp ah, bl; add eax, 0x123663; aesenc xmm0, xmmword ptr [rip + 0x12366a]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x000000000046322f: cmp ah, bl; add eax, 0x12366a; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x00000000004631bc: cmp ah, bl; add eax, 0x1236bd; aesenc xmm0, xmmword ptr [rip + 0x1236c4]; aesenc xmm0, xmmword ptr [rip + 0x1236cb]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x00000000004631c5: cmp ah, bl; add eax, 0x1236c4; aesenc xmm0, xmmword ptr [rip + 0x1236cb]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x00000000004631ce: cmp ah, bl; add eax, 0x1236cb; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x0000000000460ab0: cmp ah, bl; jmp qword ptr [rsi + 0x45]; 
0x0000000000460979: cmp ah, bl; jmp qword ptr [rsi + 0xf]; 
0x0000000000460894: cmp ah, bl; leave; aesenc xmm1, xmm1; aesenc xmm1, xmm1; movq qword ptr [rdx], xmm1; ret; 
0x0000000000460899: cmp ah, bl; leave; aesenc xmm1, xmm1; movq qword ptr [rdx], xmm1; ret; 
0x000000000046089e: cmp ah, bl; leave; movq qword ptr [rdx], xmm1; ret; 
0x0000000000460974: cmp ah, bl; mul byte ptr [rsi + 0xf]; cmp ah, bl; jmp qword ptr [rsi + 0xf]; 
0x0000000000484948: cmp al, 0; add byte ptr [rax], al; mov qword ptr [rsp], rcx; call rax; 
0x00000000004983d5: cmp al, 0; add byte ptr [rax], al; mov qword ptr [rsp], rcx; nop; call rax; 
0x0000000000464911: cmp al, 0; add byte ptr [rax], al; syscall; 
0x0000000000443105: cmp al, 0x1b; jb 0x4311f; lea rax, [rip + 0x7d76a]; mov qword ptr [rsp + 0x10], rax; mov qword ptr [rsp + 0x18], 0x13; ret; 
0x0000000000442a0c: cmp al, 0x24; add byte ptr [rdx + rcx + 0x48], dh; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000418c7c: cmp al, 0x24; dec dword ptr [rdi]; xchg eax, ebp; ret; 
0x0000000000464e38: cmp al, 0x24; lea rax, [rip - 0x1fe01]; call rax; 
0x000000000041ffeb: cmp al, 0x24; mov qword ptr [rsp + 8], r11; mov rax, qword ptr [rsp + 0x70]; lea rdx, [rsp + 0x70]; call rax; 
0x000000000040f854: cmp al, 0x24; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; nop; call rax; 
0x00000000004941d8: cmp al, 0x24; mov qword ptr [rsp + 8], rdx; mov qword ptr [rsp + 0x10], rbx; mov qword ptr [rsp + 0x18], rsi; call rax; 
0x0000000000464cfa: cmp al, 0x24; mov rsi, 0; mov rax, qword ptr [rip + 0xdc456]; call rax; 
0x0000000000464c14: cmp al, 0x24; mov rsi, 0; mov rax, qword ptr [rip + 0xdc53c]; call rax; 
0x000000000047304c: cmp al, 0x32; movzx r8d, byte ptr [rcx + rsi]; cmp dil, r8b; je 0x73038; setb byte ptr [rsp + 0x30]; ret; 
0x0000000000464fe9: cmp al, 0x48; mov eax, dword ptr [rip + 0xf1a3f]; mov rbx, rsp; and rsp, 0xfffffffffffffff0; mov qword ptr [rsp], rbx; call rax; 
0x000000000044f133: cmp al, 0x48; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000455f59: cmp al, 0x5a; setbe al; mov byte ptr [rsp + 0x60], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042d9e5: cmp al, 0x89; and al, 0x40; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042b0eb: cmp al, 0xd9; cmp rsi, rdi; je 0x2b0dd; mov byte ptr [rsp + 0x38], 0; ret; 
0x000000000043e318: cmp al, 0xf; je 0x3e305; mov byte ptr [rsp + 0x30], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043daf9: cmp al, 2; add bl, ch; ret 0xcccc; 
0x000000000040ab62: cmp al, 2; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x00000000004605dc: cmp al, byte ptr [rax]; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x00000000004929ad: cmp al, byte ptr [rbp - 0x77]; ret; 
0x0000000000432817: cmp al, ch; ret; 
0x0000000000478fdb: cmp ax, cx; sete al; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000473054: cmp bh, al; je 0x73038; setb byte ptr [rsp + 0x30]; ret; 
0x000000000043a9b5: cmp bh, bh; dec dword ptr [rax - 0x75]; sub al, 0x24; add rsp, 8; ret; 
0x000000000044c4fb: cmp bl, al; mov qword ptr [rsp + 0x10], rcx; mov rax, qword ptr [rsp + 0x20]; lea rdx, [rsp + 0x20]; call rax; 
0x000000000044c4af: cmp bl, al; mov qword ptr [rsp + 0x18], rax; mov rax, qword ptr [rsp + 0x20]; lea rdx, [rsp + 0x20]; call rax; 
0x000000000048ada5: cmp bl, ch; lodsd eax, dword ptr [rsi]; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040d3f4: cmp bl, ch; ret 0x4890; 
0x0000000000450720: cmp bl, ch; ret 0xff83; 
0x0000000000492bfc: cmp byte ptr [r8 + 0xa], 0; jne 0x92c0d; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000492d30: cmp byte ptr [r8 + 8], 0; jne 0x92d41; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000048ff8c: cmp byte ptr [r8 - 0x75], cl; mov qword ptr [rsp + 0x10], rax; mov qword ptr [rsp + 0x18], rcx; ret; 
0x000000000042f294: cmp byte ptr [rax + 0x12], bh; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + 0xa], cl; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045b304: cmp byte ptr [rax + 0x16], 0x48; mov ebp, dword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x00000000004088de: cmp byte ptr [rax + 0x29], cl; ret 0x8948; 
0x0000000000432212: cmp byte ptr [rax + 0x32], 0; je 0x32221; xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x10], xmm0; ret; 
0x0000000000428f47: cmp byte ptr [rax + 0x39], cl; ret 0x1876; 
0x000000000046b3f2: cmp byte ptr [rax + 0x39], cl; ret 0x627e; 
0x0000000000417029: cmp byte ptr [rax + 0x40], 0; jne 0x1703e; mov qword ptr [rsp + 0x48], rbx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000461631: cmp byte ptr [rax + 0x48], dl; mov edx, edi; mov rdi, qword ptr [rdi]; call rdi; 
0x0000000000493ff1: cmp byte ptr [rax + 0x4b], 0; je 0x94001; mov eax, 1; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000493fbc: cmp byte ptr [rax + 0x4c], 0; je 0x93fcc; mov eax, 1; mov byte ptr [rsp + 0x18], al; ret; 
0x00000000004377fe: cmp byte ptr [rax + 0xa74c084], dl; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000492bfd: cmp byte ptr [rax + 0xa], 0; jne 0x92c0d; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000045a63b: cmp byte ptr [rax + 0xa], 0x32; nop; jne 0x5a64c; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000483dd2: cmp byte ptr [rax + 0xf], cl; mov edx, 0x894807e8; and al, 0x58; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000041ec94: cmp byte ptr [rax + 1], cl; mov byte ptr [rax + 0x48000016], dh; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040be20: cmp byte ptr [rax + 1], cl; ret; 
0x0000000000457ca1: cmp byte ptr [rax + 3], 0x5f; sete byte ptr [rsp + 0x10]; ret; 
0x0000000000492d31: cmp byte ptr [rax + 8], 0; jne 0x92d41; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000412473: cmp byte ptr [rax - 0x46], cl; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x1480000], al; ret 0xc148; 
0x000000000041c643: cmp byte ptr [rax - 0x73], cl; or eax, 0x16a53d; lock xadd qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000485385: cmp byte ptr [rax - 0x75], cl; add byte ptr [rax], 1; add byte ptr [rax], al; mov rcx, qword ptr [rsp + 0x40]; mov qword ptr [rsp], rcx; call rax; 
0x000000000048dfc2: cmp byte ptr [rax - 0x75], cl; and al, 8; syscall; 
0x0000000000424930: cmp byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000045efd5: cmp byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; nop; ret; 
0x000000000040281c: cmp byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x0000000000408ece: cmp byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000414fbe: cmp byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x00000000004913b7: cmp byte ptr [rax - 0x75], cl; je 0x913e0; xor bl, ch; mov eax, 0x246c8b48; add rsp, 0x48; ret; 
0x000000000048ff8d: cmp byte ptr [rax - 0x75], cl; mov qword ptr [rsp + 0x10], rax; mov qword ptr [rsp + 0x18], rcx; ret; 
0x0000000000483f14: cmp byte ptr [rax - 0x75], cl; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000464e5b: cmp byte ptr [rax - 0x75], cl; pop rsp; and al, 0x40; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000468939: cmp byte ptr [rax - 0x75], cl; pop rsp; and al, 0x68; mov qword ptr [rsp], rbx; call rdx; 
0x0000000000467cf2: cmp byte ptr [rax - 0x75], cl; push rsp; and al, 0x38; mov qword ptr [rsp], rdx; call rcx; 
0x000000000046891b: cmp byte ptr [rax - 0x75], cl; push rsp; and al, 0x58; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000467cf7: cmp byte ptr [rax - 0x77], cl; adc al, 0x24; call rcx; 
0x000000000047d9da: cmp byte ptr [rax - 0x77], cl; adc al, 0x24; nop; call rcx; 
0x000000000043b9aa: cmp byte ptr [rax - 0x77], cl; add al, 0x24; call 0x3b700; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004398b0: cmp byte ptr [rax - 0x77], cl; add al, 0x24; call 0x61580; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045e834: cmp byte ptr [rax - 0x77], cl; and al, 0x10; call 0x11cc0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042ab00: cmp byte ptr [rax - 0x77], cl; and al, 0x10; call 0x2a180; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000456765: cmp byte ptr [rax - 0x77], cl; and al, 0x10; call 0x34660; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000460253: cmp byte ptr [rax - 0x77], cl; and al, 0x10; call 0x43640; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004605d4: cmp byte ptr [rax - 0x77], cl; and al, 0x10; call 0x64040; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000467259: cmp byte ptr [rax - 0x77], cl; and al, 0x10; nop; ret; 
0x0000000000456ed5: cmp byte ptr [rax - 0x77], cl; and al, 0x10; ret; 
0x000000000045c549: cmp byte ptr [rax - 0x77], cl; and al, 0x40; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048fa76: cmp byte ptr [rax - 0x77], cl; and al, 0x40; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000460650: cmp byte ptr [rax - 0x77], cl; and al, 0x40; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x000000000044dcff: cmp byte ptr [rax - 0x77], cl; and al, 0x40; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000047ab36: cmp byte ptr [rax - 0x77], cl; and al, 0x50; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000483dfd: cmp byte ptr [rax - 0x77], cl; and al, 0x58; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000484af7: cmp byte ptr [rax - 0x77], cl; and al, 0x58; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000428bde: cmp byte ptr [rax - 0x77], cl; and al, 0x60; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044bc89: cmp byte ptr [rax - 0x77], cl; and al, 0x60; mov qword ptr [rsp + 0x68], rcx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000415be9: cmp byte ptr [rax - 0x77], cl; and al, 0x60; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000490737: cmp byte ptr [rax - 0x77], cl; and al, 0x70; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040cf45: cmp byte ptr [rax - 0x77], cl; and al, 8; call 0x2b300; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000436f07: cmp byte ptr [rax - 0x77], cl; and al, 8; call 0x36d40; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000439e93: cmp byte ptr [rax - 0x77], cl; ret 0x894c; 
0x0000000000454e4c: cmp byte ptr [rax - 0x77], cl; ret; 
0x000000000040fc65: cmp byte ptr [rax - 0x77], cl; xor al, 0x24; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000040fe31: cmp byte ptr [rax - 0x77], cl; xor al, 0x24; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; nop; call rbx; 
0x00000000004735c0: cmp byte ptr [rax - 0x78], al; je 0x735e9; mov qword ptr [rsp + 0x48], rbx; mov qword ptr [rsp + 0x50], rcx; mov byte ptr [rsp + 0x58], sil; ret; 
0x00000000004520e5: cmp byte ptr [rax - 0x7d], cl; ret 0x4807; 
0x0000000000459522: cmp byte ptr [rax - 0x7d], cl; rol byte ptr [rax + rcx*2], 0x89; and al, 0x40; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000459461: cmp byte ptr [rax - 0x7d], cl; rol byte ptr [rbx], 0x48; mov dword ptr [rsp + 0x40], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004593e2: cmp byte ptr [rax - 0x7d], cl; rol byte ptr [rdx], 0x48; mov dword ptr [rsp + 0x40], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000472f28: cmp byte ptr [rax - 0x7f], cl; jmp qword ptr [rax]; 
0x000000000045ad62: cmp byte ptr [rax], 0; je 0x5ad71; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045d4a0: cmp byte ptr [rax], 0; jne 0x5d4ae; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000045f6d7: cmp byte ptr [rax], al; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x000000000046170a: cmp byte ptr [rax], al; add byte ptr [rax], al; add bl, al; mov rdx, rdi; mov rdi, qword ptr [rdi]; jmp rdi; 
0x0000000000465127: cmp byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x000000000045ad63: cmp byte ptr [rax], al; je 0x5ad71; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045d4a1: cmp byte ptr [rax], al; jne 0x5d4ae; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000040e9ad: cmp byte ptr [rax], al; jne 0xe9bb; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046bb4b: cmp byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004237f0: cmp byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042b0f5: cmp byte ptr [rax], al; ret; 
0x000000000044b26a: cmp byte ptr [rax], cl; mov qword ptr [rsp + 0xb8], rcx; mov qword ptr [rsp + 0xc0], rax; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000044b269: cmp byte ptr [rax], r9b; mov qword ptr [rsp + 0xb8], rcx; mov qword ptr [rsp + 0xc0], rax; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000040ae80: cmp byte ptr [rbx + 0xfc08500], cl; xchg eax, ebp; and al, 0x48; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044f12f: cmp byte ptr [rcx + 0x483c2444], cl; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044ee16: cmp byte ptr [rcx + 0x48702444], cl; mov dword ptr [rsp + 0x78], ecx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000048abaf: cmp byte ptr [rcx + rcx*4 + 0x44], cl; and al, 0x10; call rdx; 
0x000000000041618a: cmp byte ptr [rcx + rcx*4 + 0x44], cl; ret 0x4c18; 
0x000000000042d9e1: cmp byte ptr [rcx - 0x76c3dbac], cl; and al, 0x40; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000047a75f: cmp byte ptr [rcx], al; add byte ptr [rax], al; add rsp, 0x140; ret; 
0x000000000046bb34: cmp byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; nop; ret; 
0x000000000046bc3d: cmp byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045bbc0: cmp byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046abdf: cmp byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042b0fb: cmp byte ptr [rcx], al; ret; 
0x000000000040326d: cmp byte ptr [rcx], al; sete byte ptr [rsp + 0x18]; ret; 
0x0000000000461544: cmp byte ptr [rdi], bl; add byte ptr [rax], al; ret; 
0x000000000045d0e6: cmp byte ptr [rdi], cl; adc dword ptr [rsp + 0x40], eax; call 0x52f40; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000046732c: cmp byte ptr [rdi], cl; mov dh, 0x5b; adc al, 0xf6; ret; 
0x0000000000496e36: cmp byte ptr [rdx], al; add byte ptr [rax], al; mov qword ptr [rsp], rcx; nop; call rax; 
0x000000000043ef7d: cmp byte ptr [rip + 0x11e78c], 0; jne 0x3ef90; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000045e91b: cmp byte ptr [rip + 0x127d43], 0; jne 0x5e92e; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045dc9f: cmp byte ptr [rip + 0x12878a], 0; jne 0x5dcb2; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000422ac6: cmp byte ptr [rip + 0x13ac43], 0; jne 0x22ad9; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041a46f: cmp byte ptr [rip + 0x14329a], 0; jne 0x1a488; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000436137: cmp byte ptr [rip + 0x1502ef], 0; nop; jne 0x3614c; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000411d1b: cmp byte ptr [rip + 0x174943], 0; jne 0x11d2e; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000401f00: cmp byte ptr [rip + 0x184b7c], 0; je 0x1f15; mov qword ptr [rip + 0x184584], 0x3f; ret; 
0x0000000000466ea4: cmp byte ptr [rsi - 1], dh; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x00000000004265ea: cmp byte ptr [rsp + 0x10], 0; je 0x265fb; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000452dd7: cmp byte ptr [rsp + 0x10], 0; jne 0x52d65; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x000000000048eb32: cmp byte ptr [rsp + 0x10], 0; jne 0x8eb43; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048eb92: cmp byte ptr [rsp + 0x10], 0; jne 0x8eba3; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000441186: cmp byte ptr [rsp + 0x18], 0; je 0x4114e; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004310b8: cmp byte ptr [rsp + 0x28], 0; je 0x3111a; mov rax, qword ptr [rax + 0x18]; mov qword ptr [rsp], rcx; call rax; 
0x000000000045b0b6: cmp byte ptr [rsp + 0x28], 0; je 0x5b0c7; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000403f9f: cmp byte ptr [rsp + 8], 0; je 0x3fb0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040405d: cmp byte ptr [rsp + 8], 0; je 0x406e; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042b5dc: cmp byte ptr [rsp + 8], 0; jne 0x2b5ed; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000442a0b: cmp byte ptr [rsp], 0; je 0x42a1b; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000048fe4a: cmp ch, byte ptr [rsi + 0xc]; add byte ptr [rax - 0x77], cl; and al, 8; mov qword ptr [rsp + 0x10], rcx; ret; 
0x0000000000456eaa: cmp cl, 0x12; je 0x56eb9; add rax, 0x30; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000456ecd: cmp cl, 0x13; jne 0x56edc; add rax, 0x38; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000456eeb: cmp cl, 0x15; jne 0x56efa; add rax, 0x58; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000456f09: cmp cl, 0x19; jne 0x56eaf; add rax, 0x50; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000043e300: cmp cl, 1; ja 0x3e314; mov byte ptr [rsp + 0x30], 1; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041f9f2: cmp cl, 1; je 0x1fa01; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000433b9a: cmp cl, 1; je 0x33ba9; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000401fc7: cmp cl, byte ptr [rdi + rbx]; seta al; lea rax, [rax*2 - 1]; mov qword ptr [r9], rax; ret; 
0x0000000000492060: cmp dh, bh; xor byte ptr [rbx + rbx*8 - 0x72b6958c], al; dec dword ptr [rax + 0x39]; ret 0x860f; 
0x00000000004017e1: cmp dh, cl; jne 0x17d3; mov qword ptr [rsp + 0x20], rbx; ret; 
0x0000000000473053: cmp dil, r8b; je 0x73038; setb byte ptr [rsp + 0x30]; ret; 
0x0000000000423aa2: cmp dl, 1; ja 0x23ab1; cmp qword ptr [rcx + 0x70], rax; seta byte ptr [rsp + 0x10]; ret; 
0x00000000004567ed: cmp dl, 1; jne 0x56801; mov byte ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000423b33: cmp dl, 1; setne dl; test dl, dl; je 0x23b47; mov qword ptr [rsp + 0x10], 0; ret; 
0x0000000000443795: cmp dword ptr [rax + 0x108], 0; je 0x437a8; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000423203: cmp dword ptr [rax + 0x10], 0; je 0x23213; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000423263: cmp dword ptr [rax + 0x10], 0; jne 0x23273; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000403915: cmp dword ptr [rax + 0x1750], ecx; je 0x3927; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004102eb: cmp dword ptr [rax + 0x18], 0; jne 0x102fb; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000410eab: cmp dword ptr [rax + 0x18], 0; jne 0x10ebb; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041180b: cmp dword ptr [rax + 0x18], 0; jne 0x1181b; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040f42b: cmp dword ptr [rax + 0x18], 0; jne 0xf43b; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000467ea6: cmp dword ptr [rax + 0x18], 0; setne byte ptr [rsp + 0x10]; ret; 
0x0000000000410645: cmp dword ptr [rax + 0x20], edi; je 0x1065a; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000045e0f4: cmp dword ptr [rax + 0x28], edx; je 0x5e10a; cmp rdx, rcx; jne 0x5e104; mov byte ptr [rsp + 0x10], 0x21; ret; 
0x000000000043e42f: cmp dword ptr [rax + 0x40], 0; je 0x3e43f; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000402c81: cmp dword ptr [rax + 0x40], ecx; ja 0x2c3a; mov qword ptr [rsp + 0xb8], rdx; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x0000000000487a20: cmp dword ptr [rax + 0x48], ecx; sete al; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042fbae: cmp dword ptr [rax + 0xf0], 0; jne 0x2fbe8; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042fc74: cmp dword ptr [rax + 0xf0], 0; jne 0x2fc87; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004096ab: cmp dword ptr [rax + 8], esi; jne 0x9685; mov qword ptr [rsp + 0x20], r8; ret; 
0x000000000043b7aa: cmp dword ptr [rax - 0x77], ecx; ret 0x8948; 
0x000000000040e9ac: cmp dword ptr [rax], 0; jne 0xe9bb; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043d8c6: cmp dword ptr [rax], eax; je 0x3d8d9; mov qword ptr [rsp + 0x38], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004096a6: cmp dword ptr [rax], edx; jne 0x9685; cmp qword ptr [r8 + 8], rsi; jne 0x9685; mov qword ptr [rsp + 0x20], r8; ret; 
0x00000000004064d9: cmp dword ptr [rbx + 0x1f68], 0; ja 0x64f2; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000043f4c3: cmp dword ptr [rbx + 0x2778], 0; jle 0x3f4b0; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x00000000004400d9: cmp dword ptr [rbx + 0x30], edx; jne 0x400ed; mov byte ptr [rsp + 0x28], 0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040c305: cmp dword ptr [rbx + 0x48000004], -0x75; sbb byte ptr [r9 - 9], r9b; ret 7; 
0x0000000000441478: cmp dword ptr [rbx], 0; jne 0x41487; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000423b48: cmp dword ptr [rcx + 0x18], eax; ja 0x23b3d; cmp qword ptr [rcx + 0x70], rax; jbe 0x23b3d; mov qword ptr [rsp + 0x10], rcx; ret; 
0x0000000000423a91: cmp dword ptr [rcx + 0x18], eax; jbe 0x23a9c; mov byte ptr [rsp + 0x10], 0; ret; 
0x0000000000411290: cmp dword ptr [rcx + 0x20], eax; je 0x112a5; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000411bda: cmp dword ptr [rcx + 0x20], eax; je 0x11bef; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000040f9a7: cmp dword ptr [rcx + 0x20], eax; je 0xf9bc; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x0000000000458d3b: cmp dword ptr [rcx + 0x40], eax; sete al; mov byte ptr [rsp + 0x148], al; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x000000000043c1d3: cmp dword ptr [rcx + 0x50], 0; jne 0x3c1da; ret; 
0x000000000044dda1: cmp dword ptr [rcx + 0x50], eax; ja 0x4dd8e; cmp qword ptr [rcx + 0x58], rax; jbe 0x4dd8e; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000044dda7: cmp dword ptr [rcx + 0x58], eax; jbe 0x4dd8e; mov qword ptr [rsp + 0x10], rcx; ret; 
0x0000000000423b4e: cmp dword ptr [rcx + 0x70], eax; jbe 0x23b3d; mov qword ptr [rsp + 0x10], rcx; ret; 
0x0000000000423aa8: cmp dword ptr [rcx + 0x70], eax; seta byte ptr [rsp + 0x10]; ret; 
0x00000000004168d3: cmp dword ptr [rcx + 0xa8], eax; jbe 0x16878; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000043d8c5: cmp dword ptr [rcx], 0; je 0x3d8d9; mov qword ptr [rsp + 0x38], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000403f74: cmp dword ptr [rcx], eax; jne 0x3f82; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040328e: cmp dword ptr [rcx], eax; sete byte ptr [rsp + 0x18]; ret; 
0x0000000000465680: cmp dword ptr [rdx + 0x10], eax; sete al; mov byte ptr [rsp + 0x18], al; ret; 
0x000000000046554a: cmp dword ptr [rdx + 0x18], eax; sete al; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000465715: cmp dword ptr [rdx + 8], eax; sete al; mov byte ptr [rsp + 0x18], al; nop; ret; 
0x00000000004032f7: cmp dword ptr [rdx + 8], eax; sete al; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000448f98: cmp dword ptr [rdx + 8], ecx; jbe 0x48fa8; mov rdx, qword ptr [rdx + 0x10]; add rcx, rdx; mov qword ptr [rax + 0x68], rcx; ret; 
0x00000000004400fa: cmp dword ptr [rdx], ebx; jne 0x4010d; mov byte ptr [rsp + 0x28], 0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000440d8f: cmp dword ptr [rip + 0x1164c2], 0; jne 0x40d6b; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046c619: cmp dword ptr [rip + 0x11a040], 0; jne 0x6c633; mov qword ptr [rip + 0xea6ff], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043c86b: cmp dword ptr [rip + 0x11a9de], 0; jne 0x3c883; mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000444139: cmp dword ptr [rip + 0x142520], 0; jne 0x44150; mov qword ptr [rdx + 0x10], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043e24e: cmp dword ptr [rip + 0x148367], 0; jne 0x3e261; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000430980: cmp dword ptr [rip + 0x155cd9], 0; jne 0x3099a; mov qword ptr [rip + 0x126130], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000423152: cmp dword ptr [rip + 0x16330b], 1; je 0x23165; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000422c64: cmp dword ptr [rip + 0x1637f9], 1; je 0x22c77; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041f1a8: cmp dword ptr [rip + 0x1673fa], ebx; ja 0x1f198; mov qword ptr [rip + 0x15e7f9], rdi; ret; 
0x00000000004174ee: cmp dword ptr [rip + 0x16f2df], 0; jg 0x17501; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000049a7e5: cmp dword ptr [rip + 0xebe74], 0; jne 0x9a7ff; mov qword ptr [rip + 0xbc473], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046abec: cmp dword ptr [rip + 0xebf46], ecx; sete byte ptr [rsp + 0x38]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000049903b: cmp dword ptr [rip + 0xed61e], 0; jne 0x99057; mov qword ptr [rdi], rdx; mov rbp, qword ptr [rsp + 0x1c8]; add rsp, 0x1d0; ret; 
0x0000000000496b8b: cmp dword ptr [rip + 0xeface], 0; jne 0x96ba7; mov qword ptr [rdi], rbx; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x00000000004946bd: cmp dword ptr [rip + 0xf1f9c], 0; jne 0x946d3; mov qword ptr [rdi], rbx; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000048e52b: cmp dword ptr [rip + 0xf812e], 0; jne 0x8e545; mov qword ptr [rip + 0xc5655], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000045d6e8: cmp dword ptr [rip + 0xf9b69], 0; jne 0x5d6c4; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000487453: cmp dword ptr [rip + 0xff206], 0; jne 0x8746d; mov qword ptr [rip + 0xcf61d], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000450627: cmp dword ptr [rsi + 0x2778], 0; jne 0x505ac; mov qword ptr [rsp + 0x48], -1; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048fe43: cmp dword ptr [rsi + 0xc], ebp; add byte ptr [rax - 0x75], cl; or eax, 0xc6e3a; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x0000000000473f34: cmp dword ptr [rsi + 0xf000003], -0x4a; jl 0x73f78; jmp qword ptr [rsi - 0x70]; 
0x000000000043ac70: cmp dword ptr [rsp + 0x28], 0; jne 0x3ac81; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000045ea85: cmp dword ptr [rsp + 0x30], 0; jl 0x5ea96; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045cdcc: cmp dword ptr [rsp + 8], 0; jne 0x5cddd; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042e313: cmp eax, -0xb; jne 0x2e32c; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000464bcc: cmp eax, 0; je 0x64c12; mov edi, 0; lea rsi, [rsp]; call rax; 
0x0000000000464cac: cmp eax, 0; je 0x64cf8; mov edi, 1; lea rsi, [rsp]; call rax; 
0x000000000046512e: cmp eax, 0; je 0x65138; mov dword ptr [rsp + 0x30], eax; ret; 
0x000000000046513c: cmp eax, 0; je 0x65170; cmp r9, 0; je 0x65170; mov eax, 0xba; syscall; 
0x0000000000440d90: cmp eax, 0x1164c2; add byte ptr [rbp - 0x2d], dh; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046c61a: cmp eax, 0x11a040; add byte ptr [rbp + 0x11], dh; mov qword ptr [rip + 0xea6ff], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043c86c: cmp eax, 0x11a9de; add byte ptr [rbp + 0xf], dh; mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000043ef7e: cmp eax, 0x11e78c; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000045e91c: cmp eax, 0x127d43; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045dca0: cmp eax, 0x12878a; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000422ac7: cmp eax, 0x13ac43; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044413a: cmp eax, 0x142520; add byte ptr [rbp + 0xe], dh; mov qword ptr [rdx + 0x10], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000041a470: cmp eax, 0x14329a; add byte ptr [rbp + 0x10], dh; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000043e24f: cmp eax, 0x148367; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000436138: cmp eax, 0x1502ef; add byte ptr [rsi - 0x70], ah; jne 0x3614c; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000430981: cmp eax, 0x155cd9; add byte ptr [rbp + 0x11], dh; mov qword ptr [rip + 0x126130], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000041f1b2: cmp eax, 0x15e7f9; ret; 
0x0000000000423153: cmp eax, 0x16330b; add dword ptr [rdx + rcx + 0x48], esi; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000422c65: cmp eax, 0x1637f9; add dword ptr [rdx + rcx + 0x48], esi; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004174ef: cmp eax, 0x16f2df; add byte ptr [rdi + 0xa], bh; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000411d1c: cmp eax, 0x174943; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000401f01: cmp eax, 0x184b7c; add byte ptr [rsp + rcx + 0x48], dh; mov dword ptr [rip + 0x184584], 0x3f; ret; 
0x0000000000460367: cmp eax, 0x20; jne 0x60376; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000447ab6: cmp eax, 0x23; jl 0x47a92; ret; 
0x000000000049400e: cmp eax, 0x30; jne 0x93fd2; mov rax, qword ptr [rsp + 8]; movzx eax, byte ptr [rax + 0x4e]; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000433502: cmp eax, 0x320; ja 0x33513; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000047fd72: cmp eax, 0x39480002; ret 0x850f; 
0x000000000042f4ed: cmp eax, 0x40; jne 0x2f4fc; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000417e36: cmp eax, 0x48ffffff; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000472c8d: cmp eax, 0x5880011; mov esi, dword ptr [rdi]; adc dword ptr [rax], eax; ret; 
0x0000000000423dde: cmp eax, 0x89480016; and al, 0x10; call 0x26d60; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040f6c4: cmp eax, 0x894c0005; imul ebx; ret; 
0x000000000042f20e: cmp eax, 0x8b480001; insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; ret; 
0x000000000049a7e6: cmp eax, 0xebe74; add byte ptr [rbp + 0x11], dh; mov qword ptr [rip + 0xbc473], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000049903c: cmp eax, 0xed61e; add byte ptr [rbp + 0x13], dh; mov qword ptr [rdi], rdx; mov rbp, qword ptr [rsp + 0x1c8]; add rsp, 0x1d0; ret; 
0x0000000000496b8c: cmp eax, 0xeface; add byte ptr [rbp + 0x13], dh; mov qword ptr [rdi], rbx; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000041c647: cmp eax, 0xf00016a5; xadd qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004946be: cmp eax, 0xf1f9c; add byte ptr [rbp + 0xd], dh; mov qword ptr [rdi], rbx; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000048e52c: cmp eax, 0xf812e; add byte ptr [rbp + 0x11], dh; mov qword ptr [rip + 0xc5655], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000045d6e9: cmp eax, 0xf9b69; add byte ptr [rbp - 0x2d], dh; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000478a69: cmp eax, 0xfeff; jne 0x78a0d; mov byte ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000487454: cmp eax, 0xff206; add byte ptr [rbp + 0x11], dh; mov qword ptr [rip + 0xcf61d], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046493b: cmp eax, 0xfffff001; jbe 0x64947; mov eax, 0xffffffff; mov dword ptr [rsp + 0x18], eax; ret; 
0x000000000046496c: cmp eax, 0xfffff001; jbe 0x64978; mov eax, 0xffffffff; mov dword ptr [rsp + 0x10], eax; ret; 
0x0000000000447ad0: cmp eax, 1; ja 0x47ac9; mov qword ptr [rsp + 0x10], rcx; ret; 
0x00000000004469a8: cmp eax, 1; jne 0x469bc; mov byte ptr [rsp + 0x60], 1; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000045f634: cmp eax, 4; jl 0x5f648; mov byte ptr [rsp + 0x28], 0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000401a20: cmp eax, 7; jae 0x1a2f; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000441479: cmp eax, dword ptr [rax]; jne 0x41487; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000451541: cmp eax, dword ptr [rip - 0x74b80000]; insb byte ptr [rdi], dx; and al, 0x50; add rsp, 0x58; ret; 
0x000000000042c0bb: cmp eax, ebx; jae 0x2c095; mov qword ptr [rsp + 0x18], rsi; ret; 
0x0000000000448c57: cmp eax, ebx; jg 0x48c29; mov byte ptr [rsp + 0xe0], 1; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x00000000004496ba: cmp eax, ebx; jg 0x496a8; mov dword ptr [rsp + 0x10], ebx; ret; 
0x0000000000441bbf: cmp eax, ebx; setle byte ptr [rsp + 0x20]; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x00000000004136a1: cmp eax, ecx; ja 0x13633; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004254a8: cmp eax, ecx; ja 0x254bb; mov byte ptr [rsp + 0x78], 1; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000438288: cmp eax, ecx; ja 0x38274; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000049a416: cmp eax, ecx; jl 0x9a342; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000045a1f3: cmp eax, ecx; setb al; mov byte ptr [rsp + 0x10], al; ret; 
0x0000000000478fdc: cmp eax, ecx; sete al; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040370f: cmp eax, ecx; sete byte ptr [rsp + 0x60]; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x00000000004035e7: cmp eax, ecx; sete byte ptr [rsp + 0x60]; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000422b5a: cmp eax, edx; ja 0x22b4e; ret; 
0x0000000000457788: cmp eax, edx; ja 0x57948; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000401612: cmp eax, edx; jg 0x1592; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x000000000045a1cb: cmp eax, edx; jg 0x5a1b7; mov byte ptr [rsp + 0x10], 0; ret; 
0x00000000004375ca: cmp eax, edx; jne 0x375dd; call 0x3ad60; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000047d982: cmp ebx, ecx; jl 0x7d972; mov dword ptr [rsp + 0x28], edx; ret; 
0x000000000048b0c1: cmp ebx, edi; jg 0x8b0d5; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000040207b: cmp ebx, edx; setg al; sete cl; lea rax, [rcx + rax*2 - 1]; mov qword ptr [r9], rax; ret; 
0x0000000000420d17: cmp ebx, esi; sete byte ptr [rsp + 0x60]; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000465142: cmp ecx, 0; je 0x65170; mov eax, 0xba; syscall; 
0x000000000046199d: cmp ecx, 0x10000000; ja 0x619ae; lea rax, [rip + 0x1334]; jmp rax; 
0x0000000000461955: cmp ecx, 0x1000000; ja 0x61966; lea rax, [rip + 0xffc]; jmp rax; 
0x000000000046190d: cmp ecx, 0x100000; ja 0x6191e; lea rax, [rip + 0xcc4]; jmp rax; 
0x00000000004618c5: cmp ecx, 0x10000; ja 0x618d6; lea rax, [rip + 0x98c]; jmp rax; 
0x000000000046187d: cmp ecx, 0x1000; ja 0x6188e; lea rax, [rip + 0x654]; jmp rax; 
0x0000000000461835: cmp ecx, 0x100; ja 0x61846; lea rax, [rip + 0x39c]; jmp rax; 
0x000000000046722d: cmp ecx, 0x12; je 0x6723c; add rax, 0x30; mov qword ptr [rsp + 0x10], rax; ret; 
0x00000000004799cd: cmp ecx, 0x12; je 0x799dc; add rax, 0x30; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000467251: cmp ecx, 0x13; jne 0x67261; add rax, 0x38; mov qword ptr [rsp + 0x10], rax; nop; ret; 
0x00000000004799f1: cmp ecx, 0x13; jne 0x79a01; add rax, 0x38; mov qword ptr [rsp + 0x10], rax; nop; ret; 
0x0000000000467272: cmp ecx, 0x15; jne 0x67281; add rax, 0x58; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000479a12: cmp ecx, 0x15; jne 0x79a21; add rax, 0x58; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000467292: cmp ecx, 0x19; jne 0x67232; add rax, 0x50; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000479a32: cmp ecx, 0x19; jne 0x799d2; add rax, 0x50; mov qword ptr [rsp + 0x10], rax; ret; 
0x00000000004619af: cmp ecx, 0x20000000; ja 0x619c0; lea rax, [rip + 0x1402]; jmp rax; 
0x0000000000461967: cmp ecx, 0x2000000; ja 0x61978; lea rax, [rip + 0x10ca]; jmp rax; 
0x000000000046191f: cmp ecx, 0x200000; ja 0x61930; lea rax, [rip + 0xd92]; jmp rax; 
0x00000000004618d7: cmp ecx, 0x20000; ja 0x618e8; lea rax, [rip + 0xa5a]; jmp rax; 
0x000000000046188f: cmp ecx, 0x2000; ja 0x618a0; lea rax, [rip + 0x722]; jmp rax; 
0x0000000000461847: cmp ecx, 0x200; ja 0x61858; lea rax, [rip + 0x44a]; jmp rax; 
0x0000000000461805: cmp ecx, 0x20; ja 0x61813; lea rax, [rip + 0x1cf]; jmp rax; 
0x00000000004619c1: cmp ecx, 0x40000000; ja 0x619d2; lea rax, [rip + 0x14d0]; jmp rax; 
0x0000000000461979: cmp ecx, 0x4000000; ja 0x6198a; lea rax, [rip + 0x1198]; jmp rax; 
0x0000000000461931: cmp ecx, 0x400000; ja 0x61942; lea rax, [rip + 0xe60]; jmp rax; 
0x00000000004618e9: cmp ecx, 0x40000; ja 0x618fa; lea rax, [rip + 0xb28]; jmp rax; 
0x00000000004618a1: cmp ecx, 0x4000; ja 0x618b2; lea rax, [rip + 0x7f0]; jmp rax; 
0x0000000000461859: cmp ecx, 0x400; ja 0x6186a; lea rax, [rip + 0x4f8]; jmp rax; 
0x0000000000461814: cmp ecx, 0x40; ja 0x61822; lea rax, [rip + 0x260]; jmp rax; 
0x000000000042aa86: cmp ecx, 0x40; jb 0x2aa42; mov qword ptr [rsp + 0x18], rcx; ret; 
0x000000000042d385: cmp ecx, 0x43; jl 0x2d362; ret; 
0x000000000046198b: cmp ecx, 0x8000000; ja 0x6199c; lea rax, [rip + 0x1266]; jmp rax; 
0x0000000000461943: cmp ecx, 0x800000; ja 0x61954; lea rax, [rip + 0xf2e]; jmp rax; 
0x00000000004618fb: cmp ecx, 0x80000; ja 0x6190c; lea rax, [rip + 0xbf6]; jmp rax; 
0x00000000004618b3: cmp ecx, 0x8000; ja 0x618c4; lea rax, [rip + 0x8be]; jmp rax; 
0x000000000046186b: cmp ecx, 0x800; ja 0x6187c; lea rax, [rip + 0x5a6]; jmp rax; 
0x0000000000461823: cmp ecx, 0x80; ja 0x61834; lea rax, [rip + 0x2ee]; jmp rax; 
0x0000000000457c96: cmp ecx, 1; je 0x57ca1; mov byte ptr [rsp + 0x10], 0; ret; 
0x000000000044688d: cmp ecx, 1; jne 0x468a1; mov byte ptr [rsp + 0x60], 1; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041cc20: cmp ecx, 6; jne 0x1cd37; mov rbp, qword ptr [rsp + 0x1f8]; add rsp, 0x200; ret; 
0x000000000044fb57: cmp ecx, 7; je 0x4fb6b; mov byte ptr [rsp + 0x78], dil; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042a177: cmp ecx, 8; jl 0x2a169; ret; 
0x000000000042a2b7: cmp ecx, 8; jl 0x2a2a9; ret; 
0x0000000000464ce5: cmp ecx, dword ptr [rax + 1]; ror byte ptr [rax - 0x77], 1; and al, 0x20; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045dba1: cmp ecx, dword ptr [rsi - 1]; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x0000000000402e01: cmp ecx, eax; ja 0x2e1d; mov qword ptr [rsp + 0xb8], rdx; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x0000000000435ed5: cmp ecx, eax; jg 0x35ee3; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044d841: cmp ecx, eax; jg 0x4d772; mov rbp, qword ptr [rsp + 0xf8]; add rsp, 0x100; ret; 
0x0000000000455501: cmp ecx, eax; jg 0x55482; mov rbp, qword ptr [rsp + 0x198]; add rsp, 0x1a0; ret; 
0x000000000048abc5: cmp ecx, eax; jg 0x8ab82; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048aed1: cmp ecx, eax; jl 0x8ae95; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000048afb3: cmp ecx, eax; jl 0x8af7c; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000442681: cmp ecx, eax; jne 0x4268f; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040a781: cmp ecx, eax; jne 0xa78f; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042a9f4: cmp ecx, ebx; jbe 0x2aa07; mov qword ptr [rsp + 0x20], -1; mov qword ptr [rsp + 0x28], rsi; ret; 
0x0000000000453431: cmp ecx, ebx; jne 0x5481f; mov qword ptr [rsp + 0x320], rdi; mov rbp, qword ptr [rsp + 0x2c0]; add rsp, 0x2c8; ret; 
0x0000000000441ccc: cmp ecx, ebx; setle byte ptr [rsp + 0x28]; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000040d543: cmp ecx, edx; jae 0xd52e; mov byte ptr [rsp + 0x10], 1; ret; 
0x0000000000415e88: cmp ecx, edx; jb 0x15e96; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000402284: cmp ecx, edx; je 0x226b; mov byte ptr [rax], 0; ret; 
0x00000000004410c4: cmp ecx, edx; jne 0x410d3; test rbx, rbx; sete al; mov byte ptr [rsp + 0x10], al; ret; 
0x000000000040d3b5: cmp ecx, edx; jne 0xd3c8; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000402297: cmp ecx, edx; sete byte ptr [rax]; ret; 
0x0000000000412685: cmp edi, 0x48001fff; mov dword ptr [rsp + 0x48], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046b24a: cmp edi, 0x48eaebff; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041360f: cmp edi, eax; ja 0x135c2; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000041374f: cmp edi, eax; ja 0x13702; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000404701: cmp edi, ebx; jb 0x46c2; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000402219: cmp edx, 0xffff; je 0x21bd; mov byte ptr [rax], 0; ret; 
0x0000000000402259: cmp edx, 0xffffffff; je 0x2225; vzeroupper; mov byte ptr [rax], 0; ret; 
0x0000000000485221: cmp edx, dword ptr [rcx]; add al, 0; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000041b753: cmp edx, eax; ja 0x1b761; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042d3ce: cmp edx, eax; ja 0x2d3dc; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042d494: cmp edx, eax; ja 0x2d4a2; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000404166: cmp edx, eax; jg 0x4115; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042ca47: cmp edx, eax; jne 0x2ca55; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044a621: cmp edx, ebx; ja 0x4a62f; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004023ec: cmp edx, ebx; jae 0x23ba; mov qword ptr [r8], rdx; ret; 
0x000000000041cfd0: cmp edx, ecx; jg 0x1cfab; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000045e0fa: cmp edx, ecx; jne 0x5e104; mov byte ptr [rsp + 0x10], 0x21; ret; 
0x000000000040d5ce: cmp edx, esi; ja 0xd5e1; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000406651: cmp esi, -1; dec dword ptr [rax - 0x77]; shr al, 1; ret; 
0x0000000000482db0: cmp esi, -1; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x000000000042a5a6: cmp esi, 0x200000; jne 0x2a5be; movabs rax, 0x8000000000000000; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000045bc01: cmp esi, dword ptr [rsi]; cld; dec dword ptr [rax - 0x75]; sub al, 0x24; add rsp, 8; ret; 
0x000000000042aa81: cmp esi, eax; jbe 0x2aa8b; cmp rcx, 0x40; jb 0x2aa42; mov qword ptr [rsp + 0x18], rcx; ret; 
0x0000000000459dd9: cmp esi, eax; jg 0x59d87; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x00000000004219e0: cmp esi, eax; jne 0x219c2; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000461618: cmp esi, eax; jne 0x61625; lea rax, [rip - 0x2bf23]; jmp rax; 
0x00000000004570c6: cmp esi, ecx; jb 0x572ab; mov qword ptr [rsp + 0x78], rcx; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000041b4a9: cmp esi, ecx; jl 0x1b442; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000044c278: cmp esi, edi; jbe 0x4c23b; mov qword ptr [rsp + 0x18], 0; mov byte ptr [rsp + 0x20], 0; ret; 
0x000000000042b0ee: cmp esi, edi; je 0x2b0dd; mov byte ptr [rsp + 0x38], 0; ret; 
0x0000000000465b2b: cmp esi, edx; je 0x65b0f; mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000465c0b: cmp esi, edx; je 0x65bef; mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000046662b: cmp esi, edx; je 0x6660f; mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000046670b: cmp esi, edx; je 0x666ef; mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042b68c: cmp esi, edx; setl cl; test cl, cl; jne 0x2b62c; mov byte ptr [rsp + 0x10], 1; ret; 
0x00000000004630f5: cmp esp, dword ptr [rax]; ja 0x630fe; call 0x630c0; ret; 
0x0000000000410644: cmp qword ptr [r8 + 0x20], rdi; je 0x1065a; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x00000000004096aa: cmp qword ptr [r8 + 8], rsi; jne 0x9685; mov qword ptr [rsp + 0x20], r8; ret; 
0x00000000004096a5: cmp qword ptr [r8], rdx; jne 0x9685; cmp qword ptr [r8 + 8], rsi; jne 0x9685; mov qword ptr [rsp + 0x20], r8; ret; 
0x000000000041128f: cmp qword ptr [r9 + 0x20], r8; je 0x112a5; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000411bd9: cmp qword ptr [r9 + 0x20], r8; je 0x11bef; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000040f9a6: cmp qword ptr [r9 + 0x20], r8; je 0xf9bc; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x0000000000423202: cmp qword ptr [rax + 0x10], 0; je 0x23213; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000423262: cmp qword ptr [rax + 0x10], 0; jne 0x23273; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000403914: cmp qword ptr [rax + 0x1750], rcx; je 0x3927; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004102ea: cmp qword ptr [rax + 0x18], 0; jne 0x102fb; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000410eaa: cmp qword ptr [rax + 0x18], 0; jne 0x10ebb; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041180a: cmp qword ptr [rax + 0x18], 0; jne 0x1181b; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040f42a: cmp qword ptr [rax + 0x18], 0; jne 0xf43b; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000467ea5: cmp qword ptr [rax + 0x18], 0; setne byte ptr [rsp + 0x10]; ret; 
0x000000000045e0f3: cmp qword ptr [rax + 0x28], rdx; je 0x5e10a; cmp rdx, rcx; jne 0x5e104; mov byte ptr [rsp + 0x10], 0x21; ret; 
0x000000000043e42e: cmp qword ptr [rax + 0x40], 0; je 0x3e43f; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000402c80: cmp qword ptr [rax + 0x40], rcx; ja 0x2c3a; mov qword ptr [rsp + 0xb8], rdx; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x0000000000487a1f: cmp qword ptr [rax + 0x48], rcx; sete al; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040e9ab: cmp qword ptr [rax], 0; jne 0xe9bb; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004064d8: cmp qword ptr [rbx + 0x1f68], 0; ja 0x64f2; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000043f4c2: cmp qword ptr [rbx + 0x2778], 0; jle 0x3f4b0; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x00000000004400d8: cmp qword ptr [rbx + 0x30], rdx; jne 0x400ed; mov byte ptr [rsp + 0x28], 0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000441477: cmp qword ptr [rbx], 0; jne 0x41487; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000423b47: cmp qword ptr [rcx + 0x18], rax; ja 0x23b3d; cmp qword ptr [rcx + 0x70], rax; jbe 0x23b3d; mov qword ptr [rsp + 0x10], rcx; ret; 
0x0000000000423a90: cmp qword ptr [rcx + 0x18], rax; jbe 0x23a9c; mov byte ptr [rsp + 0x10], 0; ret; 
0x0000000000458d3a: cmp qword ptr [rcx + 0x40], rax; sete al; mov byte ptr [rsp + 0x148], al; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x000000000043c1d2: cmp qword ptr [rcx + 0x50], 0; jne 0x3c1da; ret; 
0x000000000044dda0: cmp qword ptr [rcx + 0x50], rax; ja 0x4dd8e; cmp qword ptr [rcx + 0x58], rax; jbe 0x4dd8e; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000044dda6: cmp qword ptr [rcx + 0x58], rax; jbe 0x4dd8e; mov qword ptr [rsp + 0x10], rcx; ret; 
0x0000000000423b4d: cmp qword ptr [rcx + 0x70], rax; jbe 0x23b3d; mov qword ptr [rsp + 0x10], rcx; ret; 
0x0000000000423aa7: cmp qword ptr [rcx + 0x70], rax; seta byte ptr [rsp + 0x10]; ret; 
0x00000000004168d2: cmp qword ptr [rcx + 0xa8], rax; jbe 0x16878; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000043d8c4: cmp qword ptr [rcx], 0; je 0x3d8d9; mov qword ptr [rsp + 0x38], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000403f73: cmp qword ptr [rcx], rax; jne 0x3f82; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004032cd: cmp qword ptr [rcx], rax; sete byte ptr [rsp + 0x18]; ret; 
0x000000000046567f: cmp qword ptr [rdx + 0x10], rax; sete al; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000465549: cmp qword ptr [rdx + 0x18], rax; sete al; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000465cb4: cmp qword ptr [rdx + 8], rax; sete al; mov byte ptr [rsp + 0x18], al; nop; ret; 
0x00000000004032f6: cmp qword ptr [rdx + 8], rax; sete al; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000448f97: cmp qword ptr [rdx + 8], rcx; jbe 0x48fa8; mov rdx, qword ptr [rdx + 0x10]; add rcx, rdx; mov qword ptr [rax + 0x68], rcx; ret; 
0x00000000004400f9: cmp qword ptr [rdx], rbx; jne 0x4010d; mov byte ptr [rsp + 0x28], 0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043c86a: cmp qword ptr [rip + 0x11a9de], 0; jne 0x3c883; mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000041f1a7: cmp qword ptr [rip + 0x1673fa], rbx; ja 0x1f198; mov qword ptr [rip + 0x15e7f9], rdi; ret; 
0x000000000046abeb: cmp qword ptr [rip + 0xebf46], rcx; sete byte ptr [rsp + 0x38]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000450626: cmp qword ptr [rsi + 0x2778], 0; jne 0x505ac; mov qword ptr [rsp + 0x48], -1; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000043ac6f: cmp qword ptr [rsp + 0x28], 0; jne 0x3ac81; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000045cdcb: cmp qword ptr [rsp + 8], 0; jne 0x5cddd; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000411bd8: cmp qword ptr cs:[r9 + 0x20], r8; je 0x11bef; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000046513b: cmp r8, 0; je 0x65170; cmp r9, 0; je 0x65170; mov eax, 0xba; syscall; 
0x000000000042c0ba: cmp r8, rbx; jae 0x2c095; mov qword ptr [rsp + 0x18], rsi; ret; 
0x00000000004136a0: cmp r8, rcx; ja 0x13633; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000465141: cmp r9, 0; je 0x65170; mov eax, 0xba; syscall; 
0x000000000044fb56: cmp r9d, 7; je 0x4fb6b; mov byte ptr [rsp + 0x78], dil; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000046493a: cmp rax, -0xfff; jbe 0x64947; mov eax, 0xffffffff; mov dword ptr [rsp + 0x18], eax; ret; 
0x000000000046496b: cmp rax, -0xfff; jbe 0x64978; mov eax, 0xffffffff; mov dword ptr [rsp + 0x10], eax; ret; 
0x0000000000464bcb: cmp rax, 0; je 0x64c12; mov edi, 0; lea rsi, [rsp]; call rax; 
0x0000000000464cab: cmp rax, 0; je 0x64cf8; mov edi, 1; lea rsi, [rsp]; call rax; 
0x000000000046512d: cmp rax, 0; je 0x65138; mov dword ptr [rsp + 0x30], eax; ret; 
0x0000000000460366: cmp rax, 0x20; jne 0x60376; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000447ab5: cmp rax, 0x23; jl 0x47a92; ret; 
0x000000000049400d: cmp rax, 0x30; jne 0x93fd2; mov rax, qword ptr [rsp + 8]; movzx eax, byte ptr [rax + 0x4e]; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000433501: cmp rax, 0x320; ja 0x33513; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000447acf: cmp rax, 1; ja 0x47ac9; mov qword ptr [rsp + 0x10], rcx; ret; 
0x00000000004469a7: cmp rax, 1; jne 0x469bc; mov byte ptr [rsp + 0x60], 1; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000045f633: cmp rax, 4; jl 0x5f648; mov byte ptr [rsp + 0x28], 0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000448c56: cmp rax, rbx; jg 0x48c29; mov byte ptr [rsp + 0xe0], 1; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x0000000000441bbe: cmp rax, rbx; setle byte ptr [rsp + 0x20]; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x00000000004254a7: cmp rax, rcx; ja 0x254bb; mov byte ptr [rsp + 0x78], 1; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000049a415: cmp rax, rcx; jl 0x9a342; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000045a1f2: cmp rax, rcx; setb al; mov byte ptr [rsp + 0x10], al; ret; 
0x000000000040370e: cmp rax, rcx; sete byte ptr [rsp + 0x60]; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x00000000004035e6: cmp rax, rcx; sete byte ptr [rsp + 0x60]; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000422b59: cmp rax, rdx; ja 0x22b4e; ret; 
0x0000000000457787: cmp rax, rdx; ja 0x57948; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000401611: cmp rax, rdx; jg 0x1592; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x000000000045a1ca: cmp rax, rdx; jg 0x5a1b7; mov byte ptr [rsp + 0x10], 0; ret; 
0x00000000004375c9: cmp rax, rdx; jne 0x375dd; call 0x3ad60; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000047d981: cmp rbx, rcx; jl 0x7d972; mov dword ptr [rsp + 0x28], edx; ret; 
0x000000000048b0c0: cmp rbx, rdi; jg 0x8b0d5; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000040207a: cmp rbx, rdx; setg al; sete cl; lea rax, [rcx + rax*2 - 1]; mov qword ptr [r9], rax; ret; 
0x0000000000420d16: cmp rbx, rsi; sete byte ptr [rsp + 0x60]; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000046199c: cmp rcx, 0x10000000; ja 0x619ae; lea rax, [rip + 0x1334]; jmp rax; 
0x0000000000461954: cmp rcx, 0x1000000; ja 0x61966; lea rax, [rip + 0xffc]; jmp rax; 
0x000000000046190c: cmp rcx, 0x100000; ja 0x6191e; lea rax, [rip + 0xcc4]; jmp rax; 
0x00000000004618c4: cmp rcx, 0x10000; ja 0x618d6; lea rax, [rip + 0x98c]; jmp rax; 
0x000000000046187c: cmp rcx, 0x1000; ja 0x6188e; lea rax, [rip + 0x654]; jmp rax; 
0x0000000000461834: cmp rcx, 0x100; ja 0x61846; lea rax, [rip + 0x39c]; jmp rax; 
0x000000000046722c: cmp rcx, 0x12; je 0x6723c; add rax, 0x30; mov qword ptr [rsp + 0x10], rax; ret; 
0x00000000004799cc: cmp rcx, 0x12; je 0x799dc; add rax, 0x30; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000467250: cmp rcx, 0x13; jne 0x67261; add rax, 0x38; mov qword ptr [rsp + 0x10], rax; nop; ret; 
0x00000000004799f0: cmp rcx, 0x13; jne 0x79a01; add rax, 0x38; mov qword ptr [rsp + 0x10], rax; nop; ret; 
0x0000000000467271: cmp rcx, 0x15; jne 0x67281; add rax, 0x58; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000479a11: cmp rcx, 0x15; jne 0x79a21; add rax, 0x58; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000467291: cmp rcx, 0x19; jne 0x67232; add rax, 0x50; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000479a31: cmp rcx, 0x19; jne 0x799d2; add rax, 0x50; mov qword ptr [rsp + 0x10], rax; ret; 
0x00000000004619ae: cmp rcx, 0x20000000; ja 0x619c0; lea rax, [rip + 0x1402]; jmp rax; 
0x0000000000461966: cmp rcx, 0x2000000; ja 0x61978; lea rax, [rip + 0x10ca]; jmp rax; 
0x000000000046191e: cmp rcx, 0x200000; ja 0x61930; lea rax, [rip + 0xd92]; jmp rax; 
0x00000000004618d6: cmp rcx, 0x20000; ja 0x618e8; lea rax, [rip + 0xa5a]; jmp rax; 
0x000000000046188e: cmp rcx, 0x2000; ja 0x618a0; lea rax, [rip + 0x722]; jmp rax; 
0x0000000000461846: cmp rcx, 0x200; ja 0x61858; lea rax, [rip + 0x44a]; jmp rax; 
0x0000000000461804: cmp rcx, 0x20; ja 0x61813; lea rax, [rip + 0x1cf]; jmp rax; 
0x00000000004619c0: cmp rcx, 0x40000000; ja 0x619d2; lea rax, [rip + 0x14d0]; jmp rax; 
0x0000000000461978: cmp rcx, 0x4000000; ja 0x6198a; lea rax, [rip + 0x1198]; jmp rax; 
0x0000000000461930: cmp rcx, 0x400000; ja 0x61942; lea rax, [rip + 0xe60]; jmp rax; 
0x00000000004618e8: cmp rcx, 0x40000; ja 0x618fa; lea rax, [rip + 0xb28]; jmp rax; 
0x00000000004618a0: cmp rcx, 0x4000; ja 0x618b2; lea rax, [rip + 0x7f0]; jmp rax; 
0x0000000000461858: cmp rcx, 0x400; ja 0x6186a; lea rax, [rip + 0x4f8]; jmp rax; 
0x0000000000461813: cmp rcx, 0x40; ja 0x61822; lea rax, [rip + 0x260]; jmp rax; 
0x000000000042aa85: cmp rcx, 0x40; jb 0x2aa42; mov qword ptr [rsp + 0x18], rcx; ret; 
0x000000000042d384: cmp rcx, 0x43; jl 0x2d362; ret; 
0x000000000046198a: cmp rcx, 0x8000000; ja 0x6199c; lea rax, [rip + 0x1266]; jmp rax; 
0x0000000000461942: cmp rcx, 0x800000; ja 0x61954; lea rax, [rip + 0xf2e]; jmp rax; 
0x00000000004618fa: cmp rcx, 0x80000; ja 0x6190c; lea rax, [rip + 0xbf6]; jmp rax; 
0x00000000004618b2: cmp rcx, 0x8000; ja 0x618c4; lea rax, [rip + 0x8be]; jmp rax; 
0x000000000046186a: cmp rcx, 0x800; ja 0x6187c; lea rax, [rip + 0x5a6]; jmp rax; 
0x0000000000461822: cmp rcx, 0x80; ja 0x61834; lea rax, [rip + 0x2ee]; jmp rax; 
0x0000000000457c95: cmp rcx, 1; je 0x57ca1; mov byte ptr [rsp + 0x10], 0; ret; 
0x000000000044688c: cmp rcx, 1; jne 0x468a1; mov byte ptr [rsp + 0x60], 1; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042a176: cmp rcx, 8; jl 0x2a169; ret; 
0x000000000042a2b6: cmp rcx, 8; jl 0x2a2a9; ret; 
0x0000000000402e00: cmp rcx, rax; ja 0x2e1d; mov qword ptr [rsp + 0xb8], rdx; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000044d840: cmp rcx, rax; jg 0x4d772; mov rbp, qword ptr [rsp + 0xf8]; add rsp, 0x100; ret; 
0x0000000000455500: cmp rcx, rax; jg 0x55482; mov rbp, qword ptr [rsp + 0x198]; add rsp, 0x1a0; ret; 
0x000000000048abc4: cmp rcx, rax; jg 0x8ab82; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048aed0: cmp rcx, rax; jl 0x8ae95; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000048afb2: cmp rcx, rax; jl 0x8af7c; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000442680: cmp rcx, rax; jne 0x4268f; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040a780: cmp rcx, rax; jne 0xa78f; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042a9f3: cmp rcx, rbx; jbe 0x2aa07; mov qword ptr [rsp + 0x20], -1; mov qword ptr [rsp + 0x28], rsi; ret; 
0x0000000000453430: cmp rcx, rbx; jne 0x5481f; mov qword ptr [rsp + 0x320], rdi; mov rbp, qword ptr [rsp + 0x2c0]; add rsp, 0x2c8; ret; 
0x0000000000441ccb: cmp rcx, rbx; setle byte ptr [rsp + 0x28]; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000040d542: cmp rcx, rdx; jae 0xd52e; mov byte ptr [rsp + 0x10], 1; ret; 
0x0000000000415e87: cmp rcx, rdx; jb 0x15e96; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000402283: cmp rcx, rdx; je 0x226b; mov byte ptr [rax], 0; ret; 
0x000000000040d3b4: cmp rcx, rdx; jne 0xd3c8; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000402296: cmp rcx, rdx; sete byte ptr [rax]; ret; 
0x000000000041360e: cmp rdi, rax; ja 0x135c2; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000041374e: cmp rdi, rax; ja 0x13702; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000404700: cmp rdi, rbx; jb 0x46c2; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x000000000041b752: cmp rdx, rax; ja 0x1b761; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042d3cd: cmp rdx, rax; ja 0x2d3dc; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042d493: cmp rdx, rax; ja 0x2d4a2; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000404165: cmp rdx, rax; jg 0x4115; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042ca46: cmp rdx, rax; jne 0x2ca55; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044a620: cmp rdx, rbx; ja 0x4a62f; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041cfcf: cmp rdx, rcx; jg 0x1cfab; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000045e0f9: cmp rdx, rcx; jne 0x5e104; mov byte ptr [rsp + 0x10], 0x21; ret; 
0x000000000040d5cd: cmp rdx, rsi; ja 0xd5e1; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042a5a5: cmp rsi, 0x200000; jne 0x2a5be; movabs rax, 0x8000000000000000; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000459dd8: cmp rsi, r8; jg 0x59d87; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000042aa80: cmp rsi, rax; jbe 0x2aa8b; cmp rcx, 0x40; jb 0x2aa42; mov qword ptr [rsp + 0x18], rcx; ret; 
0x0000000000461617: cmp rsi, rax; jne 0x61625; lea rax, [rip - 0x2bf23]; jmp rax; 
0x00000000004570c5: cmp rsi, rcx; jb 0x572ab; mov qword ptr [rsp + 0x78], rcx; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000041b4a8: cmp rsi, rcx; jl 0x1b442; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000044c277: cmp rsi, rdi; jbe 0x4c23b; mov qword ptr [rsp + 0x18], 0; mov byte ptr [rsp + 0x20], 0; ret; 
0x000000000042b0ed: cmp rsi, rdi; je 0x2b0dd; mov byte ptr [rsp + 0x38], 0; ret; 
0x0000000000465b2a: cmp rsi, rdx; je 0x65b0f; mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000465c0a: cmp rsi, rdx; je 0x65bef; mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000046662a: cmp rsi, rdx; je 0x6660f; mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000046670a: cmp rsi, rdx; je 0x666ef; mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042b68b: cmp rsi, rdx; setl cl; test cl, cl; jne 0x2b62c; mov byte ptr [rsp + 0x10], 1; ret; 
0x00000000004630f4: cmp rsp, qword ptr [rax]; ja 0x630fe; call 0x630c0; ret; 
0x00000000004017e0: cmp sil, cl; jne 0x17d3; mov qword ptr [rsp + 0x20], rbx; ret; 
0x000000000049205f: cmp sil, r15b; xor byte ptr [rbx + rbx*8 - 0x72b6958c], al; dec dword ptr [rax + 0x39]; ret 0x860f; 
0x000000000040328d: cmp word ptr [rcx], ax; sete byte ptr [rsp + 0x18]; ret; 
0x00000000004168d1: cmpsb byte ptr [rsi], byte ptr [rdi]; cmp qword ptr [rcx + 0xa8], rax; jbe 0x16878; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x0000000000440fb4: cmpsb byte ptr [rsi], byte ptr [rdi]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000047cdd6: cmpsb byte ptr [rsi], byte ptr [rdi]; ret; 
0x00000000004231aa: cmpsd dword ptr [rsi], dword ptr [rdi]; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000401e71: cmpxchg dword ptr [rbx], ecx; sete byte ptr [rsp + 0x20]; ret; 
0x0000000000441afb: cmpxchg dword ptr [rcx + 0x10], ebx; sete dl; test dl, dl; je 0x41ae5; ret; 
0x0000000000421139: cmpxchg dword ptr [rcx], ebx; sete dl; nop; test dl, dl; je 0x2112d; ret; 
0x0000000000443871: cmpxchg dword ptr [rcx], ebx; sete dl; test dl, dl; je 0x43865; mov byte ptr [rsp + 0x10], 1; ret; 
0x0000000000401e70: cmpxchg qword ptr [rbx], rcx; sete byte ptr [rsp + 0x20]; ret; 
0x0000000000441afa: cmpxchg qword ptr [rcx + 0x10], rbx; sete dl; test dl, dl; je 0x41ae5; ret; 
0x0000000000401c28: cpuid; mov dword ptr [rsp + 0x10], eax; mov dword ptr [rsp + 0x14], ebx; mov dword ptr [rsp + 0x18], ecx; mov dword ptr [rsp + 0x1c], edx; ret; 
0x000000000040d0d9: cvttps2pi mm0, xmm0; inc eax; mov dword ptr [rsp + 0x28], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040d0d8: cvttsd2si eax, xmm0; inc eax; mov dword ptr [rsp + 0x28], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000475d88: cwde; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add r9b, byte ptr [rax - 0x77]; ret; 
0x00000000004802c4: cwde; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add al, 0x24; call rbx; 
0x0000000000482599: cwde; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; or al, 0x24; call rax; 
0x000000000047c594: cwde; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; or al, 0x24; call rdx; 
0x000000000047c5f7: cwde; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; or al, 0x24; nop; call rax; 
0x0000000000414325: cwde; add byte ptr [rax], al; add byte ptr [rax - 9], cl; ret 0x1f; 
0x000000000044c5d7: cwde; and al, 1; add byte ptr [rax], al; lea eax, [rdx + rbx]; mov dword ptr [rsp + 8], eax; ret; 
0x000000000047213a: cwde; mov ah, 0xff; jmp qword ptr [rsi - 0x70]; 
0x000000000044f443: cwde; mov byte ptr [rsp + 0x30], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045b9ca: cwde; nop; add byte ptr [rax], al; add byte ptr [rbx - 0x6bf0fd05], al; ret; 
0x0000000000428244: cwde; ret 0; 
0x0000000000418aa4: cwde; stosd dword ptr [rdi], eax; add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000451728: dec byte ptr [rax + 0x6c8b4801]; and al, 0x60; add rsp, 0x68; ret; 
0x000000000045875e: dec byte ptr [rax + 1]; ret; 
0x00000000004651f4: dec byte ptr [rax - 0x39]; mov dword ptr [rdx], 0x48000010; mov eax, 0x9e; syscall; 
0x000000000048fe84: dec byte ptr [rbx]; add byte ptr [rax - 0x75], cl; or eax, 0xbfe6a; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000048fe8b: dec byte ptr [rbx]; add byte ptr [rax - 0x77], cl; and al, 8; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000042a0d7: dec dword ptr [r8 + 9]; add al, 0xf2; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000421858: dec dword ptr [rax + 0x108]; mov qword ptr [rsp + 0x68], -1; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000045f5ad: dec dword ptr [rax + 0x108]; ret; 
0x000000000041f9eb: dec dword ptr [rax + 0x11790]; add byte ptr [rax + 0xa7401f9], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000433b93: dec dword ptr [rax + 0x11790]; add byte ptr [rax + 0xa7401f9], al; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000042a45b: dec dword ptr [rax + 0x21]; ret 0xf48; 
0x000000000041003e: dec dword ptr [rax + 0x21]; ret; 
0x000000000047c8bc: dec dword ptr [rax + 0x2902484]; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x208]; add rsp, 0x210; ret; 
0x000000000041254f: dec dword ptr [rax + 0x29]; fmul dword ptr [rax + 0x21]; ret 0x8d48; 
0x000000000044eb38: dec dword ptr [rax + 0x29]; ret 0x2948; 
0x0000000000405055: dec dword ptr [rax + 0x39]; adc byte ptr [rdi], cl; xchg eax, esp; ret 0x1f0f; 
0x000000000042a9f2: dec dword ptr [rax + 0x39]; fnstenv [rsi + 0xf]; mov qword ptr [rsp + 0x20], -1; mov qword ptr [rsp + 0x28], rsi; ret; 
0x000000000049206a: dec dword ptr [rax + 0x39]; ret 0x860f; 
0x00000000004630f3: dec dword ptr [rax + 0x3b]; and byte ptr [rdi + 5], dh; call 0x630c0; ret; 
0x000000000042492c: dec dword ptr [rax + 0x48382444]; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043df12: dec dword ptr [rax + 0xf0]; mov rbp, qword ptr [rsp + 0x260]; add rsp, 0x268; ret; 
0x000000000042a0d8: dec dword ptr [rax + 9]; add al, 0xf2; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044c316: dec dword ptr [rax - 0x39]; and al, 0x18; add byte ptr [rax], al; add byte ptr [rax], al; mov byte ptr [rsp + 0x20], 0; ret; 
0x0000000000461489: dec dword ptr [rax - 0x39]; ret 0; 
0x000000000041845e: dec dword ptr [rax - 0x39]; ret 0xffff; 
0x0000000000440972: dec dword ptr [rax - 0x39]; ret; 
0x0000000000463426: dec dword ptr [rax - 0x6a]; ret; 
0x0000000000463406: dec dword ptr [rax - 0x6d]; ret; 
0x00000000004633e6: dec dword ptr [rax - 0x6e]; ret; 
0x00000000004633c6: dec dword ptr [rax - 0x6f]; ret; 
0x0000000000451a4f: dec dword ptr [rax - 0x73]; add eax, 0x11bd71; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040cad4: dec dword ptr [rax - 0x73]; add eax, 0x179b34; mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x00000000004852d4: dec dword ptr [rax - 0x73]; add eax, 0x4108c; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000485207: dec dword ptr [rax - 0x73]; add eax, 0x41101; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000485184: dec dword ptr [rax - 0x73]; add eax, 0x41194; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048512a: dec dword ptr [rax - 0x73]; add eax, 0x411e6; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000485031: dec dword ptr [rax - 0x73]; add eax, 0x4134f; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000484fa4: dec dword ptr [rax - 0x73]; add eax, 0x41374; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000484f44: dec dword ptr [rax - 0x73]; add eax, 0x413d4; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004381e0: dec dword ptr [rax - 0x73]; or eax, 0x11f060; lock xadd dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000464f31: dec dword ptr [rax - 0x75]; add eax, 0xf1ae7; jmp rax; 
0x0000000000464ef1: dec dword ptr [rax - 0x75]; add eax, 0xf1b27; jmp rax; 
0x000000000045e44c: dec dword ptr [rax - 0x75]; and al, 0x10; mov qword ptr [rip + 0x12808f], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004235e4: dec dword ptr [rax - 0x75]; and al, 0x10; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000402812: dec dword ptr [rax - 0x75]; and al, 0x10; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046750a: dec dword ptr [rax - 0x75]; and al, 0x10; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004268e9: dec dword ptr [rax - 0x75]; and al, 0x10; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000047d8cb: dec dword ptr [rax - 0x75]; and al, 0x10; mov qword ptr [rsp + 0xb0], rax; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000402ccd: dec dword ptr [rax - 0x75]; and al, 0x10; mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x00000000004695f5: dec dword ptr [rax - 0x75]; and al, 0x10; mov rcx, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax + 0x28]; mov qword ptr [rsp], rcx; call rax; 
0x000000000043ffc9: dec dword ptr [rax - 0x75]; and al, 0x18; mov dword ptr [rsp + 0x50], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040cdd7: dec dword ptr [rax - 0x75]; and al, 0x18; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040ce64: dec dword ptr [rax - 0x75]; and al, 0x18; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042696d: dec dword ptr [rax - 0x75]; and al, 0x18; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042613d: dec dword ptr [rax - 0x75]; and al, 0x18; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000043ace9: dec dword ptr [rax - 0x75]; and al, 0x18; mov qword ptr [rsp], rax; mov rax, qword ptr [rip + 0x8b84e]; lea rdx, [rip + 0x8b847]; call rax; 
0x0000000000486224: dec dword ptr [rax - 0x75]; and al, 0x18; mov rcx, qword ptr [rsp + 0x20]; mov rax, qword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004944a4: dec dword ptr [rax - 0x75]; and al, 0x18; mov rcx, qword ptr [rsp + 0x20]; mov rax, qword ptr [rax + 0xf8]; mov qword ptr [rsp], rcx; call rax; 
0x000000000042df8f: dec dword ptr [rax - 0x75]; and al, 0x20; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000415a7d: dec dword ptr [rax - 0x75]; and al, 0x20; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000043ac48: dec dword ptr [rax - 0x75]; and al, 0x20; mov qword ptr [rsp], rax; mov rcx, qword ptr [rip + 0x8b8ef]; lea rdx, [rip + 0x8b8e8]; call rcx; 
0x0000000000414efb: dec dword ptr [rax - 0x75]; and al, 0x28; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004373dc: dec dword ptr [rax - 0x75]; and al, 0x28; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000048c64f: dec dword ptr [rax - 0x75]; and al, 0x30; mov qword ptr [rsp + 0x128], rax; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x000000000042e598: dec dword ptr [rax - 0x75]; and al, 0x30; mov qword ptr [rsp + 0x660], rax; mov rbp, qword ptr [rsp + 0x648]; add rsp, 0x650; ret; 
0x0000000000490732: dec dword ptr [rax - 0x75]; and al, 0x38; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000434849: dec dword ptr [rax - 0x75]; and al, 0x40; mov qword ptr [rsp], rax; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000046ad9e: dec dword ptr [rax - 0x75]; and al, 0x48; lock xadd dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000437aa5: dec dword ptr [rax - 0x75]; and al, 0x50; mov qword ptr [rsp], rax; mov rdx, qword ptr [rsp + 0x68]; mov rax, qword ptr [rdx]; call rax; 
0x000000000048ba04: dec dword ptr [rax - 0x75]; and al, 0x70; mov qword ptr [rsp + 0xc8], rax; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x0000000000454138: dec dword ptr [rax - 0x75]; and al, 0x78; mov qword ptr [rsp + 0x320], rax; mov rbp, qword ptr [rsp + 0x2c0]; add rsp, 0x2c8; ret; 
0x00000000004162cc: dec dword ptr [rax - 0x75]; and al, 8; mov qword ptr [rsp + 0x20], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000426b4a: dec dword ptr [rax - 0x75]; and al, 8; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000483e71: dec dword ptr [rax - 0x75]; and al, 8; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000424a64: dec dword ptr [rax - 0x75]; and al, 8; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004836fc: dec dword ptr [rax - 0x75]; and al, 8; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000047d0a4: dec dword ptr [rax - 0x75]; and al, 8; mov rcx, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0x100]; mov qword ptr [rsp], rcx; call rax; 
0x000000000048258b: dec dword ptr [rax - 0x75]; and al, 8; mov rcx, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; call rax; 
0x000000000048523c: dec dword ptr [rax - 0x75]; and al, 8; mov rcx, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0xe8]; mov qword ptr [rsp], rcx; call rax; 
0x000000000046162d: dec dword ptr [rax - 0x75]; cmp byte ptr [rax + 0x48], dl; mov edx, edi; mov rdi, qword ptr [rdi]; call rdi; 
0x0000000000423755: dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; nop; ret; 
0x000000000040aaa6: dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000041a9a4: dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x00000000004161d8: dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000045c72d: dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x000000000043c095: dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; nop; ret; 
0x00000000004130e6: dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x000000000040a9c6: dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; ret; 
0x000000000041b8e4: dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x000000000042d955: dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x48; add rsp, 0x50; nop; ret; 
0x000000000041ef51: dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x48; add rsp, 0x50; ret; 
0x000000000043f5b5: dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x50; add rsp, 0x58; nop; ret; 
0x000000000041322c: dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x50; add rsp, 0x58; ret; 
0x0000000000437c35: dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x58; add rsp, 0x60; nop; ret; 
0x0000000000412efb: dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x58; add rsp, 0x60; ret; 
0x000000000042ba39: dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x60; add rsp, 0x68; ret; 
0x0000000000424175: dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x68; add rsp, 0x70; nop; ret; 
0x0000000000404868: dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x68; add rsp, 0x70; ret; 
0x000000000041351b: dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x70; add rsp, 0x78; ret; 
0x00000000004915f5: dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x78; sub rsp, -0x80; nop; ret; 
0x000000000040445c: dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x78; sub rsp, -0x80; ret; 
0x0000000000437d95: dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; nop; ret; 
0x000000000040b0bb: dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x0000000000464924: dec dword ptr [rax - 0x75]; je 0x6494d; or byte ptr [rbx + 0x44102454], cl; mov edx, dword ptr [rsp + 0x14]; mov eax, 0x101; syscall; 
0x00000000004624c0: dec dword ptr [rax - 0x75]; lodsb al, byte ptr [rsi]; and al, 0; add byte ptr [rax + rax], al; add rsp, 0x40008; ret; 
0x0000000000462220: dec dword ptr [rax - 0x75]; lodsb al, byte ptr [rsi]; and al, 0; add byte ptr [rax], 0; add rsp, 0x8008; ret; 
0x0000000000462f40: dec dword ptr [rax - 0x75]; lodsb al, byte ptr [rsi]; and al, 0; add byte ptr [rax], al; add rsp, 0x40000008; ret; 
0x0000000000462840: dec dword ptr [rax - 0x75]; lodsb al, byte ptr [rsi]; and al, 0; add byte ptr [rax], al; add rsp, 0x400008; ret; 
0x0000000000462140: dec dword ptr [rax - 0x75]; lodsb al, byte ptr [rsi]; and al, 0; add byte ptr [rax], al; add rsp, 0x4008; ret; 
0x00000000004617c5: dec dword ptr [rax - 0x75]; movsxd rdi, dword ptr [rax]; call 0x496e0; call 0x630c0; ret; 
0x0000000000496c29: dec dword ptr [rax - 0x75]; pushfq; and al, 0xb8; add byte ptr [rax], al; add cl, ch; ret; 
0x0000000000431158: dec dword ptr [rax - 0x75]; sbb byte ptr [rax - 0x77], cl; or al, 0x24; call rax; 
0x0000000000405ceb: dec dword ptr [rax - 0x75]; sbb byte ptr [rax - 0x7b], cl; fisttp dword ptr [rdi]; xchg eax, esp; ret 0x26e9; 
0x0000000000405d30: dec dword ptr [rax - 0x75]; sbb byte ptr [rax - 0x7b], cl; fisttp dword ptr [rdi]; xchg eax, esp; ret 0xbce9; 
0x000000000043a9b7: dec dword ptr [rax - 0x75]; sub al, 0x24; add rsp, 8; ret; 
0x000000000040a889: dec dword ptr [rax - 0x75]; xor byte ptr [r11 + 0x10891], cl; add byte ptr [rbp + 0x3f8c0fd2], al; add dword ptr [rax], eax; add bh, bh; ret 0x9189; 
0x0000000000403f6e: dec dword ptr [rax - 0x75]; xor byte ptr [rax + 0x39], cl; add dword ptr [rbp + 0xa], esi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042f312: dec dword ptr [rax - 0x75]; xor byte ptr [rbx - 0x76b7dbf4], cl; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000438ca8: dec dword ptr [rax - 0x75]; xor sil, al; adc byte ptr [rcx + rax], 0; add byte ptr [rcx], al; ret; 
0x00000000004616d7: dec dword ptr [rax - 0x77]; adc ecx, dword ptr [rax - 0x77]; fmul qword ptr [rax - 0x77]; cli; mov rdi, qword ptr [rdi]; call rdi; 
0x0000000000445028: dec dword ptr [rax - 0x77]; and al, 0x10; ret; 
0x00000000004487f2: dec dword ptr [rax - 0x77]; and al, 0x18; call 0x39a0; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000426a53: dec dword ptr [rax - 0x77]; and al, 0x50; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000437fcb: dec dword ptr [rax - 0x77]; and al, 0x58; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000475a96: dec dword ptr [rax - 0x77]; bnd jmp 0x7577f; mov rbp, qword ptr [rsp + 0x690]; add rsp, 0x698; ret; 
0x0000000000463066: dec dword ptr [rax - 0x77]; hlt; mov dword ptr [rsp + 0x18], eax; ret; 
0x000000000041d48c: dec dword ptr [rax - 0x77]; jl 0x1d4b5; sub byte ptr [rax - 0x77], cl; and al, 0x20; mov rax, qword ptr [rdx]; call rax; 
0x000000000042a9d9: dec dword ptr [rax - 0x77]; jl 0x2aa02; and byte ptr [rax - 0x77], cl; and al, 0x28; ret; 
0x000000000042a8ad: dec dword ptr [rax - 0x77]; push rsp; and al, 0x60; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004685ec: dec dword ptr [rax - 0x77]; ret 0x2be9; 
0x0000000000417cb7: dec dword ptr [rax - 0x77]; ret 0x8348; 
0x0000000000416764: dec dword ptr [rax - 0x77]; ret 0x8948; 
0x0000000000417c72: dec dword ptr [rax - 0x77]; ret 0xd148; 
0x0000000000417791: dec dword ptr [rax - 0x77]; ret; 
0x0000000000406654: dec dword ptr [rax - 0x77]; shr al, 1; ret; 
0x00000000004502e4: dec dword ptr [rax - 0x7b]; leave; jg 0x502f4; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000459ae4: dec dword ptr [rax - 0x7b]; leave; jne 0x5991d; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040b28d: dec dword ptr [rax - 0x7b]; sar byte ptr [rbp - 0x51], 0x48; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000413b7e: dec dword ptr [rax - 0x7d]; ret; 
0x0000000000490789: dec dword ptr [rax - 0x7d]; sti; add ecx, dword ptr [rdi]; xchg eax, esp; ret; 
0x0000000000447645: dec dword ptr [rax - 0x7f]; ret 0xfc7f; 
0x000000000045cc60: dec dword ptr [rbp + 0x39]; ret 0x830f; 
0x0000000000492229: dec dword ptr [rbp + rcx*4 + 0x50]; dec dword ptr [rcx - 0x77]; ret; 
0x0000000000474675: dec dword ptr [rbp - 0x7b]; ret; 
0x0000000000451f52: dec dword ptr [rbx - 0x76cbdbbc]; and al, 0x78; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000044ec85: dec dword ptr [rbx - 0x76cfdbbc]; and al, 0x78; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004600b0: dec dword ptr [rbx - 0x76d3dbbc]; and al, 0x48; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044e086: dec dword ptr [rcx + 0x29]; ret 0x2948; 
0x000000000045951e: dec dword ptr [rcx + 0x4838244c]; add eax, 4; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042da5a: dec dword ptr [rcx + 0x48402444]; mov ebp, dword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004351fd: dec dword ptr [rcx + rcx*4 + 0x44]; and al, 0x70; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000045155b: dec dword ptr [rcx - 0x176fdbf4]; sbb eax, dword ptr [rip - 0x74b80000]; insb byte ptr [rdi], dx; and al, 0x50; add rsp, 0x58; ret; 
0x000000000044386d: dec dword ptr [rcx - 0x4ef00f30]; sbb dword ptr [rdi], ecx; xchg eax, esp; ret 0xd284; 
0x0000000000463466: dec dword ptr [rcx - 0x6f]; ret; 
0x0000000000463446: dec dword ptr [rcx - 0x70]; ret; 
0x0000000000414d4f: dec dword ptr [rcx - 0x77]; fmul dword ptr [rax - 0x77]; ret; 
0x000000000040c6fe: dec dword ptr [rcx - 0x77]; ret 0x3ae9; 
0x000000000049222d: dec dword ptr [rcx - 0x77]; ret; 
0x0000000000413441: dec dword ptr [rcx - 1]; ret 0x4990; 
0x000000000040c792: dec dword ptr [rcx - 9]; ret 3; 
0x0000000000432a8c: dec dword ptr [rdi]; mov edx, 0x920f01e1; ret 0x3de9; 
0x0000000000418c7e: dec dword ptr [rdi]; xchg eax, ebp; ret; 
0x000000000048af9a: dec eax; mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x10], rax; call rdx; 
0x0000000000438e7e: dec eax; test eax, eax; jl 0x38ede; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000046af2b: dec eax; test eax, eax; jne 0x6af3b; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048aaa9: dec ecx; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x10], rcx; call rax; 
0x0000000000423aa0: dec edx; cmp dl, 1; ja 0x23ab1; cmp qword ptr [rcx + 0x70], rax; seta byte ptr [rsp + 0x10]; ret; 
0x000000000048af99: dec rax; mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x10], rax; call rdx; 
0x000000000048aaa8: dec rcx; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x10], rcx; call rax; 
0x000000000040a60f: div byte ptr [rcx + rbp*8 + 0x48]; mov ebp, dword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004365b3: div byte ptr [rdi + rdx + 0x48]; mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x0000000000437a65: div byte ptr [rsp + rbx*8 + 0x48]; mov dword ptr [rsp + 0x48], ecx; mov qword ptr [rsp], rcx; mov rdx, qword ptr [rsp + 0x68]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000441970: div ebx; mov ecx, ebx; test edx, edx; jne 0x4196a; mov dword ptr [rsp + 0x10], ecx; ret; 
0x000000000041775b: divps xmm0, xmm2; movsd qword ptr [rdx + 0x48], xmm0; ret; 
0x0000000000417752: divps xmm1, xmm0; movsd qword ptr [rdx + 0x40], xmm1; divsd xmm0, xmm2; movsd qword ptr [rdx + 0x48], xmm0; ret; 
0x000000000041775a: divsd xmm0, xmm2; movsd qword ptr [rdx + 0x48], xmm0; ret; 
0x0000000000417751: divsd xmm1, xmm0; movsd qword ptr [rdx + 0x40], xmm1; divsd xmm0, xmm2; movsd qword ptr [rdx + 0x48], xmm0; ret; 
0x0000000000407763: fadd dword ptr [rax]; add byte ptr [rax], al; add rsp, 0xe0; ret; 
0x0000000000476ba1: fadd dword ptr [rax]; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x00000000004244f7: fadd dword ptr [rax]; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000045fdf7: fadd dword ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000043d333: fadd dword ptr [rbx]; add byte ptr [rax], al; ret; 
0x0000000000474859: fadd dword ptr [rcx]; add byte ptr [rax], al; mov qword ptr [rsp + 0x1e0], rcx; mov rbp, qword ptr [rsp + 0x188]; add rsp, 0x190; ret; 
0x0000000000474713: fadd dword ptr [rcx]; add byte ptr [rax], al; mov qword ptr [rsp + 0x1e0], rdx; mov rbp, qword ptr [rsp + 0x188]; add rsp, 0x190; ret; 
0x000000000047b596: fadd dword ptr [rcx]; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x150]; add rsp, 0x158; ret; 
0x000000000046321e: fadd qword ptr [rip + 0x12365c]; aesenc xmm0, xmmword ptr [rip + 0x123663]; aesenc xmm0, xmmword ptr [rip + 0x12366a]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x0000000000463227: fadd qword ptr [rip + 0x123663]; aesenc xmm0, xmmword ptr [rip + 0x12366a]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x0000000000463230: fadd qword ptr [rip + 0x12366a]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x00000000004631bd: fadd qword ptr [rip + 0x1236bd]; aesenc xmm0, xmmword ptr [rip + 0x1236c4]; aesenc xmm0, xmmword ptr [rip + 0x1236cb]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x00000000004631c6: fadd qword ptr [rip + 0x1236c4]; aesenc xmm0, xmmword ptr [rip + 0x1236cb]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x00000000004631cf: fadd qword ptr [rip + 0x1236cb]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x00000000004608c1: fadd st(0), st(0); movq qword ptr [rdx], xmm0; ret; 
0x0000000000460b26: fbld tbyte ptr [rsi + 0x45]; pxor mm0, mm2; pxor xmm9, xmm11; pxor xmm8, xmm9; movq qword ptr [rdx], xmm8; ret; 
0x0000000000404702: fbstp tbyte ptr [rdx - 0x43]; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000437821: fcmovnbe st(0), st(0); add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000460904: fcom st(0), st(2); aesenc xmm3, xmm3; pxor xmm2, xmm3; movq qword ptr [rdx], xmm2; ret; 
0x00000000004608ff: fcomp st(0), st(3); aesenc xmm2, xmm2; aesenc xmm3, xmm3; pxor xmm2, xmm3; movq qword ptr [rdx], xmm2; ret; 
0x0000000000460909: fcomp st(0), st(3); pxor xmm2, xmm3; movq qword ptr [rdx], xmm2; ret; 
0x0000000000471cdb: fcos; jmp qword ptr [rsi - 0x70]; 
0x000000000042c0bc: fdiv dword ptr [rbx - 0x2a]; mov qword ptr [rsp + 0x18], rsi; ret; 
0x000000000045a1ec: fdiv dword ptr [rdx + 0xe]; add rcx, rbx; cmp rax, rcx; setb al; mov byte ptr [rsp + 0x10], al; ret; 
0x0000000000415efb: fdiv st(6), st(0); dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000471c7b: fdiv st(7), st(0); jmp qword ptr [rsi - 0x70]; 
0x00000000004609a2: fdiv st(7), st(0); pxor xmm4, xmm6; pxor xmm5, xmm7; pxor xmm4, xmm5; movq qword ptr [rdx], xmm4; ret; 
0x000000000045676d: fdivp st(5); dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x50; add rsp, 0x58; ret; 
0x0000000000471c3b: fdivp st(7); jmp qword ptr [rsi - 0x70]; 
0x00000000004496bb: fdivr dword ptr [rdi - 0x16]; mov dword ptr [rsp + 0x10], ebx; ret; 
0x0000000000448c58: fdivr dword ptr [rdi - 0x32]; mov byte ptr [rsp + 0xe0], 1; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x0000000000447dd6: fdivr st(5); dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000045653b: fdivr st(5); jmp qword ptr [rsi - 0x70]; 
0x0000000000471cfb: fdivr st(7); jmp qword ptr [rsi - 0x70]; 
0x000000000040f5e0: fiadd dword ptr [rbp + 0xf]; mov dh, 0x59; or byte ptr [rcx - 0xa], al; ret; 
0x000000000042c2ca: fiadd dword ptr [rcx + 0xf]; xchg eax, esp; ret 0x8445; 
0x0000000000424902: fiadd word ptr [rcx + 9]; ret; 
0x0000000000438889: ficom word ptr [rax + rax]; mov qword ptr [rsp], rax; call 0x431e0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000406dd2: fidiv dword ptr [rax + 0x48]; mov dword ptr [rsp + 0x120], eax; mov qword ptr [rsp + 0x128], rcx; mov rbp, qword ptr [rsp + 0x108]; add rsp, 0x110; ret; 
0x000000000040d6c8: fidiv dword ptr [rbp + 0xa]; movzx ecx, word ptr [rax + 0xa]; inc ecx; mov word ptr [rax + 0xa], cx; ret; 
0x00000000004023ed: fidiv dword ptr [rbx - 0x36]; mov qword ptr [r8], rdx; ret; 
0x000000000044a622: fidiv dword ptr [rdi + 0xa]; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044bbbb: fidiv dword ptr [rdx + 0x20]; mov qword ptr [rsp + 0xb0], rax; mov qword ptr [rsp + 0xb8], r11; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000045b682: fidivr dword ptr [rbx - 0x74b70003]; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000041b0ea: fidivr word ptr [rsi - 0x74b7ffea]; sub al, 0x24; add rsp, 8; ret; 
0x000000000042f0c1: fild dword ptr [rax + rax]; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x000000000040d1a1: fild dword ptr [rbp + rax]; mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042dc95: fild dword ptr [rdi + 0xff00015]; rol dword ptr [rdx], 0x88; and al, 0x28; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000403b67: fild dword ptr [rip + 0x6c8b4800]; and al, 0x28; add rsp, 0x30; ret; 
0x0000000000446d59: fild word ptr [rcx]; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x000000000040d5cc: fimul dword ptr [rax + 0x39]; bnd ja 0xd5e1; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042b0e8: fimul dword ptr [rax - 0x75]; cmp al, 0xd9; cmp rsi, rdi; je 0x2b0dd; mov byte ptr [rsp + 0x38], 0; ret; 
0x0000000000426834: fimul dword ptr [rax - 0x7f]; cli; lock inc dword ptr [rax]; add byte ptr [rdi], cl; xchg eax, edi; ret 0x8490; 
0x0000000000426877: fimul dword ptr [rax - 0x7f]; cli; lock inc dword ptr [rax]; add byte ptr [rdi], cl; xchg eax, edi; ret 0xd284; 
0x00000000004374ec: fimul dword ptr [rax - 0x7f]; ret 0x400; 
0x0000000000447621: fimul dword ptr [rdi]; xchg eax, edx; ret 0x894c; 
0x0000000000461c62: fimul word ptr [rax + 0x29]; fld1; adc eax, 0x48ffffeb; mov ebp, dword ptr [rsp + 0x100]; add rsp, 0x108; ret; 
0x0000000000462678: fimul word ptr [rax + 0x29]; fld1; jmp rax; 
0x0000000000461f78: fimul word ptr [rax + 0x29]; fld1; jmp rdi; 
0x00000000004624b8: fimul word ptr [rax + 0x29]; fld1; mov edi, 0x48ffffe2; mov ebp, dword ptr [rsp + 0x40000]; add rsp, 0x40008; ret; 
0x0000000000464450: fimul word ptr [rax + 0x29]; ret; 
0x00000000004219e3: fimul word ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000042cd15: fimul word ptr [rax - 0x77]; ret; 
0x0000000000422b54: fimul word ptr [rax - 0x7d]; ret 0x4804; 
0x000000000043928a: fist word ptr [rcx]; add byte ptr [rbp + 0x480a74c9], al; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044b1ca: fistp qword ptr [rdi - 0x4b]; mov qword ptr [rsp + 0xb8], rax; mov qword ptr [rsp + 0xc0], rcx; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000042a21a: fisttp dword ptr [rax + 0x21]; sbb al, 0xf2; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042cd12: fisttp dword ptr [rax + 9]; fimul word ptr [rax - 0x77]; ret; 
0x00000000004096a9: fisttp dword ptr [rcx + 0x39]; jo 0x96b6; jne 0x9685; mov qword ptr [rsp + 0x20], r8; ret; 
0x0000000000450ca2: fisttp dword ptr [rcx - 0x77]; ret; 
0x000000000040d282: fisttp dword ptr [rdi]; test byte ptr [rbp - 0x7bffffff], bl; add ecx, dword ptr [rax - 0x7f]; ret; 
0x0000000000437192: fisttp dword ptr [rdi]; test dword ptr [rax + rax - 0x74b80000], ecx; insb byte ptr [rdi], dx; and al, 0x58; add rsp, 0x60; ret; 
0x0000000000405cf1: fisttp dword ptr [rdi]; xchg eax, esp; ret 0x26e9; 
0x0000000000405d36: fisttp dword ptr [rdi]; xchg eax, esp; ret 0xbce9; 
0x000000000040a727: fisttp qword ptr [rax - 0x77]; push rsp; and al, 0x10; ret; 
0x0000000000435b47: fisttp qword ptr [rdi]; adc eax, 0xd2058800; or byte ptr [rip + 0x6c8b4800], dl; and al, 0x40; add rsp, 0x48; ret; 
0x00000000004790b2: fisttp qword ptr [rip + 0x6c8b4800]; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000449402: fisttp word ptr [rax + 0x29]; ret; 
0x0000000000462675: fisttp word ptr [rax + 1]; fimul word ptr [rax + 0x29]; fld1; jmp rax; 
0x0000000000461f75: fisttp word ptr [rax + 1]; fimul word ptr [rax + 0x29]; fld1; jmp rdi; 
0x00000000004210f8: fisttp word ptr [rax - 0x77]; and al, 0x18; ret; 
0x0000000000406a82: fisub dword ptr [rbx - 0x74b7fffe]; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x000000000048fdca: fisubr dword ptr [rsi + 0xc]; add byte ptr [rax - 0x77], cl; and al, 8; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000043c86d: fisubr word ptr [rcx + 0x75000011]; shufps xmm0, xmmword ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000441973: fld dword ptr [rbp - 0x760d8a2e]; and al, 0x10; ret; 
0x00000000004248f4: fld dword ptr [rcx + 0xf]; xchg eax, edi; ret; 
0x00000000004570ca: fld qword ptr [rcx]; add byte ptr [rax], al; mov qword ptr [rsp + 0x78], rcx; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000461c65: fld1; adc eax, 0x48ffffeb; mov ebp, dword ptr [rsp + 0x100]; add rsp, 0x108; ret; 
0x000000000046267b: fld1; jmp rax; 
0x0000000000461f7b: fld1; jmp rdi; 
0x00000000004624bb: fld1; mov edi, 0x48ffffe2; mov ebp, dword ptr [rsp + 0x40000]; add rsp, 0x40008; ret; 
0x000000000048fdc3: fldcw word ptr [rsi + 0xc]; add byte ptr [rax - 0x75], cl; or eax, 0xc6eda; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x0000000000482d06: fmul dword ptr [rax + 0x21]; ret 0x8948; 
0x0000000000412552: fmul dword ptr [rax + 0x21]; ret 0x8d48; 
0x000000000045a1e1: fmul dword ptr [rax + 0x21]; ret; 
0x0000000000463270: fmul dword ptr [rax - 0x57]; sldt word ptr [rax]; add byte ptr [rdi], cl; xchg eax, esp; and al, 8; ret; 
0x0000000000441a03: fmul dword ptr [rax - 0x73]; adc al, 0xd8; call rsi; 
0x000000000042fa38: fmul dword ptr [rax - 0x73]; or eax, 0x156a50; xchg dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046b5e3: fmul dword ptr [rax - 0x77]; and al, 0x30; mov qword ptr [rsp + 0x38], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048df77: fmul dword ptr [rax - 0x77]; and al, 0x38; call 0x5f320; ret; 
0x000000000048dfe6: fmul dword ptr [rax - 0x77]; and al, 0x50; call 0x5f320; ret; 
0x00000000004148b4: fmul dword ptr [rax - 0x77]; ret; 
0x0000000000416a2b: fmul dword ptr [rax - 1]; ret; 
0x0000000000447848: fmul dword ptr [rax - 9]; out 0xf, eax; nop; ret 0xbb48; 
0x000000000042e26f: fmul dword ptr [rcx + 0x48502444]; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042a881: fmul dword ptr [rcx + rcx*4 + 0x44]; and al, 0x58; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000045c4b8: fmul dword ptr [rcx - 0x40]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000441bc0: fmul dword ptr [rdi]; sahf; and al, 0x20; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000042ee82: fmul dword ptr [rdi]; sbb dword ptr [rax + rax - 0x74b80000], 0x34; ret 0x8548; 
0x000000000046a91e: fmul qword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x0000000000437a67: fmul qword ptr [rax - 0x77]; and al, 0x48; mov qword ptr [rsp], rcx; mov rdx, qword ptr [rsp + 0x68]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004616dd: fmul qword ptr [rax - 0x77]; cli; mov rdi, qword ptr [rdi]; call rdi; 
0x0000000000464daf: fmul qword ptr [rcx + 0x48382444]; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000460895: fmul st(1), st(0); aesenc xmm1, xmm1; aesenc xmm1, xmm1; movq qword ptr [rdx], xmm1; ret; 
0x000000000046089a: fmul st(1), st(0); aesenc xmm1, xmm1; movq qword ptr [rdx], xmm1; ret; 
0x000000000046089f: fmul st(1), st(0); movq qword ptr [rdx], xmm1; ret; 
0x00000000004924e7: fnstenv [rdi + 0x6c]; mov qword ptr [rsp + 0x60], rsi; mov qword ptr [rsp + 0x68], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042a9f5: fnstenv [rsi + 0xf]; mov qword ptr [rsp + 0x20], -1; mov qword ptr [rsp + 0x28], rsi; ret; 
0x00000000004640ef: fpatan; movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000441583: fprem; add eax, 0x728d0000; add dword ptr [rcx - 0x4ef00f30], ecx; mov cl, 0xf0; add eax, 0x940f0000; ret 0xd284; 
0x0000000000456187: fscale; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; ret; 
0x00000000004563db: fscale; jmp qword ptr [rsi - 0x70]; 
0x0000000000430982: fstp dword ptr [rbp + rdx]; add byte ptr [rbp + 0x11], dh; mov qword ptr [rip + 0x126130], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000406826: fstp xword ptr [rbp - 0x76b7fff5]; and al, 0x48; mov qword ptr [rsp + 0x50], 0x1d; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000430f24: fsub dword ptr [rbx + rax]; add bl, ch; ret 0x8d48; 
0x000000000043e458: fsub st(0), st(0); ret 0xfd6a; 
0x00000000004491a7: fsubp st(3); ror byte ptr [rax - 0x77], 1; pop rsp; and al, 0x20; ret; 
0x0000000000435138: fucomi st(0); ret 0x2e2; 
0x000000000042d72d: fucomi st(3); add ecx, dword ptr [rax - 1]; ret 0x3948; 
0x00000000004017d0: fucomi st(3); add ecx, dword ptr [rax - 1]; ret; 
0x0000000000415a99: fucomi st(3); ret 0xc748; 
0x00000000004411a8: hlt; add eax, 0x8b480000; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x0000000000463069: hlt; mov dword ptr [rsp + 0x18], eax; ret; 
0x0000000000447ad4: hlt; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000042ab08: idiv bh; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x0000000000434555: idiv bh; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x000000000048f46d: idiv bh; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x60; add rsp, 0x68; ret; 
0x000000000046b894: idiv bh; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x70; add rsp, 0x78; ret; 
0x0000000000472c8c: idiv dword ptr [rip + 0x5880011]; mov esi, dword ptr [rdi]; adc dword ptr [rax], eax; ret; 
0x0000000000423ddd: idiv dword ptr [rip - 0x76b7ffea]; and al, 0x10; call 0x26d60; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043b5da: idiv edi; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000046b7a4: idiv edi; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x70; add rsp, 0x78; ret; 
0x000000000040b0b9: idiv edi; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x00000000004265e7: idiv edi; inc dword ptr [rax + 0x10247c]; je 0x265fb; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042ab5b: idiv r15d; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x0000000000450dd7: imul bl; or dword ptr [rax - 1], ecx; ret 0x894c; 
0x0000000000402542: imul eax, dword ptr [rax], 0x448b4800; and al, 0x18; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042e763: imul eax, dword ptr [rbx], 0x6c8b4800; and al, 0x40; add rsp, 0x48; ret; 
0x0000000000467c8e: imul eax, dword ptr [rdi], 0x4c894800; and al, 0x18; mov qword ptr [rsp + 0x20], rax; ret; 
0x000000000045a6cf: imul eax, dword ptr [rsi], 0x7894800; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000464ce0: imul eax, eax, 0x3b9aca00; add rax, rdx; mov qword ptr [rsp + 0x20], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040267e: imul eax, ecx; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000402995: imul eax, ecx; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000471a7a: imul ebp, ebp, -1; jmp qword ptr [rsi - 0x70]; 
0x000000000045d6ea: imul ebx, dword ptr [rbx + 0x7500000f], 0x6c8b48d3; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000471c7a: imul ebx, esp, -1; jmp qword ptr [rsi - 0x70]; 
0x000000000040f6c9: imul ebx; ret; 
0x000000000048fce4: imul ecx, dword ptr [rdi], 0x11750000; mov qword ptr [rip + 0xc7017], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040261e: imul ecx, eax; mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000402948: imul ecx, eax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000409290: imul ecx, eax; mov rax, rcx; shr rcx, 0x20; xor rax, rcx; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000409217: imul ecx, eax; mov rax, rcx; shr rcx, 0x20; xor rcx, rax; mov qword ptr [rsp + 0x18], rcx; ret; 
0x00000000004090c9: imul ecx, eax; mov rax, rcx; shr rcx, 0x20; xor rcx, rax; mov qword ptr [rsp + 0x20], rcx; ret; 
0x0000000000471e7a: imul ecx, ebx, -1; jmp qword ptr [rsi - 0x70]; 
0x000000000043a299: imul ecx, edi, 0x11; add byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], cl; xchg eax, ebp; ret 0xd284; 
0x0000000000414531: imul edi, eax, 4; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x58; add rsp, 0x60; ret; 
0x0000000000496fba: imul edi, ebp, -1; jmp qword ptr [rsi - 0x70]; 
0x000000000045d18c: imul edi, ebp, 0x6c8b48ff; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000403c96: imul edi, edi, -1; jmp qword ptr [rsi + 0xf]; 
0x0000000000421c7b: imul edi, edi, 0xb60fffff; jl 0x21ca7; xor dword ptr [rax - 0x77], ecx; ret 0x894d; 
0x000000000048fe83: imul edi, esi, 0x8b48000b; or eax, 0xbfe6a; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x0000000000435ed1: imul edx, dword ptr [rbx], 0x12; add byte ptr [rcx], bh; sar dword ptr [rdi + 0xa], 0x48; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041042b: imul edx, dword ptr [rcx + 0x49], -0x7d; ret; 
0x000000000045f949: imul edx, dword ptr [rdx], 0; lea rcx, [rip + 0xe16dd]; xchg dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046b893: imul esi, esi, 0x8b48ffff; insb byte ptr [rdi], dx; and al, 0x70; add rsp, 0x78; ret; 
0x000000000047bda9: imul esp, dword ptr [rip - 0x76b7fffc], 0x44; and al, 0x50; mov qword ptr [rsp + 0x58], 4; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000464cdf: imul rax, rax, 0x3b9aca00; add rax, rdx; mov qword ptr [rsp + 0x20], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040267d: imul rax, rcx; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000402994: imul rax, rcx; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040261d: imul rcx, rax; mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000402947: imul rcx, rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040928f: imul rcx, rax; mov rax, rcx; shr rcx, 0x20; xor rax, rcx; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000409216: imul rcx, rax; mov rax, rcx; shr rcx, 0x20; xor rcx, rax; mov qword ptr [rsp + 0x18], rcx; ret; 
0x00000000004090c8: imul rcx, rax; mov rax, rcx; shr rcx, 0x20; xor rcx, rax; mov qword ptr [rsp + 0x20], rcx; ret; 
0x000000000045f948: imul rdx, qword ptr [rdx], 0; lea rcx, [rip + 0xe16dd]; xchg dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043f4cb: in al, 0x48; mov ebp, dword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000464da9: in al, 0xf0; call rax; 
0x0000000000464dd9: in al, 0xf0; call rax; mov rsp, rbp; pop rbp; ret; 
0x0000000000464ff6: in al, 0xf0; mov qword ptr [rsp], rbx; call rax; 
0x000000000043c562: in al, 0xfc; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000041c626: in al, 0xfe; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x0000000000471b7b: in al, 0xff; jmp qword ptr [rsi - 0x70]; 
0x000000000044640e: in al, 1; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x00000000004252b6: in al, 3; add al, ch; ret 0xb2; 
0x000000000048d540: in al, dx; add al, 0; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000405392: in al, dx; add eax, 0x6c8b4800; and al, 0x28; add rsp, 0x30; ret; 
0x000000000047d985: in al, dx; mov dword ptr [rsp + 0x28], edx; ret; 
0x00000000004148d7: in al, dx; mov qword ptr [rsp + 0x30], rdx; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043ad41: in al, dx; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000464ddf: in al, dx; pop rbp; ret; 
0x000000000045832d: in al, dx; str word ptr [rax - 0x77]; ret; 
0x000000000041cb62: in eax, 0; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x1f8]; add rsp, 0x200; ret; 
0x0000000000411fb7: in eax, 0x1d; add eax, 0x6c8b4800; and al, 0x18; add rsp, 0x20; ret; 
0x0000000000464dd6: in eax, 0x48; and esp, 0xfffffff0; call rax; 
0x0000000000464dd6: in eax, 0x48; and esp, 0xfffffff0; call rax; mov rsp, rbp; pop rbp; ret; 
0x000000000040a94f: in eax, 0x48; mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000402130: in eax, 0x74; ret 0xfdc5; 
0x000000000043c486: in eax, 0xfc; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x0000000000492e91: in eax, 0xff; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x78; sub rsp, -0x80; ret; 
0x0000000000471b5b: in eax, 0xff; jmp qword ptr [rsi - 0x70]; 
0x0000000000431397: in eax, 2; add eax, dword ptr [rax]; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004052f2: in eax, dx; add eax, 0x6c8b4800; and al, 0x28; add rsp, 0x30; ret; 
0x0000000000482daf: in eax, dx; cmp esi, -1; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x000000000042a17b: in eax, dx; ret; 
0x000000000042a5a7: inc byte ptr [rax]; add byte ptr [rax], ah; add byte ptr [rbp + 0x10], dh; movabs rax, 0x8000000000000000; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000478a6b: inc byte ptr [rax]; add byte ptr [rbp - 0x63], dh; mov byte ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004265e9: inc dword ptr [rax + 0x10247c]; je 0x265fb; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048eb31: inc dword ptr [rax + 0x10247c]; jne 0x8eb43; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048eb91: inc dword ptr [rax + 0x10247c]; jne 0x8eba3; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043ef7c: inc dword ptr [rax + 0x11e78c3d]; add byte ptr [rax], al; jne 0x3ef90; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000045dc9e: inc dword ptr [rax + 0x12878a3d]; add byte ptr [rax], al; jne 0x5dcb2; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000043c961: inc dword ptr [rax + 0x14]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045b0b5: inc dword ptr [rax + 0x28247c]; je 0x5b0c7; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040405c: inc dword ptr [rax + 0x8247c]; je 0x406e; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000454eb1: inc dword ptr [rax - 0x7c]; push qword ptr [rbp + 0x18]; mov qword ptr [rsp + 0x2b0], rbx; mov rbp, qword ptr [rsp + 0x278]; add rsp, 0x280; ret; 
0x000000000045994d: inc dword ptr [rax]; add byte ptr [rax + 0x39], cl; ret 0x820f; 
0x0000000000426839: inc dword ptr [rax]; add byte ptr [rdi], cl; xchg eax, edi; ret 0x8490; 
0x000000000042687c: inc dword ptr [rax]; add byte ptr [rdi], cl; xchg eax, edi; ret 0xd284; 
0x000000000040221c: inc dword ptr [rax]; add byte ptr [rsp + rbx*4 - 0x3a], dh; add byte ptr [rax], al; ret; 
0x00000000004734f3: inc dword ptr [rbx + 0x328]; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000409890: inc dword ptr [rbx + 8]; ret; 
0x000000000041ea99: inc dword ptr [rbx + rbx*8 - 0x74b7f58b]; insb byte ptr [rdi], dx; and al, 0x60; add rsp, 0x68; ret; 
0x000000000042589d: inc dword ptr [rcx + 0x1228]; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004922ac: inc dword ptr [rcx + 0xf]; mov dh, 0x14; adc ecx, dword ptr [rcx + 0x39]; int 0x72; ret 0x7ce9; 
0x0000000000441717: inc dword ptr [rcx + rcx*4 + 0x4c]; and al, 0x38; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000041bf38: inc dword ptr [rcx + rcx*8 - 0x74b7f58b]; insb byte ptr [rdi], dx; and al, 0x50; add rsp, 0x58; ret; 
0x0000000000454253: inc dword ptr [rcx - 0x80]; call qword ptr [rax]; 
0x0000000000492d2f: inc dword ptr [rcx - 0x80]; js 0x92d3c; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000420bd7: inc dword ptr [rdi + 0x10]; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000420e82: inc dword ptr [rdx + 0x140]; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004819fd: inc dword ptr [rdx]; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000403150: inc dword ptr [rip + 0x448b4800]; and al, 0x18; mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000040d0dc: inc eax; mov dword ptr [rsp + 0x28], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000464f90: inc eax; mov qword ptr [rsp + 0x28], 0; mov qword ptr [rsp + 0x30], rax; ret; 
0x00000000004994ec: inc eax; mov qword ptr [rsp + 0x28], rax; call 0x97ca0; mov rbp, qword ptr [rsp + 0x1c8]; add rsp, 0x1d0; ret; 
0x00000000004593ce: inc eax; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004051d0: inc eax; mov qword ptr [rsp + 8], rax; call 0x34f20; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000405e7a: inc eax; mov qword ptr [rsp + 8], rax; call 0x34f20; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000443182: inc eax; test eax, eax; jl 0x43192; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000447acd: inc ecx; cmp rax, 1; ja 0x47ac9; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000042d382: inc ecx; cmp rcx, 0x43; jl 0x2d362; ret; 
0x000000000042a174: inc ecx; cmp rcx, 8; jl 0x2a169; ret; 
0x000000000042a2b4: inc ecx; cmp rcx, 8; jl 0x2a2a9; ret; 
0x000000000041cfcd: inc ecx; cmp rdx, rcx; jg 0x1cfab; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000048aeb3: inc ecx; mov qword ptr [rsp + 0x78], rcx; mov qword ptr [rsp + 0x10], rcx; nop; call rdx; 
0x000000000040d6cf: inc ecx; mov word ptr [rax + 0xa], cx; ret; 
0x000000000040160f: inc edx; cmp rax, rdx; jg 0x1592; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x000000000045a1c8: inc edx; cmp rax, rdx; jg 0x5a1b7; mov byte ptr [rsp + 0x10], 0; ret; 
0x00000000004734f2: inc qword ptr [rbx + 0x328]; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040988f: inc qword ptr [rbx + 8]; ret; 
0x000000000042589c: inc qword ptr [rcx + 0x1228]; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000420bd6: inc qword ptr [rdi + 0x10]; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000420e81: inc qword ptr [rdx + 0x140]; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000464f8f: inc rax; mov qword ptr [rsp + 0x28], 0; mov qword ptr [rsp + 0x30], rax; ret; 
0x00000000004994eb: inc rax; mov qword ptr [rsp + 0x28], rax; call 0x97ca0; mov rbp, qword ptr [rsp + 0x1c8]; add rsp, 0x1d0; ret; 
0x00000000004593cd: inc rax; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004051cf: inc rax; mov qword ptr [rsp + 8], rax; call 0x34f20; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000405e79: inc rax; mov qword ptr [rsp + 8], rax; call 0x34f20; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000447acc: inc rcx; cmp rax, 1; ja 0x47ac9; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000042d381: inc rcx; cmp rcx, 0x43; jl 0x2d362; ret; 
0x000000000042a173: inc rcx; cmp rcx, 8; jl 0x2a169; ret; 
0x000000000042a2b3: inc rcx; cmp rcx, 8; jl 0x2a2a9; ret; 
0x000000000041cfcc: inc rcx; cmp rdx, rcx; jg 0x1cfab; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000048aeb2: inc rcx; mov qword ptr [rsp + 0x78], rcx; mov qword ptr [rsp + 0x10], rcx; nop; call rdx; 
0x000000000040160e: inc rdx; cmp rax, rdx; jg 0x1592; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x000000000045a1c7: inc rdx; cmp rax, rdx; jg 0x5a1b7; mov byte ptr [rsp + 0x10], 0; ret; 
0x0000000000407198: insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; nop; ret; 
0x000000000040103f: insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000040fdd8: insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; nop; ret; 
0x000000000040281f: insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000048fa35: insb byte ptr [rdi], dx; and al, 0x18; lea rbp, [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x000000000048fa3a: insb byte ptr [rdi], dx; and al, 0x18; mov rdx, qword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000401db8: insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; nop; ret; 
0x0000000000401cc3: insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000432378: insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; nop; ret; 
0x0000000000403b6c: insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x0000000000406a78: insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; nop; ret; 
0x0000000000401a27: insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x0000000000403718: insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; nop; ret; 
0x0000000000402952: insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; ret; 
0x0000000000464e59: insb byte ptr [rdi], dx; and al, 0x38; mov rbx, qword ptr [rsp + 0x40]; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000428b78: insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; nop; ret; 
0x000000000040931d: insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x000000000040be98: insb byte ptr [rdi], dx; and al, 0x48; add rsp, 0x50; nop; ret; 
0x0000000000406931: insb byte ptr [rdi], dx; and al, 0x48; add rsp, 0x50; ret; 
0x000000000043f5b8: insb byte ptr [rdi], dx; and al, 0x50; add rsp, 0x58; nop; ret; 
0x0000000000403c07: insb byte ptr [rdi], dx; and al, 0x50; add rsp, 0x58; ret; 
0x0000000000437c38: insb byte ptr [rdi], dx; and al, 0x58; add rsp, 0x60; nop; ret; 
0x0000000000411587: insb byte ptr [rdi], dx; and al, 0x58; add rsp, 0x60; ret; 
0x000000000045a738: insb byte ptr [rdi], dx; and al, 0x60; add rsp, 0x68; nop; ret; 
0x000000000041eaa0: insb byte ptr [rdi], dx; and al, 0x60; add rsp, 0x68; ret; 
0x0000000000424178: insb byte ptr [rdi], dx; and al, 0x68; add rsp, 0x70; nop; ret; 
0x0000000000403a61: insb byte ptr [rdi], dx; and al, 0x68; add rsp, 0x70; ret; 
0x00000000004503f8: insb byte ptr [rdi], dx; and al, 0x70; add rsp, 0x78; nop; ret; 
0x0000000000404b87: insb byte ptr [rdi], dx; and al, 0x70; add rsp, 0x78; ret; 
0x0000000000463319: insb byte ptr [rdi], dx; and al, 0x70; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x00000000004914b8: insb byte ptr [rdi], dx; and al, 0x78; sub rsp, -0x80; nop; ret; 
0x0000000000404287: insb byte ptr [rdi], dx; and al, 0x78; sub rsp, -0x80; ret; 
0x0000000000462fd0: insb byte ptr [rdi], dx; and al, 0xf8; sub qword ptr [rsp], 5; mov rbx, qword ptr [rdx]; jmp rbx; 
0x0000000000437d98: insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; nop; ret; 
0x0000000000405fec: insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x0000000000461530: insb byte ptr [rdi], dx; mov eax, 0x5858fffd; call 0x374a0; call 0x630c0; ret; 
0x00000000004924e9: insb byte ptr [rdi], dx; mov qword ptr [rsp + 0x60], rsi; mov qword ptr [rsp + 0x68], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000047a931: insd dword ptr [rdi], dx; add byte ptr [rax + 0x1b02484], cl; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x138]; add rsp, 0x140; ret; 
0x000000000047b591: insd dword ptr [rdi], dx; add byte ptr [rax + 0x1d82484], cl; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x150]; add rsp, 0x158; ret; 
0x000000000047b371: insd dword ptr [rdi], dx; add byte ptr [rax + 0x1e82484], cl; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x158]; add rsp, 0x160; ret; 
0x000000000047d4f1: insd dword ptr [rdi], dx; add byte ptr [rax + 0x2302484], cl; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x1a0]; add rsp, 0x1a8; ret; 
0x0000000000418329: insd dword ptr [rdi], dx; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000046a2ee: insd dword ptr [rdi], dx; ret; 
0x000000000045efd0: int 0x48; mov dword ptr [rsp + 0x38], ecx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; nop; ret; 
0x00000000004922b4: int 0x72; ret 0x7ce9; 
0x0000000000471e3b: int 0xff; jmp qword ptr [rsi - 0x70]; 
0x000000000043410f: int 3; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000416659: int 4; add byte ptr [rax - 0x77], cl; ret 0xeb90; 
0x000000000043580f: int1; add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040eee5: int1; add ecx, ebp; ret 0xfffe; 
0x00000000004819f9: int1; mov byte ptr [rbx + rax], cl; inc dword ptr [rdx]; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000041adb3: int1; mov qword ptr [rsp + 0x50], rcx; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000401aba: int1; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044354b: int1; sbb eax, 0x8b48ffff; insb byte ptr [rdi], dx; and al, 0x58; add rsp, 0x60; ret; 
0x00000000004551bb: int1; std; jmp qword ptr [rsi - 0x70]; 
0x000000000047d52d: iretd; adc al, 6; add byte ptr [rax - 0x77], cl; and al, 0x18; mov qword ptr [rsp + 0x20], rax; ret; 
0x0000000000439289: iretd; fist word ptr [rcx]; add byte ptr [rbp + 0x480a74c9], al; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040a57d: iretd; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000049482d: iretd; movabs eax, dword ptr [0xf8898b480004]; add byte ptr [rax - 0x77], cl; add al, 0x24; call rcx; 
0x000000000045788d: iretd; ret 0xfffd; 
0x0000000000481fad: iretd; ret 3; 
0x0000000000402060: iretd; shr rsi, cl; and rsi, 1; lea rax, [rsi*2 - 1]; mov qword ptr [r9], rax; ret; 
0x0000000000413611: ja 0x135c2; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004136a3: ja 0x13633; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000413751: ja 0x13702; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004148d6: ja 0x148c4; mov qword ptr [rsp + 0x30], rdx; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x00000000004168d0: ja 0x16878; cmp qword ptr [rcx + 0xa8], rax; jbe 0x16878; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000041b755: ja 0x1b761; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000041f1ae: ja 0x1f198; mov qword ptr [rip + 0x15e7f9], rdi; ret; 
0x0000000000402263: ja 0x222b; add byte ptr [rax], al; ret; 
0x0000000000422b5c: ja 0x22b4e; ret; 
0x0000000000423aa5: ja 0x23ab1; cmp qword ptr [rcx + 0x70], rax; seta byte ptr [rsp + 0x10]; ret; 
0x0000000000423b4b: ja 0x23b3d; cmp qword ptr [rcx + 0x70], rax; jbe 0x23b3d; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000040245a: ja 0x24a5; mov dword ptr [rax], 0xffffffff; ret; 
0x00000000004254aa: ja 0x254bb; mov byte ptr [rsp + 0x78], 1; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000402c84: ja 0x2c3a; mov qword ptr [rsp + 0xb8], rdx; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000042d3d0: ja 0x2d3dc; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042d496: ja 0x2d4a2; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000402e03: ja 0x2e1d; mov qword ptr [rsp + 0xb8], rdx; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x0000000000433507: ja 0x33513; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043828a: ja 0x38274; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004391a5: ja 0x39188; adc dword ptr [rax], eax; mov qword ptr [rsp], rcx; mov rax, qword ptr [rdx]; call rax; 
0x000000000043e303: ja 0x3e314; mov byte ptr [rsp + 0x30], 1; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044329b: ja 0x43299; jmp qword ptr [rsi - 0x70]; 
0x0000000000447ad3: ja 0x47ac9; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000044a623: ja 0x4a62f; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044dda4: ja 0x4dd8e; cmp qword ptr [rcx + 0x58], rax; jbe 0x4dd8e; mov qword ptr [rsp + 0x10], rcx; ret; 
0x0000000000456ee9: ja 0x56f04; cmp cl, 0x15; jne 0x56efa; add rax, 0x58; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000045778a: ja 0x57948; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000045d365: ja 0x5d3dc; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000461808: ja 0x61813; lea rax, [rip + 0x1cf]; jmp rax; 
0x0000000000461817: ja 0x61822; lea rax, [rip + 0x260]; jmp rax; 
0x0000000000461829: ja 0x61834; lea rax, [rip + 0x2ee]; jmp rax; 
0x000000000046183b: ja 0x61846; lea rax, [rip + 0x39c]; jmp rax; 
0x000000000046184d: ja 0x61858; lea rax, [rip + 0x44a]; jmp rax; 
0x000000000046185f: ja 0x6186a; lea rax, [rip + 0x4f8]; jmp rax; 
0x0000000000461871: ja 0x6187c; lea rax, [rip + 0x5a6]; jmp rax; 
0x0000000000461883: ja 0x6188e; lea rax, [rip + 0x654]; jmp rax; 
0x0000000000461895: ja 0x618a0; lea rax, [rip + 0x722]; jmp rax; 
0x00000000004618a7: ja 0x618b2; lea rax, [rip + 0x7f0]; jmp rax; 
0x00000000004618b9: ja 0x618c4; lea rax, [rip + 0x8be]; jmp rax; 
0x00000000004618cb: ja 0x618d6; lea rax, [rip + 0x98c]; jmp rax; 
0x00000000004618dd: ja 0x618e8; lea rax, [rip + 0xa5a]; jmp rax; 
0x00000000004618ef: ja 0x618fa; lea rax, [rip + 0xb28]; jmp rax; 
0x0000000000461901: ja 0x6190c; lea rax, [rip + 0xbf6]; jmp rax; 
0x0000000000461913: ja 0x6191e; lea rax, [rip + 0xcc4]; jmp rax; 
0x0000000000461925: ja 0x61930; lea rax, [rip + 0xd92]; jmp rax; 
0x0000000000461937: ja 0x61942; lea rax, [rip + 0xe60]; jmp rax; 
0x0000000000461949: ja 0x61954; lea rax, [rip + 0xf2e]; jmp rax; 
0x000000000046195b: ja 0x61966; lea rax, [rip + 0xffc]; jmp rax; 
0x000000000046196d: ja 0x61978; lea rax, [rip + 0x10ca]; jmp rax; 
0x000000000046197f: ja 0x6198a; lea rax, [rip + 0x1198]; jmp rax; 
0x0000000000461991: ja 0x6199c; lea rax, [rip + 0x1266]; jmp rax; 
0x00000000004619a3: ja 0x619ae; lea rax, [rip + 0x1334]; jmp rax; 
0x00000000004619b5: ja 0x619c0; lea rax, [rip + 0x1402]; jmp rax; 
0x00000000004619c7: ja 0x619d2; lea rax, [rip + 0x14d0]; jmp rax; 
0x0000000000463057: ja 0x63061; sub rsi, qword ptr [rsp + 0x28]; mov qword ptr fs:[0xfffffffffffffff8], rdi; mov rsp, rsi; mov dword ptr [rsp + 0x18], eax; ret; 
0x00000000004630ed: ja 0x630f4; call 0x630c0; cmp rsp, qword ptr [rax]; ja 0x630fe; call 0x630c0; ret; 
0x00000000004630f7: ja 0x630fe; call 0x630c0; ret; 
0x00000000004064e0: ja 0x64f2; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000046726f: ja 0x6728b; cmp rcx, 0x15; jne 0x67281; add rax, 0x58; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000479a0f: ja 0x79a2b; cmp rcx, 0x15; jne 0x79a21; add rax, 0x58; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000485125: ja 0x84e0a; lea rax, [rip + 0x411e6]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004924e8: ja 0x92556; mov qword ptr [rsp + 0x60], rsi; mov qword ptr [rsp + 0x68], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000496974: ja 0x969be; mov dword ptr [rax + 0x48], ecx; mov byte ptr [rax + 0x50], dl; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000040be32: ja 0xbe48; mov qword ptr [rsp + 0x70], rcx; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000040d5d0: ja 0xd5e1; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000401a23: jae 0x1a2f; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000041f1ab: jae 0x1f1c3; add byte ptr [rdi - 0x18], dh; mov qword ptr [rip + 0x15e7f9], rdi; ret; 
0x0000000000420bcf: jae 0x20c18; mov qword ptr [rdi + rax*8 + 0x20], rdx; inc qword ptr [rdi + 0x10]; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000422f46: jae 0x22fbd; mov rax, qword ptr [rbx + rdx*8 + 0x10]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004023ee: jae 0x23ba; mov qword ptr [r8], rdx; ret; 
0x000000000042be88: jae 0x2bea0; mov qword ptr [rsp + 0x40], r9; mov qword ptr [rsp + 0x48], rdi; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042c0bd: jae 0x2c095; mov qword ptr [rsp + 0x18], rsi; ret; 
0x000000000042f443: jae 0x2f44f; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000444e87: jae 0x44e93; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045c82d: jae 0x5c82c; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000048227b: jae 0x822f7; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000049a7f1: jae 0x9a7b7; or eax, dword ptr [rax]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040d545: jae 0xd52e; mov byte ptr [rsp + 0x10], 1; ret; 
0x000000000041588a: jb 0x1588d; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x0000000000415e8a: jb 0x15e96; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042aa89: jb 0x2aa42; mov qword ptr [rsp + 0x18], rcx; ret; 
0x000000000042bf50: jb 0x2bf66; mov qword ptr [rsp + 0x48], rbx; mov qword ptr [rsp + 0x50], rsi; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043ce0a: jb 0x3ce54; add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000441f80: jb 0x41f8c; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x00000000004421ce: jb 0x421da; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000443107: jb 0x4311f; lea rax, [rip + 0x7d76a]; mov qword ptr [rsp + 0x10], rax; mov qword ptr [rsp + 0x18], 0x13; ret; 
0x000000000044381c: jb 0x4381a; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x48; add rsp, 0x50; ret; 
0x0000000000404703: jb 0x46c2; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x000000000044bbbc: jb 0x4bbde; mov qword ptr [rsp + 0xb0], rax; mov qword ptr [rsp + 0xb8], r11; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x00000000004570c8: jb 0x572ab; mov qword ptr [rsp + 0x78], rcx; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000045a1ed: jb 0x5a1fd; add rcx, rbx; cmp rax, rcx; setb al; mov byte ptr [rsp + 0x10], al; ret; 
0x0000000000493eee: jb 0x93eed; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x00000000004168d9: jbe 0x16878; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x0000000000423a94: jbe 0x23a9c; mov byte ptr [rsp + 0x10], 0; ret; 
0x0000000000423b51: jbe 0x23b3d; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000042a9f6: jbe 0x2aa07; mov qword ptr [rsp + 0x20], -1; mov qword ptr [rsp + 0x28], rsi; ret; 
0x000000000042aa83: jbe 0x2aa8b; cmp rcx, 0x40; jb 0x2aa42; mov qword ptr [rsp + 0x18], rcx; ret; 
0x0000000000446b06: jbe 0x46b09; add byte ptr [rax], al; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000448f9b: jbe 0x48fa8; mov rdx, qword ptr [rdx + 0x10]; add rcx, rdx; mov qword ptr [rax + 0x68], rcx; ret; 
0x000000000044c27a: jbe 0x4c23b; mov qword ptr [rsp + 0x18], 0; mov byte ptr [rsp + 0x20], 0; ret; 
0x000000000044ddaa: jbe 0x4dd8e; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000045d22f: jbe 0x5d231; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; ret; 
0x0000000000464940: jbe 0x64947; mov eax, 0xffffffff; mov dword ptr [rsp + 0x18], eax; ret; 
0x0000000000464971: jbe 0x64978; mov eax, 0xffffffff; mov dword ptr [rsp + 0x10], eax; ret; 
0x0000000000466ea5: jbe 0x66ea6; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000040c0ef: jbe 0xc0f6; add byte ptr [rax + 0x556e8e8], dl; add cl, ch; ret; 
0x0000000000410648: je 0x1065a; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000410826: je 0x1084c; cmp byte ptr [rax - 0x77], cl; xor al, 0x24; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000410b0a: je 0x10b30; push rax; mov qword ptr [rsp], rsi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000411293: je 0x112a5; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x00000000004113ca: je 0x113f0; js 0x11416; mov dword ptr [rsp], esi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000411bdd: je 0x11bef; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000418d4e: je 0x18d58; mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000419c26: je 0x19c30; mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 0x1b0]; add rsp, 0x1b8; nop; ret; 
0x0000000000401cb9: je 0x1ccb; xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000041d107: je 0x1d121; mov byte ptr [rbx + 0x110], 1; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; nop; ret; 
0x000000000041e2ac: je 0x1e2b8; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000401f07: je 0x1f15; mov qword ptr [rip + 0x184584], 0x3f; ret; 
0x000000000041f9f5: je 0x1fa01; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000420393: je 0x203a4; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004206ae: je 0x2066d; mov byte ptr [rsp + 0x40], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000421142: je 0x2112d; ret; 
0x000000000040221f: je 0x21bd; mov byte ptr [rax], 0; ret; 
0x000000000040225f: je 0x2225; vzeroupper; mov byte ptr [rax], 0; ret; 
0x0000000000402286: je 0x226b; mov byte ptr [rax], 0; ret; 
0x0000000000422b9d: je 0x22bb2; mov rcx, qword ptr [rsp + 0x18]; mov qword ptr [rcx + 8], rax; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000422c62: je 0x22c6d; cmp dword ptr [rip + 0x1637f9], 1; je 0x22c77; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000422c6b: je 0x22c77; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000422e78: je 0x22e84; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000423159: je 0x23165; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000423207: je 0x23213; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004023af: je 0x2379; pmovmskb edx, xmm1; bsf edx, edx; jne 0x23c2; mov qword ptr [r8], -1; ret; 
0x0000000000423a8e: je 0x23a96; cmp qword ptr [rcx + 0x18], rax; jbe 0x23a9c; mov byte ptr [rsp + 0x10], 0; ret; 
0x0000000000423b3b: je 0x23b47; mov qword ptr [rsp + 0x10], 0; ret; 
0x00000000004023ea: je 0x23ba; cmp edx, ebx; jae 0x23ba; mov qword ptr [r8], rdx; ret; 
0x000000000040240c: je 0x23ba; mov qword ptr [r8], rdx; ret; 
0x000000000042416c: je 0x24176; mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; nop; ret; 
0x000000000040244f: je 0x242a; vptest ymm3, ymm3; jne 0x2463; vzeroupper; mov qword ptr [r8], -1; ret; 
0x00000000004265ef: je 0x265fb; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000427b56: je 0x27b7c; or byte ptr [rax - 1], cl; ret 0x2948; 
0x0000000000427caf: je 0x27c32; mov qword ptr [rsp + 0x40], rsi; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x0000000000427c56: je 0x27c67; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000427cb3: je 0x27cd9; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x0000000000429a67: je 0x29a8d; push rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042b0f0: je 0x2b0dd; mov byte ptr [rsp + 0x38], 0; ret; 
0x000000000042bf59: je 0x2bf7f; push rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042cd73: je 0x2cd84; mov qword ptr [rsp + 0x30], rbx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042cfd5: je 0x2cfe6; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042d075: je 0x2d086; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042daa5: je 0x2dab1; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000042e311: je 0x2e2da; cmp eax, -0xb; jne 0x2e32c; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042f4eb: je 0x2f4f2; cmp eax, 0x40; jne 0x2f4fc; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042fbac: je 0x2fbb7; cmp dword ptr [rax + 0xf0], 0; jne 0x2fbe8; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042fc72: je 0x2fc7d; cmp dword ptr [rax + 0xf0], 0; jne 0x2fc87; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004310bd: je 0x3111a; mov rax, qword ptr [rax + 0x18]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000432210: je 0x32218; cmp byte ptr [rax + 0x32], 0; je 0x32221; xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x10], xmm0; ret; 
0x0000000000432216: je 0x32221; xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x10], xmm0; ret; 
0x0000000000432b3b: je 0x32b4c; mov byte ptr [rsp + 0x40], 1; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000432b71: je 0x32b82; mov byte ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000433b9d: je 0x33ba9; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000403455: je 0x3467; xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004034d5: je 0x34e7; xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004351f4: je 0x351fe; mov qword ptr [rax + 0x10], -0x522; mov qword ptr [rsp + 0x70], r8; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000435562: je 0x3556c; mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000403555: je 0x3567; xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004362e0: je 0x362ea; mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004365b4: je 0x365cd; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x0000000000436c8e: je 0x36c77; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000437802: je 0x3780e; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000437a66: je 0x37a44; mov qword ptr [rsp + 0x48], rcx; mov qword ptr [rsp], rcx; mov rdx, qword ptr [rsp + 0x68]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000437c2c: je 0x37c36; mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; nop; ret; 
0x0000000000437d4b: je 0x37db3; mov rdx, qword ptr [rip + 0x11f5cc]; mov qword ptr [rsp], rcx; mov rax, qword ptr [rdx]; call rax; 
0x0000000000437fc2: je 0x37fcc; mov qword ptr [rdx + 0x10], -0x522; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000438977: je 0x38981; mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004389dc: je 0x389e6; mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040391b: je 0x3927; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043928f: je 0x3929b; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043d8c8: je 0x3d8d9; mov qword ptr [rsp + 0x38], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043da62: je 0x3da6e; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043e31a: je 0x3e305; mov byte ptr [rsp + 0x30], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043e433: je 0x3e43f; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000403fa4: je 0x3fb0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000404062: je 0x406e; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000440d8d: je 0x40d98; cmp dword ptr [rip + 0x1164c2], 0; jne 0x40d6b; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044118b: je 0x4114e; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000441b04: je 0x41ae5; ret; 
0x0000000000442a0f: je 0x42a1b; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000442fbd: je 0x42fc5; mov dword ptr [rax], 0; mov dword ptr [rsp + 0x20], 0x7fffffff; ret; 
0x0000000000442fd6: je 0x42fda; mov dword ptr [rax], edx; mov dword ptr [rsp + 0x20], ebx; ret; 
0x0000000000443263: je 0x4326d; mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044379c: je 0x437a8; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000443879: je 0x43865; mov byte ptr [rsp + 0x10], 1; ret; 
0x0000000000447c0e: je 0x47c1f; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044b7ac: je 0x4b7d2; push 0x245c8948; jo 0x4b7fd; mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000044c181: je 0x4c1a7; pop rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044fb5a: je 0x4fb6b; mov byte ptr [rsp + 0x78], dil; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000451723: je 0x5172b; add rax, -2; mov byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000451ace: je 0x51ad8; mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000452312: je 0x5231c; mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000452404: je 0x5241c; mov rcx, qword ptr [rsp + 0x40]; add qword ptr [rax + 0x1640], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000452b72: je 0x52b7c; mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000454e4a: je 0x54e70; cmp byte ptr [rax - 0x77], cl; ret; 
0x0000000000456812: je 0x56823; mov byte ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000456ead: je 0x56eb9; add rax, 0x30; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000456ea8: je 0x56ec3; cmp cl, 0x12; je 0x56eb9; add rax, 0x30; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000456f07: je 0x56f18; cmp cl, 0x19; jne 0x56eaf; add rax, 0x50; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000457c99: je 0x57ca1; mov byte ptr [rsp + 0x10], 0; ret; 
0x0000000000458ca4: je 0x58cbf; xor eax, eax; mov byte ptr [rsp + 0x148], al; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x0000000000459c56: je 0x59c7c; xor byte ptr [rax + 0x39], cl; ret 0x3674; 
0x000000000045ad65: je 0x5ad71; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045b0bb: je 0x5b0c7; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000045b462: je 0x5b406; mov rax, qword ptr [rsp + 0x28]; mov byte ptr [rax], 1; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000045b7a2: je 0x5b7aa; mov byte ptr [rsp + 0x18], 1; ret; 
0x000000000045d6e6: je 0x5d6f1; cmp dword ptr [rip + 0xf9b69], 0; jne 0x5d6c4; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045e0f7: je 0x5e10a; cmp rdx, rcx; jne 0x5e104; mov byte ptr [rsp + 0x10], 0x21; ret; 
0x000000000045e5c8: je 0x5e5d3; mov rax, qword ptr [rax]; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000045e7e8: je 0x5e7f3; mov rax, qword ptr [rax]; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000045ebae: je 0x5ebba; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045efcf: je 0x5ef9e; mov qword ptr [rsp + 0x38], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; nop; ret; 
0x000000000045f68a: je 0x5f69b; mov byte ptr [rsp + 0x28], 1; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000406072: je 0x6024; mov qword ptr [rsp + 0x18], rdx; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x00000000004607ed: je 0x607f4; call 0x35860; ret; 
0x0000000000406127: je 0x6133; xor eax, 1; mov byte ptr [rip + 0x180301], al; ret; 
0x0000000000461481: je 0x614b4; lea rsi, [rip - 0xc8a]; mov rdx, 0; mov rcx, 0; call rax; 
0x000000000046308f: je 0x630b5; sub byte ptr [rax - 0x77], cl; hlt; mov dword ptr [rsp + 0x18], eax; ret; 
0x00000000004636f1: je 0x63717; sub byte ptr [rbx + rcx*4 + 0x7c], cl; and al, 0x20; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x00000000004640eb: je 0x640f3; mov rcx, rbx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000464927: je 0x6494d; or byte ptr [rbx + 0x44102454], cl; mov edx, dword ptr [rsp + 0x14]; mov eax, 0x101; syscall; 
0x0000000000464987: je 0x649ad; adc byte ptr [rbx - 0x47e7dbac], cl; add dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x00000000004649a6: je 0x649cc; adc byte ptr [rbx - 0x47e7dbac], cl; add byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x00000000004649e6: je 0x64a0c; or byte ptr [rax + 0x125], bh; syscall; 
0x00000000004649e6: je 0x64a0c; or byte ptr [rax + 0x125], bh; syscall; mov dword ptr [rsp + 0x18], eax; ret; 
0x0000000000464aca: je 0x64af0; or byte ptr [rax + 0x3e], bh; syscall; 
0x0000000000464aca: je 0x64af0; or byte ptr [rax + 0x3e], bh; syscall; ret; 
0x0000000000464b07: je 0x64b2d; adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x18; mov eax, 0xea; syscall; 
0x0000000000464b26: je 0x64b4c; adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x18; mov eax, 0x26; syscall; 
0x0000000000464b47: je 0x64b6d; adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x18; mov eax, 0x1b; syscall; 
0x0000000000464bcf: je 0x64c12; mov edi, 0; lea rsi, [rsp]; call rax; 
0x0000000000464caf: je 0x64cf8; mov edi, 1; lea rsi, [rsp]; call rax; 
0x0000000000464e33: je 0x64e59; or byte ptr [rax - 0x77], cl; cmp al, 0x24; lea rax, [rip - 0x1fe01]; call rax; 
0x0000000000465027: je 0x6504d; adc byte ptr [rax - 0x39], cl; ror byte ptr [rbx], 0; add byte ptr [rax], al; syscall; 
0x00000000004650a7: je 0x650cd; adc byte ptr [rbx + 0x48182454], cl; mov eax, 0x1c; syscall; 
0x00000000004650a7: je 0x650cd; adc byte ptr [rbx + 0x48182454], cl; mov eax, 0x1c; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000465106: je 0x6512c; adc byte ptr [rax - 0x39], cl; ret 0; 
0x0000000000465131: je 0x65138; mov dword ptr [rsp + 0x30], eax; ret; 
0x000000000046513f: je 0x65170; cmp r9, 0; je 0x65170; mov eax, 0xba; syscall; 
0x0000000000465145: je 0x65170; mov eax, 0xba; syscall; 
0x0000000000465267: je 0x6528d; adc byte ptr [rax - 0x75], cl; push rsp; and al, 0x18; mov eax, 0xcc; syscall; 
0x00000000004652e6: je 0x6530c; adc byte ptr [rbx + 0x44182454], cl; mov edx, dword ptr [rsp + 0x1c]; mov r8, 0; mov eax, 0x119; syscall; 
0x00000000004653a7: je 0x653cd; adc byte ptr [rax + 0x95], bh; syscall; 
0x00000000004653a7: je 0x653cd; adc byte ptr [rax + 0x95], bh; syscall; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000465779: je 0x6578b; xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000465b2d: je 0x65b0f; mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000465c0d: je 0x65bef; mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000465d0f: je 0x65d21; xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000465e34: je 0x65e46; xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004660d6: je 0x660e8; xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004662a3: je 0x662b5; xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004663cf: je 0x663e1; xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046662d: je 0x6660f; mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000046670d: je 0x666ef; mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000466874: je 0x66886; xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004669fb: je 0x66a0d; xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000466cb4: je 0x66cc6; xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000466d99: je 0x66dab; xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000467230: je 0x6723c; add rax, 0x30; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000046722a: je 0x67246; cmp rcx, 0x12; je 0x6723c; add rax, 0x30; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000046728f: je 0x672a1; cmp rcx, 0x19; jne 0x67232; add rax, 0x50; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000467c88: je 0x67c9c; lea rcx, [rip + 0x769af]; mov qword ptr [rsp + 0x18], rcx; mov qword ptr [rsp + 0x20], rax; ret; 
0x0000000000467e18: je 0x67e2d; mov eax, 1; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004687c3: je 0x687d4; mov byte ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000468877: je 0x68889; xor eax, eax; mov byte ptr [rsp + 0x78], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004688e1: je 0x68907; push 0x24348948; call rbx; 
0x0000000000468902: je 0x68913; mov byte ptr [rsp + 0x78], 0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000468cc4: je 0x68cdf; xor eax, eax; mov byte ptr [rsp + 0xe8], al; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x0000000000468df1: je 0x68e0c; xor eax, eax; mov byte ptr [rsp + 0xe8], al; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x0000000000469eea: je 0x69ab8; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; nop; ret; 
0x000000000046abda: je 0x6aba7; mov byte ptr [rsp + 0x38], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046b323: je 0x6b2fe; mov rax, qword ptr [rdx]; call rax; 
0x000000000046b444: je 0x6b3db; mov qword ptr [rsp + 0x68], rcx; mov qword ptr [rsp + 0x70], rdx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000046b53a: je 0x6b4d5; mov qword ptr [rsp + 0x68], rcx; mov qword ptr [rsp + 0x70], rdx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000046c396: je 0x6c3a8; xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000406dd3: je 0x6df5; mov qword ptr [rsp + 0x120], rax; mov qword ptr [rsp + 0x128], rcx; mov rbp, qword ptr [rsp + 0x108]; add rsp, 0x110; ret; 
0x0000000000407193: je 0x71b9; push rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; nop; ret; 
0x0000000000472c87: je 0x72c97; movzx eax, byte ptr [rip + 0x113df7]; mov byte ptr [rip + 0x11378b], al; ret; 
0x0000000000473056: je 0x73038; setb byte ptr [rsp + 0x30]; ret; 
0x00000000004735c3: je 0x735e9; mov qword ptr [rsp + 0x48], rbx; mov qword ptr [rsp + 0x50], rcx; mov byte ptr [rsp + 0x58], sil; ret; 
0x00000000004735d2: je 0x735f8; pop rax; ret; 
0x00000000004799d0: je 0x799dc; add rax, 0x30; mov qword ptr [rsp + 0x10], rax; ret; 
0x00000000004799ca: je 0x799e6; cmp rcx, 0x12; je 0x799dc; add rax, 0x30; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000479a2f: je 0x79a41; cmp rcx, 0x19; jne 0x799d2; add rax, 0x50; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000047ca58: je 0x7ca7e; or byte ptr [rax - 0x75], cl; add ah, byte ptr [rsi - 0x70]; call rax; 
0x000000000047d528: je 0x7d53c; lea rcx, [rip + 0x614cf]; mov qword ptr [rsp + 0x18], rcx; mov qword ptr [rsp + 0x20], rax; ret; 
0x000000000047daf8: je 0x7db0d; mov eax, 1; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000047e555: je 0x7e567; xor eax, eax; mov byte ptr [rsp + 0x60], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000047e664: je 0x7e675; mov byte ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000047e757: je 0x7e769; xor eax, eax; mov byte ptr [rsp + 0x78], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000047e7c6: je 0x7e7ec; push 0x24348948; call rbx; 
0x000000000047e7e6: je 0x7e7f7; mov byte ptr [rsp + 0x78], 0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000047ec8f: je 0x7ecaa; xor eax, eax; mov byte ptr [rsp + 0xf0], al; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x0000000000483313: je 0x83339; pop rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; nop; ret; 
0x0000000000484083: je 0x84088; mov rax, qword ptr [rax]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000484fa8: je 0x84fbd; add al, 0; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000486df9: je 0x86e1f; js 0x86e45; mov dword ptr [rsp], esi; call rbx; 
0x000000000048714a: je 0x8715c; xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000488455: je 0x88467; xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048c2ed: je 0x8c1b8; mov qword ptr [rsp + 0x128], rax; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x000000000048c58d: je 0x8c5a7; mov qword ptr [rsp + 0x128], rax; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x000000000048c96d: je 0x8c842; mov qword ptr [rsp + 0x128], rax; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x000000000048d297: je 0x8d2ad; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048df4c: je 0x8df72; sbb byte ptr [rax - 0x75], cl; push rsp; and al, 0x20; mov rax, qword ptr [rsp + 8]; syscall; 
0x0000000000408ec3: je 0x8ed9; mov qword ptr [rsp + 0x30], rcx; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048f1e2: je 0x8f1f8; mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004910e4: je 0x910f6; xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004911cd: je 0x911df; xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004913ba: je 0x913e0; xor bl, ch; mov eax, 0x246c8b48; add rsp, 0x48; ret; 
0x0000000000493fc0: je 0x93fcc; mov eax, 1; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000493ff5: je 0x94001; mov eax, 1; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000494824: je 0x94a6c; lea rcx, [rip + 0x4a1cf]; mov rcx, qword ptr [rcx + 0xf8]; mov qword ptr [rsp], rax; call rcx; 
0x0000000000409885: je 0x9894; test rdi, rdi; jne 0x9867; xchg qword ptr [r8], rax; inc qword ptr [rbx + 8]; ret; 
0x000000000049a871: je 0x9a883; xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040a55d: je 0xa54d; mov qword ptr [rsp + 8], rcx; mov qword ptr [rsp], rbx; mov rdx, qword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x000000000040a610: je 0xa5fb; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040a726: je 0xa705; mov qword ptr [rsp + 0x10], rdx; ret; 
0x000000000040a8f2: je 0xa8d7; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040a94e: je 0xa935; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040aa9d: je 0xaaa7; mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040c370: je 0xc37a; mov qword ptr [rcx + 0x10], -0x522; mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000040df17: je 0xdf3d; push rax; mov qword ptr [rsp], rsi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000040e187: je 0xe1ad; pop rax; mov qword ptr [rsp], rsi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000040e9a9: je 0xe9b1; cmp qword ptr [rax], 0; jne 0xe9bb; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040f9aa: je 0xf9bc; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x000000000040fc63: je 0xfc89; cmp byte ptr [rax - 0x77], cl; xor al, 0x24; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000040ff4a: je 0xff70; push rax; mov qword ptr [rsp], rsi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000401614: jg 0x1592; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x00000000004174f5: jg 0x17501; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000041813b: jg 0x1814c; mov byte ptr [rsp + 0x18], 1; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000041cfd2: jg 0x1cfab; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000401e50: jg 0x1e9a; mov dword ptr [rsp + 0x10], eax; ret; 
0x000000000042b62a: jg 0x2b632; mov byte ptr [rsp + 0x10], 0; ret; 
0x0000000000435ed7: jg 0x35ee3; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043d31a: jg 0x3d338; mov qword ptr [rsp + 0x3e8], 0; mov rbp, qword ptr [rsp + 0x3d0]; add rsp, 0x3d8; ret; 
0x0000000000404168: jg 0x4115; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000448c59: jg 0x48c29; mov byte ptr [rsp + 0xe0], 1; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x00000000004496bc: jg 0x496a8; mov dword ptr [rsp + 0x10], ebx; ret; 
0x000000000044b1cb: jg 0x4b182; mov qword ptr [rsp + 0xb8], rax; mov qword ptr [rsp + 0xc0], rcx; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000044c275: jg 0x4c247; cmp rsi, rdi; jbe 0x4c23b; mov qword ptr [rsp + 0x18], 0; mov byte ptr [rsp + 0x20], 0; ret; 
0x000000000044d843: jg 0x4d772; mov rbp, qword ptr [rsp + 0xf8]; add rsp, 0x100; ret; 
0x00000000004502e8: jg 0x502f4; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000450dd5: jg 0x50e08; imul bl; or dword ptr [rax - 1], ecx; ret 0x894c; 
0x0000000000455503: jg 0x55482; mov rbp, qword ptr [rsp + 0x198]; add rsp, 0x1a0; ret; 
0x0000000000458756: jg 0x58758; add byte ptr [rdi], cl; mov bh, 0x7b; xor byte ptr [rcx], al; dec byte ptr [rax + 1]; ret; 
0x0000000000459c83: jg 0x59c85; add byte ptr [rcx + 0x48602444], cl; mov ebp, dword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000459ddb: jg 0x59d87; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000045a1cd: jg 0x5a1b7; mov byte ptr [rsp + 0x10], 0; ret; 
0x000000000046303e: jg 0x63048; sub rdi, rdx; mov qword ptr [rsp + 0x28], rdi; mov rdi, rbx; mov rcx, rbx; call rax; 
0x00000000004639ee: jg 0x63a30; ret; 
0x0000000000463f7e: jg 0x63f87; movdqu xmmword ptr [rdi + rbx - 0x10], xmm0; ret; 
0x0000000000463f89: jg 0x63f92; movdqu xmmword ptr [rdi + 0x10], xmm0; movdqu xmmword ptr [rdi + rbx - 0x20], xmm0; movdqu xmmword ptr [rdi + rbx - 0x10], xmm0; ret; 
0x0000000000463f8d: jg 0x63fd6; adc bl, dh; movq qword ptr [rdi + rbx - 0x20], mm0; movdqu xmmword ptr [rdi + rbx - 0x10], xmm0; ret; 
0x0000000000464193: jg 0x6419c; movdqu xmmword ptr [rdi + rbx - 0x10], xmm1; ret; 
0x00000000004641b3: jg 0x641bc; movdqu xmmword ptr [rdi + 0x10], xmm1; movdqu xmmword ptr [rdi + rbx - 0x20], xmm2; movdqu xmmword ptr [rdi + rbx - 0x10], xmm3; ret; 
0x00000000004641b7: jg 0x64208; adc bl, dh; movq qword ptr [rdi + rbx - 0x20], mm2; movdqu xmmword ptr [rdi + rbx - 0x10], xmm3; ret; 
0x00000000004644ab: jg 0x644f8; sal bl, 0x44; movq qword ptr [rbx - 0x30], mm2; movdqu xmmword ptr [rbx - 0x20], xmm11; movdqu xmmword ptr [rbx - 0x10], xmm12; ret; 
0x00000000004644b1: jg 0x64506; sal bl, 1; movq qword ptr [rbx - 0x20], mm3; movdqu xmmword ptr [rbx - 0x10], xmm12; ret; 
0x0000000000464587: jg 0x645d2; sal bl, 0x44; movq qword ptr [rcx - 0x30], mm2; movdqu xmmword ptr [rcx - 0x20], xmm11; movdqu xmmword ptr [rcx - 0x10], xmm12; ret; 
0x000000000046458d: jg 0x645e0; sal bl, 1; movq qword ptr [rcx - 0x20], mm3; movdqu xmmword ptr [rcx - 0x10], xmm12; ret; 
0x0000000000464659: jg 0x646a3; movdqu xmmword ptr [rax + 0x50], xmm10; movdqu xmmword ptr [rax + 0x60], xmm11; movdqu xmmword ptr [rax + 0x70], xmm12; ret; 
0x000000000046465f: jg 0x646b1; push rax; movdqu xmmword ptr [rax + 0x60], xmm11; movdqu xmmword ptr [rax + 0x70], xmm12; ret; 
0x00000000004646e5: jg 0x6472f; movdqu xmmword ptr [rax + 0x50], xmm10; movdqu xmmword ptr [rax + 0x60], xmm11; movdqu xmmword ptr [rax + 0x70], xmm12; ret; 
0x00000000004646eb: jg 0x6473d; push rax; movdqu xmmword ptr [rax + 0x60], xmm11; movdqu xmmword ptr [rax + 0x70], xmm12; ret; 
0x00000000004066d8: jg 0x66ee; mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000406b23: jg 0x6aeb; xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x68], xmm0; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000048abc7: jg 0x8ab82; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048b0c3: jg 0x8b0d5; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000042edab: jge 0x2edbd; mov rbp, qword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x000000000043ccfc: jge 0x3cd0d; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044ec27: jge 0x4ec3b; mov dword ptr [rsp + 0x78], 0xffffffff; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000456854: jge 0x56866; xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045e91e: jge 0x5e932; add byte ptr [rax], al; jne 0x5e92e; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045f4d7: jge 0x5f4e8; add byte ptr [rax], al; jne 0x5f4e7; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000467ba4: jge 0x67b5e; add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0x5a; xor ah, byte ptr [rsi - 9]; ret; 
0x00000000004733c9: jge 0x733d5; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000047595a: jge 0x7596c; mov rbp, qword ptr [rsp + 0x690]; add rsp, 0x698; ret; 
0x000000000047bc44: jge 0x7bbfe; add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0x5a; xor ah, byte ptr [rsi - 9]; ret; 
0x000000000047bedb: jge 0x7bee7; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000495a53: jge 0x95a9d; mov ebp, dword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x000000000040b291: jge 0xb242; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041217b: jl 0x121a1; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000041276d: jl 0x12793; mov qword ptr [rsp + 0x4c], rax; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000416654: jl 0x1667a; jo 0x16640; int 4; add byte ptr [rax - 0x77], cl; ret 0xeb90; 
0x000000000041b4ab: jl 0x1b442; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000041d48f: jl 0x1d4b5; sub byte ptr [rax - 0x77], cl; and al, 0x20; mov rax, qword ptr [rdx]; call rax; 
0x0000000000401f02: jl 0x1f4f; sbb byte ptr [rax], al; add byte ptr [rsp + rcx + 0x48], dh; mov dword ptr [rip + 0x184584], 0x3f; ret; 
0x0000000000421c81: jl 0x21ca7; xor dword ptr [rax - 0x77], ecx; ret 0x894d; 
0x00000000004265eb: jl 0x26611; adc byte ptr [rax], al; je 0x265fb; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000429949: jl 0x2996f; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042a17a: jl 0x2a169; ret; 
0x000000000042a2ba: jl 0x2a2a9; ret; 
0x000000000042a9dc: jl 0x2aa02; and byte ptr [rax - 0x77], cl; and al, 0x28; ret; 
0x000000000042b5dd: jl 0x2b603; or byte ptr [rax], al; jne 0x2b5ed; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042be91: jl 0x2beb7; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042c750: jl 0x2c776; sbb byte ptr [rcx + rcx*4 + 0x44], cl; and al, 0x20; ret; 
0x000000000042d388: jl 0x2d362; ret; 
0x000000000042e842: jl 0x2e84e; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000042eaa2: jl 0x2eaae; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x00000000004310b9: jl 0x310df; sub byte ptr [rax], al; je 0x3111a; mov rax, qword ptr [rax + 0x18]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000433d05: jl 0x33d2b; and bl, ch; scasb al, byte ptr [rdi]; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000434325: jl 0x3433a; mov qword ptr [rsp], rax; call 0x341e0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000436b5e: jl 0x36b84; and byte ptr [rax - 1], cl; mov dword ptr [rbx + rcx*4 + 0x44], 0x89445424; ret 0x8b48; 
0x0000000000438e82: jl 0x38ede; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004398b7: jl 0x398bb; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000043aa32: jl 0x3aa43; call 0x39260; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043ac71: jl 0x3ac97; sub byte ptr [rax], al; jne 0x3ac81; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000403fa0: jl 0x3fc6; or byte ptr [rax], al; je 0x3fb0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040405e: jl 0x4084; or byte ptr [rax], al; je 0x406e; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000441187: jl 0x411ad; sbb byte ptr [rax], al; je 0x4114e; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040427b: jl 0x42a1; sbb byte ptr [rsi - 0x70], ah; call 0x4540; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000443186: jl 0x43192; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000447ab9: jl 0x47a92; ret; 
0x000000000044fb5e: jl 0x4fb84; js 0x4fbaa; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000451fd0: jl 0x51ff6; sub bl, ch; sbb dword ptr [rax - 1], ecx; ret 0x3948; 
0x0000000000452dd8: jl 0x52dfe; adc byte ptr [rax], al; jne 0x52d65; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x0000000000459e7b: jl 0x59ea1; sbb al, 0x4c; mov dword ptr [rsp + 0x20], ecx; mov rax, qword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x000000000045b0b7: jl 0x5b0dd; sub byte ptr [rax], al; je 0x5b0c7; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000045cdcd: jl 0x5cdf3; or byte ptr [rax], al; jne 0x5cddd; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045ea8a: jl 0x5ea96; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045ea86: jl 0x5eaac; xor byte ptr [rax], al; jl 0x5ea96; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045f637: jl 0x5f648; mov byte ptr [rsp + 0x28], 0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004648e1: jl 0x64907; or byte ptr [rax + 0xe7], bh; syscall; 
0x00000000004648e1: jl 0x64907; or byte ptr [rax + 0xe7], bh; syscall; ret; 
0x0000000000464961: jl 0x64987; or byte ptr [rax + 3], bh; syscall; 
0x00000000004649c2: jl 0x649e8; or byte ptr [rax + 0x16], bh; syscall; 
0x00000000004649c2: jl 0x649e8; or byte ptr [rax + 0x16], bh; syscall; mov dword ptr [rsp + 0x10], eax; ret; 
0x00000000004649e2: jl 0x64a08; adc byte ptr [rbx - 0x47f7db8c], cl; and eax, 0xf000001; add eax, 0x18244489; ret; 
0x00000000004650a2: jl 0x650c8; or byte ptr [rax - 0x75], cl; je 0x650cd; adc byte ptr [rbx + 0x48182454], cl; mov eax, 0x1c; syscall; 
0x0000000000465101: jl 0x65127; or byte ptr [rax - 0x75], cl; je 0x6512c; adc byte ptr [rax - 0x39], cl; ret 0; 
0x0000000000465281: jl 0x652a7; or byte ptr [rax + 0xd5], bh; syscall; 
0x0000000000465281: jl 0x652a7; or byte ptr [rax + 0xd5], bh; syscall; mov dword ptr [rsp + 0x10], eax; ret; 
0x00000000004652a1: jl 0x652c7; or byte ptr [rax + 0x123], bh; syscall; 
0x00000000004652a1: jl 0x652c7; or byte ptr [rax + 0x123], bh; syscall; mov dword ptr [rsp + 0x10], eax; ret; 
0x000000000046535a: jl 0x65380; or byte ptr [rax - 0x39], cl; mov byte ptr [rax + rax], 0; add byte ptr [rax - 0x39], cl; ret 0x800; 
0x0000000000465382: jl 0x653a8; or byte ptr [rax + 0x3f], bh; syscall; 
0x0000000000465382: jl 0x653a8; or byte ptr [rax + 0x3f], bh; syscall; mov qword ptr [rsp + 0x10], rax; ret; 
0x00000000004653a2: jl 0x653c8; or byte ptr [rax - 0x75], cl; je 0x653cd; adc byte ptr [rax + 0x95], bh; syscall; 
0x000000000046957a: jl 0x695a0; cmp byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000047239b: jl 0x723b5; mov qword ptr [rsp + 0xa0], rax; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000473f3b: jl 0x73f78; jmp qword ptr [rsi - 0x70]; 
0x000000000047d984: jl 0x7d972; mov dword ptr [rsp + 0x28], edx; ret; 
0x0000000000483c8f: jl 0x83cb5; push rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048ab45: jl 0x8ab6b; and bl, ch; movsd dword ptr [rdi], dword ptr [rsi]; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048aba4: jl 0x8abca; or byte ptr [rax - 0x75], cl; jl 0x8abcf; lea r8, [rax + rdi]; mov qword ptr [rsp + 0x10], r8; call rdx; 
0x000000000048aba9: jl 0x8abcf; lea r8, [rax + rdi]; mov qword ptr [rsp + 0x10], r8; call rdx; 
0x000000000048ada3: jl 0x8adc9; cmp bl, ch; lodsd eax, dword ptr [rsi]; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000048aed3: jl 0x8ae95; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000048afb5: jl 0x8af7c; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000048b05f: jl 0x8b085; jo 0x8b0ac; sub ecx, edi; mov qword ptr [rsp + 8], r9; mov qword ptr [rsp + 0x10], rdi; call rdx; 
0x000000000048eb33: jl 0x8eb59; adc byte ptr [rax], al; jne 0x8eb43; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048eb93: jl 0x8ebb9; adc byte ptr [rax], al; jne 0x8eba3; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000049a418: jl 0x9a342; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000042e44f: jle 0x2e40c; mov qword ptr [rsp + 0x660], 0; mov rbp, qword ptr [rsp + 0x648]; add rsp, 0x650; ret; 
0x000000000043f4ca: jle 0x3f4b0; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x00000000004726eb: jle 0x726fd; mov qword ptr [rsp], rcx; mov qword ptr [rsp + 8], rdx; mov qword ptr [rsp + 0x10], rbx; mov qword ptr [rsp + 0x18], rdi; call rax; 
0x00000000004852ee: jle 0x85300; add al, 0; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048b55b: jle 0x8b55a; jmp qword ptr [rsi - 0x70]; 
0x0000000000492bfa: jle 0x92c03; cmp byte ptr [r8 + 0xa], 0; jne 0x92c0d; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000041419f: jmp qword ptr [rax]; 
0x00000000004614c8: jmp qword ptr [rbx]; 
0x000000000046bacb: jmp qword ptr [rcx]; 
0x0000000000491cc1: jmp qword ptr [rdi]; 
0x000000000049201b: jmp qword ptr [rdx + 0x49]; 
0x0000000000490bed: jmp qword ptr [rdx + 0xc]; 
0x0000000000460a82: jmp qword ptr [rsi + 0x45]; 
0x000000000040241e: jmp qword ptr [rsi + 0x48]; 
0x0000000000403c99: jmp qword ptr [rsi + 0xf]; 
0x000000000040799d: jmp qword ptr [rsi - 0x70]; 
0x0000000000447d5d: jmp qword ptr [rsi - 0x77]; 
0x0000000000482e5e: jmp qword ptr [rsi - 0x7b]; 
0x000000000045a835: jmp qword ptr [rsi - 0x7f]; 
0x0000000000407c6e: jmp rax; 
0x00000000004615d5: jmp rbx; 
0x0000000000461716: jmp rdi; 
0x00000000004102ef: jne 0x102fb; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000410642: jne 0x1066f; cmp qword ptr [r8 + 0x20], rdi; je 0x1065a; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000410eaf: jne 0x10ebb; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041128d: jne 0x112ba; cmp qword ptr [r9 + 0x20], r8; je 0x112a5; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000041180f: jne 0x1181b; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000411bd7: jne 0x11c07; cmp qword ptr [r9 + 0x20], r8; je 0x11bef; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000411d22: jne 0x11d2e; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000414789: jne 0x1479e; mov dword ptr [rsp + 0x60], eax; mov qword ptr [rsp + 0x68], rcx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000415cf8: jne 0x15cfe; test eax, eax; jne 0x15d08; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000415cfc: jne 0x15d08; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000415fa8: jne 0x15fb4; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000415fa3: jne 0x15fb4; test rax, rax; jne 0x15fb4; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000041633d: jne 0x16349; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000041702d: jne 0x1703e; mov qword ptr [rsp + 0x48], rbx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004017e3: jne 0x17d3; mov qword ptr [rsp + 0x20], rbx; ret; 
0x0000000000417fac: jne 0x17fc2; mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041a476: jne 0x1a488; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000041a961: jne 0x1a953; call 0x2b120; call 0x2b1a0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041bea2: jne 0x1beae; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000041bf3b: jne 0x1bf47; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000041cb60: jne 0x1cc4b; mov rbp, qword ptr [rsp + 0x1f8]; add rsp, 0x200; ret; 
0x000000000041cc23: jne 0x1cd37; mov rbp, qword ptr [rsp + 0x1f8]; add rsp, 0x200; ret; 
0x000000000041e0e9: jne 0x1e0f5; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000041ea9c: jne 0x1eaa8; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000041fd0f: jne 0x1fd1b; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004219e2: jne 0x219c2; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000422acd: jne 0x22ad9; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000422f47: jne 0x22f91; mov eax, dword ptr [rbx + rdx*8 + 0x10]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000423267: jne 0x23273; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004023b8: jne 0x23c2; mov qword ptr [r8], -1; ret; 
0x0000000000423de7: jne 0x23e18; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004244f1: jne 0x2450b; mov qword ptr [rsp + 0xd8], rcx; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000402456: jne 0x2463; vzeroupper; mov qword ptr [r8], -1; ret; 
0x000000000042a5ac: jne 0x2a5be; movabs rax, 0x8000000000000000; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000042b2e3: jne 0x2b257; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042b5e1: jne 0x2b5ed; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042b693: jne 0x2b62c; mov byte ptr [rsp + 0x10], 1; ret; 
0x000000000042bdc6: jne 0x2bddc; mov qword ptr [rsp + 0x30], rax; mov qword ptr [rsp + 0x38], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042ca49: jne 0x2ca55; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042d148: jne 0x2d154; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042d568: jne 0x2d582; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042e316: jne 0x2e32c; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042f29b: jne 0x2f2a7; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042f4f0: jne 0x2f4fc; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042f8a1: jne 0x2f8c1; lea rax, [rip + 0x96e06]; mov qword ptr [rip + 0x127267], rax; mov rbp, qword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x000000000042fa89: jne 0x2fa95; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042fbb5: jne 0x2fbe8; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042fc7b: jne 0x2fc87; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000430987: jne 0x3099a; mov qword ptr [rip + 0x126130], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000430c88: jne 0x30c98; mov qword ptr [rsi + rcx*8], rax; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x00000000004032f0: jne 0x3302; mov rax, qword ptr [rax + 8]; cmp qword ptr [rdx + 8], rax; sete al; mov byte ptr [rsp + 0x18], al; ret; 
0x000000000043321a: jne 0x33226; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004346cb: jne 0x34873; mov qword ptr [rsp], rbx; mov rax, qword ptr [rip + 0x91e64]; lea rdx, [rip + 0x91e5d]; call rax; 
0x0000000000434ab3: jne 0x34b47; mov rax, qword ptr [rip + 0x91aa8]; lea rdx, [rip + 0x91aa1]; call rax; 
0x0000000000436140: jne 0x3614c; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000437193: jne 0x37225; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x00000000004375cc: jne 0x375dd; call 0x3ad60; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043a8f3: jne 0x3a904; mov byte ptr [rsp + 0x28], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043a9b1: jne 0x3a9c1; call 0x2e2a0; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043ac75: jne 0x3ac81; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000043b5d6: jne 0x3b5e7; call 0x3ad60; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043c1d7: jne 0x3c1da; ret; 
0x000000000043c7a4: jne 0x3c7ba; call 0x3f100; call 0x38f20; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000043c872: jne 0x3c883; mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000043e255: jne 0x3e261; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000043ef84: jne 0x3ef90; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000403f76: jne 0x3f82; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004400dc: jne 0x400ed; mov byte ptr [rsp + 0x28], 0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004400fc: jne 0x4010d; mov byte ptr [rsp + 0x28], 0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000440142: jne 0x40153; mov byte ptr [rsp + 0x28], 1; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000440d96: jne 0x40d6b; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004410c6: jne 0x410d3; test rbx, rbx; sete al; mov byte ptr [rsp + 0x10], al; ret; 
0x000000000044147b: jne 0x41487; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000441976: jne 0x4196a; mov dword ptr [rsp + 0x10], ecx; ret; 
0x0000000000442683: jne 0x4268f; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000444140: jne 0x44150; mov qword ptr [rdx + 0x10], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004442a0: jne 0x442b0; mov qword ptr [rdx + 0x10], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000444ea4: jne 0x44e89; mov dword ptr [rsp], 0xd; call 0x46380; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000446890: jne 0x468a1; mov byte ptr [rsp + 0x60], 1; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004469ab: jne 0x469bc; mov byte ptr [rsp + 0x60], 1; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000044cb8a: jne 0x4cba7; test rcx, rcx; setg byte ptr [rsp + 0x168]; mov rbp, qword ptr [rsp + 0x100]; add rsp, 0x108; ret; 
0x000000000044d383: jne 0x4d366; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044f129: jne 0x4f102; mov dword ptr [rsp + 0x38], r8d; mov dword ptr [rsp + 0x3c], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045062e: jne 0x505ac; mov qword ptr [rsp + 0x48], -1; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000450cfd: jne 0x50d12; xor eax, eax; xchg qword ptr [rbx + 0x1668], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000450fe2: jne 0x50ff2; mov qword ptr [rdx + rax*8], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000451183: jne 0x51193; mov qword ptr [rdx + r8*8], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000451c32: jne 0x51c48; mov rax, qword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000452ddc: jne 0x52d65; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x0000000000453433: jne 0x5481f; mov qword ptr [rsp + 0x320], rdi; mov rbp, qword ptr [rsp + 0x2c0]; add rsp, 0x2c8; ret; 
0x0000000000454eb5: jne 0x54ecf; mov qword ptr [rsp + 0x2b0], rbx; mov rbp, qword ptr [rsp + 0x278]; add rsp, 0x280; ret; 
0x0000000000454f7d: jne 0x54f89; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004557c3: jne 0x557cf; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000455dac: jne 0x55dbd; mov byte ptr [rsp + 0x50], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004567f0: jne 0x56801; mov byte ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004569da: jne 0x5697d; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000456f0c: jne 0x56eaf; add rax, 0x50; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000456ed0: jne 0x56edc; add rax, 0x38; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000456eee: jne 0x56efa; add rax, 0x58; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000457a2b: jne 0x57a37; mov qword ptr [rsp + 0x10], 0; ret; 
0x0000000000457aa3: jne 0x57aab; movups xmmword ptr [rsp + 0x10], xmm0; ret; 
0x0000000000458c21: jne 0x58c3c; xor eax, eax; mov byte ptr [rsp + 0x148], al; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x0000000000459ae8: jne 0x5991d; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000459bf9: jne 0x59bda; mov dword ptr [rsp + 0x60], 0xffffffff; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000045a1c5: jne 0x5a1d5; inc rdx; cmp rax, rdx; jg 0x5a1b7; mov byte ptr [rsp + 0x10], 0; ret; 
0x000000000045a5c2: jne 0x5a5d8; lea rax, [rip + 0x676da]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000045a640: jne 0x5a64c; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000045a6c9: jne 0x5a6df; lea rax, [rip + 0x6693a]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000045ba79: jne 0x5ba85; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000045c083: jne 0x5c006; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000045cb3b: jne 0x5cb4f; mov rcx, qword ptr [rsp + 0x20]; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045cdd1: jne 0x5cddd; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045d366: jne 0x5d368; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x000000000045d4a3: jne 0x5d4ae; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000045d6ef: jne 0x5d6c4; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045dca6: jne 0x5dcb2; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000045e0fc: jne 0x5e104; mov byte ptr [rsp + 0x10], 0x21; ret; 
0x000000000045e637: jne 0x5e64a; mov qword ptr [rdi], rax; mov qword ptr [rdi + 8], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045e922: jne 0x5e92e; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045eae2: jne 0x5eaf9; mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rip + 0xf8000], rax; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000045f18d: jne 0x5f199; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000045f4db: jne 0x5f4e7; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046036a: jne 0x60376; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046161a: jne 0x61625; lea rax, [rip - 0x2bf23]; jmp rax; 
0x0000000000462f89: jne 0x62f84; ret; 
0x0000000000464ee2: jne 0x64efb; mov rcx, qword ptr [rip + 0xf1bcd]; lea r9, [rip - 0xf2]; mov rax, qword ptr [rip + 0xf1b27]; jmp rax; 
0x000000000046540a: jne 0x6541c; xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004654c3: jne 0x654d5; xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000465543: jne 0x65555; mov rax, qword ptr [rax + 0x18]; cmp qword ptr [rdx + 0x18], rax; sete al; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000465603: jne 0x65615; xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000465679: jne 0x6568b; mov rax, qword ptr [rax + 0x10]; cmp qword ptr [rdx + 0x10], rax; sete al; mov byte ptr [rsp + 0x18], al; ret; 
0x00000000004659e3: jne 0x659f5; xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000465a83: jne 0x65a95; xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000465f03: jne 0x65f15; xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000466079: jne 0x6608b; mov rax, qword ptr [rax + 0x10]; cmp qword ptr [rdx + 0x10], rax; sete al; mov byte ptr [rsp + 0x18], al; ret; 
0x000000000046615a: jne 0x6616c; xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000466343: jne 0x66355; xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000466982: jne 0x66942; mov byte ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000466feb: jne 0x66ff7; mov qword ptr [rsp + 0x10], 0; ret; 
0x0000000000467295: jne 0x67232; add rax, 0x50; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000467254: jne 0x67261; add rax, 0x38; mov qword ptr [rsp + 0x10], rax; nop; ret; 
0x0000000000467275: jne 0x67281; add rax, 0x58; mov qword ptr [rsp + 0x10], rax; ret; 
0x00000000004674ed: jne 0x67502; mov rax, qword ptr [rax + 0x40]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046796d: jne 0x67982; mov rax, qword ptr [rax + 0x40]; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004679ed: jne 0x67a02; mov rax, qword ptr [rax + 0x40]; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000467afc: jne 0x67b0f; xor eax, eax; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046894f: jne 0x68904; mov rax, qword ptr [rsp + 0x50]; mov rax, qword ptr [rax + 0x60]; mov rcx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rcx; call rax; 
0x000000000046934e: jne 0x69369; xor eax, eax; mov byte ptr [rsp + 0xe8], al; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x0000000000469622: jne 0x69635; mov qword ptr [rip + 0xed62d], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000469c02: jne 0x69c14; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000046af2f: jne 0x6af3b; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046b0d9: jne 0x6b0e5; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000046b0d5: jne 0x6b0fc; test al, 1; jne 0x6b0e5; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000046b1f5: jne 0x6b206; call 0x5f5a0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046c259: jne 0x6c26c; mov qword ptr [rip + 0xea8d6], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046c620: jne 0x6c633; mov qword ptr [rip + 0xea6ff], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004722ea: jne 0x722fd; mov qword ptr [rip + 0xe4955], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000472b9d: jne 0x72bb0; mov qword ptr [rip + 0xe4002], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000478a6e: jne 0x78a0d; mov byte ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000047938b: jne 0x79397; mov qword ptr [rsp + 0x10], 0; ret; 
0x0000000000479a35: jne 0x799d2; add rax, 0x50; mov qword ptr [rsp + 0x10], rax; ret; 
0x00000000004799f4: jne 0x79a01; add rax, 0x38; mov qword ptr [rsp + 0x10], rax; nop; ret; 
0x0000000000479a15: jne 0x79a21; add rax, 0x58; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000479dcd: jne 0x79de2; mov rax, qword ptr [rax + 0x40]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000047ab31: jne 0x7ab46; mov rax, qword ptr [rax + 0x38]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000047b891: jne 0x7b8a6; mov rax, qword ptr [rax + 0x40]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000047b971: jne 0x7b986; mov rax, qword ptr [rax + 0x40]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000047bb3c: jne 0x7bb4f; xor eax, eax; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000047c608: jne 0x7c5a6; mov rax, qword ptr [rsp + 0x88]; mov rax, qword ptr [rax + 0x48]; mov rcx, qword ptr [rsp + 0x90]; mov qword ptr [rsp], rcx; call rax; 
0x000000000047d8a3: jne 0x7d91f; test byte ptr [rcx], al; mov qword ptr [rsp + 0xb0], rcx; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000047e839: jne 0x7e7e8; mov rax, qword ptr [rsp + 0x50]; mov rax, qword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rcx; call rax; 
0x000000000047f239: jne 0x7f254; xor eax, eax; mov byte ptr [rsp + 0xf0], al; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x00000000004842b0: jne 0x842c4; mov rax, qword ptr [rsp + 0x58]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000484430: jne 0x84444; mov rax, qword ptr [rsp + 0x58]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048451c: jne 0x84530; mov rax, qword ptr [rsp + 0x50]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048502c: jne 0x84e0a; lea rax, [rip + 0x4134f]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048744b: jne 0x87452; add byte ptr [rax + 0x39], cl; ret 0x2875; 
0x000000000048745a: jne 0x8746d; mov qword ptr [rip + 0xcf61d], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048b52a: jne 0x8b53f; mov qword ptr [rbx + r13*8], rdx; mov qword ptr [rbx + r13*8 + 8], r8; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048d1c6: jne 0x8d1d9; mov qword ptr [rip + 0xc9ab9], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048df02: jne 0x8df15; mov qword ptr [rip + 0xc21bd], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048e532: jne 0x8e545; mov qword ptr [rip + 0xc5655], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000048e6dd: jne 0x8e6a7; mov byte ptr [rsp + 0x38], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048eb37: jne 0x8eb43; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048eb97: jne 0x8eba3; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048fce8: jne 0x8fcfb; mov qword ptr [rip + 0xc7017], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000490be8: jne 0x90bfb; mov qword ptr [rip + 0xc62ff], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000490f6b: jne 0x90f7e; mov qword ptr [rip + 0xc5ea4], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000491304: jne 0x91313; mov qword ptr [rdi], r8; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000492c01: jne 0x92c0d; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000492d35: jne 0x92d41; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x00000000004937fb: jne 0x93818; mov rax, qword ptr [rsp + 0xe0]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x0000000000493c9d: jne 0x93cb1; mov rax, qword ptr [rsp + 0x58]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000494011: jne 0x93fd2; mov rax, qword ptr [rsp + 8]; movzx eax, byte ptr [rax + 0x4e]; mov byte ptr [rsp + 0x18], al; ret; 
0x00000000004946c4: jne 0x946d3; mov qword ptr [rdi], rbx; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000495b60: jne 0x95b75; mov qword ptr [rdi], rdx; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x00000000004096a8: jne 0x9685; cmp qword ptr [r8 + 8], rsi; jne 0x9685; mov qword ptr [rsp + 0x20], r8; ret; 
0x00000000004096ae: jne 0x9685; mov qword ptr [rsp + 0x20], r8; ret; 
0x0000000000496b92: jne 0x96ba7; mov qword ptr [rdi], rbx; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x00000000004970b9: jne 0x970fd; mov rax, qword ptr [rsp + 0x40]; mov rax, qword ptr [rax + 0x18]; mov rcx, qword ptr [rsp + 0x248]; mov qword ptr [rsp], rcx; call rax; 
0x000000000040988a: jne 0x9867; xchg qword ptr [r8], rax; inc qword ptr [rbx + 8]; ret; 
0x00000000004987a0: jne 0x987b5; mov qword ptr [rdi], rdx; mov rbp, qword ptr [rsp + 0x1c8]; add rsp, 0x1d0; ret; 
0x0000000000499042: jne 0x99057; mov qword ptr [rdi], rdx; mov rbp, qword ptr [rsp + 0x1c8]; add rsp, 0x1d0; ret; 
0x000000000049a7ec: jne 0x9a7ff; mov qword ptr [rip + 0xbc473], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000049abc5: jne 0x9abd8; mov qword ptr [rip + 0xbbe92], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040a1c5: jne 0xa1dd; lea rax, [rip + 0x17d572]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040a263: jne 0xa27b; lea rax, [rip + 0x17d4d4]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040a783: jne 0xa78f; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040c53d: jne 0xc55c; mov rax, qword ptr [rsp + 0x50]; mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000040d3b7: jne 0xd3c8; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000040d6c9: jne 0xd6d5; movzx ecx, word ptr [rax + 0xa]; inc ecx; mov word ptr [rax + 0xa], cx; ret; 
0x000000000040d830: jne 0xd844; mov qword ptr [rdi], rdx; mov qword ptr [rsp + 0x78], rdx; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000040db43: jne 0xdb54; mov qword ptr [rsp + 0x60], rdx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040e9af: jne 0xe9bb; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040f157: jne 0xf169; xorps xmm0, xmm0; movups xmmword ptr [rdi], xmm0; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000040f2ea: jne 0xf2fa; mov qword ptr [rcx + 0x10], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040f42f: jne 0xf43b; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040f9a4: jne 0xf9d1; cmp qword ptr [r9 + 0x20], r8; je 0xf9bc; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x0000000000418bcb: jno 0x18b77; add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000446aab: jno 0x46a8f; add dword ptr [rax], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000451a53: jno 0x51a12; adc dword ptr [rax], eax; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048ab1b: jno 0x8ab1c; mov qword ptr [rsp + 0x10], rsi; call rax; 
0x0000000000493cd8: jno 0x93cdb; mov qword ptr [rax + 8], rsi; mov byte ptr [rdx + rcx], bl; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000042c88b: jnp 0x2c895; sub qword ptr [rbx + 0x18], r8; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000042f581: jnp 0x2f5d8; add eax, dword ptr [rax]; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048bfbc: jnp 0x8bfdd; mov rax, -1; mov qword ptr [rsp + 0x128], rax; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x000000000048c0bd: jnp 0x8c0de; mov rax, -1; mov qword ptr [rsp + 0x128], rax; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x000000000043c1d4: jns 0x3c226; add byte ptr [rbp + 1], dh; ret; 
0x0000000000413520: jo 0x1356a; add esp, 0x78; ret; 
0x000000000041374d: jo 0x13797; cmp edi, eax; ja 0x13702; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000416656: jo 0x16640; int 4; add byte ptr [rax - 0x77], cl; ret 0xeb90; 
0x000000000041fff6: jo 0x20040; lea edx, [rsp + 0x70]; call rax; 
0x0000000000420964: jo 0x209ae; mov dword ptr [rsp + 0x78], eax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000423524: jo 0x23524; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000423584: jo 0x23584; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000423aaa: jo 0x23abb; xchg eax, edi; and al, 0x10; ret; 
0x000000000042417e: jo 0x24110; ret; 
0x0000000000424d76: jo 0x24dc0; add esp, 0x78; ret; 
0x0000000000425180: jo 0x251ca; add esp, 0x78; ret; 
0x000000000042b4b0: jo 0x2b4b3; add byte ptr [rax], al; ret; 
0x000000000042b7fb: jo 0x2b7fe; add byte ptr [rax], al; nop; ret; 
0x000000000042c74c: jo 0x2c766; mov qword ptr [rsp + 0x18], rdi; mov qword ptr [rsp + 0x20], r8; ret; 
0x0000000000430ab0: jo 0x30afa; mov ebp, dword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000430c92: jo 0x30cdc; add esp, 0x78; ret; 
0x0000000000430d89: jo 0x30dd3; add esp, 0x78; ret; 
0x0000000000430da0: jo 0x30dea; add esp, 0x78; ret; 
0x0000000000435202: jo 0x3524c; mov ebp, dword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000043b302: jo 0x3b304; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000043b439: jo 0x3b483; mov ebp, dword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000043b4ae: jo 0x3b4b0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004453a1: jo 0x453a4; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004454c8: jo 0x454cb; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000044551e: jo 0x45520; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000044711f: jo 0x47169; mov ebp, dword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004482c8: jo 0x48312; add esp, 0x78; ret; 
0x00000000004484a1: jo 0x484eb; add esp, 0x78; ret; 
0x000000000044864b: jo 0x48695; mov dword ptr [rsp], eax; call 0xaa40; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000044b3da: jo 0x4b424; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044b6e0: jo 0x4b72a; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044b7b3: jo 0x4b7fd; mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000404b89: jo 0x4bd3; add esp, 0x78; ret; 
0x0000000000404c26: jo 0x4c70; add esp, 0x78; ret; 
0x0000000000404dff: jo 0x4e49; add esp, 0x78; ret; 
0x000000000044e940: jo 0x4e98a; mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000044ee1a: jo 0x4ee64; mov dword ptr [rsp + 0x78], ecx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000404fd4: jo 0x501e; add esp, 0x78; ret; 
0x00000000004502ee: jo 0x50338; add esp, 0x78; ret; 
0x00000000004503f0: jo 0x5043a; add esp, 0x78; ret; 
0x00000000004503fa: jo 0x50444; add esp, 0x78; nop; ret; 
0x0000000000405035: jo 0x507f; add esp, 0x78; ret; 
0x0000000000405081: jo 0x50cb; add esp, 0x78; ret; 
0x0000000000451915: jo 0x5195f; mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x0000000000454ae3: jo 0x54b2d; mov dword ptr [rsp + 0x78], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000455a7c: jo 0x55ac6; add esp, 0x78; ret; 
0x000000000045658f: jo 0x5657a; ret 0xfffd; 
0x0000000000457441: jo 0x5748b; mov ebp, dword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000457450: jo 0x5749a; mov ebp, dword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x00000000004575e3: jo 0x5762d; mov ebp, dword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000045d0f5: jo 0x5d13f; add esp, 0x78; ret; 
0x000000000045f78a: jo 0x5f7d4; mov eax, dword ptr [rsp + 0x40]; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000045f88a: jo 0x5f8d4; mov eax, dword ptr [rsp + 0x40]; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000046331b: jo 0x63365; mov dword ptr [rdi], eax; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x00000000004648a8: jo 0x648ab; add byte ptr [rax], al; popfq; pop rbp; ret; 
0x000000000046975a: jo 0x697a4; add esp, 0x78; nop; ret; 
0x0000000000469789: jo 0x697d3; add esp, 0x78; ret; 
0x000000000046b44f: jo 0x6b499; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000046b4b1: jo 0x6b4fb; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000046b545: jo 0x6b58f; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000046b7ab: jo 0x6b7f5; add esp, 0x78; ret; 
0x000000000046b89b: jo 0x6b8e5; add esp, 0x78; ret; 
0x000000000046b8cf: jo 0x6b919; add esp, 0x78; ret; 
0x0000000000406b65: jo 0x6baf; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004073ad: jo 0x73f7; add esp, 0x78; ret; 
0x000000000047c11f: jo 0x7c130; mov bh, 0x50; add dword ptr [rsi - 0x3f], esp; ret 0x4808; 
0x000000000047fcd3: jo 0x7fcd6; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x000000000048288f: jo 0x828d9; add esp, 0x78; ret; 
0x0000000000483546: jo 0x83590; mov dword ptr [rsp + 0x78], eax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000483566: jo 0x835b0; mov dword ptr [rsp + 0x78], eax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000483597: jo 0x835e1; mov dword ptr [rsp + 0x78], ecx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000483936: jo 0x83980; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000483a76: jo 0x83ac0; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004847dc: jo 0x84826; mov eax, dword ptr [rsp + 0x50]; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048490f: jo 0x84959; mov dword ptr [rsp + 0x78], eax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004849ac: jo 0x849f6; mov dword ptr [rsp + 0x78], ecx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000484fd4: jo 0x84fe9; add al, 0; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048637b: jo 0x863c5; mov dword ptr [rsp], edx; call rcx; 
0x0000000000486cf6: jo 0x86d40; mov ebp, dword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000486def: jo 0x86e39; mov ebx, dword ptr [rdx + 0xd0]; mov rsi, qword ptr [rsp + 0x78]; mov qword ptr [rsp], rsi; call rbx; 
0x0000000000486e31: jo 0x86e7b; mov eax, dword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x78]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004872f2: jo 0x8733c; add esp, 0x78; ret; 
0x000000000048b061: jo 0x8b0ac; sub ecx, edi; mov qword ptr [rsp + 8], r9; mov qword ptr [rsp + 0x10], rdi; call rdx; 
0x000000000048ba09: jo 0x8ba53; mov dword ptr [rsp + 0xc8], eax; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x000000000048d547: jo 0x8d591; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048d9df: jo 0x8da29; mov dword ptr [rsp + 0x78], edx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000048fcee: jo 0x8fcfc; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000049034f: jo 0x90399; add esp, 0x78; ret; 
0x000000000049052e: jo 0x90578; add esp, 0x78; ret; 
0x000000000049073c: jo 0x90786; mov ebp, dword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004914b2: jo 0x914fc; mov dword ptr [rdi], eax; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; nop; ret; 
0x0000000000491812: jo 0x9185c; mov dword ptr [rdi], eax; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; nop; ret; 
0x000000000049265a: jo 0x926a4; mov dword ptr [rsp + 0x78], edx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000492673: jo 0x926bd; mov eax, dword ptr [rsp + 0x60]; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000493cdc: jo 0x93ce6; mov byte ptr [rdx + rcx], bl; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x00000000004941d5: jo 0x9421f; mov dword ptr [rsp], edi; mov qword ptr [rsp + 8], rdx; mov qword ptr [rsp + 0x10], rbx; mov qword ptr [rsp + 0x18], rsi; call rax; 
0x00000000004942d5: jo 0x9431f; mov dword ptr [rsp], edi; mov qword ptr [rsp + 8], rdx; mov qword ptr [rsp + 0x10], rbx; mov qword ptr [rsp + 0x18], rsi; call rax; 
0x00000000004943d9: jo 0x94423; mov dword ptr [rsp + 0x78], ebx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000494568: jo 0x945b2; add esp, 0x78; ret; 
0x00000000004946cd: jo 0x94717; add esp, 0x78; ret; 
0x00000000004096ac: jo 0x96b6; jne 0x9685; mov qword ptr [rsp + 0x20], r8; ret; 
0x00000000004971cf: jo 0x971d3; add byte ptr [rax], al; mov qword ptr [rsp + 0x10], rcx; mov ecx, dword ptr [rsp + 0x278]; mov dword ptr [rsp + 0x18], ecx; call rax; 
0x000000000049749f: jo 0x974a1; add byte ptr [rax], al; call 0x96100; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000049aa3f: jo 0x9aa89; add esp, 0x78; ret; 
0x000000000040be38: jo 0xbe82; mov dword ptr [rsp + 0x78], eax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000040be6f: jo 0xbeb9; mov eax, dword ptr [rsp + 0x40]; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000040d3bd: jo 0xd407; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000040d474: jo 0xd4be; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000040e5e1: jo 0xe62b; add esp, 0x78; ret; 
0x000000000040ee55: jo 0xee9f; add esp, 0x78; ret; 
0x000000000040ef42: jo 0xef50; mov qword ptr [rsp], rdx; mov qword ptr [rsp + 8], rsi; mov rsi, qword ptr [rcx]; mov rdx, rcx; call rsi; 
0x000000000040f163: jo 0xf1ad; add esp, 0x78; ret; 
0x0000000000456f08: jo 0xffffffffa17a8907; add rax, 0x50; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000041bc96: jp 0x1bc9c; add al, ch; ret 0x47a; 
0x000000000043f4a9: jp 0x3f4bc; add byte ptr [rcx], dh; shr bl, cl; add ecx, dword ptr [rax - 1]; ret 0x3948; 
0x000000000048227c: jp 0x822c6; mov ebp, dword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000040fc43: jp 0xfc5c; add byte ptr [rax - 0x77], cl; and al, 0x40; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040fceb: jp 0xfd04; add byte ptr [rax - 0x77], cl; and al, 0x40; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004102ec: js 0x10306; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000410646: js 0x10668; je 0x1065a; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000410eac: js 0x10ec6; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004113cc: js 0x11416; mov dword ptr [rsp], esi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000041180c: js 0x11826; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000412a9b: js 0x12ae5; sub esp, -0x80; ret; 
0x0000000000412bd4: js 0x12c1e; sub esp, -0x80; ret; 
0x0000000000412c41: js 0x12c8b; sub esp, -0x80; ret; 
0x0000000000412caa: js 0x12cf4; sub esp, -0x80; ret; 
0x0000000000412cb4: js 0x12cfe; sub esp, -0x80; ret; 
0x0000000000412d09: js 0x12d53; sub esp, -0x80; ret; 
0x000000000041360d: js 0x13657; cmp edi, eax; ja 0x135c2; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000041702a: js 0x1706c; add byte ptr [rbp + 0xf], dh; mov qword ptr [rsp + 0x48], rbx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000417c24: js 0x17c6e; sub esp, -0x80; ret; 
0x0000000000417ceb: js 0x17d35; sub esp, -0x80; ret; 
0x000000000041b4b1: js 0x1b4fb; sub esp, -0x80; ret; 
0x000000000041bb9c: js 0x1bbe6; sub esp, -0x80; ret; 
0x000000000041f854: js 0x1f89e; mov ebp, dword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000420969: js 0x209b3; mov ebp, dword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000423204: js 0x23216; add byte ptr [rdx + rcx + 0x48], dh; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000423264: js 0x23276; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004254af: js 0x254b2; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x00000000004255c8: js 0x255ca; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000427b00: js 0x27b4a; sub esp, -0x80; ret; 
0x000000000042f295: js 0x2f2a9; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + 0xa], cl; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000432213: js 0x32247; add byte ptr [rcx + rcx + 0xf], dh; push rdi; ror byte ptr [rdi], 0x11; and al, 0x10; ret; 
0x000000000043e430: js 0x3e472; add byte ptr [rdx + rcx + 0x48], dh; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043f4c5: js 0x3f4ee; add byte ptr [rax], al; add byte ptr [rsi - 0x1c], bh; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000441f86: js 0x41fd0; sub esp, -0x80; ret; 
0x000000000044202c: js 0x42076; sub esp, -0x80; ret; 
0x00000000004420f2: js 0x4213c; sub esp, -0x80; ret; 
0x0000000000404289: js 0x42d3; sub esp, -0x80; ret; 
0x00000000004042c3: js 0x430d; sub esp, -0x80; ret; 
0x0000000000404461: js 0x44ab; sub esp, -0x80; ret; 
0x00000000004044bd: js 0x4507; sub esp, -0x80; ret; 
0x00000000004044f5: js 0x453f; sub esp, -0x80; ret; 
0x00000000004044ff: js 0x4549; sub esp, -0x80; ret; 
0x0000000000446deb: js 0x46e35; mov dword ptr [rcx + 0x80], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000448659: js 0x486a3; sub esp, -0x80; ret; 
0x0000000000448801: js 0x4884b; sub esp, -0x80; ret; 
0x000000000044aa39: js 0x4aa83; mov dword ptr [rsp + 0xd8], eax; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000404b73: js 0x4bad; add byte ptr [rdi], cl; xchg eax, esp; ret 0xd284; 
0x000000000044db01: js 0x4db4b; sub esp, -0x80; ret; 
0x000000000044dc50: js 0x4dc9a; sub esp, -0x80; ret; 
0x000000000044dc87: js 0x4dcd1; sub esp, -0x80; ret; 
0x000000000044ec8d: js 0x4ecd7; mov ebp, dword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044ee1f: js 0x4ee69; mov ebp, dword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044fb60: js 0x4fbaa; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004503fe: js 0x50390; ret; 
0x0000000000451f34: js 0x51f7e; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000451f5a: js 0x51fa4; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000451f68: js 0x51fb2; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000045413d: js 0x54187; mov dword ptr [rsp + 0x320], eax; mov rbp, qword ptr [rsp + 0x2c0]; add rsp, 0x2c8; ret; 
0x0000000000454ae8: js 0x54b32; mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000454ec3: js 0x54ec7; add byte ptr [rax], al; add rsp, 0x280; ret; 
0x00000000004570d2: js 0x5711c; mov ebp, dword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000457274: js 0x572be; mov ebp, dword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000457ca2: js 0x57ca7; pop rdi; sete byte ptr [rsp + 0x10]; ret; 
0x000000000045a63c: js 0x5a648; xor dl, byte ptr [rax - 0x74b7f58b]; insb byte ptr [rdi], dx; and al, 0x60; add rsp, 0x68; ret; 
0x000000000045f794: js 0x5f7de; mov ebp, dword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000045f894: js 0x5f8de; mov ebp, dword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000463323: js 0x6336d; sub esp, -0x80; ret; 
0x0000000000467ea7: js 0x67ec1; add byte ptr [rdi], cl; xchg eax, ebp; and al, 0x10; ret; 
0x000000000046887e: js 0x688c8; mov ebp, dword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000468907: js 0x68909; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000046899e: js 0x689e8; mov ebp, dword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000046975e: js 0x696f0; ret; 
0x000000000047257b: js 0x725c5; mov ebp, dword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000472831: js 0x7287b; mov ebp, dword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004752d3: js 0x7531d; sub esp, -0x80; ret; 
0x00000000004753ea: js 0x75434; sub esp, -0x80; ret; 
0x00000000004754a1: js 0x754eb; sub esp, -0x80; ret; 
0x00000000004754f7: js 0x75541; sub esp, -0x80; ret; 
0x0000000000475603: js 0x7564d; sub esp, -0x80; ret; 
0x0000000000476ba9: js 0x76bf3; sub esp, -0x80; ret; 
0x0000000000477c35: js 0x77c7f; sub esp, -0x80; ret; 
0x0000000000478c6f: js 0x78cb9; sub esp, -0x80; ret; 
0x0000000000478c81: js 0x78ccb; sub esp, -0x80; ret; 
0x0000000000478c93: js 0x78cdd; sub esp, -0x80; ret; 
0x0000000000478d21: js 0x78d6b; sub esp, -0x80; ret; 
0x0000000000478dab: js 0x78df5; sub esp, -0x80; ret; 
0x0000000000478e44: js 0x78e8e; sub esp, -0x80; ret; 
0x0000000000478ee4: js 0x78f2e; sub esp, -0x80; ret; 
0x0000000000478f10: js 0x78f5a; sub esp, -0x80; ret; 
0x000000000047a416: js 0x7a419; add byte ptr [rax], al; mov qword ptr [rsp + 0x1c8], rax; mov rbp, qword ptr [rsp + 0x160]; add rsp, 0x168; ret; 
0x000000000047dc47: js 0x7dc61; add byte ptr [rdi], cl; xchg eax, ebp; and al, 0x10; ret; 
0x000000000047e75e: js 0x7e7a8; mov ebp, dword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000047e7eb: js 0x7e7ed; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000047e88e: js 0x7e8d8; mov ebp, dword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000048354b: js 0x83595; mov ebp, dword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000048356b: js 0x835b5; mov ebp, dword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000048359c: js 0x835e6; mov ebp, dword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000484702: js 0x8474c; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004847e6: js 0x84830; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000484914: js 0x8495e; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004849b1: js 0x849fb; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000486d91: js 0x86ddb; mov dword ptr [rsp], edx; call rcx; 
0x0000000000486dfb: js 0x86e45; mov dword ptr [rsp], esi; call rbx; 
0x0000000000486e3d: js 0x86e87; mov dword ptr [rsp], ecx; call rax; 
0x000000000048aeb9: js 0x8af03; mov dword ptr [rsp + 0x10], ecx; nop; call rdx; 
0x000000000048d7c0: js 0x8d80a; sub esp, -0x80; ret; 
0x000000000048d846: js 0x8d890; sub esp, -0x80; ret; 
0x000000000048d9e4: js 0x8da2e; mov ebp, dword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000048fec5: js 0x8ff0f; mov ecx, dword ptr [rax + 0x20]; mov rdx, qword ptr [rax + 0x28]; mov rcx, qword ptr [rcx + 0x18]; mov qword ptr [rsp], rdx; call rcx; 
0x00000000004914ba: js 0x91504; sub esp, -0x80; nop; ret; 
0x00000000004915fa: js 0x91644; sub esp, -0x80; nop; ret; 
0x000000000049181a: js 0x91864; sub esp, -0x80; nop; ret; 
0x000000000049194d: js 0x91997; sub esp, -0x80; ret; 
0x000000000049265f: js 0x926a9; mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000049267d: js 0x926c7; mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000492bfe: js 0x92c0a; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000492c07: js 0x92c51; sub esp, -0x80; ret; 
0x0000000000492d32: js 0x92d3c; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000492d3b: js 0x92d85; sub esp, -0x80; ret; 
0x0000000000492e98: js 0x92ee2; sub esp, -0x80; ret; 
0x0000000000492fa9: js 0x92ff3; sub esp, -0x80; ret; 
0x0000000000493fbd: js 0x9400b; add byte ptr [rdx + rcx - 0x48], dh; add dword ptr [rax], eax; add byte ptr [rax], al; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000493ff2: js 0x9403f; add byte ptr [rdx + rcx - 0x48], dh; add dword ptr [rax], eax; add byte ptr [rax], al; mov byte ptr [rsp + 0x18], al; ret; 
0x00000000004943de: js 0x94428; mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000049619e: js 0x961e8; sub esp, -0x80; ret; 
0x000000000049664a: js 0x96694; sub esp, -0x80; ret; 
0x00000000004971db: js 0x971df; add byte ptr [rax], al; mov dword ptr [rsp + 0x18], ecx; call rax; 
0x000000000049a422: js 0x9a46c; sub esp, -0x80; ret; 
0x000000000040be3d: js 0xbe87; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000040be79: js 0xbec3; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000040d839: js 0xd883; mov ebp, dword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000040f42c: js 0xf446; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042a1d4: lahf; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret; 
0x000000000041b905: lahf; mov ecx, 0xc5eb0013; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004759bf: lahf; ret 0x48e9; 
0x0000000000418d1f: lahf; ret; 
0x0000000000461533: lcall [rax + 0x58]; call 0x374a0; call 0x630c0; ret; 
0x0000000000412687: lcall [rdi]; add byte ptr [rax - 0x77], cl; and al, 0x48; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042cbf2: lea eax, [rax + 0x18]; mov rcx, qword ptr [rsp + 0x68]; xchg qword ptr [rax], rcx; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000040fc09: lea eax, [rax + 0x28]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042ac92: lea eax, [rax + 0x30]; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000041098b: lea eax, [rax + 0x48]; mov qword ptr [rsp + 0x40], rax; mov byte ptr [rsp + 0x48], 1; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004107cb: lea eax, [rax + 0x48]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000475990: lea eax, [rax + 1]; mov qword ptr [rsp + 8], rax; call 0x733a0; mov rbp, qword ptr [rsp + 0x690]; add rsp, 0x698; ret; 
0x0000000000475932: lea eax, [rax + 1]; mov qword ptr [rsp + 8], rax; call 0x73480; mov rbp, qword ptr [rsp + 0x690]; add rsp, 0x698; ret; 
0x0000000000452169: lea eax, [rax + 8]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042ac8e: lea eax, [rax + rcx*8]; lea rax, [rax + 0x30]; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048abad: lea eax, [rax + rdi]; mov qword ptr [rsp + 0x10], r8; call rdx; 
0x0000000000401fce: lea eax, [rax*2 - 1]; mov qword ptr [r9], rax; ret; 
0x0000000000451d5d: lea eax, [rbx + 1]; mov qword ptr [rdx + 0x10], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000452165: lea eax, [rbx + rax]; lea rax, [rax + 8]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040da4e: lea eax, [rbx + rsi]; mov dword ptr [rcx + 0xc], eax; mov qword ptr [rsp + 0x20], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042a0d6: lea eax, [rbx - 1]; or qword ptr [rdx + rsi*8], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000412684: lea eax, [rcx + 0x1fffff]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000447ab2: lea eax, [rcx + 1]; cmp rax, 0x23; jl 0x47a92; ret; 
0x0000000000402084: lea eax, [rcx + rax*2 - 1]; mov qword ptr [r9], rax; ret; 
0x000000000040a0d0: lea eax, [rcx + rax*8]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044b62c: lea eax, [rcx + rax*8]; mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040fc05: lea eax, [rcx + rax]; lea rax, [rax + 0x28]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004107c7: lea eax, [rcx + rax]; lea rax, [rax + 0x48]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042d490: lea eax, [rcx + rdx]; cmp rdx, rax; ja 0x2d4a2; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048af3e: lea eax, [rcx + rdx]; shr r8, 1; mov qword ptr [rsp + 0x80], r8; mov qword ptr [rsp + 0x10], r8; call rsi; 
0x000000000042c0b4: lea eax, [rdi + rdx]; add rbx, rdi; cmp r8, rbx; jae 0x2c095; mov qword ptr [rsp + 0x18], rsi; ret; 
0x00000000004734d0: lea eax, [rdx + 1]; mov qword ptr [rbx + 0x320], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044c5dc: lea eax, [rdx + rbx]; mov dword ptr [rsp + 8], eax; ret; 
0x000000000042d3ca: lea eax, [rdx + rcx]; cmp rdx, rax; ja 0x2d3dc; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048aecd: lea eax, [rdx - 1]; cmp rcx, rax; jl 0x8ae95; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000040b28b: lea eax, [rdx - 1]; test rax, rax; jge 0xb242; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000461970: lea eax, [rip + 0x10ca]; jmp rax; 
0x0000000000461982: lea eax, [rip + 0x1198]; jmp rax; 
0x0000000000451a51: lea eax, [rip + 0x11bd71]; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000461994: lea eax, [rip + 0x1266]; jmp rax; 
0x00000000004619a6: lea eax, [rip + 0x1334]; jmp rax; 
0x000000000041aca4: lea eax, [rip + 0x13c61e]; mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x00000000004619b8: lea eax, [rip + 0x1402]; jmp rax; 
0x00000000004619ca: lea eax, [rip + 0x14d0]; jmp rax; 
0x0000000000438443: lea eax, [rip + 0x14e0bf]; xchg qword ptr [rax], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042ba2b: lea eax, [rip + 0x15abc7]; mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000426523: lea eax, [rip + 0x15fe8f]; mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000423ddb: lea eax, [rip + 0x163df7]; mov qword ptr [rsp + 0x10], rax; call 0x26d60; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041c61a: lea eax, [rip + 0x16aa28]; mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000410a79: lea eax, [rip + 0x176cc1]; mov qword ptr [rsp + 0x40], rax; mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004109c7: lea eax, [rip + 0x176d73]; mov qword ptr [rsp + 0x40], rax; mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004108aa: lea eax, [rip + 0x176e90]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000410803: lea eax, [rip + 0x176f37]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040e0ca: lea eax, [rip + 0x179670]; mov qword ptr [rsp + 0x58], rax; mov byte ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040dfc5: lea eax, [rip + 0x179775]; mov qword ptr [rsp + 0x58], rax; mov byte ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040cad6: lea eax, [rip + 0x179b34]; mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000040a266: lea eax, [rip + 0x17d4d4]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040a1c8: lea eax, [rip + 0x17d572]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046180b: lea eax, [rip + 0x1cf]; jmp rax; 
0x0000000000461542: lea eax, [rip + 0x1f38]; ret; 
0x000000000046181a: lea eax, [rip + 0x260]; jmp rax; 
0x000000000046182c: lea eax, [rip + 0x2ee]; jmp rax; 
0x000000000048e5e1: lea eax, [rip + 0x30c23]; mov qword ptr [rsp + 0x10], rax; mov qword ptr [rsp + 0x18], 0xb; ret; 
0x000000000046183e: lea eax, [rip + 0x39c]; jmp rax; 
0x00000000004852ec: lea eax, [rip + 0x4107e]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004852d6: lea eax, [rip + 0x4108c]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000485209: lea eax, [rip + 0x41101]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048521f: lea eax, [rip + 0x4113b]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000485186: lea eax, [rip + 0x41194]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048512c: lea eax, [rip + 0x411e6]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004850d8: lea eax, [rip + 0x4124a]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004850c2: lea eax, [rip + 0x41268]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048505f: lea eax, [rip + 0x4132b]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000485049: lea eax, [rip + 0x41331]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000485033: lea eax, [rip + 0x4134f]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000484fe8: lea eax, [rip + 0x4136a]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000484fd2: lea eax, [rip + 0x41370]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000484fa6: lea eax, [rip + 0x41374]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000484fbc: lea eax, [rip + 0x4138e]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000484f46: lea eax, [rip + 0x413d4]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000484ea2: lea eax, [rip + 0x414d0]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000047bda7: lea eax, [rip + 0x4256b]; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], 4; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000047be2c: lea eax, [rip + 0x427ba]; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], 6; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000461850: lea eax, [rip + 0x44a]; jmp rax; 
0x0000000000490994: lea eax, [rip + 0x4b7c6]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000461862: lea eax, [rip + 0x4f8]; jmp rax; 
0x0000000000461874: lea eax, [rip + 0x5a6]; jmp rax; 
0x0000000000461886: lea eax, [rip + 0x654]; jmp rax; 
0x000000000046045e: lea eax, [rip + 0x661ec]; mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000045a6cc: lea eax, [rip + 0x6693a]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000045a5c5: lea eax, [rip + 0x676da]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000045a72d: lea eax, [rip + 0x68678]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; nop; ret; 
0x0000000000461898: lea eax, [rip + 0x722]; jmp rax; 
0x000000000044310a: lea eax, [rip + 0x7d76a]; mov qword ptr [rsp + 0x10], rax; mov qword ptr [rsp + 0x18], 0x13; ret; 
0x00000000004618aa: lea eax, [rip + 0x7f0]; jmp rax; 
0x00000000004618bc: lea eax, [rip + 0x8be]; jmp rax; 
0x000000000042f8a4: lea eax, [rip + 0x96e06]; mov qword ptr [rip + 0x127267], rax; mov rbp, qword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x00000000004618ce: lea eax, [rip + 0x98c]; jmp rax; 
0x00000000004618e0: lea eax, [rip + 0xa5a]; jmp rax; 
0x00000000004618f2: lea eax, [rip + 0xb28]; jmp rax; 
0x0000000000406824: lea eax, [rip + 0xbbddb]; mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], 0x1d; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040679e: lea eax, [rip + 0xbbe61]; mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], 0x1d; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000461904: lea eax, [rip + 0xbf6]; jmp rax; 
0x0000000000461916: lea eax, [rip + 0xcc4]; jmp rax; 
0x0000000000461928: lea eax, [rip + 0xd92]; jmp rax; 
0x000000000046193a: lea eax, [rip + 0xe60]; jmp rax; 
0x000000000046194c: lea eax, [rip + 0xf2e]; jmp rax; 
0x000000000046195e: lea eax, [rip + 0xffc]; jmp rax; 
0x0000000000461719: lea eax, [rip - 0x151bf]; call rax; 
0x0000000000464e3b: lea eax, [rip - 0x1fe01]; call rax; 
0x000000000046163d: lea eax, [rip - 0x2bf03]; jmp rax; 
0x000000000046161d: lea eax, [rip - 0x2bf23]; jmp rax; 
0x00000000004619d3: lea eax, [rip - 0x2c259]; jmp rax; 
0x0000000000459dd5: lea eax, [rsi + 1]; cmp rsi, r8; jg 0x59d87; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x00000000004411a3: lea eax, [rsi + 1]; xchg dword ptr [rcx + 0x5f4], eax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000402069: lea eax, [rsi*2 - 1]; mov qword ptr [r9], rax; ret; 
0x000000000042d619: lea eax, [rsp + 0x10]; mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000403b5d: lea eax, [rsp + 0x10]; mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045f2f8: lea eax, [rsp + 0x20]; mov qword ptr [rsp + 8], rax; call 0x3c200; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000456762: lea eax, [rsp + 0x38]; mov qword ptr [rsp + 0x10], rax; call 0x34660; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000044c45f: lea eax, [rsp + 0x40]; mov qword ptr [rsp + 0x28], rax; mov rax, qword ptr [rsp + 0x20]; lea rdx, [rsp + 0x20]; call rax; 
0x00000000004044ac: lea eax, [rsp + 0x50]; mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x00000000004450eb: lea eax, [rsp + 0x58]; mov qword ptr [rsp + 8], rax; call 0x46780; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x00000000004321e1: lea eax, [rsp + 8]; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000041501c: lea eax, [rsp + 8]; mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042564f: lea eax, [rsp + 8]; mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043138e: lea eax, [rsp + 8]; mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000043ce01: lea eax, [rsp + 8]; mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000045a2cf: lea ebp, [rbp - 0x74b80000]; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000048fa39: lea ebp, [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x000000000045b1f8: lea ebp, [rsp]; nop dword ptr [rax + rax]; call 0x21300; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043db18: lea ebp, [rsp]; nop dword ptr [rax + rax]; call 0x3db00; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043db58: lea ebp, [rsp]; nop dword ptr [rax + rax]; call 0x3db40; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043db98: lea ebp, [rsp]; nop dword ptr [rax + rax]; call 0x3db80; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043dbd8: lea ebp, [rsp]; nop dword ptr [rax + rax]; call 0x3dbc0; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043dc18: lea ebp, [rsp]; nop dword ptr [rax + rax]; call 0x3dc00; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043dc58: lea ebp, [rsp]; nop dword ptr [rax + rax]; call 0x3dc40; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x00000000004419fd: lea ebx, [rbx + 3]; mov rsi, qword ptr [rax + rbx*8]; lea rdx, [rax + rbx*8]; call rsi; 
0x00000000004419f9: lea ebx, [rcx + rbx]; lea rbx, [rbx + 3]; mov rsi, qword ptr [rax + rbx*8]; lea rdx, [rax + rbx*8]; call rsi; 
0x000000000042d66c: lea ecx, [rax + 0x1758]; mov qword ptr [rax + 0x1748], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000494559: lea ecx, [rax + 1]; mov qword ptr [rdi + 8], rcx; mov byte ptr [rbx + rax], 0x3f; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000044deb4: lea ecx, [rbx + rdx]; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000475954: lea ecx, [rcx + 1]; test rcx, rcx; jge 0x7596c; mov rbp, qword ptr [rsp + 0x690]; add rsp, 0x698; ret; 
0x0000000000457b46: lea ecx, [rcx + 5]; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044ee95: lea ecx, [rdx + 4]; mov rax, qword ptr [rcx + rax*8]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000441050: lea ecx, [rip + 0x116202]; lock xadd dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004381e2: lea ecx, [rip + 0x11f060]; lock xadd dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040a14b: lea ecx, [rip + 0x14294f]; lea rax, [rcx + rax*8]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043e202: lea ecx, [rip + 0x148284]; xchg dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042fa3a: lea ecx, [rip + 0x156a50]; xchg dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041c645: lea ecx, [rip + 0x16a53d]; lock xadd qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000406251: lea ecx, [rip + 0x180361]; xchg dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000049a3aa: lea ecx, [rip + 0x44650]; mov rax, qword ptr [r9 + 0x98]; mov qword ptr [rsp], r8; call rax; 
0x000000000049482b: lea ecx, [rip + 0x4a1cf]; mov rcx, qword ptr [rcx + 0xf8]; mov qword ptr [rsp], rax; call rcx; 
0x000000000046589d: lea ecx, [rip + 0x58ed1]; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000047d52b: lea ecx, [rip + 0x614cf]; mov qword ptr [rsp + 0x18], rcx; mov qword ptr [rsp + 0x20], rax; ret; 
0x000000000047bc6f: lea ecx, [rip + 0x62d8b]; mov qword ptr [rsp + 0x58], rcx; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000467c8b: lea ecx, [rip + 0x769af]; mov qword ptr [rsp + 0x18], rcx; mov qword ptr [rsp + 0x20], rax; ret; 
0x00000000004677f2: lea ecx, [rip + 0x76e48]; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004677c0: lea ecx, [rip + 0x76e7a]; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000467790: lea ecx, [rip + 0x76eaa]; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045f94d: lea ecx, [rip + 0xe16dd]; xchg dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000464f2c: lea ecx, [rip - 0x26d92]; mov rax, qword ptr [rip + 0xf1ae7]; jmp rax; 
0x0000000000464eec: lea ecx, [rip - 0xf2]; mov rax, qword ptr [rip + 0xf1b27]; jmp rax; 
0x0000000000456d5b: lea ecx, [rsp + 0x18]; mov qword ptr [rsp + 8], rcx; mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; 
0x00000000004639ed: lea edi, [rdi + 0x40]; ret; 
0x000000000044c274: lea edi, [rdi - 0x30]; cmp rsi, rdi; jbe 0x4c23b; mov qword ptr [rsp + 0x18], 0; mov byte ptr [rsp + 0x20], 0; ret; 
0x00000000004649e1: lea edi, [rsp + 0x10]; mov esi, dword ptr [rsp + 8]; mov eax, 0x125; syscall; 
0x00000000004649e1: lea edi, [rsp + 0x10]; mov esi, dword ptr [rsp + 8]; mov eax, 0x125; syscall; mov dword ptr [rsp + 0x18], eax; ret; 
0x00000000004649c1: lea edi, [rsp + 8]; mov eax, 0x16; syscall; 
0x00000000004649c1: lea edi, [rsp + 8]; mov eax, 0x16; syscall; mov dword ptr [rsp + 0x10], eax; ret; 
0x0000000000464cf9: lea edi, [rsp]; mov rsi, 0; mov rax, qword ptr [rip + 0xdc456]; call rax; 
0x0000000000464c13: lea edi, [rsp]; mov rsi, 0; mov rax, qword ptr [rip + 0xdc53c]; call rax; 
0x0000000000441a05: lea edx, [rax + rbx*8]; call rsi; 
0x0000000000431456: lea edx, [rdi + rbx]; mov dword ptr [rsp + 0x28], edx; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004737de: lea edx, [rdx + 0x40]; mov qword ptr [rsi + 8], rdx; mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042dc93: lea edx, [rip + 0x1587db]; lock xadd dword ptr [rdx], eax; mov byte ptr [rsp + 0x28], cl; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000043acfb: lea edx, [rip + 0x8b847]; call rax; 
0x000000000043acfb: lea edx, [rip + 0x8b847]; call rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000043ac5a: lea edx, [rip + 0x8b8e8]; call rcx; 
0x0000000000434ac1: lea edx, [rip + 0x91aa1]; call rax; 
0x0000000000434751: lea edx, [rip + 0x91de9]; call rcx; 
0x00000000004346dd: lea edx, [rip + 0x91e5d]; call rax; 
0x0000000000429556: lea edx, [rip + 0x9ce44]; call rax; 
0x00000000004287ee: lea edx, [rsp + 0x110]; call rcx; 
0x0000000000427e24: lea edx, [rsp + 0x110]; call rsi; 
0x000000000044c46e: lea edx, [rsp + 0x20]; call rax; 
0x000000000041fff8: lea edx, [rsp + 0x70]; call rax; 
0x0000000000459e8c: lea edx, [rsp + 0x80]; call rax; 
0x00000000004296fd: lea edx, [rsp + 0x90]; call rax; 
0x0000000000493cd7: lea esi, [rcx + 1]; mov qword ptr [rax + 8], rsi; mov byte ptr [rdx + rcx], bl; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000048ab1a: lea esi, [rcx - 1]; mov qword ptr [rsp + 0x10], rsi; call rax; 
0x00000000004375cf: lea esi, [rdi]; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000461484: lea esi, [rip - 0xc8a]; mov rdx, 0; mov rcx, 0; call rax; 
0x000000000040fc62: lea esi, [rsp + 0x38]; mov qword ptr [rsp], rsi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000040ff49: lea esi, [rsp + 0x50]; mov qword ptr [rsp], rsi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x00000000004113c9: lea esi, [rsp + 0x78]; mov qword ptr [rsp], rsi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000464bd7: lea esi, [rsp]; call rax; 
0x0000000000462fcb: lea esp, [rbx - 8]; mov rbp, qword ptr [rsp - 8]; sub qword ptr [rsp], 5; mov rbx, qword ptr [rdx]; jmp rbx; 
0x0000000000459dd4: lea r8, [r14 + 1]; cmp rsi, r8; jg 0x59d87; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000048abac: lea r8, [rax + rdi]; mov qword ptr [rsp + 0x10], r8; call rdx; 
0x000000000048af3d: lea r8, [rcx + rdx]; shr r8, 1; mov qword ptr [rsp + 0x80], r8; mov qword ptr [rsp + 0x10], r8; call rsi; 
0x000000000042c0b3: lea r8, [rdi + rdx]; add rbx, rdi; cmp r8, rbx; jae 0x2c095; mov qword ptr [rsp + 0x18], rsi; ret; 
0x000000000049a3a9: lea r9, [rip + 0x44650]; mov rax, qword ptr [r9 + 0x98]; mov qword ptr [rsp], r8; call rax; 
0x0000000000464f2b: lea r9, [rip - 0x26d92]; mov rax, qword ptr [rip + 0xf1ae7]; jmp rax; 
0x0000000000464eeb: lea r9, [rip - 0xf2]; mov rax, qword ptr [rip + 0xf1b27]; jmp rax; 
0x000000000042cbf1: lea rax, [rax + 0x18]; mov rcx, qword ptr [rsp + 0x68]; xchg qword ptr [rax], rcx; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000040fc08: lea rax, [rax + 0x28]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042ac91: lea rax, [rax + 0x30]; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000041098a: lea rax, [rax + 0x48]; mov qword ptr [rsp + 0x40], rax; mov byte ptr [rsp + 0x48], 1; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004107ca: lea rax, [rax + 0x48]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000047598f: lea rax, [rax + 1]; mov qword ptr [rsp + 8], rax; call 0x733a0; mov rbp, qword ptr [rsp + 0x690]; add rsp, 0x698; ret; 
0x0000000000475931: lea rax, [rax + 1]; mov qword ptr [rsp + 8], rax; call 0x73480; mov rbp, qword ptr [rsp + 0x690]; add rsp, 0x698; ret; 
0x0000000000452168: lea rax, [rax + 8]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042ac8d: lea rax, [rax + rcx*8]; lea rax, [rax + 0x30]; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000401fcd: lea rax, [rax*2 - 1]; mov qword ptr [r9], rax; ret; 
0x0000000000451d5c: lea rax, [rbx + 1]; mov qword ptr [rdx + 0x10], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000452164: lea rax, [rbx + rax]; lea rax, [rax + 8]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042a0d5: lea rax, [rbx - 1]; or qword ptr [rdx + rsi*8], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000412683: lea rax, [rcx + 0x1fffff]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000447ab1: lea rax, [rcx + 1]; cmp rax, 0x23; jl 0x47a92; ret; 
0x0000000000402083: lea rax, [rcx + rax*2 - 1]; mov qword ptr [r9], rax; ret; 
0x000000000040a0cf: lea rax, [rcx + rax*8]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044b62b: lea rax, [rcx + rax*8]; mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040fc04: lea rax, [rcx + rax]; lea rax, [rax + 0x28]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004107c6: lea rax, [rcx + rax]; lea rax, [rax + 0x48]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042d48f: lea rax, [rcx + rdx]; cmp rdx, rax; ja 0x2d4a2; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004734cf: lea rax, [rdx + 1]; mov qword ptr [rbx + 0x320], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042d3c9: lea rax, [rdx + rcx]; cmp rdx, rax; ja 0x2d3dc; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048aecc: lea rax, [rdx - 1]; cmp rcx, rax; jl 0x8ae95; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000040b28a: lea rax, [rdx - 1]; test rax, rax; jge 0xb242; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046196f: lea rax, [rip + 0x10ca]; jmp rax; 
0x0000000000461981: lea rax, [rip + 0x1198]; jmp rax; 
0x0000000000451a50: lea rax, [rip + 0x11bd71]; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000461993: lea rax, [rip + 0x1266]; jmp rax; 
0x00000000004619a5: lea rax, [rip + 0x1334]; jmp rax; 
0x000000000041aca3: lea rax, [rip + 0x13c61e]; mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x00000000004619b7: lea rax, [rip + 0x1402]; jmp rax; 
0x00000000004619c9: lea rax, [rip + 0x14d0]; jmp rax; 
0x0000000000438442: lea rax, [rip + 0x14e0bf]; xchg qword ptr [rax], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042ba2a: lea rax, [rip + 0x15abc7]; mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000426522: lea rax, [rip + 0x15fe8f]; mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000423dda: lea rax, [rip + 0x163df7]; mov qword ptr [rsp + 0x10], rax; call 0x26d60; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041c619: lea rax, [rip + 0x16aa28]; mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000410a78: lea rax, [rip + 0x176cc1]; mov qword ptr [rsp + 0x40], rax; mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004109c6: lea rax, [rip + 0x176d73]; mov qword ptr [rsp + 0x40], rax; mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004108a9: lea rax, [rip + 0x176e90]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000410802: lea rax, [rip + 0x176f37]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040e0c9: lea rax, [rip + 0x179670]; mov qword ptr [rsp + 0x58], rax; mov byte ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040dfc4: lea rax, [rip + 0x179775]; mov qword ptr [rsp + 0x58], rax; mov byte ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040cad5: lea rax, [rip + 0x179b34]; mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000040a265: lea rax, [rip + 0x17d4d4]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040a1c7: lea rax, [rip + 0x17d572]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046180a: lea rax, [rip + 0x1cf]; jmp rax; 
0x0000000000461541: lea rax, [rip + 0x1f38]; ret; 
0x0000000000461819: lea rax, [rip + 0x260]; jmp rax; 
0x000000000046182b: lea rax, [rip + 0x2ee]; jmp rax; 
0x000000000048e5e0: lea rax, [rip + 0x30c23]; mov qword ptr [rsp + 0x10], rax; mov qword ptr [rsp + 0x18], 0xb; ret; 
0x000000000046183d: lea rax, [rip + 0x39c]; jmp rax; 
0x00000000004852eb: lea rax, [rip + 0x4107e]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004852d5: lea rax, [rip + 0x4108c]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000485208: lea rax, [rip + 0x41101]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048521e: lea rax, [rip + 0x4113b]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000485185: lea rax, [rip + 0x41194]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048512b: lea rax, [rip + 0x411e6]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004850d7: lea rax, [rip + 0x4124a]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004850c1: lea rax, [rip + 0x41268]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048505e: lea rax, [rip + 0x4132b]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000485048: lea rax, [rip + 0x41331]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000485032: lea rax, [rip + 0x4134f]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000484fe7: lea rax, [rip + 0x4136a]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000484fd1: lea rax, [rip + 0x41370]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000484fa5: lea rax, [rip + 0x41374]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000484fbb: lea rax, [rip + 0x4138e]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000484f45: lea rax, [rip + 0x413d4]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000484ea1: lea rax, [rip + 0x414d0]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000047bda6: lea rax, [rip + 0x4256b]; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], 4; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000047be2b: lea rax, [rip + 0x427ba]; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], 6; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000046184f: lea rax, [rip + 0x44a]; jmp rax; 
0x0000000000490993: lea rax, [rip + 0x4b7c6]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000461861: lea rax, [rip + 0x4f8]; jmp rax; 
0x0000000000461873: lea rax, [rip + 0x5a6]; jmp rax; 
0x0000000000461885: lea rax, [rip + 0x654]; jmp rax; 
0x000000000046045d: lea rax, [rip + 0x661ec]; mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000045a6cb: lea rax, [rip + 0x6693a]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000045a5c4: lea rax, [rip + 0x676da]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000045a72c: lea rax, [rip + 0x68678]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; nop; ret; 
0x0000000000461897: lea rax, [rip + 0x722]; jmp rax; 
0x0000000000443109: lea rax, [rip + 0x7d76a]; mov qword ptr [rsp + 0x10], rax; mov qword ptr [rsp + 0x18], 0x13; ret; 
0x00000000004618a9: lea rax, [rip + 0x7f0]; jmp rax; 
0x00000000004618bb: lea rax, [rip + 0x8be]; jmp rax; 
0x000000000042f8a3: lea rax, [rip + 0x96e06]; mov qword ptr [rip + 0x127267], rax; mov rbp, qword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x00000000004618cd: lea rax, [rip + 0x98c]; jmp rax; 
0x00000000004618df: lea rax, [rip + 0xa5a]; jmp rax; 
0x00000000004618f1: lea rax, [rip + 0xb28]; jmp rax; 
0x0000000000406823: lea rax, [rip + 0xbbddb]; mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], 0x1d; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040679d: lea rax, [rip + 0xbbe61]; mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], 0x1d; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000461903: lea rax, [rip + 0xbf6]; jmp rax; 
0x0000000000461915: lea rax, [rip + 0xcc4]; jmp rax; 
0x0000000000461927: lea rax, [rip + 0xd92]; jmp rax; 
0x0000000000461939: lea rax, [rip + 0xe60]; jmp rax; 
0x000000000046194b: lea rax, [rip + 0xf2e]; jmp rax; 
0x000000000046195d: lea rax, [rip + 0xffc]; jmp rax; 
0x0000000000461718: lea rax, [rip - 0x151bf]; call rax; 
0x0000000000464e3a: lea rax, [rip - 0x1fe01]; call rax; 
0x000000000046163c: lea rax, [rip - 0x2bf03]; jmp rax; 
0x000000000046161c: lea rax, [rip - 0x2bf23]; jmp rax; 
0x00000000004619d2: lea rax, [rip - 0x2c259]; jmp rax; 
0x0000000000402068: lea rax, [rsi*2 - 1]; mov qword ptr [r9], rax; ret; 
0x000000000042d618: lea rax, [rsp + 0x10]; mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000403b5c: lea rax, [rsp + 0x10]; mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045f2f7: lea rax, [rsp + 0x20]; mov qword ptr [rsp + 8], rax; call 0x3c200; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000456761: lea rax, [rsp + 0x38]; mov qword ptr [rsp + 0x10], rax; call 0x34660; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000044c45e: lea rax, [rsp + 0x40]; mov qword ptr [rsp + 0x28], rax; mov rax, qword ptr [rsp + 0x20]; lea rdx, [rsp + 0x20]; call rax; 
0x00000000004044ab: lea rax, [rsp + 0x50]; mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x00000000004450ea: lea rax, [rsp + 0x58]; mov qword ptr [rsp + 8], rax; call 0x46780; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x00000000004321e0: lea rax, [rsp + 8]; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000041501b: lea rax, [rsp + 8]; mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042564e: lea rax, [rsp + 8]; mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043138d: lea rax, [rsp + 8]; mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000043ce00: lea rax, [rsp + 8]; mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048fa38: lea rbp, [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x000000000045b1f7: lea rbp, [rsp]; nop dword ptr [rax + rax]; call 0x21300; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043db17: lea rbp, [rsp]; nop dword ptr [rax + rax]; call 0x3db00; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043db57: lea rbp, [rsp]; nop dword ptr [rax + rax]; call 0x3db40; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043db97: lea rbp, [rsp]; nop dword ptr [rax + rax]; call 0x3db80; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043dbd7: lea rbp, [rsp]; nop dword ptr [rax + rax]; call 0x3dbc0; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043dc17: lea rbp, [rsp]; nop dword ptr [rax + rax]; call 0x3dc00; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043dc57: lea rbp, [rsp]; nop dword ptr [rax + rax]; call 0x3dc40; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x00000000004419fc: lea rbx, [rbx + 3]; mov rsi, qword ptr [rax + rbx*8]; lea rdx, [rax + rbx*8]; call rsi; 
0x00000000004419f8: lea rbx, [rcx + rbx]; lea rbx, [rbx + 3]; mov rsi, qword ptr [rax + rbx*8]; lea rdx, [rax + rbx*8]; call rsi; 
0x000000000042d66b: lea rcx, [rax + 0x1758]; mov qword ptr [rax + 0x1748], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000494558: lea rcx, [rax + 1]; mov qword ptr [rdi + 8], rcx; mov byte ptr [rbx + rax], 0x3f; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000044deb3: lea rcx, [rbx + rdx]; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000475953: lea rcx, [rcx + 1]; test rcx, rcx; jge 0x7596c; mov rbp, qword ptr [rsp + 0x690]; add rsp, 0x698; ret; 
0x0000000000457b45: lea rcx, [rcx + 5]; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044ee94: lea rcx, [rdx + 4]; mov rax, qword ptr [rcx + rax*8]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044104f: lea rcx, [rip + 0x116202]; lock xadd dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004381e1: lea rcx, [rip + 0x11f060]; lock xadd dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040a14a: lea rcx, [rip + 0x14294f]; lea rax, [rcx + rax*8]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043e201: lea rcx, [rip + 0x148284]; xchg dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042fa39: lea rcx, [rip + 0x156a50]; xchg dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041c644: lea rcx, [rip + 0x16a53d]; lock xadd qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000406250: lea rcx, [rip + 0x180361]; xchg dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000049482a: lea rcx, [rip + 0x4a1cf]; mov rcx, qword ptr [rcx + 0xf8]; mov qword ptr [rsp], rax; call rcx; 
0x000000000046589c: lea rcx, [rip + 0x58ed1]; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000047d52a: lea rcx, [rip + 0x614cf]; mov qword ptr [rsp + 0x18], rcx; mov qword ptr [rsp + 0x20], rax; ret; 
0x000000000047bc6e: lea rcx, [rip + 0x62d8b]; mov qword ptr [rsp + 0x58], rcx; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000467c8a: lea rcx, [rip + 0x769af]; mov qword ptr [rsp + 0x18], rcx; mov qword ptr [rsp + 0x20], rax; ret; 
0x00000000004677f1: lea rcx, [rip + 0x76e48]; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004677bf: lea rcx, [rip + 0x76e7a]; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046778f: lea rcx, [rip + 0x76eaa]; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045f94c: lea rcx, [rip + 0xe16dd]; xchg dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000456d5a: lea rcx, [rsp + 0x18]; mov qword ptr [rsp + 8], rcx; mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; 
0x00000000004639ec: lea rdi, [rdi + 0x40]; ret; 
0x000000000044c273: lea rdi, [rdi - 0x30]; cmp rsi, rdi; jbe 0x4c23b; mov qword ptr [rsp + 0x18], 0; mov byte ptr [rsp + 0x20], 0; ret; 
0x00000000004649e0: lea rdi, [rsp + 0x10]; mov esi, dword ptr [rsp + 8]; mov eax, 0x125; syscall; 
0x00000000004649e0: lea rdi, [rsp + 0x10]; mov esi, dword ptr [rsp + 8]; mov eax, 0x125; syscall; mov dword ptr [rsp + 0x18], eax; ret; 
0x00000000004649c0: lea rdi, [rsp + 8]; mov eax, 0x16; syscall; 
0x00000000004649c0: lea rdi, [rsp + 8]; mov eax, 0x16; syscall; mov dword ptr [rsp + 0x10], eax; ret; 
0x0000000000464cf8: lea rdi, [rsp]; mov rsi, 0; mov rax, qword ptr [rip + 0xdc456]; call rax; 
0x0000000000464c12: lea rdi, [rsp]; mov rsi, 0; mov rax, qword ptr [rip + 0xdc53c]; call rax; 
0x0000000000441a04: lea rdx, [rax + rbx*8]; call rsi; 
0x00000000004737dd: lea rdx, [rdx + 0x40]; mov qword ptr [rsi + 8], rdx; mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042dc92: lea rdx, [rip + 0x1587db]; lock xadd dword ptr [rdx], eax; mov byte ptr [rsp + 0x28], cl; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000043acfa: lea rdx, [rip + 0x8b847]; call rax; 
0x000000000043acfa: lea rdx, [rip + 0x8b847]; call rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000043ac59: lea rdx, [rip + 0x8b8e8]; call rcx; 
0x0000000000434ac0: lea rdx, [rip + 0x91aa1]; call rax; 
0x0000000000434750: lea rdx, [rip + 0x91de9]; call rcx; 
0x00000000004346dc: lea rdx, [rip + 0x91e5d]; call rax; 
0x0000000000429555: lea rdx, [rip + 0x9ce44]; call rax; 
0x00000000004287ed: lea rdx, [rsp + 0x110]; call rcx; 
0x0000000000427e23: lea rdx, [rsp + 0x110]; call rsi; 
0x000000000044c46d: lea rdx, [rsp + 0x20]; call rax; 
0x000000000041fff7: lea rdx, [rsp + 0x70]; call rax; 
0x0000000000459e8b: lea rdx, [rsp + 0x80]; call rax; 
0x00000000004296fc: lea rdx, [rsp + 0x90]; call rax; 
0x0000000000493cd6: lea rsi, [rcx + 1]; mov qword ptr [rax + 8], rsi; mov byte ptr [rdx + rcx], bl; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000048ab19: lea rsi, [rcx - 1]; mov qword ptr [rsp + 0x10], rsi; call rax; 
0x0000000000461483: lea rsi, [rip - 0xc8a]; mov rdx, 0; mov rcx, 0; call rax; 
0x000000000040fc61: lea rsi, [rsp + 0x38]; mov qword ptr [rsp], rsi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000040ff48: lea rsi, [rsp + 0x50]; mov qword ptr [rsp], rsi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x00000000004113c8: lea rsi, [rsp + 0x78]; mov qword ptr [rsp], rsi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000464bd6: lea rsi, [rsp]; call rax; 
0x0000000000462fca: lea rsp, [rbx - 8]; mov rbp, qword ptr [rsp - 8]; sub qword ptr [rsp], 5; mov rbx, qword ptr [rdx]; jmp rbx; 
0x0000000000460896: leave; aesenc xmm1, xmm1; aesenc xmm1, xmm1; movq qword ptr [rdx], xmm1; ret; 
0x000000000046089b: leave; aesenc xmm1, xmm1; movq qword ptr [rdx], xmm1; ret; 
0x000000000044c2c9: leave; cmovne rax, rsi; mov qword ptr [rsp + 0x18], rax; mov byte ptr [rsp + 0x20], 1; ret; 
0x0000000000457c94: leave; cmp rcx, 1; je 0x57ca1; mov byte ptr [rsp + 0x10], 0; ret; 
0x0000000000423a8d: leave; je 0x23a96; cmp qword ptr [rcx + 0x18], rax; jbe 0x23a9c; mov byte ptr [rsp + 0x10], 0; ret; 
0x000000000043928e: leave; je 0x3929b; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000447c0d: leave; je 0x47c1f; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000045b7a1: leave; je 0x5b7aa; mov byte ptr [rsp + 0x18], 1; ret; 
0x00000000004607ec: leave; je 0x607f4; call 0x35860; ret; 
0x000000000041813a: leave; jg 0x1814c; mov byte ptr [rsp + 0x18], 1; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000042b629: leave; jg 0x2b632; mov byte ptr [rsp + 0x10], 0; ret; 
0x00000000004502e7: leave; jg 0x502f4; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000043ccfb: leave; jge 0x3cd0d; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000475959: leave; jge 0x7596c; mov rbp, qword ptr [rsp + 0x690]; add rsp, 0x698; ret; 
0x000000000041633c: leave; jne 0x16349; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000041bf3a: leave; jne 0x1bf47; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000042b2e2: leave; jne 0x2b257; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042b692: leave; jne 0x2b62c; mov byte ptr [rsp + 0x10], 1; ret; 
0x0000000000440141: leave; jne 0x40153; mov byte ptr [rsp + 0x28], 1; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000457aa2: leave; jne 0x57aab; movups xmmword ptr [rsp + 0x10], xmm0; ret; 
0x0000000000459ae7: leave; jne 0x5991d; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000464ee1: leave; jne 0x64efb; mov rcx, qword ptr [rip + 0xf1bcd]; lea r9, [rip - 0xf2]; mov rax, qword ptr [rip + 0xf1b27]; jmp rax; 
0x000000000046b1f4: leave; jne 0x6b206; call 0x5f5a0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040db42: leave; jne 0xdb54; mov qword ptr [rsp + 0x60], rdx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048aaaa: leave; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x10], rcx; call rax; 
0x000000000048ed7d: leave; mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004608a0: leave; movq qword ptr [rdx], xmm1; ret; 
0x0000000000457a9d: leave; nop; test rcx, rcx; jne 0x57aab; movups xmmword ptr [rsp + 0x10], xmm0; ret; 
0x000000000044cb8e: leave; setg byte ptr [rsp + 0x168]; mov rbp, qword ptr [rsp + 0x100]; add rsp, 0x108; ret; 
0x0000000000402005: leave; shr rax, cl; and rax, 1; lea rax, [rax*2 - 1]; mov qword ptr [r9], rax; ret; 
0x00000000004127b3: leave; syscall; 
0x000000000044c2c6: leave; test rcx, rcx; cmovne rax, rsi; mov qword ptr [rsp + 0x18], rax; mov byte ptr [rsp + 0x20], 1; ret; 
0x0000000000444f3d: leave; xchg dword ptr [rax + 0x334], ecx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004381e5: lock adc dword ptr [rax], eax; lock xadd dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000405e83: lock add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004287ac: lock add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000042fbb0: lock add byte ptr [rax], al; add byte ptr [rax], al; jne 0x2fbe8; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042fc76: lock add byte ptr [rax], al; add byte ptr [rax], al; jne 0x2fc87; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000047f04b: lock add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; nop; ret; 
0x000000000047ea6c: lock add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x0000000000439bbf: lock add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000047eb4b: lock add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; nop; ret; 
0x000000000047f0b5: lock add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x000000000045682b: lock add dword ptr [rax + 0x48402444], ecx; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000498fd8: lock add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x0000000000421138: lock cmpxchg dword ptr [rcx], ebx; sete dl; nop; test dl, dl; je 0x2112d; ret; 
0x0000000000443870: lock cmpxchg dword ptr [rcx], ebx; sete dl; test dl, dl; je 0x43865; mov byte ptr [rsp + 0x10], 1; ret; 
0x0000000000401e6f: lock cmpxchg qword ptr [rbx], rcx; sete byte ptr [rsp + 0x20]; ret; 
0x0000000000441af9: lock cmpxchg qword ptr [rcx + 0x10], rbx; sete dl; test dl, dl; je 0x41ae5; ret; 
0x0000000000426838: lock inc dword ptr [rax]; add byte ptr [rdi], cl; xchg eax, edi; ret 0x8490; 
0x000000000042687b: lock inc dword ptr [rax]; add byte ptr [rdi], cl; xchg eax, edi; ret 0xd284; 
0x000000000044f24f: lock xadd dword ptr [rax + 0x2788], ecx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000044f70a: lock xadd dword ptr [rbx + 0x2788], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000441056: lock xadd dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004381e8: lock xadd dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042dc99: lock xadd dword ptr [rdx], eax; mov byte ptr [rsp + 0x28], cl; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000045b2ff: lock xadd dword ptr [rdx], ecx; mov byte ptr [rax + 0x16b8], 0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000041c64b: lock xadd qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000422ac9: lodsb al, byte ptr [rsi]; adc eax, dword ptr [rax]; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043078f: lodsb al, byte ptr [rsi]; add byte ptr [rax], al; add byte ptr [rax - 0x7f], cl; ret 0xfc7f; 
0x00000000004069ad: lodsb al, byte ptr [rsi]; add eax, 0x6c8b4800; and al, 8; add rsp, 0x10; ret; 
0x00000000004624c3: lodsb al, byte ptr [rsi]; and al, 0; add byte ptr [rax + rax], al; add rsp, 0x40008; ret; 
0x00000000004612fb: lodsb al, byte ptr [rsi]; and al, 0; add byte ptr [rax], 0; add rsp, 0x8008; ret; 
0x0000000000462bc3: lodsb al, byte ptr [rsi]; and al, 0; add byte ptr [rax], al; add al, 0x48; add esp, 0x4000008; ret; 
0x0000000000462f43: lodsb al, byte ptr [rsi]; and al, 0; add byte ptr [rax], al; add rsp, 0x40000008; ret; 
0x0000000000462843: lodsb al, byte ptr [rsi]; and al, 0; add byte ptr [rax], al; add rsp, 0x400008; ret; 
0x000000000046125b: lodsb al, byte ptr [rsi]; and al, 0; add byte ptr [rax], al; add rsp, 0x4008; ret; 
0x00000000004939b1: lodsb al, byte ptr [rsi]; and al, 0xd8; add byte ptr [rax], al; add cl, ch; ret; 
0x000000000040240d: lodsb al, byte ptr [rsi]; mov qword ptr [r8], rdx; ret; 
0x0000000000405cd0: lodsb al, byte ptr [rsi]; ret 0; 
0x000000000048d170: lodsb al, byte ptr [rsi]; ret; 
0x000000000045a2d0: lodsd eax, dword ptr [rsi]; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042d2c2: lodsd eax, dword ptr [rsi]; add dword ptr [rax], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000422b53: lodsd eax, dword ptr [rsi]; fimul word ptr [rax - 0x7d]; ret 0x4804; 
0x0000000000459cb2: lodsd eax, dword ptr [rsi]; mov dword ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000047e83a: lodsd eax, dword ptr [rsi]; mov rax, qword ptr [rsp + 0x50]; mov rax, qword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rcx; call rax; 
0x000000000048ada7: lodsd eax, dword ptr [rsi]; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000410caa: loope 0x10ca7; mov byte ptr [rsi + 8], cl; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000428fd4: loope 0x28fd5; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x48; add rsp, 0x50; ret; 
0x000000000043127b: loope 0x312a5; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004391a6: loope 0x391b9; add byte ptr [rax - 0x77], cl; or al, 0x24; mov rax, qword ptr [rdx]; call rax; 
0x000000000043cbc2: loope 0x3cbc3; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x00000000004410c3: loope 0x410fe; sal dword ptr [rbp + 0xb], 1; test rbx, rbx; sete al; mov byte ptr [rsp + 0x10], al; ret; 
0x000000000044d384: loope 0x4d3ce; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000457a5c: loope 0x57a66; or eax, ecx; movzx eax, ax; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000046701c: loope 0x67026; or eax, ecx; movzx eax, ax; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000471bdb: loope 0x71bdc; jmp qword ptr [rsi - 0x70]; 
0x00000000004793bc: loope 0x793c6; or eax, ecx; movzx eax, ax; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000040fb4b: loope 0xfb44; mov byte ptr [rax + 8], cl; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000046310e: mfence; rdtsc; shl rdx, 0x20; add rax, rdx; mov qword ptr [rsp + 8], rax; ret; 
0x0000000000427e1d: mov ah, 0x24; adc byte ptr [rcx], al; add byte ptr [rax], al; lea rdx, [rsp + 0x110]; call rsi; 
0x0000000000497fae: mov ah, 0x24; add byte ptr [rcx], al; add byte ptr [rax], al; mov qword ptr [rsp], rsi; call rbx; 
0x0000000000498970: mov ah, 0x24; add qword ptr [rax], rax; add byte ptr [rax - 0x73], cl; push rsi; sbb byte ptr [rax - 0x77], cl; ret; 
0x0000000000402c85: mov ah, 0x48; mov dword ptr [rsp + 0xb8], edx; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x0000000000407c6c: mov ah, 0x5c; jmp rax; 
0x0000000000418328: mov ah, 0x6d; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000045b04b: mov ah, 0xfc; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x000000000047213b: mov ah, 0xff; jmp qword ptr [rsi - 0x70]; 
0x000000000044bbc2: mov al, 0; add byte ptr [rax], al; mov qword ptr [rsp + 0xb8], r11; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000490347: mov al, 0; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000047d6c5: mov al, 0; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000409cc9: mov al, 0; add byte ptr [rax], al; ret; 
0x000000000041ec98: mov al, 0x16; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000406073: mov al, 0x48; mov dword ptr [rsp + 0x18], edx; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000040cf4c: mov al, 0xe3; add dword ptr [rax], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004644a7: mov al, 0xf3; movq qword ptr [rbx - 0x40], mm1; movdqu xmmword ptr [rbx - 0x30], xmm10; movdqu xmmword ptr [rbx - 0x20], xmm11; movdqu xmmword ptr [rbx - 0x10], xmm12; ret; 
0x0000000000464583: mov al, 0xf3; movq qword ptr [rcx - 0x40], mm1; movdqu xmmword ptr [rcx - 0x30], xmm10; movdqu xmmword ptr [rcx - 0x20], xmm11; movdqu xmmword ptr [rcx - 0x10], xmm12; ret; 
0x0000000000464007: mov al, 0xf3; movq qword ptr [rdi + rbx - 0x40], mm0; movdqu xmmword ptr [rdi + rbx - 0x30], xmm0; movdqu xmmword ptr [rdi + rbx - 0x20], xmm0; movdqu xmmword ptr [rdi + rbx - 0x10], xmm0; ret; 
0x00000000004642bf: mov al, 0xf3; movq qword ptr [rdi + rbx - 0x40], mm4; movdqu xmmword ptr [rdi + rbx - 0x30], xmm13; movdqu xmmword ptr [rdi + rbx - 0x20], xmm14; movdqu xmmword ptr [rdi + rbx - 0x10], xmm15; ret; 
0x000000000043941b: mov al, 0xff; jmp qword ptr [rsi - 0x70]; 
0x0000000000419c34: mov al, 1; add byte ptr [rax], al; add rsp, 0x1b8; nop; ret; 
0x00000000004813b0: mov al, 1; add byte ptr [rax], al; add rsp, 0x1b8; ret; 
0x000000000047a936: mov al, 1; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x138]; add rsp, 0x140; ret; 
0x00000000004495d0: mov al, 1; add byte ptr [rax], al; ret; 
0x0000000000454ebb: mov al, 2; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x278]; add rsp, 0x280; ret; 
0x000000000045e511: mov al, byte ptr [rax]; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000044b5ec: mov al, byte ptr [rcx]; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000045dca1: mov al, byte ptr [rdi + 0x75000012]; or cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x0000000000464142: mov al, byte ptr [rsi]; mov cl, byte ptr [rsi + rbx - 1]; mov byte ptr [rdi], al; mov byte ptr [rdi + rbx - 1], cl; ret; 
0x0000000000464155: mov ax, word ptr [rsi]; mov cl, byte ptr [rsi + 2]; mov word ptr [rdi], ax; mov byte ptr [rdi + 2], cl; ret; 
0x0000000000403286: mov bh, 0; mov rcx, qword ptr [rsp + 8]; cmp word ptr [rcx], ax; sete byte ptr [rsp + 0x18]; ret; 
0x0000000000467a70: mov bh, 0x40; xor byte ptr [rax - 0x77], cl; and al, 0x28; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000047ba54: mov bh, 0x40; xor byte ptr [rax - 0x77], cl; and al, 0x50; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042aa8a: mov bh, 0x48; mov dword ptr [rsp + 0x18], ecx; ret; 
0x0000000000467312: mov bh, 0x50; add dword ptr [rsi - 0x3f], esp; ret 0x4808; 
0x0000000000457b36: mov bh, 0x51; add dword ptr [rsi - 0x3f], esp; ret 0xf08; 
0x0000000000468ed2: mov bh, 0x52; add dword ptr [rsi - 0x3f], esp; ret 0x4808; 
0x0000000000459bdf: mov bh, 0x59; add ah, byte ptr [rsi - 9]; ret; 
0x000000000047a18e: mov bh, 0x59; xor ah, byte ptr [rsi - 9]; ret; 
0x0000000000468027: mov bh, 0x5a; add dword ptr [rsi - 0x3f], esp; ret; 
0x0000000000467af4: mov bh, 0x5a; xor ah, byte ptr [rsi - 9]; ret; 
0x0000000000468177: mov bh, 0x5b; add dword ptr [rsi - 0x3f], esp; ret; 
0x000000000045875a: mov bh, 0x7b; xor byte ptr [rcx], al; dec byte ptr [rax + 1]; ret; 
0x0000000000457a61: mov bh, 0xc0; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000457c93: mov bh, 0xc9; cmp rcx, 1; je 0x57ca1; mov byte ptr [rsp + 0x10], 0; ret; 
0x0000000000457a9c: mov bh, 0xc9; nop; test rcx, rcx; jne 0x57aab; movups xmmword ptr [rsp + 0x10], xmm0; ret; 
0x000000000043f30a: mov bh, 0xfc; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x000000000045b398: mov bh, 0xfd; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000041f289: mov bh, 0xfe; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x00000000004720db: mov bh, 0xff; jmp qword ptr [rsi - 0x70]; 
0x0000000000490997: mov bh, 4; add byte ptr [rax - 0x77], cl; and al, 0x60; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004973f5: mov bh, al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add al, 0x24; nop; call rcx; 
0x0000000000451f50: mov bh, bl; dec dword ptr [rbx - 0x76cbdbbc]; and al, 0x78; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000468950: mov bl, 0x48; mov eax, dword ptr [rsp + 0x50]; mov rax, qword ptr [rax + 0x60]; mov rcx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000406068: mov bl, 0x68; add dword ptr [rax], eax; add byte ptr [rdi], cl; xchg eax, esp; ret; 
0x0000000000441284: mov bl, 0xf0; add eax, 0x940f0000; ret; 
0x00000000004664db: mov bl, 0xff; jmp qword ptr [rsi - 0x70]; 
0x0000000000403dda: mov bpl, 5; add byte ptr [rbx - 0x76e3dbbc], cl; and al, 0x48; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000493fe0: mov byte ptr [r12 + 0x18], r8b; ret; 
0x00000000004954dd: mov byte ptr [r15 + 0x4b], r8b; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000438cad: mov byte ptr [rax + 0x114], 1; ret; 
0x000000000041f9ec: mov byte ptr [rax + 0x117], dl; cmp cl, 1; je 0x1fa01; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000433b94: mov byte ptr [rax + 0x117], dl; cmp cl, 1; je 0x33ba9; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000045240d: mov byte ptr [rax + 0x16], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000045b303: mov byte ptr [rax + 0x16b8], 0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000042d66d: mov byte ptr [rax + 0x17], bl; add byte ptr [rax], al; mov qword ptr [rax + 0x1748], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042d674: mov byte ptr [rax + 0x17], cl; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000403916: mov byte ptr [rax + 0x17], dl; add byte ptr [rax], al; je 0x3927; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000432234: mov byte ptr [rax + 0x30], 1; mov rcx, qword ptr [rax + 8]; mov rax, qword ptr [rax + 0x10]; mov qword ptr [rsp + 0x10], rcx; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000445238: mov byte ptr [rax + 0x48000000], al; mov ebp, dword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x000000000047e794: mov byte ptr [rax + 0x48000000], bh; mov edx, dword ptr [rsp + 0x58]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000444b2d: mov byte ptr [rax + 0x48000000], ch; mov ebp, dword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000041ec97: mov byte ptr [rax + 0x48000016], dh; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044f252: mov byte ptr [rax + 0x48000027], cl; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000496979: mov byte ptr [rax + 0x50], dl; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000424643: mov byte ptr [rax + 0x64], 0; mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000494941: mov byte ptr [rax + 0xb3], 0; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x0000000000430aa3: mov byte ptr [rax + 5], 1; mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000040fb4d: mov byte ptr [rax + 8], cl; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000046535f: mov byte ptr [rax + rax], 0; add byte ptr [rax - 0x39], cl; ret 0x800; 
0x0000000000415026: mov byte ptr [rax + rax], 0x48; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042dc05: mov byte ptr [rax - 0x70000000], ah; mov qword ptr [rdx], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004365b0: mov byte ptr [rax - 0x7c], 0xf6; je 0x365cd; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x000000000040a60c: mov byte ptr [rax - 0x7c], 0xf6; je 0xa5fb; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000464cfe: mov byte ptr [rax], 0; add byte ptr [rax], al; mov rax, qword ptr [rip + 0xdc456]; call rax; 
0x0000000000464c18: mov byte ptr [rax], 0; add byte ptr [rax], al; mov rax, qword ptr [rip + 0xdc53c]; call rax; 
0x0000000000436f82: mov byte ptr [rax], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000402221: mov byte ptr [rax], 0; ret; 
0x000000000045b469: mov byte ptr [rax], 1; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004064e6: mov byte ptr [rax], al; add byte ptr [rax], al; add rsp, 0x90; ret; 
0x00000000004833d9: mov byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000047c60e: mov byte ptr [rax], al; add byte ptr [rax], al; mov rax, qword ptr [rax + 0x48]; mov rcx, qword ptr [rsp + 0x90]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000485a25: mov byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000048daf9: mov byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000042104d: mov byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000411581: mov byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000429eac: mov byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000048ff61: mov byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x000000000047c5d4: mov byte ptr [rax], al; add byte ptr [rax], al; mov rcx, qword ptr [rax + 0x48]; mov rdx, qword ptr [rsp + 0x90]; mov qword ptr [rsp], rdx; call rcx; 
0x000000000041d11b: mov byte ptr [rax], al; add byte ptr [rax], al; nop; ret; 
0x000000000040574c: mov byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000041d109: mov byte ptr [rbx + 0x110], 1; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; nop; ret; 
0x00000000004599d3: mov byte ptr [rbx + 0x5c], 1; mov byte ptr [rbx], 1; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000494560: mov byte ptr [rbx + rax], 0x3f; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x00000000004819fa: mov byte ptr [rbx + rax], cl; inc dword ptr [rdx]; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000444f3f: mov byte ptr [rbx + rax], dh; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000049493d: mov byte ptr [rbx + rcx], 0x29; mov byte ptr [rax + 0xb3], 0; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x00000000004982cf: mov byte ptr [rbx + rcx], 0x5d; mov rbp, qword ptr [rsp + 0x1c8]; add rsp, 0x1d0; ret; 
0x000000000049a5ed: mov byte ptr [rbx + rcx], 0xa; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000498e74: mov byte ptr [rbx - 0x74b70002], bh; and al, 0x18; mov rcx, qword ptr [rsp + 0x20]; mov rax, qword ptr [rax + 0xf8]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000465346: mov byte ptr [rbx], 0; add byte ptr [rax], al; mov rdx, 0; mov eax, 0x48; syscall; 
0x00000000004599d7: mov byte ptr [rbx], 1; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000494ebe: mov byte ptr [rcx + 0x4c], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004920c4: mov byte ptr [rcx + 0xe], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000491ca4: mov byte ptr [rcx + 0xe], al; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000493ac2: mov byte ptr [rcx + 0xe], al; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x0000000000464a92: mov byte ptr [rcx + rcx*4 - 0x19], 0x8b; push rsp; and al, 8; mov eax, 0xea; syscall; 
0x0000000000464a92: mov byte ptr [rcx + rcx*4 - 0x19], 0x8b; push rsp; and al, 8; mov eax, 0xea; syscall; ret; 
0x00000000004831ae: mov byte ptr [rcx], 0x74; sub edx, dword ptr [rax + 0x448b4890]; ret 0x4810; 
0x0000000000474c54: mov byte ptr [rcx], al; add byte ptr [rax], al; add rsp, 0x190; nop; ret; 
0x00000000004745d9: mov byte ptr [rcx], al; add byte ptr [rax], al; add rsp, 0x190; ret; 
0x000000000045d2f1: mov byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000451729: mov byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x00000000004954de: mov byte ptr [rdi + 0x4b], al; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000046415e: mov byte ptr [rdi + 2], cl; ret; 
0x0000000000463f59: mov byte ptr [rdi + rbx - 1], al; ret; 
0x000000000046414a: mov byte ptr [rdi + rbx - 1], cl; ret; 
0x000000000044f70e: mov byte ptr [rdi], ah; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044f253: mov byte ptr [rdi], ah; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000463f57: mov byte ptr [rdi], al; mov byte ptr [rdi + rbx - 1], al; ret; 
0x0000000000464148: mov byte ptr [rdi], al; mov byte ptr [rdi + rbx - 1], cl; ret; 
0x000000000040ee45: mov byte ptr [rdx + 0x4b], al; mov rax, qword ptr [rsp + 0x30]; mov qword ptr [rdx + 0x58], rax; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000495a50: mov byte ptr [rdx + rax], 0x7d; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x0000000000493cde: mov byte ptr [rdx + rcx], bl; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000465326: mov byte ptr [rdx], 0; add byte ptr [rax], al; mov rdx, 1; mov eax, 0x48; syscall; 
0x0000000000465326: mov byte ptr [rdx], 0; add byte ptr [rax], al; mov rdx, 1; mov eax, 0x48; syscall; ret; 
0x000000000040c42a: mov byte ptr [rdx], 0; add byte ptr [rcx - 0x77], cl; ret 0x8948; 
0x0000000000472c90: mov byte ptr [rip + 0x11378b], al; ret; 
0x0000000000435b4b: mov byte ptr [rip + 0x1508d2], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000041738c: mov byte ptr [rip + 0x17187d], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040612c: mov byte ptr [rip + 0x180301], al; ret; 
0x0000000000410cac: mov byte ptr [rsi + 8], cl; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004100dc: mov byte ptr [rsi + 8], dl; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004141f5: mov byte ptr [rsi], bl; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x00000000004141b3: mov byte ptr [rsi], dl; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x000000000049618c: mov byte ptr [rsp + 0x10], 0; mov dword ptr [rsp + 0x14], ecx; call 0x94ee0; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000040d54d: mov byte ptr [rsp + 0x10], 0; ret; 
0x000000000045e0fe: mov byte ptr [rsp + 0x10], 0x21; ret; 
0x000000000045e10a: mov byte ptr [rsp + 0x10], 0x3c; ret; 
0x000000000045e110: mov byte ptr [rsp + 0x10], 0x3e; ret; 
0x0000000000405681: mov byte ptr [rsp + 0x10], 1; call 0x56a0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040d547: mov byte ptr [rsp + 0x10], 1; ret; 
0x00000000004410ce: mov byte ptr [rsp + 0x10], al; ret; 
0x000000000046b13d: mov byte ptr [rsp + 0x12], 3; mov rdx, qword ptr [rsp + 0x58]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000408e57: mov byte ptr [rsp + 0x140], 0; mov rbp, qword ptr [rsp + 0x108]; add rsp, 0x110; ret; 
0x00000000004584f1: mov byte ptr [rsp + 0x148], 0; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x00000000004682c7: mov byte ptr [rsp + 0x148], 0; mov rbp, qword ptr [rsp + 0x128]; add rsp, 0x130; ret; 
0x000000000047c1f2: mov byte ptr [rsp + 0x148], 0; mov rbp, qword ptr [rsp + 0xd0]; add rsp, 0xd8; ret; 
0x000000000045882d: mov byte ptr [rsp + 0x148], 1; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x000000000046809f: mov byte ptr [rsp + 0x148], 1; mov rbp, qword ptr [rsp + 0x128]; add rsp, 0x130; ret; 
0x000000000047c1da: mov byte ptr [rsp + 0x148], 1; mov rbp, qword ptr [rsp + 0xd0]; add rsp, 0xd8; ret; 
0x0000000000458c25: mov byte ptr [rsp + 0x148], al; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x000000000044cd45: mov byte ptr [rsp + 0x168], 0; mov rbp, qword ptr [rsp + 0x100]; add rsp, 0x108; ret; 
0x000000000045b7aa: mov byte ptr [rsp + 0x18], 0; ret; 
0x000000000041813d: mov byte ptr [rsp + 0x18], 1; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000401c60: mov byte ptr [rsp + 0x18], 1; ret; 
0x000000000041819e: mov byte ptr [rsp + 0x18], al; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000046571b: mov byte ptr [rsp + 0x18], al; nop; ret; 
0x00000000004032fd: mov byte ptr [rsp + 0x18], al; ret; 
0x000000000040333d: mov byte ptr [rsp + 0x18], cl; ret; 
0x000000000047a753: mov byte ptr [rsp + 0x1b0], 0; mov rbp, qword ptr [rsp + 0x138]; add rsp, 0x140; ret; 
0x000000000047a7fb: mov byte ptr [rsp + 0x1b0], 1; mov rbp, qword ptr [rsp + 0x138]; add rsp, 0x140; ret; 
0x000000000047a933: mov byte ptr [rsp + 0x1b0], al; mov rbp, qword ptr [rsp + 0x138]; add rsp, 0x140; ret; 
0x000000000047b593: mov byte ptr [rsp + 0x1d8], al; mov rbp, qword ptr [rsp + 0x150]; add rsp, 0x158; ret; 
0x000000000047b373: mov byte ptr [rsp + 0x1e8], al; mov rbp, qword ptr [rsp + 0x158]; add rsp, 0x160; ret; 
0x000000000043ca67: mov byte ptr [rsp + 0x20], 0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000441bcf: mov byte ptr [rsp + 0x20], 0; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000044c285: mov byte ptr [rsp + 0x20], 0; ret; 
0x000000000043ca58: mov byte ptr [rsp + 0x20], 1; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004022fe: mov byte ptr [rsp + 0x20], 1; ret; 
0x000000000047d3af: mov byte ptr [rsp + 0x230], 0; mov rbp, qword ptr [rsp + 0x1a0]; add rsp, 0x1a8; ret; 
0x000000000047d393: mov byte ptr [rsp + 0x230], 1; mov rbp, qword ptr [rsp + 0x1a0]; add rsp, 0x1a8; ret; 
0x000000000047d4f3: mov byte ptr [rsp + 0x230], al; mov rbp, qword ptr [rsp + 0x1a0]; add rsp, 0x1a8; ret; 
0x0000000000403ed4: mov byte ptr [rsp + 0x28], 0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000432625: mov byte ptr [rsp + 0x28], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004415a1: mov byte ptr [rsp + 0x28], 0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000441ce2: mov byte ptr [rsp + 0x28], 0; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000403ec5: mov byte ptr [rsp + 0x28], 1; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004326f5: mov byte ptr [rsp + 0x28], 1; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000405fe5: mov byte ptr [rsp + 0x28], 1; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000042dc9d: mov byte ptr [rsp + 0x28], cl; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000047d073: mov byte ptr [rsp + 0x290], 0; mov rbp, qword ptr [rsp + 0x208]; add rsp, 0x210; ret; 
0x000000000047c8bd: mov byte ptr [rsp + 0x290], al; mov rbp, qword ptr [rsp + 0x208]; add rsp, 0x210; ret; 
0x000000000043e31c: mov byte ptr [rsp + 0x30], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041c447: mov byte ptr [rsp + 0x30], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000473064: mov byte ptr [rsp + 0x30], 0; ret; 
0x000000000043e305: mov byte ptr [rsp + 0x30], 1; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041c485: mov byte ptr [rsp + 0x30], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000047305e: mov byte ptr [rsp + 0x30], 1; ret; 
0x0000000000440e5e: mov byte ptr [rsp + 0x30], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000436a0d: mov byte ptr [rsp + 0x30], cl; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046bb48: mov byte ptr [rsp + 0x38], 0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004237ed: mov byte ptr [rsp + 0x38], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042b0f2: mov byte ptr [rsp + 0x38], 0; ret; 
0x000000000046bc3a: mov byte ptr [rsp + 0x38], 1; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045bbbd: mov byte ptr [rsp + 0x38], 1; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046abdc: mov byte ptr [rsp + 0x38], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042b0f8: mov byte ptr [rsp + 0x38], 1; ret; 
0x000000000042492d: mov byte ptr [rsp + 0x38], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040af16: mov byte ptr [rsp + 0x38], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042c1c7: mov byte ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000401da2: mov byte ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000478ff3: mov byte ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042c142: mov byte ptr [rsp + 0x40], 1; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004206b0: mov byte ptr [rsp + 0x40], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000467d34: mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000465d92: mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x0000000000401cbd: mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000478fe1: mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000440082: mov byte ptr [rsp + 0x40], bl; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004735c2: mov byte ptr [rsp + 0x40], dh; mov qword ptr [rsp + 0x48], rbx; mov qword ptr [rsp + 0x50], rcx; mov byte ptr [rsp + 0x58], sil; ret; 
0x0000000000473616: mov byte ptr [rsp + 0x40], dl; mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], 0; mov byte ptr [rsp + 0x58], dl; ret; 
0x00000000004735c1: mov byte ptr [rsp + 0x40], sil; mov qword ptr [rsp + 0x48], rbx; mov qword ptr [rsp + 0x50], rcx; mov byte ptr [rsp + 0x58], sil; ret; 
0x0000000000441387: mov byte ptr [rsp + 0x458], 0; mov rbp, qword ptr [rsp + 0x430]; add rsp, 0x438; ret; 
0x000000000044133c: mov byte ptr [rsp + 0x458], 1; mov rbp, qword ptr [rsp + 0x430]; add rsp, 0x438; ret; 
0x0000000000473d30: mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040fec4: mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000465b2f: mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000043c874: mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000473d08: mov byte ptr [rsp + 0x48], 1; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000410993: mov byte ptr [rsp + 0x48], 1; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040ada9: mov byte ptr [rsp + 0x48], 1; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000043c8cc: mov byte ptr [rsp + 0x48], 1; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000045df92: mov byte ptr [rsp + 0x48], cl; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; nop; ret; 
0x000000000045dfe2: mov byte ptr [rsp + 0x48], cl; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000474421: mov byte ptr [rsp + 0x50], 0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046bda2: mov byte ptr [rsp + 0x50], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000455dae: mov byte ptr [rsp + 0x50], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046bd7c: mov byte ptr [rsp + 0x50], 1; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048e8ae: mov byte ptr [rsp + 0x50], 1; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000455e01: mov byte ptr [rsp + 0x50], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045e58a: mov byte ptr [rsp + 0x50], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040a4d5: mov byte ptr [rsp + 0x58], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045be7d: mov byte ptr [rsp + 0x58], 0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000425fce: mov byte ptr [rsp + 0x58], 0; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040a4be: mov byte ptr [rsp + 0x58], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045be52: mov byte ptr [rsp + 0x58], 1; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000425f7b: mov byte ptr [rsp + 0x58], 1; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004735d1: mov byte ptr [rsp + 0x58], dh; ret; 
0x000000000040bfb6: mov byte ptr [rsp + 0x58], dl; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000473628: mov byte ptr [rsp + 0x58], dl; ret; 
0x00000000004735d0: mov byte ptr [rsp + 0x58], sil; ret; 
0x000000000048ce06: mov byte ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040dfd0: mov byte ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004469e7: mov byte ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000420d7a: mov byte ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000048ce36: mov byte ptr [rsp + 0x60], 1; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040e073: mov byte ptr [rsp + 0x60], 1; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000403623: mov byte ptr [rsp + 0x60], 1; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000045cfea: mov byte ptr [rsp + 0x60], 1; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000403615: mov byte ptr [rsp + 0x60], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000047e559: mov byte ptr [rsp + 0x60], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000046a79c: mov byte ptr [rsp + 0x61], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000046a780: mov byte ptr [rsp + 0x61], 1; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044c4ef: mov byte ptr [rsp + 0x68], al; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044c4a3: mov byte ptr [rsp + 0x68], cl; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000043b2ff: mov byte ptr [rsp + 0x70], 0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044551b: mov byte ptr [rsp + 0x70], 0; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000044539e: mov byte ptr [rsp + 0x70], 1; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000043b436: mov byte ptr [rsp + 0x70], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000468904: mov byte ptr [rsp + 0x78], 0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004255c5: mov byte ptr [rsp + 0x78], 0; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x00000000004254ac: mov byte ptr [rsp + 0x78], 1; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000046887b: mov byte ptr [rsp + 0x78], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044fb5d: mov byte ptr [rsp + 0x78], bh; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044fb5c: mov byte ptr [rsp + 0x78], dil; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044f08d: mov byte ptr [rsp + 0x80], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000473aa5: mov byte ptr [rsp + 0x80], 0; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000044effd: mov byte ptr [rsp + 0x80], 1; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000473b27: mov byte ptr [rsp + 0x80], 1; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000045e174: mov byte ptr [rsp + 0x90], 0; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000478c75: mov byte ptr [rsp + 0x90], 0; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000045e274: mov byte ptr [rsp + 0x90], 1; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000473f5a: mov byte ptr [rsp + 0x90], 1; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000478c87: mov byte ptr [rsp + 0x90], 1; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000404b7d: mov byte ptr [rsp + 0xa0], 0; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000404df3: mov byte ptr [rsp + 0xa0], 1; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x00000000004317f4: mov byte ptr [rsp + 0xa0], al; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000405739: mov byte ptr [rsp + 0xa9], 0; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000040584d: mov byte ptr [rsp + 0xa9], 1; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000448c5b: mov byte ptr [rsp + 0xe0], 1; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x0000000000468b69: mov byte ptr [rsp + 0xe8], 0; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x0000000000468c41: mov byte ptr [rsp + 0xe8], 1; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x0000000000468cc8: mov byte ptr [rsp + 0xe8], al; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x000000000047ea69: mov byte ptr [rsp + 0xf0], 0; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x0000000000439bbc: mov byte ptr [rsp + 0xf0], 0; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000047f0b2: mov byte ptr [rsp + 0xf0], 1; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x000000000047ebc9: mov byte ptr [rsp + 0xf0], al; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; nop; ret; 
0x000000000047ec93: mov byte ptr [rsp + 0xf0], al; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x0000000000439b74: mov byte ptr [rsp + 0xf0], cl; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000046a254: mov byte ptr [rsp + 0xf0], dl; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x0000000000422064: mov byte ptr [rsp + 0xf8], 0; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000042213a: mov byte ptr [rsp + 0xf8], 1; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x0000000000406a4f: mov byte ptr [rsp + 0xf], 1; mov rdx, qword ptr [rsp + 0x18]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000438f68: mov byte ptr [rsp + 8], 0; call 0x38cc0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004391f2: mov byte ptr [rsp + 8], 1; call 0x38cc0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000049752c: mov byte ptr [rsp + 8], al; mov dword ptr [rsp + 0xc], ebx; call 0x94dc0; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000494dfa: mov byte ptr [rsp + 8], al; nop; call 0x91aa0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043aeea: mov byte ptr [rsp + 8], dl; call 0x397c0; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000494029: mov byte ptr [rsp + r12 + 0x18], al; ret; 
0x000000000049401b: mov byte ptr [rsp + r12 + 0x18], r8b; ret; 
0x000000000043768f: mov byte ptr [rsp], 0; call 0x44b80; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000438641: mov ch, 0x48; mov dword ptr [rsp + 0x28], edx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044b1cc: mov ch, 0x48; mov dword ptr [rsp + 0xb8], eax; mov qword ptr [rsp + 0xc0], rcx; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000441ce1: mov ch, 0xc6; and al, 0x28; add byte ptr [rax - 0x75], cl; sub al, 0x24; add rsp, 8; ret; 
0x000000000043f562: mov ch, 0xfc; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x50; add rsp, 0x58; ret; 
0x000000000047211b: mov ch, 0xff; jmp qword ptr [rsi - 0x70]; 
0x0000000000437e90: mov ch, 2; add bl, ch; ret 0x8948; 
0x0000000000403ddb: mov ch, 5; add byte ptr [rbx - 0x76e3dbbc], cl; and al, 0x48; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040aa27: mov ch, 6; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000048fe0a: mov ch, byte ptr [rsi + 0xc]; add byte ptr [rax - 0x77], cl; and al, 8; mov qword ptr [rsp + 0x10], rcx; ret; 
0x0000000000427484: mov cl, 0x11; add byte ptr [rbp - 0x75], cl; pop rsp; ret 0x4c08; 
0x000000000042113a: mov cl, 0x19; sete dl; nop; test dl, dl; je 0x2112d; ret; 
0x0000000000443872: mov cl, 0x19; sete dl; test dl, dl; je 0x43865; mov byte ptr [rsp + 0x10], 1; ret; 
0x0000000000441aa4: mov cl, 0x51; adc byte ptr [rdi], cl; xchg eax, esp; ret 0xd284; 
0x000000000043c52a: mov cl, 0x51; add al, 0xf; xchg eax, esp; ret 0xd284; 
0x00000000004421b6: mov cl, 0x51; or byte ptr [rdi], cl; xchg eax, esp; ret 0x1f0f; 
0x0000000000441afc: mov cl, 0x59; adc byte ptr [rdi], cl; xchg eax, esp; ret 0xd284; 
0x000000000046b0a1: mov cl, 0x59; add al, 0xf; xchg eax, esp; ret; 
0x000000000043c860: mov cl, 0x5a; add al, 0xf; xchg eax, esp; ret; 
0x000000000044112f: mov cl, 0x91; clc; or eax, 0x940f0000; ret 0xd284; 
0x0000000000441548: mov cl, 0x91; clc; or eax, 0x940f0000; ret; 
0x0000000000436c83: mov cl, 0x91; nop; add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, esp; ret; 
0x000000000042b623: mov cl, 0xae; adc eax, 0xc9854800; jg 0x2b632; mov byte ptr [rsp + 0x10], 0; ret; 
0x0000000000406067: mov cl, 0xb3; push 0xf000001; xchg eax, esp; ret; 
0x0000000000401e72: mov cl, 0xb; sete byte ptr [rsp + 0x20]; ret; 
0x0000000000441590: mov cl, 0xf0; add eax, 0x940f0000; ret 0xd284; 
0x00000000004487fa: mov cl, 0xfb; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x78; sub rsp, -0x80; ret; 
0x000000000045b0b3: mov cl, 0xfc; inc dword ptr [rax + 0x28247c]; je 0x5b0c7; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000045b906: mov cl, 0xfd; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x000000000047219b: mov cl, 0xff; jmp qword ptr [rsi - 0x70]; 
0x0000000000456d94: mov cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; ret; 
0x0000000000464158: mov cl, byte ptr [rsi + 2]; mov word ptr [rdi], ax; mov byte ptr [rdi + 2], cl; ret; 
0x0000000000464144: mov cl, byte ptr [rsi + rbx - 1]; mov byte ptr [rdi], al; mov byte ptr [rdi + rbx - 1], cl; ret; 
0x0000000000401fc4: mov cl, byte ptr [rsi + rbx]; cmp cl, byte ptr [rdi + rbx]; seta al; lea rax, [rax*2 - 1]; mov qword ptr [r9], rax; ret; 
0x00000000004136a4: mov cs, word ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x48; add rsp, 0x50; ret; 
0x0000000000482456: mov dh, 0; mov byte ptr [rsp + 0x50], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000403266: mov dh, 0; mov rcx, qword ptr [rsp + 8]; cmp byte ptr [rcx], al; sete byte ptr [rsp + 0x18]; ret; 
0x00000000004922af: mov dh, 0x14; adc ecx, dword ptr [rcx + 0x39]; int 0x72; ret 0x7ce9; 
0x0000000000421e9f: mov dh, 0x1c; sbb dword ptr [rcx - 9], eax; rol dword ptr [rcx + 0x21], cl; ret; 
0x000000000047d973: mov dh, 0x34; sbb byte ptr [rax - 1], cl; ret; 
0x00000000004017dc: mov dh, 0x34; sbb dl, byte ptr [rax + 0x75ce3840]; out dx, al; mov qword ptr [rsp + 0x20], rbx; ret; 
0x000000000042f146: mov dh, 0x3e; add dword ptr [rax], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000493fde: mov dh, 0x40; mov byte ptr [r12 + 0x18], r8b; ret; 
0x0000000000494027: mov dh, 0x40; mov byte ptr [rsp + r12 + 0x18], al; ret; 
0x0000000000494019: mov dh, 0x40; mov byte ptr [rsp + r12 + 0x18], r8b; ret; 
0x0000000000493f6a: mov dh, 0x40; mov qword ptr [rsp + 0x10], rcx; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000440e5a: mov dh, 0x44; and al, 0x10; mov byte ptr [rsp + 0x30], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040af12: mov dh, 0x44; and al, 0x10; mov byte ptr [rsp + 0x38], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000467d30: mov dh, 0x44; and al, 0x10; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000403611: mov dh, 0x44; and al, 0x10; mov byte ptr [rsp + 0x60], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000458da6: mov dh, 0x44; and al, 0x18; mov byte ptr [rsp + 0x148], al; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x000000000046559f: mov dh, 0x44; and al, 0x18; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000455dfd: mov dh, 0x44; and al, 0x18; mov byte ptr [rsp + 0x50], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045e586: mov dh, 0x44; and al, 0x18; mov byte ptr [rsp + 0x50], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000468997: mov dh, 0x44; and al, 0x18; mov byte ptr [rsp + 0x78], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040afbb: mov dh, 0x44; and al, 0x1f; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043b432: mov dh, 0x44; and al, 0x1f; mov byte ptr [rsp + 0x70], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000046929e: mov dh, 0x44; and al, 0x28; mov byte ptr [rsp + 0xe8], al; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x000000000047f169: mov dh, 0x44; and al, 0x28; mov byte ptr [rsp + 0xf0], al; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x00000000004954da: mov dh, 0x44; and al, 0x47; mov byte ptr [rdi + 0x4b], al; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000040fb47: mov dh, 0x48; or byte ptr [rbx + 0x4888f7e1], al; or byte ptr [rax - 0x75], cl; sub al, 0x24; add rsp, 8; ret; 
0x00000000004687b1: mov dh, 0x50; adc al, 0xf6; ret 0x7404; 
0x000000000040e5af: mov dh, 0x50; or dh, dh; ret 0xf04; 
0x000000000040f3e7: mov dh, 0x50; or dword ptr [rdi], ecx; mov dh, 0x58; or dh, dh; ret; 
0x000000000047e65e: mov dh, 0x51; adc al, 0xf6; ret 0x7404; 
0x000000000047a1d3: mov dh, 0x51; adc al, 0xf6; ret 0xf01; 
0x0000000000456e15: mov dh, 0x52; adc al, 0xf6; ret 0x7402; 
0x000000000040fcb4: mov dh, 0x52; or dh, dh; ret 0x7408; 
0x000000000045860f: mov dh, 0x53; adc al, 0xf6; ret 0xf01; 
0x00000000004586ea: mov dh, 0x57; adc al, 0xf6; ret 0xf01; 
0x000000000041040a: mov dh, 0x58; or byte ptr [rcx - 0xa], al; ret; 
0x000000000040ec6e: mov dh, 0x58; or dh, dh; ret; 
0x000000000040f5e3: mov dh, 0x59; or byte ptr [rcx - 0xa], al; ret; 
0x000000000040f870: mov dh, 0x59; or dh, dh; ret; 
0x000000000046732e: mov dh, 0x5b; adc al, 0xf6; ret; 
0x00000000004169ce: mov dh, 0x5e; adc al, 0xf6; ret; 
0x000000000047ea4e: mov dh, 0x84; and al, 0xe8; add byte ptr [rax], al; add byte ptr [rax - 0x17dfdbbc], cl; ret 0xfffc; 
0x000000000044c2c5: mov dh, 0xc9; test rcx, rcx; cmovne rax, rsi; mov qword ptr [rsp + 0x18], rax; mov byte ptr [rsp + 0x20], 1; ret; 
0x0000000000478264: mov dh, 0xc; or byte ptr [rax + 0x39], cl; ret; 
0x000000000045b247: mov dh, 0xd; ret; 
0x00000000004874ff: mov dh, 0xff; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x00000000004720fb: mov dh, 0xff; jmp qword ptr [rsi - 0x70]; 
0x00000000004929ab: mov dh, 4; cmp al, byte ptr [rbp - 0x77]; ret; 
0x0000000000473050: mov dh, 4; xor dword ptr [rax + rdi - 0x39], eax; je 0x73038; setb byte ptr [rsp + 0x30]; ret; 
0x0000000000472c8a: mov dh, 5; idiv dword ptr [rip + 0x5880011]; mov esi, dword ptr [rdi]; adc dword ptr [rax], eax; ret; 
0x000000000044c2fa: mov dl, 0x48; mov dword ptr [rsp + 0x18], 0; mov byte ptr [rsp + 0x20], 0; ret; 
0x000000000045d45c: mov dl, 0xfd; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000047217b: mov dl, 0xff; jmp qword ptr [rsi - 0x70]; 
0x00000000004616fc: mov dword ptr [0xfffffffffffffff8], eax; mov rsp, qword ptr [rax + 0x38]; mov qword ptr [rax + 0x38], 0; ret; 
0x00000000004617bf: mov dword ptr [0xfffffffffffffff8], ebx; mov rsp, qword ptr [rbx + 0x38]; call 0x496e0; call 0x630c0; ret; 
0x00000000004630a7: mov dword ptr [0xfffffffffffffff8], ebx; ret; 
0x0000000000465164: mov dword ptr [0xfffffffffffffff8], ecx; call 0x630e0; call r12; mov edi, 0x6f; mov eax, 0x3c; syscall; 
0x0000000000463060: mov dword ptr [0xfffffffffffffff8], edi; mov rsp, rsi; mov dword ptr [rsp + 0x18], eax; ret; 
0x0000000000460802: mov dword ptr [0xfffffffffffffff8], edi; ret; 
0x0000000000461627: mov dword ptr [0xfffffffffffffff8], esi; mov rsp, qword ptr [rsi + 0x38]; push rax; mov rdx, rdi; mov rdi, qword ptr [rdi]; call rdi; 
0x00000000004351f7: mov dword ptr [rax + 0x10], 0xfffffade; mov qword ptr [rsp + 0x70], r8; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000426137: mov dword ptr [rax + 0x10], 0xfffffade; mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004373d6: mov dword ptr [rax + 0x10], 0xfffffade; mov rax, qword ptr [rsp + 0x28]; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000040aaa0: mov dword ptr [rax + 0x10], 0xfffffade; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000419c29: mov dword ptr [rax + 0x10], 0xfffffade; mov rbp, qword ptr [rsp + 0x1b0]; add rsp, 0x1b8; nop; ret; 
0x000000000043897a: mov dword ptr [rax + 0x10], 0xfffffade; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000452315: mov dword ptr [rax + 0x10], 0xfffffade; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004362e3: mov dword ptr [rax + 0x10], 0xfffffade; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000437c2f: mov dword ptr [rax + 0x10], 0xfffffade; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; nop; ret; 
0x0000000000435565: mov dword ptr [rax + 0x10], 0xfffffade; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000042416f: mov dword ptr [rax + 0x10], 0xfffffade; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; nop; ret; 
0x0000000000418d51: mov dword ptr [rax + 0x10], 0xfffffade; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000451ad1: mov dword ptr [rax + 0x10], 0xfffffade; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000041e413: mov dword ptr [rax + 0x10], ecx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x0000000000425cbd: mov dword ptr [rax + 0x10], ecx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044c5d6: mov dword ptr [rax + 0x124], ebx; lea eax, [rdx + rbx]; mov dword ptr [rsp + 8], eax; ret; 
0x000000000042d673: mov dword ptr [rax + 0x1748], ecx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044522e: mov dword ptr [rax + 0x18], ecx; mov rcx, qword ptr [rsp + 0x48]; mov qword ptr [rax + 0x80], rcx; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000409cfd: mov dword ptr [rax + 0x18], ecx; xorps xmm0, xmm0; movups xmmword ptr [rsp + 0xc0], xmm0; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x0000000000430673: mov dword ptr [rax + 0x28], ecx; call 0x63280; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042abfe: mov dword ptr [rax + 0x28], ecx; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000412176: mov dword ptr [rax + 0x30], edx; mov qword ptr [rsp + 0x40], rdi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000461708: mov dword ptr [rax + 0x38], 0; ret; 
0x0000000000443a3b: mov dword ptr [rax + 0x48], 0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000496976: mov dword ptr [rax + 0x48], ecx; mov byte ptr [rax + 0x50], dl; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000042f31b: mov dword ptr [rax + 0x48], ecx; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000493df0: mov dword ptr [rax + 0x49], 0; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004607e3: mov dword ptr [rax + 0x68], ebp; mov r9, qword ptr [r8 + 0x50]; test r9, r9; je 0x607f4; call 0x35860; ret; 
0x0000000000448fa5: mov dword ptr [rax + 0x68], ecx; ret; 
0x0000000000445237: mov dword ptr [rax + 0x80], ecx; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x000000000042dc04: mov dword ptr [rax + 0xa0], ecx; nop; mov qword ptr [rdx], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000444b2c: mov dword ptr [rax + 0xa8], ecx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040d6d2: mov dword ptr [rax + 0xa], ecx; ret; 
0x000000000042c747: mov dword ptr [rax + 8], ebx; sub qword ptr [rax + 0x18], rsi; mov qword ptr [rsp + 0x18], rdi; mov qword ptr [rsp + 0x20], r8; ret; 
0x00000000004049a2: mov dword ptr [rax + 8], ecx; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000045c2d3: mov dword ptr [rax + 8], ecx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; nop; ret; 
0x0000000000493cdb: mov dword ptr [rax + 8], esi; mov byte ptr [rdx + rcx], bl; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000447f52: mov dword ptr [rax + rcx + 0x460], edx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042a16c: mov dword ptr [rax + rcx*8], 0xffffffff; inc rcx; cmp rcx, 8; jl 0x2a169; ret; 
0x00000000004047d2: mov dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x68; add rsp, 0x70; ret; 
0x000000000040a8ee: mov dword ptr [rax - 0x7c], 0x48e374ff; mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040a94a: mov dword ptr [rax - 0x7c], 0x48e574ff; mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000442fbf: mov dword ptr [rax], 0; mov dword ptr [rsp + 0x20], 0x7fffffff; ret; 
0x0000000000464905: mov dword ptr [rax], 0; mov edi, 0; mov eax, 0x3c; syscall; 
0x0000000000431ec8: mov dword ptr [rax], 0; mov rbp, qword ptr [rsp + 0xb8]; add rsp, 0xc0; ret; 
0x00000000004023bb: mov dword ptr [rax], 0xffffffff; ret; 
0x0000000000418c77: mov dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; cmp al, 0x24; dec dword ptr [rdi]; xchg eax, ebp; ret; 
0x0000000000432f79: mov dword ptr [rax], eax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000414fb3: mov dword ptr [rax], ecx; mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004023c9: mov dword ptr [rax], edi; ret; 
0x0000000000442fd8: mov dword ptr [rax], edx; mov dword ptr [rsp + 0x20], ebx; ret; 
0x00000000004023f1: mov dword ptr [rax], edx; ret; 
0x0000000000402471: mov dword ptr [rax], edx; vzeroupper; ret; 
0x00000000004615c2: mov dword ptr [rbx + 0x18], 0; mov qword ptr [rbx + 0x30], 0; mov rbx, qword ptr [rbx + 8]; jmp rbx; 
0x00000000004615ba: mov dword ptr [rbx + 0x20], 0; mov qword ptr [rbx + 0x18], 0; mov qword ptr [rbx + 0x30], 0; mov rbx, qword ptr [rbx + 8]; jmp rbx; 
0x00000000004615ca: mov dword ptr [rbx + 0x30], 0; mov rbx, qword ptr [rbx + 8]; jmp rbx; 
0x00000000004734d4: mov dword ptr [rbx + 0x320], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042c88a: mov dword ptr [rbx + 8], edi; sub qword ptr [rbx + 0x18], r8; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000420e7d: mov dword ptr [rbx + rax + 0x28], ecx; inc qword ptr [rdx + 0x140]; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048b531: mov dword ptr [rbx + rbp*8 + 8], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048b52d: mov dword ptr [rbx + rbp*8], edx; mov qword ptr [rbx + r13*8 + 8], r8; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000436b63: mov dword ptr [rbx + rcx*4 + 0x44], 0x89445424; ret 0x8b48; 
0x000000000047d899: mov dword ptr [rbx], 0x401f0f00; add byte ptr [rax + 0x39], cl; ret 0x7a75; 
0x00000000004616d9: mov dword ptr [rbx], edx; mov rsp, rbx; mov rdx, rdi; mov rdi, qword ptr [rdi]; call rdi; 
0x000000000040c373: mov dword ptr [rcx + 0x10], 0xfffffade; mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000040f2ed: mov dword ptr [rcx + 0x10], eax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000412076: mov dword ptr [rcx + 0x40], eax; ret; 
0x000000000043c1cf: mov dword ptr [rcx + 0x48], eax; cmp qword ptr [rcx + 0x50], 0; jne 0x3c1da; ret; 
0x0000000000446ded: mov dword ptr [rcx + 0x80], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045aa2f: mov dword ptr [rcx + 0xa0], edx; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000040da51: mov dword ptr [rcx + 0xc], eax; mov qword ptr [rsp + 0x20], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042314f: mov dword ptr [rcx + 8], eax; cmp dword ptr [rip + 0x16330b], 1; je 0x23165; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000486e2a: mov dword ptr [rcx + 8], eax; mov rax, qword ptr [rsp + 0x70]; mov rax, qword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x78]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000422ba5: mov dword ptr [rcx + 8], eax; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000425dbc: mov dword ptr [rcx + 8], ebx; mov rcx, qword ptr [rax]; mov qword ptr [rdx], rcx; xorps xmm0, xmm0; movups xmmword ptr [rax], xmm0; ret; 
0x000000000042c733: mov dword ptr [rcx + rdx + 8], eax; sub qword ptr [rax + 0x18], r9; mov qword ptr [rsp + 0x18], r8; mov qword ptr [rsp + 0x20], rbx; ret; 
0x0000000000422b4e: mov dword ptr [rcx + rdx], 0xdeadbeef; add rdx, 4; cmp rax, rdx; ja 0x22b4e; ret; 
0x0000000000425cba: mov dword ptr [rcx], eax; mov qword ptr [rax + 0x10], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045ae11: mov dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045a350: mov dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045a283: mov dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000045c110: mov dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000045e0b1: mov dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000401fd6: mov dword ptr [rcx], eax; ret; 
0x0000000000483c8a: mov dword ptr [rdi + 8], eax; mov qword ptr [rsp + 0x50], rdi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000049455d: mov dword ptr [rdi + 8], ecx; mov byte ptr [rbx + rax], 0x3f; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000495a4d: mov dword ptr [rdi + 8], ecx; mov byte ptr [rdx + rax], 0x7d; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x000000000045e63d: mov dword ptr [rdi + 8], ecx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000420bd2: mov dword ptr [rdi + rax*8 + 0x20], edx; inc qword ptr [rdi + 0x10]; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000463f63: mov dword ptr [rdi + rbx - 2], eax; ret; 
0x0000000000463f6a: mov dword ptr [rdi + rbx - 4], eax; ret; 
0x000000000046416a: mov dword ptr [rdi + rbx - 4], ecx; ret; 
0x0000000000463f77: mov dword ptr [rdi + rbx - 8], eax; ret; 
0x0000000000464182: mov dword ptr [rdi + rbx - 8], ecx; ret; 
0x000000000046415c: mov dword ptr [rdi], eax; mov byte ptr [rdi + 2], cl; ret; 
0x0000000000463f68: mov dword ptr [rdi], eax; mov dword ptr [rdi + rbx - 4], eax; ret; 
0x0000000000464168: mov dword ptr [rdi], eax; mov dword ptr [rdi + rbx - 4], ecx; ret; 
0x000000000045e63a: mov dword ptr [rdi], eax; mov qword ptr [rdi + 8], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000463f74: mov dword ptr [rdi], eax; mov qword ptr [rdi + rbx - 8], rax; ret; 
0x000000000046417f: mov dword ptr [rdi], eax; mov qword ptr [rdi + rbx - 8], rcx; ret; 
0x000000000043d58b: mov dword ptr [rdi], eax; mov qword ptr [rsp + 0x3e8], rdi; mov rbp, qword ptr [rsp + 0x3d0]; add rsp, 0x3d8; ret; 
0x000000000040ddb5: mov dword ptr [rdi], eax; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004717fd: mov dword ptr [rdi], eax; mov rax, qword ptr [rsp + 0x28]; mov qword ptr [rip + 0xe534d], rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000484524: mov dword ptr [rdi], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004842b8: mov dword ptr [rdi], eax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000491307: mov dword ptr [rdi], eax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000045a734: mov dword ptr [rdi], eax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; nop; ret; 
0x000000000045a5cc: mov dword ptr [rdi], eax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x00000000004914b4: mov dword ptr [rdi], eax; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; nop; ret; 
0x000000000046331d: mov dword ptr [rdi], eax; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000493806: mov dword ptr [rdi], eax; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x0000000000463f60: mov dword ptr [rdi], eax; mov word ptr [rdi + rbx - 2], ax; ret; 
0x0000000000463f70: mov dword ptr [rdi], eax; ret; 
0x00000000004946c7: mov dword ptr [rdi], ebx; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000496b95: mov dword ptr [rdi], ebx; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x00000000004954d7: mov dword ptr [rdi], ebx; movzx eax, byte ptr [rsp + 0x47]; mov byte ptr [rdi + 0x4b], al; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000040d833: mov dword ptr [rdi], edx; mov qword ptr [rsp + 0x78], rdx; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x00000000004987a3: mov dword ptr [rdi], edx; mov rbp, qword ptr [rsp + 0x1c8]; add rsp, 0x1d0; ret; 
0x0000000000495b63: mov dword ptr [rdi], edx; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x0000000000437fc5: mov dword ptr [rdx + 0x10], 0xfffffade; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000451d61: mov dword ptr [rdx + 0x10], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000444143: mov dword ptr [rdx + 0x10], ecx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000424a35: mov dword ptr [rdx + 0x1228], eax; mov qword ptr [rsp + 0x38], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040ee4e: mov dword ptr [rdx + 0x58], eax; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000045dc04: mov dword ptr [rdx + 8], ecx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000448082: mov dword ptr [rdx + rax + 0x460], ecx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000450fe5: mov dword ptr [rdx + rax*8], ebx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004238f0: mov dword ptr [rdx + rax*8], ecx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000415110: mov dword ptr [rdx + rcx*8 + 0x28], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004651f7: mov dword ptr [rdx], 0x48000010; mov eax, 0x9e; syscall; 
0x0000000000434ec2: mov dword ptr [rdx], 0x6c8b4800; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000434f79: mov dword ptr [rdx], 0x6c8b4800; and al, 0x20; add rsp, 0x28; ret; 
0x00000000004385c8: mov dword ptr [rdx], 0x6c8b4800; and al, 0x40; add rsp, 0x48; ret; 
0x0000000000434b57: mov dword ptr [rdx], eax; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x48; add rsp, 0x50; ret; 
0x000000000045dc01: mov dword ptr [rdx], eax; mov qword ptr [rdx + 8], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042dc0c: mov dword ptr [rdx], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000425dc3: mov dword ptr [rdx], ecx; xorps xmm0, xmm0; movups xmmword ptr [rax], xmm0; ret; 
0x000000000043098a: mov dword ptr [rip + 0x126130], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042f8ab: mov dword ptr [rip + 0x127267], eax; mov rbp, qword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x000000000045e453: mov dword ptr [rip + 0x12808f], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045b277: mov dword ptr [rip + 0x12be0b], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000442f2b: mov dword ptr [rip + 0x143563], eax; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000040634b: mov dword ptr [rip + 0x1534c7], eax; xor eax, eax; xchg dword ptr [rdx], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042e088: mov dword ptr [rip + 0x1584ea], eax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000041f1b1: mov dword ptr [rip + 0x15e7f9], edi; ret; 
0x000000000041b0e8: mov dword ptr [rip + 0x16bede], eax; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000041ab48: mov dword ptr [rip + 0x16c4f2], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000041a469: mov dword ptr [rip + 0x16ee29], eax; cmp byte ptr [rip + 0x14329a], 0; jne 0x1a488; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x00000000004171ca: mov dword ptr [rip + 0x16fe40], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000401f0a: mov dword ptr [rip + 0x184584], 0x3f; ret; 
0x000000000042daa0: mov dword ptr [rip + 0x74c08500], edx; or cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x000000000049abc8: mov dword ptr [rip + 0xbbe92], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000049a7ef: mov dword ptr [rip + 0xbc473], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048df05: mov dword ptr [rip + 0xc21bd], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048e535: mov dword ptr [rip + 0xc5655], eax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000490f6e: mov dword ptr [rip + 0xc5ea4], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000490beb: mov dword ptr [rip + 0xc62ff], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048fceb: mov dword ptr [rip + 0xc7017], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048d1c9: mov dword ptr [rip + 0xc9ab9], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048745d: mov dword ptr [rip + 0xcf61d], ecx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000472ba0: mov dword ptr [rip + 0xe4002], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004722ed: mov dword ptr [rip + 0xe4955], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000471805: mov dword ptr [rip + 0xe534d], eax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000046c623: mov dword ptr [rip + 0xea6ff], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046c25c: mov dword ptr [rip + 0xea8d6], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000469625: mov dword ptr [rip + 0xed62d], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045eaea: mov dword ptr [rip + 0xf8000], eax; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000048fe03: mov dword ptr [rsi + 0xc], ebp; add byte ptr [rax - 0x75], cl; or eax, 0xc6e8a; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x00000000004737e2: mov dword ptr [rsi + 8], edx; mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000430c8b: mov dword ptr [rsi + rcx*8], eax; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000407750: mov dword ptr [rsp + 0x100], eax; mov qword ptr [rsp + 0x108], rcx; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x0000000000477681: mov dword ptr [rsp + 0x100], ecx; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x0000000000497ddb: mov dword ptr [rsp + 0x100], ecx; mov rdx, qword ptr [rax + 0x48]; mov qword ptr [rsp], rcx; call rdx; 
0x0000000000475d23: mov dword ptr [rsp + 0x100], edi; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000045fde5: mov dword ptr [rsp + 0x108], eax; mov rbp, qword ptr [rsp + 0xd0]; add rsp, 0xd8; ret; 
0x0000000000407758: mov dword ptr [rsp + 0x108], ecx; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000040a72f: mov dword ptr [rsp + 0x10], 0; ret; 
0x000000000042eddc: mov dword ptr [rsp + 0x10], 0x80; call 0x2ee20; mov rbp, qword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x0000000000403885: mov dword ptr [rsp + 0x10], 0x80; call 0x2f0e0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043400d: mov dword ptr [rsp + 0x10], 0xe; call 0x33be0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045d452: mov dword ptr [rsp + 0x10], 0xffffffff; call 0x386a0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000497c0b: mov dword ptr [rsp + 0x10], 5; call 0x91760; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000045e836: mov dword ptr [rsp + 0x10], eax; call 0x11cc0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000423de2: mov dword ptr [rsp + 0x10], eax; call 0x26d60; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042ab02: mov dword ptr [rsp + 0x10], eax; call 0x2a180; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041fd48: mov dword ptr [rsp + 0x10], eax; call 0x2c220; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000456767: mov dword ptr [rsp + 0x10], eax; call 0x34660; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000438d80: mov dword ptr [rsp + 0x10], eax; call 0x386a0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000460255: mov dword ptr [rsp + 0x10], eax; call 0x43640; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000411e0b: mov dword ptr [rsp + 0x10], eax; call 0x64040; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004052ec: mov dword ptr [rsp + 0x10], eax; call 0x64040; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000482daa: mov dword ptr [rsp + 0x10], eax; call 0x6b1a0; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x000000000048ac2a: mov dword ptr [rsp + 0x10], eax; call 0x8ac60; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048abb1: mov dword ptr [rsp + 0x10], eax; call rdx; 
0x000000000048af4d: mov dword ptr [rsp + 0x10], eax; call rsi; 
0x0000000000401c2a: mov dword ptr [rsp + 0x10], eax; mov dword ptr [rsp + 0x14], ebx; mov dword ptr [rsp + 0x18], ecx; mov dword ptr [rsp + 0x1c], edx; ret; 
0x0000000000443111: mov dword ptr [rsp + 0x10], eax; mov qword ptr [rsp + 0x18], 0x13; ret; 
0x000000000048e5e8: mov dword ptr [rsp + 0x10], eax; mov qword ptr [rsp + 0x18], 0xb; ret; 
0x0000000000457ab1: mov dword ptr [rsp + 0x10], eax; mov qword ptr [rsp + 0x18], rcx; ret; 
0x00000000004296f0: mov dword ptr [rsp + 0x10], eax; mov rax, qword ptr [rsp + 0x90]; lea rdx, [rsp + 0x90]; call rax; 
0x00000000004508a2: mov dword ptr [rsp + 0x10], eax; mov rdx, qword ptr [rsp + 0x38]; mov rax, qword ptr [rdx]; call rax; 
0x000000000046bf17: mov dword ptr [rsp + 0x10], eax; nop dword ptr [rax + rax]; call 0x6ba80; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000042f57a: mov dword ptr [rsp + 0x10], eax; nop; call 0x64b00; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046725b: mov dword ptr [rsp + 0x10], eax; nop; ret; 
0x0000000000401e52: mov dword ptr [rsp + 0x10], eax; ret; 
0x00000000004726f7: mov dword ptr [rsp + 0x10], ebx; mov qword ptr [rsp + 0x18], rdi; call rax; 
0x00000000004941e0: mov dword ptr [rsp + 0x10], ebx; mov qword ptr [rsp + 0x18], rsi; call rax; 
0x000000000045c5c7: mov dword ptr [rsp + 0x10], ebx; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000472611: mov dword ptr [rsp + 0x10], ebx; mov rdx, qword ptr [rsp + 0x68]; mov qword ptr [rsp + 0x18], rdx; nop; call rax; 
0x00000000004496be: mov dword ptr [rsp + 0x10], ebx; ret; 
0x000000000043454f: mov dword ptr [rsp + 0x10], ecx; call 0x33be0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000043444f: mov dword ptr [rsp + 0x10], ecx; call 0x33be0; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000435849: mov dword ptr [rsp + 0x10], ecx; call 0x64980; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048aab1: mov dword ptr [rsp + 0x10], ecx; call rax; 
0x000000000048ae67: mov dword ptr [rsp + 0x10], ecx; call rsi; 
0x0000000000493f6e: mov dword ptr [rsp + 0x10], ecx; mov byte ptr [rsp + 0x18], al; ret; 
0x00000000004971d4: mov dword ptr [rsp + 0x10], ecx; mov ecx, dword ptr [rsp + 0x278]; mov dword ptr [rsp + 0x18], ecx; call rax; 
0x000000000042f13c: mov dword ptr [rsp + 0x10], ecx; mov qword ptr [rsp + 0x18], rax; call 0x43000; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000432241: mov dword ptr [rsp + 0x10], ecx; mov qword ptr [rsp + 0x18], rax; ret; 
0x000000000042954a: mov dword ptr [rsp + 0x10], ecx; mov rax, qword ptr [rip + 0x9ce4b]; lea rdx, [rip + 0x9ce44]; call rax; 
0x000000000044c4fe: mov dword ptr [rsp + 0x10], ecx; mov rax, qword ptr [rsp + 0x20]; lea rdx, [rsp + 0x20]; call rax; 
0x000000000042978f: mov dword ptr [rsp + 0x10], ecx; mov rax, qword ptr [rsp + 0x90]; lea rdx, [rsp + 0x90]; call rax; 
0x0000000000445e18: mov dword ptr [rsp + 0x10], ecx; mov rbx, qword ptr [rdx]; nop; call rbx; 
0x000000000045c5e9: mov dword ptr [rsp + 0x10], ecx; mov rdx, qword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000492718: mov dword ptr [rsp + 0x10], ecx; nop dword ptr [rax]; call 0x91760; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000492f9a: mov dword ptr [rsp + 0x10], ecx; nop; call 0x91760; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000048aebb: mov dword ptr [rsp + 0x10], ecx; nop; call rdx; 
0x0000000000423b54: mov dword ptr [rsp + 0x10], ecx; ret; 
0x0000000000445d4c: mov dword ptr [rsp + 0x10], edi; call 0x44a80; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000048b06b: mov dword ptr [rsp + 0x10], edi; call rdx; 
0x00000000004342ac: mov dword ptr [rsp + 0x10], edx; call 0x33be0; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x00000000004490f6: mov dword ptr [rsp + 0x10], edx; call 0x52d00; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000443134: mov dword ptr [rsp + 0x10], edx; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000464e2d: mov dword ptr [rsp + 0x10], edx; mov qword ptr [rsp + 8], rsi; mov qword ptr [rsp], rdi; lea rax, [rip - 0x1fe01]; call rax; 
0x000000000040a729: mov dword ptr [rsp + 0x10], edx; ret; 
0x000000000048ab1e: mov dword ptr [rsp + 0x10], esi; call rax; 
0x000000000044cfbd: mov dword ptr [rsp + 0x118], eax; mov rbp, qword ptr [rsp + 0xf0]; add rsp, 0xf8; ret; 
0x0000000000406dd6: mov dword ptr [rsp + 0x120], eax; mov qword ptr [rsp + 0x128], rcx; mov rbp, qword ptr [rsp + 0x108]; add rsp, 0x110; ret; 
0x0000000000480a7f: mov dword ptr [rsp + 0x128], eax; mov qword ptr [rsp + 0x130], rcx; mov rbp, qword ptr [rsp + 0x110]; add rsp, 0x118; ret; 
0x000000000048bfc6: mov dword ptr [rsp + 0x128], eax; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x0000000000406dde: mov dword ptr [rsp + 0x128], ecx; mov rbp, qword ptr [rsp + 0x108]; add rsp, 0x110; ret; 
0x0000000000480a87: mov dword ptr [rsp + 0x130], ecx; mov rbp, qword ptr [rsp + 0x110]; add rsp, 0x118; ret; 
0x00000000004286de: mov dword ptr [rsp + 0x140], ecx; mov qword ptr [rsp + 0x148], rax; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x0000000000428646: mov dword ptr [rsp + 0x148], eax; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x0000000000401c2e: mov dword ptr [rsp + 0x14], ebx; mov dword ptr [rsp + 0x18], ecx; mov dword ptr [rsp + 0x1c], edx; ret; 
0x0000000000496191: mov dword ptr [rsp + 0x14], ecx; call 0x94ee0; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000047fcc0: mov dword ptr [rsp + 0x168], eax; mov rax, qword ptr [rsp + 0xa0]; mov qword ptr [rsp + 0x170], rax; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x000000000047fcd0: mov dword ptr [rsp + 0x170], eax; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x000000000044c27d: mov dword ptr [rsp + 0x18], 0; mov byte ptr [rsp + 0x20], 0; ret; 
0x00000000004060d4: mov dword ptr [rsp + 0x18], 0; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000421100: mov dword ptr [rsp + 0x18], 0; ret; 
0x0000000000443116: mov dword ptr [rsp + 0x18], 0x13; ret; 
0x0000000000493049: mov dword ptr [rsp + 0x18], 0x44; call 0x91400; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; nop; ret; 
0x000000000048e5ed: mov dword ptr [rsp + 0x18], 0xb; ret; 
0x000000000042a744: mov dword ptr [rsp + 0x18], 0xffffffff; ret; 
0x00000000004487f4: mov dword ptr [rsp + 0x18], eax; call 0x39a0; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000404091: mov dword ptr [rsp + 0x18], eax; call 0x41a0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042f141: mov dword ptr [rsp + 0x18], eax; call 0x43000; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000404b0c: mov dword ptr [rsp + 0x18], eax; call 0x4b20; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044c2cf: mov dword ptr [rsp + 0x18], eax; mov byte ptr [rsp + 0x20], 1; ret; 
0x000000000042c73c: mov dword ptr [rsp + 0x18], eax; mov qword ptr [rsp + 0x20], rbx; ret; 
0x0000000000466e10: mov dword ptr [rsp + 0x18], eax; mov qword ptr [rsp + 0x20], rcx; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000407246: mov dword ptr [rsp + 0x18], eax; mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x20], rax; ret; 
0x000000000044c4b2: mov dword ptr [rsp + 0x18], eax; mov rax, qword ptr [rsp + 0x20]; lea rdx, [rsp + 0x20]; call rax; 
0x0000000000451298: mov dword ptr [rsp + 0x18], eax; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000487732: mov dword ptr [rsp + 0x18], eax; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000040929e: mov dword ptr [rsp + 0x18], eax; ret; 
0x000000000048fa34: mov dword ptr [rsp + 0x18], ebp; lea rbp, [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000404860: mov dword ptr [rsp + 0x18], ebx; call 0x4540; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x000000000045a47c: mov dword ptr [rsp + 0x18], ebx; call 0x4640; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000049395e: mov dword ptr [rsp + 0x18], ebx; call 0x91400; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x00000000004971df: mov dword ptr [rsp + 0x18], ecx; call rax; 
0x0000000000401c32: mov dword ptr [rsp + 0x18], ecx; mov dword ptr [rsp + 0x1c], edx; ret; 
0x0000000000445e7a: mov dword ptr [rsp + 0x18], ecx; mov qword ptr [rsp + 0x20], rax; call 0x3dc80; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000048b2d9: mov dword ptr [rsp + 0x18], ecx; mov qword ptr [rsp + 0x20], rax; call 0x8ab60; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000046595c: mov dword ptr [rsp + 0x18], ecx; mov qword ptr [rsp + 0x20], rax; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000467c92: mov dword ptr [rsp + 0x18], ecx; mov qword ptr [rsp + 0x20], rax; ret; 
0x0000000000405195: mov dword ptr [rsp + 0x18], ecx; mov rdx, qword ptr [rsp + 0x48]; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000409225: mov dword ptr [rsp + 0x18], ecx; ret; 
0x00000000004726fc: mov dword ptr [rsp + 0x18], edi; call rax; 
0x000000000042c74f: mov dword ptr [rsp + 0x18], edi; mov qword ptr [rsp + 0x20], r8; ret; 
0x000000000040427a: mov dword ptr [rsp + 0x18], edi; nop; call 0x4540; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x00000000004927ac: mov dword ptr [rsp + 0x18], edx; call 0x91400; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000049390d: mov dword ptr [rsp + 0x18], edx; call 0x91400; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x0000000000406075: mov dword ptr [rsp + 0x18], edx; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000047261b: mov dword ptr [rsp + 0x18], edx; nop; call rax; 
0x00000000004941e5: mov dword ptr [rsp + 0x18], esi; call rax; 
0x000000000042c0c0: mov dword ptr [rsp + 0x18], esi; ret; 
0x0000000000459e75: mov dword ptr [rsp + 0x18], esp; mov dword ptr [rsp + 0x1c], r15d; mov qword ptr [rsp + 0x20], r9; mov rax, qword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x0000000000459e74: mov dword ptr [rsp + 0x18], r12d; mov dword ptr [rsp + 0x1c], r15d; mov qword ptr [rsp + 0x20], r9; mov rax, qword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x000000000047a41b: mov dword ptr [rsp + 0x1c8], eax; mov rbp, qword ptr [rsp + 0x160]; add rsp, 0x168; ret; 
0x0000000000459f63: mov dword ptr [rsp + 0x1c], eax; mov qword ptr [rsp + 0x20], r9; mov rax, qword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x0000000000459e7a: mov dword ptr [rsp + 0x1c], edi; mov qword ptr [rsp + 0x20], r9; mov rax, qword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x0000000000401c36: mov dword ptr [rsp + 0x1c], edx; ret; 
0x0000000000459e79: mov dword ptr [rsp + 0x1c], r15d; mov qword ptr [rsp + 0x20], r9; mov rax, qword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x0000000000459f62: mov dword ptr [rsp + 0x1c], r8d; mov qword ptr [rsp + 0x20], r9; mov rax, qword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x0000000000474856: mov dword ptr [rsp + 0x1d8], eax; mov qword ptr [rsp + 0x1e0], rcx; mov rbp, qword ptr [rsp + 0x188]; add rsp, 0x190; ret; 
0x0000000000474710: mov dword ptr [rsp + 0x1d8], ecx; mov qword ptr [rsp + 0x1e0], rdx; mov rbp, qword ptr [rsp + 0x188]; add rsp, 0x190; ret; 
0x00000000004745ce: mov dword ptr [rsp + 0x1e0], eax; mov rbp, qword ptr [rsp + 0x188]; add rsp, 0x190; ret; 
0x000000000047485e: mov dword ptr [rsp + 0x1e0], ecx; mov rbp, qword ptr [rsp + 0x188]; add rsp, 0x190; ret; 
0x0000000000481395: mov dword ptr [rsp + 0x1e0], edx; mov qword ptr [rsp + 0x1e8], rbx; mov qword ptr [rsp + 0x1f0], rsi; mov rbp, qword ptr [rsp + 0x1b0]; add rsp, 0x1b8; ret; 
0x0000000000474c49: mov dword ptr [rsp + 0x1e0], edx; mov rbp, qword ptr [rsp + 0x188]; add rsp, 0x190; nop; ret; 
0x0000000000474718: mov dword ptr [rsp + 0x1e0], edx; mov rbp, qword ptr [rsp + 0x188]; add rsp, 0x190; ret; 
0x000000000048139d: mov dword ptr [rsp + 0x1e8], ebx; mov qword ptr [rsp + 0x1f0], rsi; mov rbp, qword ptr [rsp + 0x1b0]; add rsp, 0x1b8; ret; 
0x00000000004813a5: mov dword ptr [rsp + 0x1f0], esi; mov rbp, qword ptr [rsp + 0x1b0]; add rsp, 0x1b8; ret; 
0x000000000042e95d: mov dword ptr [rsp + 0x2030], edx; mov rbp, qword ptr [rsp + 0x2020]; add rsp, 0x2028; ret; 
0x00000000004096b7: mov dword ptr [rsp + 0x20], 0; nop; ret; 
0x0000000000442fc5: mov dword ptr [rsp + 0x20], 0x7fffffff; ret; 
0x000000000042a9f9: mov dword ptr [rsp + 0x20], 0xffffffff; mov qword ptr [rsp + 0x28], rsi; ret; 
0x00000000004017ec: mov dword ptr [rsp + 0x20], 0xffffffff; ret; 
0x0000000000412c34: mov dword ptr [rsp + 0x20], eax; call 0x12f60; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000445e7f: mov dword ptr [rsp + 0x20], eax; call 0x3dc80; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000048b2de: mov dword ptr [rsp + 0x20], eax; call 0x8ab60; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000044c45a: mov dword ptr [rsp + 0x20], eax; lea rax, [rsp + 0x40]; mov qword ptr [rsp + 0x28], rax; mov rax, qword ptr [rsp + 0x20]; lea rdx, [rsp + 0x20]; call rax; 
0x0000000000464c00: mov dword ptr [rsp + 0x20], eax; mov dword ptr [rsp + 0x28], edx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000441ab2: mov dword ptr [rsp + 0x20], eax; mov qword ptr [rsp + 0x28], rbx; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x00000000004162d3: mov dword ptr [rsp + 0x20], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000465961: mov dword ptr [rsp + 0x20], eax; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000046892d: mov dword ptr [rsp + 0x20], eax; mov rcx, qword ptr [rsp + 0x60]; mov rdx, qword ptr [rcx + 0x38]; mov rbx, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rbx; call rdx; 
0x0000000000407250: mov dword ptr [rsp + 0x20], eax; ret; 
0x00000000004017e6: mov dword ptr [rsp + 0x20], ebx; ret; 
0x00000000004873d7: mov dword ptr [rsp + 0x20], ecx; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000041d493: mov dword ptr [rsp + 0x20], ecx; mov rax, qword ptr [rdx]; call rax; 
0x0000000000459e7f: mov dword ptr [rsp + 0x20], ecx; mov rax, qword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x000000000040da55: mov dword ptr [rsp + 0x20], ecx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000466e15: mov dword ptr [rsp + 0x20], ecx; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000405e3f: mov dword ptr [rsp + 0x20], ecx; mov rdx, qword ptr [rsp + 0x50]; mov rbx, qword ptr [rdx]; call rbx; 
0x00000000004090d7: mov dword ptr [rsp + 0x20], ecx; ret; 
0x000000000042a9db: mov dword ptr [rsp + 0x20], edi; mov qword ptr [rsp + 0x28], rax; ret; 
0x000000000042aa08: mov dword ptr [rsp + 0x20], edi; mov qword ptr [rsp + 0x28], rsi; ret; 
0x0000000000464f93: mov dword ptr [rsp + 0x28], 0; mov qword ptr [rsp + 0x30], rax; ret; 
0x0000000000451a48: mov dword ptr [rsp + 0x28], 0xffffffff; lea rax, [rip + 0x11bd71]; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004994ef: mov dword ptr [rsp + 0x28], eax; call 0x97ca0; mov rbp, qword ptr [rsp + 0x1c8]; add rsp, 0x1d0; ret; 
0x0000000000464fa2: mov dword ptr [rsp + 0x28], eax; mov qword ptr [rsp + 0x30], 0; ret; 
0x0000000000498003: mov dword ptr [rsp + 0x28], eax; mov qword ptr [rsp + 0x30], rcx; call 0x95800; mov rbp, qword ptr [rsp + 0x1c8]; add rsp, 0x1d0; ret; 
0x000000000048df84: mov dword ptr [rsp + 0x28], eax; mov qword ptr [rsp + 0x30], rdx; mov qword ptr [rsp + 0x38], 0; call 0x5f320; ret; 
0x0000000000434741: mov dword ptr [rsp + 0x28], eax; mov qword ptr [rsp], rax; mov rcx, qword ptr [rip + 0x91df0]; lea rdx, [rip + 0x91de9]; call rcx; 
0x000000000044c464: mov dword ptr [rsp + 0x28], eax; mov rax, qword ptr [rsp + 0x20]; lea rdx, [rsp + 0x20]; call rax; 
0x000000000040d0de: mov dword ptr [rsp + 0x28], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004235eb: mov dword ptr [rsp + 0x28], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042dea6: mov dword ptr [rsp + 0x28], eax; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000042a9e0: mov dword ptr [rsp + 0x28], eax; ret; 
0x0000000000441ab7: mov dword ptr [rsp + 0x28], ebx; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000048aaac: mov dword ptr [rsp + 0x28], ecx; mov qword ptr [rsp + 0x10], rcx; call rax; 
0x000000000046744a: mov dword ptr [rsp + 0x28], ecx; mov qword ptr [rsp + 0x30], rax; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046772d: mov dword ptr [rsp + 0x28], ecx; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; nop; ret; 
0x000000000040b049: mov dword ptr [rsp + 0x28], ecx; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000041d48e: mov dword ptr [rsp + 0x28], edi; mov qword ptr [rsp + 0x20], rcx; mov rax, qword ptr [rdx]; call rax; 
0x0000000000463044: mov dword ptr [rsp + 0x28], edi; mov rdi, rbx; mov rcx, rbx; call rax; 
0x0000000000431459: mov dword ptr [rsp + 0x28], edx; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000473706: mov dword ptr [rsp + 0x28], edx; mov qword ptr [rsp + 0x30], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000438643: mov dword ptr [rsp + 0x28], edx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000463081: mov dword ptr [rsp + 0x28], edx; mov rdi, rbx; mov rcx, rbx; call rax; 
0x000000000047d986: mov dword ptr [rsp + 0x28], edx; ret; 
0x000000000042aa02: mov dword ptr [rsp + 0x28], esi; ret; 
0x0000000000454eb8: mov dword ptr [rsp + 0x2b0], ebx; mov rbp, qword ptr [rsp + 0x278]; add rsp, 0x280; ret; 
0x0000000000464fa7: mov dword ptr [rsp + 0x30], 0; ret; 
0x00000000004172bb: mov dword ptr [rsp + 0x30], 0xffffffff; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040b069: mov dword ptr [rsp + 0x30], 4; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046744f: mov dword ptr [rsp + 0x30], eax; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042bdc9: mov dword ptr [rsp + 0x30], eax; mov qword ptr [rsp + 0x38], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000467699: mov dword ptr [rsp + 0x30], eax; mov qword ptr [rsp + 0x38], rbx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000456e4f: mov dword ptr [rsp + 0x30], eax; mov qword ptr [rsp + 0x38], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000408ee8: mov dword ptr [rsp + 0x30], eax; mov qword ptr [rsp + 0x38], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000456e3b: mov dword ptr [rsp + 0x30], eax; mov qword ptr [rsp + 0x38], rdx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000467732: mov dword ptr [rsp + 0x30], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; nop; ret; 
0x000000000040b04e: mov dword ptr [rsp + 0x30], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004066e0: mov dword ptr [rsp + 0x30], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004172ad: mov dword ptr [rsp + 0x30], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046896b: mov dword ptr [rsp + 0x30], eax; mov rcx, qword ptr [rsp + 0x60]; mov rcx, qword ptr [rcx + 0x60]; mov rdx, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000464f9c: mov dword ptr [rsp + 0x30], eax; ret; 
0x000000000042cd76: mov dword ptr [rsp + 0x30], ebx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000498008: mov dword ptr [rsp + 0x30], ecx; call 0x95800; mov rbp, qword ptr [rsp + 0x1c8]; add rsp, 0x1d0; ret; 
0x000000000043843e: mov dword ptr [rsp + 0x30], ecx; lea rax, [rip + 0x14e0bf]; xchg qword ptr [rax], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004678b6: mov dword ptr [rsp + 0x30], ecx; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000408ec6: mov dword ptr [rsp + 0x30], ecx; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046cec7: mov dword ptr [rsp + 0x30], ecx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048df89: mov dword ptr [rsp + 0x30], edx; mov qword ptr [rsp + 0x38], 0; call 0x5f320; ret; 
0x00000000004204b0: mov dword ptr [rsp + 0x30], edx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004148d9: mov dword ptr [rsp + 0x30], edx; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000045413f: mov dword ptr [rsp + 0x320], eax; mov rbp, qword ptr [rsp + 0x2c0]; add rsp, 0x2c8; ret; 
0x000000000045343a: mov dword ptr [rsp + 0x320], edi; mov rbp, qword ptr [rsp + 0x2c0]; add rsp, 0x2c8; ret; 
0x000000000048df8e: mov dword ptr [rsp + 0x38], 0; call 0x5f320; ret; 
0x000000000042da4b: mov dword ptr [rsp + 0x38], 0xffffffff; mov dword ptr [rsp + 0x3c], 0xffffffff; mov dword ptr [rsp + 0x40], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048df79: mov dword ptr [rsp + 0x38], eax; call 0x5f320; ret; 
0x000000000044f12c: mov dword ptr [rsp + 0x38], eax; mov dword ptr [rsp + 0x3c], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045c546: mov dword ptr [rsp + 0x38], eax; mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048fa73: mov dword ptr [rsp + 0x38], eax; mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044dd31: mov dword ptr [rsp + 0x38], eax; mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000464db0: mov dword ptr [rsp + 0x38], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000402819: mov dword ptr [rsp + 0x38], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000408ecb: mov dword ptr [rsp + 0x38], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000414fbb: mov dword ptr [rsp + 0x38], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045d0e3: mov dword ptr [rsp + 0x38], eax; movups xmmword ptr [rsp + 0x40], xmm0; call 0x52f40; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000042bdce: mov dword ptr [rsp + 0x38], ebx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046769e: mov dword ptr [rsp + 0x38], ebx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045951f: mov dword ptr [rsp + 0x38], ecx; add rax, 4; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004735bd: mov dword ptr [rsp + 0x38], ecx; mov byte ptr [rsp + 0x40], sil; mov qword ptr [rsp + 0x48], rbx; mov qword ptr [rsp + 0x50], rcx; mov byte ptr [rsp + 0x58], sil; ret; 
0x000000000042d9de: mov dword ptr [rsp + 0x38], ecx; mov dword ptr [rsp + 0x3c], edx; mov dword ptr [rsp + 0x40], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000046064d: mov dword ptr [rsp + 0x38], ecx; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x000000000044dcfc: mov dword ptr [rsp + 0x38], ecx; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000441719: mov dword ptr [rsp + 0x38], ecx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045efd2: mov dword ptr [rsp + 0x38], ecx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; nop; ret; 
0x0000000000456e54: mov dword ptr [rsp + 0x38], ecx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000408eed: mov dword ptr [rsp + 0x38], ecx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000469579: mov dword ptr [rsp + 0x38], edi; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000456e40: mov dword ptr [rsp + 0x38], edx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044f12b: mov dword ptr [rsp + 0x38], r8d; mov dword ptr [rsp + 0x3c], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000441718: mov dword ptr [rsp + 0x38], r9d; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042da53: mov dword ptr [rsp + 0x3c], 0xffffffff; mov dword ptr [rsp + 0x40], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044f130: mov dword ptr [rsp + 0x3c], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042d9e2: mov dword ptr [rsp + 0x3c], edx; mov dword ptr [rsp + 0x40], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000043d31d: mov dword ptr [rsp + 0x3e8], 0; mov rbp, qword ptr [rsp + 0x3d0]; add rsp, 0x3d8; ret; 
0x000000000043d58e: mov dword ptr [rsp + 0x3e8], edi; mov rbp, qword ptr [rsp + 0x3d0]; add rsp, 0x3d8; ret; 
0x000000000046c8b6: mov dword ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044eefc: mov dword ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000459591: mov dword ptr [rsp + 0x40], 1; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004595d3: mov dword ptr [rsp + 0x40], 2; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000459631: mov dword ptr [rsp + 0x40], 3; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045969d: mov dword ptr [rsp + 0x40], 4; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040fec0: mov dword ptr [rsp + 0x40], eax; mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041098f: mov dword ptr [rsp + 0x40], eax; mov byte ptr [rsp + 0x48], 1; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045df8e: mov dword ptr [rsp + 0x40], eax; mov byte ptr [rsp + 0x48], cl; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; nop; ret; 
0x000000000045dfde: mov dword ptr [rsp + 0x40], eax; mov byte ptr [rsp + 0x48], cl; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048af9d: mov dword ptr [rsp + 0x40], eax; mov qword ptr [rsp + 0x10], rax; call rdx; 
0x0000000000482174: mov dword ptr [rsp + 0x40], eax; mov qword ptr [rsp + 0x48], 0xe; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000429970: mov dword ptr [rsp + 0x40], eax; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004675cd: mov dword ptr [rsp + 0x40], eax; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; nop; ret; 
0x0000000000466b40: mov dword ptr [rsp + 0x40], eax; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000482159: mov dword ptr [rsp + 0x40], eax; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048dff3: mov dword ptr [rsp + 0x40], eax; mov qword ptr [rsp + 0x48], rdx; mov qword ptr [rsp + 0x50], 0; call 0x5f320; ret; 
0x000000000040d46c: mov dword ptr [rsp + 0x40], eax; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000048f137: mov dword ptr [rsp + 0x40], eax; mov rax, qword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004291e0: mov dword ptr [rsp + 0x40], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040fc0d: mov dword ptr [rsp + 0x40], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000402652: mov dword ptr [rsp + 0x40], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x00000000004024e4: mov dword ptr [rsp + 0x40], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042d9e6: mov dword ptr [rsp + 0x40], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000041212f: mov dword ptr [rsp + 0x40], ebx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045ed48: mov dword ptr [rsp + 0x40], ecx; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042be8b: mov dword ptr [rsp + 0x40], ecx; mov qword ptr [rsp + 0x48], rdi; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046c07b: mov dword ptr [rsp + 0x40], ecx; mov qword ptr [rsp + 0x48], rdx; mov byte ptr [rsp + 0x50], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045c54b: mov dword ptr [rsp + 0x40], ecx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004737e6: mov dword ptr [rsp + 0x40], ecx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000402622: mov dword ptr [rsp + 0x40], ecx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000041217a: mov dword ptr [rsp + 0x40], edi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000467366: mov dword ptr [rsp + 0x40], edx; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004121ca: mov dword ptr [rsp + 0x40], edx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000427cb2: mov dword ptr [rsp + 0x40], esi; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x0000000000474fe1: mov dword ptr [rsp + 0x440], eax; mov qword ptr [rsp + 0x448], rcx; mov rbp, qword ptr [rsp + 0x3e8]; add rsp, 0x3f0; nop; ret; 
0x0000000000474fe9: mov dword ptr [rsp + 0x448], ecx; mov rbp, qword ptr [rsp + 0x3e8]; add rsp, 0x3f0; nop; ret; 
0x000000000041267f: mov dword ptr [rsp + 0x44], eax; lea rax, [rcx + 0x1fffff]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000452023: mov dword ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042998d: mov dword ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000440fcc: mov dword ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000482179: mov dword ptr [rsp + 0x48], 0xe; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000450635: mov dword ptr [rsp + 0x48], 0xffffffff; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000046bd78: mov dword ptr [rsp + 0x48], eax; mov byte ptr [rsp + 0x50], 1; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000047361b: mov dword ptr [rsp + 0x48], eax; mov qword ptr [rsp + 0x50], 0; mov byte ptr [rsp + 0x58], dl; ret; 
0x0000000000484d0d: mov dword ptr [rsp + 0x48], eax; mov qword ptr [rsp + 0x50], 0x16; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004067a5: mov dword ptr [rsp + 0x48], eax; mov qword ptr [rsp + 0x50], 0x1d; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044b630: mov dword ptr [rsp + 0x48], eax; mov qword ptr [rsp + 0x50], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040bfad: mov dword ptr [rsp + 0x48], eax; mov qword ptr [rsp + 0x50], rcx; mov byte ptr [rsp + 0x58], dl; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044bd44: mov dword ptr [rsp + 0x48], eax; mov qword ptr [rsp + 0x50], rcx; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044be46: mov dword ptr [rsp + 0x48], eax; mov qword ptr [rsp + 0x50], rcx; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048fafc: mov dword ptr [rsp + 0x48], eax; mov qword ptr [rsp + 0x50], rcx; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048ed7f: mov dword ptr [rsp + 0x48], eax; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048ec37: mov dword ptr [rsp + 0x48], eax; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000406810: mov dword ptr [rsp + 0x48], eax; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040a065: mov dword ptr [rsp + 0x48], eax; mov rax, qword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040a3cb: mov dword ptr [rsp + 0x48], eax; mov rax, qword ptr [rsp + 0x40]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000041268b: mov dword ptr [rsp + 0x48], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000447272: mov dword ptr [rsp + 0x48], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x000000000040a26d: mov dword ptr [rsp + 0x48], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004850b2: mov dword ptr [rsp + 0x48], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; nop; ret; 
0x0000000000403de2: mov dword ptr [rsp + 0x48], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000043ccff: mov dword ptr [rsp + 0x48], eax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000429a5d: mov dword ptr [rsp + 0x48], eax; shl rsi, 0xd; mov qword ptr [rsp + 0x50], rsi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004735c7: mov dword ptr [rsp + 0x48], ebx; mov qword ptr [rsp + 0x50], rcx; mov byte ptr [rsp + 0x58], sil; ret; 
0x000000000042bf53: mov dword ptr [rsp + 0x48], ebx; mov qword ptr [rsp + 0x50], rsi; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000417030: mov dword ptr [rsp + 0x48], ebx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042bf7f: mov dword ptr [rsp + 0x48], ecx; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044e607: mov dword ptr [rsp + 0x48], ecx; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000490c70: mov dword ptr [rsp + 0x48], ecx; mov qword ptr [rsp + 0x50], rdx; mov qword ptr [rsp + 0x58], rbx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040718d: mov dword ptr [rsp + 0x48], ecx; mov qword ptr [rsp + 0x50], rsi; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; nop; ret; 
0x0000000000437a69: mov dword ptr [rsp + 0x48], ecx; mov qword ptr [rsp], rcx; mov rdx, qword ptr [rsp + 0x68]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000429975: mov dword ptr [rsp + 0x48], ecx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004675d2: mov dword ptr [rsp + 0x48], ecx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; nop; ret; 
0x0000000000466b45: mov dword ptr [rsp + 0x48], ecx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000417087: mov dword ptr [rsp + 0x48], ecx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000041276c: mov dword ptr [rsp + 0x48], edi; mov dword ptr [rsp + 0x4c], eax; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042be90: mov dword ptr [rsp + 0x48], edi; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000429948: mov dword ptr [rsp + 0x48], edi; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046c080: mov dword ptr [rsp + 0x48], edx; mov byte ptr [rsp + 0x50], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048dff8: mov dword ptr [rsp + 0x48], edx; mov qword ptr [rsp + 0x50], 0; call 0x5f320; ret; 
0x000000000043f185: mov dword ptr [rsp + 0x48], edx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041279a: mov dword ptr [rsp + 0x4c], eax; mov qword ptr [rsp + 0x50], r9; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000412770: mov dword ptr [rsp + 0x4c], eax; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048dffd: mov dword ptr [rsp + 0x50], 0; call 0x5f320; ret; 
0x0000000000473620: mov dword ptr [rsp + 0x50], 0; mov byte ptr [rsp + 0x58], dl; ret; 
0x0000000000429aac: mov dword ptr [rsp + 0x50], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000415a9d: mov dword ptr [rsp + 0x50], 0; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042f019: mov dword ptr [rsp + 0x50], 0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000484d12: mov dword ptr [rsp + 0x50], 0x16; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004067aa: mov dword ptr [rsp + 0x50], 0x1d; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044b635: mov dword ptr [rsp + 0x50], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048dfe8: mov dword ptr [rsp + 0x50], eax; call 0x5f320; ret; 
0x000000000040a4ba: mov dword ptr [rsp + 0x50], eax; mov byte ptr [rsp + 0x58], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045be4e: mov dword ptr [rsp + 0x50], eax; mov byte ptr [rsp + 0x58], 1; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000047bdae: mov dword ptr [rsp + 0x50], eax; mov qword ptr [rsp + 0x58], 4; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000047be33: mov dword ptr [rsp + 0x50], eax; mov qword ptr [rsp + 0x58], 6; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042a6cb: mov dword ptr [rsp + 0x50], eax; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000412566: mov dword ptr [rsp + 0x50], eax; mov qword ptr [rsp + 0x58], rbx; mov qword ptr [rsp + 0x60], rdx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048d66c: mov dword ptr [rsp + 0x50], eax; mov qword ptr [rsp + 0x58], rbx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004831ca: mov dword ptr [rsp + 0x50], eax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048f07b: mov dword ptr [rsp + 0x50], eax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040ddb8: mov dword ptr [rsp + 0x50], eax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048d2f0: mov dword ptr [rsp + 0x50], eax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000466bf0: mov dword ptr [rsp + 0x50], eax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041fc25: mov dword ptr [rsp + 0x50], eax; mov qword ptr [rsp + 0x58], rdx; mov dword ptr [rsp + 0x60], ecx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048d29a: mov dword ptr [rsp + 0x50], eax; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000484aef: mov dword ptr [rsp + 0x50], eax; mov rax, qword ptr [rsp + 0x38]; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040a3d5: mov dword ptr [rsp + 0x50], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040a06f: mov dword ptr [rsp + 0x50], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040cd1e: mov dword ptr [rsp + 0x50], eax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000415a84: mov dword ptr [rsp + 0x50], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042f02c: mov dword ptr [rsp + 0x50], eax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004417da: mov dword ptr [rsp + 0x50], ebx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040bfb2: mov dword ptr [rsp + 0x50], ecx; mov byte ptr [rsp + 0x58], dl; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004735cc: mov dword ptr [rsp + 0x50], ecx; mov byte ptr [rsp + 0x58], sil; ret; 
0x000000000048309c: mov dword ptr [rsp + 0x50], ecx; mov qword ptr [rsp + 0x58], rax; mov qword ptr [rsp + 0x60], rsi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044e6d8: mov dword ptr [rsp + 0x50], ecx; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000047990d: mov dword ptr [rsp + 0x50], ecx; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x000000000047ad42: mov dword ptr [rsp + 0x50], ecx; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000044bd49: mov dword ptr [rsp + 0x50], ecx; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046c190: mov dword ptr [rsp + 0x50], ecx; mov qword ptr [rsp + 0x58], rdx; mov byte ptr [rsp + 0x60], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041adb5: mov dword ptr [rsp + 0x50], ecx; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000443e6c: mov dword ptr [rsp + 0x50], ecx; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048fb01: mov dword ptr [rsp + 0x50], ecx; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000483df5: mov dword ptr [rsp + 0x50], ecx; mov rax, qword ptr [rsp + 0x38]; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000412775: mov dword ptr [rsp + 0x50], ecx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000484c39: mov dword ptr [rsp + 0x50], ecx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048ec3c: mov dword ptr [rsp + 0x50], ecx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000406815: mov dword ptr [rsp + 0x50], ecx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000483c8e: mov dword ptr [rsp + 0x50], edi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000490c75: mov dword ptr [rsp + 0x50], edx; mov qword ptr [rsp + 0x58], rbx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000407192: mov dword ptr [rsp + 0x50], esi; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; nop; ret; 
0x000000000042bf58: mov dword ptr [rsp + 0x50], esi; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000429a66: mov dword ptr [rsp + 0x50], esi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040d643: mov dword ptr [rsp + 0x58], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000444085: mov dword ptr [rsp + 0x58], 0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042a8a6: mov dword ptr [rsp + 0x58], 0xffffffff; mov qword ptr [rsp + 0x60], rdx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044c1cf: mov dword ptr [rsp + 0x58], 0xffffffff; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000047bdb3: mov dword ptr [rsp + 0x58], 4; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000047be38: mov dword ptr [rsp + 0x58], 6; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000420d12: mov dword ptr [rsp + 0x58], eax; cmp rbx, rsi; sete byte ptr [rsp + 0x60]; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000049098f: mov dword ptr [rsp + 0x58], eax; lea rax, [rip + 0x4b7c6]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040dfcc: mov dword ptr [rsp + 0x58], eax; mov byte ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040e06f: mov dword ptr [rsp + 0x58], eax; mov byte ptr [rsp + 0x60], 1; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042a883: mov dword ptr [rsp + 0x58], eax; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000045c602: mov dword ptr [rsp + 0x58], eax; mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040721e: mov dword ptr [rsp + 0x58], eax; mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004830a1: mov dword ptr [rsp + 0x58], eax; mov qword ptr [rsp + 0x60], rsi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042a863: mov dword ptr [rsp + 0x58], eax; mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000450f14: mov dword ptr [rsp + 0x58], eax; mov rax, qword ptr [rsp + 0x28]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004908f6: mov dword ptr [rsp + 0x58], eax; mov rax, qword ptr [rsp + 0x30]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004833de: mov dword ptr [rsp + 0x58], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000483dd9: mov dword ptr [rsp + 0x58], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004203e5: mov dword ptr [rsp + 0x58], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004100e0: mov dword ptr [rsp + 0x58], eax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000479912: mov dword ptr [rsp + 0x58], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x0000000000402999: mov dword ptr [rsp + 0x58], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000044c010: mov dword ptr [rsp + 0x58], eax; shr rcx, 2; mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041256b: mov dword ptr [rsp + 0x58], ebx; mov qword ptr [rsp + 0x60], rdx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000490c7a: mov dword ptr [rsp + 0x58], ebx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048d671: mov dword ptr [rsp + 0x58], ebx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041fc80: mov dword ptr [rsp + 0x58], ecx; mov dword ptr [rsp + 0x60], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004124bd: mov dword ptr [rsp + 0x58], ecx; mov qword ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000047b6b6: mov dword ptr [rsp + 0x58], ecx; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004825bc: mov dword ptr [rsp + 0x58], ecx; mov qword ptr [rsp + 0x60], rdx; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004831cf: mov dword ptr [rsp + 0x58], ecx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044bd4e: mov dword ptr [rsp + 0x58], ecx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040d5d3: mov dword ptr [rsp + 0x58], ecx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000437fcd: mov dword ptr [rsp + 0x58], ecx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040294c: mov dword ptr [rsp + 0x58], ecx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000046c195: mov dword ptr [rsp + 0x58], edx; mov byte ptr [rsp + 0x60], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041fc2a: mov dword ptr [rsp + 0x58], edx; mov dword ptr [rsp + 0x60], ecx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041adba: mov dword ptr [rsp + 0x58], edx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048337f: mov dword ptr [rsp + 0x58], edx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000443e71: mov dword ptr [rsp + 0x58], edx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048fb06: mov dword ptr [rsp + 0x58], edx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000447c11: mov dword ptr [rsp + 0x58], edx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000483312: mov dword ptr [rsp + 0x58], esi; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; nop; ret; 
0x000000000044c180: mov dword ptr [rsp + 0x58], esi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004124c2: mov dword ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000415b3e: mov dword ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044c3ea: mov dword ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000459bfb: mov dword ptr [rsp + 0x60], 0xffffffff; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044c52c: mov dword ptr [rsp + 0x60], eax; mov byte ptr [rsp + 0x68], cl; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044e934: mov dword ptr [rsp + 0x60], eax; mov qword ptr [rsp + 0x68], rcx; mov dword ptr [rsp + 0x70], edx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000483929: mov dword ptr [rsp + 0x60], eax; mov qword ptr [rsp + 0x68], rcx; mov qword ptr [rsp + 0x70], rdx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000041478b: mov dword ptr [rsp + 0x60], eax; mov qword ptr [rsp + 0x68], rcx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044b7a6: mov dword ptr [rsp + 0x60], eax; mov qword ptr [rsp + 0x68], rsi; mov qword ptr [rsp + 0x70], rbx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000460552: mov dword ptr [rsp + 0x60], eax; mov rax, qword ptr [rsp + 0x30]; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000042a86d: mov dword ptr [rsp + 0x60], eax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040d1ab: mov dword ptr [rsp + 0x60], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000415beb: mov dword ptr [rsp + 0x60], eax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000041f3d7: mov dword ptr [rsp + 0x60], eax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000423379: mov dword ptr [rsp + 0x60], eax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000048d58f: mov dword ptr [rsp + 0x60], eax; xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x68], xmm0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040e2ed: mov dword ptr [rsp + 0x60], ecx; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x0000000000428be0: mov dword ptr [rsp + 0x60], ecx; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000048d49b: mov dword ptr [rsp + 0x60], ecx; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000482ff9: mov dword ptr [rsp + 0x60], ecx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045c607: mov dword ptr [rsp + 0x60], ecx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000407223: mov dword ptr [rsp + 0x60], ecx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004825c1: mov dword ptr [rsp + 0x60], edx; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048563a: mov dword ptr [rsp + 0x60], edx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000412570: mov dword ptr [rsp + 0x60], edx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042a8af: mov dword ptr [rsp + 0x60], edx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040db46: mov dword ptr [rsp + 0x60], edx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000492537: mov dword ptr [rsp + 0x60], esi; mov qword ptr [rsp + 0x68], rbx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004924eb: mov dword ptr [rsp + 0x60], esi; mov qword ptr [rsp + 0x68], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004830a6: mov dword ptr [rsp + 0x60], esi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042e452: mov dword ptr [rsp + 0x660], 0; mov rbp, qword ptr [rsp + 0x648]; add rsp, 0x650; ret; 
0x000000000042e59f: mov dword ptr [rsp + 0x660], eax; mov rbp, qword ptr [rsp + 0x648]; add rsp, 0x650; ret; 
0x0000000000411f57: mov dword ptr [rsp + 0x68], 0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040e241: mov dword ptr [rsp + 0x68], 0; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000409313: mov dword ptr [rsp + 0x68], 0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000042185f: mov dword ptr [rsp + 0x68], 0xffffffff; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000406b5d: mov dword ptr [rsp + 0x68], eax; mov qword ptr [rsp + 0x70], rdx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000411ed8: mov dword ptr [rsp + 0x68], eax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040e2f2: mov dword ptr [rsp + 0x68], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x0000000000409371: mov dword ptr [rsp + 0x68], eax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000457932: mov dword ptr [rsp + 0x68], eax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; nop; ret; 
0x0000000000457791: mov dword ptr [rsp + 0x68], eax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004373e3: mov dword ptr [rsp + 0x68], eax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x00000000004216ab: mov dword ptr [rsp + 0x68], eax; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000043b42d: mov dword ptr [rsp + 0x68], eax; movzx eax, byte ptr [rsp + 0x1f]; mov byte ptr [rsp + 0x70], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000049253c: mov dword ptr [rsp + 0x68], ebx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000043b2fb: mov dword ptr [rsp + 0x68], ecx; mov byte ptr [rsp + 0x70], 0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044e939: mov dword ptr [rsp + 0x68], ecx; mov dword ptr [rsp + 0x70], edx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000046b4a9: mov dword ptr [rsp + 0x68], ecx; mov qword ptr [rsp + 0x70], r10; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000048d9d7: mov dword ptr [rsp + 0x68], ecx; mov qword ptr [rsp + 0x70], rax; mov qword ptr [rsp + 0x78], rdx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044b3d2: mov dword ptr [rsp + 0x68], ecx; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044b6d8: mov dword ptr [rsp + 0x68], ecx; mov qword ptr [rsp + 0x70], rdx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000046b447: mov dword ptr [rsp + 0x68], ecx; mov qword ptr [rsp + 0x70], rdx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004924f0: mov dword ptr [rsp + 0x68], ecx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000414790: mov dword ptr [rsp + 0x68], ecx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044b7ab: mov dword ptr [rsp + 0x68], esi; mov qword ptr [rsp + 0x70], rbx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004943d6: mov dword ptr [rsp + 0x70], eax; mov qword ptr [rsp + 0x78], rbx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000044ee17: mov dword ptr [rsp + 0x70], eax; mov qword ptr [rsp + 0x78], rcx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004849a9: mov dword ptr [rsp + 0x70], eax; mov qword ptr [rsp + 0x78], rcx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000492657: mov dword ptr [rsp + 0x70], eax; mov qword ptr [rsp + 0x78], rdx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048d9dc: mov dword ptr [rsp + 0x70], eax; mov qword ptr [rsp + 0x78], rdx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000045f787: mov dword ptr [rsp + 0x70], eax; mov rax, qword ptr [rsp + 0x40]; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000486cf3: mov dword ptr [rsp + 0x70], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044b3d7: mov dword ptr [rsp + 0x70], eax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000451912: mov dword ptr [rsp + 0x70], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x000000000044711c: mov dword ptr [rsp + 0x70], eax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040d3ba: mov dword ptr [rsp + 0x70], eax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000045744d: mov dword ptr [rsp + 0x70], eax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000430aad: mov dword ptr [rsp + 0x70], eax; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x00000000004351ff: mov dword ptr [rsp + 0x70], eax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000044b7b0: mov dword ptr [rsp + 0x70], ebx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000045743e: mov dword ptr [rsp + 0x70], ebx; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000483543: mov dword ptr [rsp + 0x70], ecx; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040be35: mov dword ptr [rsp + 0x70], ecx; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000040be6c: mov dword ptr [rsp + 0x70], ecx; mov rax, qword ptr [rsp + 0x40]; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000048b05e: mov dword ptr [rsp + 0x70], edi; sub r9, rdi; mov qword ptr [rsp + 8], r9; mov qword ptr [rsp + 0x10], rdi; call rdx; 
0x0000000000454ae0: mov dword ptr [rsp + 0x70], edx; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000420961: mov dword ptr [rsp + 0x70], edx; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044b6dd: mov dword ptr [rsp + 0x70], edx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044e93d: mov dword ptr [rsp + 0x70], edx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000406b62: mov dword ptr [rsp + 0x70], edx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000044ec29: mov dword ptr [rsp + 0x78], 0xffffffff; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004846ff: mov dword ptr [rsp + 0x78], eax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000454ae5: mov dword ptr [rsp + 0x78], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000420966: mov dword ptr [rsp + 0x78], eax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040be3a: mov dword ptr [rsp + 0x78], eax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000041f851: mov dword ptr [rsp + 0x78], eax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000457271: mov dword ptr [rsp + 0x78], eax; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x00000000004943db: mov dword ptr [rsp + 0x78], ebx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048aeb6: mov dword ptr [rsp + 0x78], ecx; mov qword ptr [rsp + 0x10], rcx; nop; call rdx; 
0x000000000044ee1c: mov dword ptr [rsp + 0x78], ecx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004849ae: mov dword ptr [rsp + 0x78], ecx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004570cf: mov dword ptr [rsp + 0x78], ecx; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000049265c: mov dword ptr [rsp + 0x78], edx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048d9e1: mov dword ptr [rsp + 0x78], edx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040d836: mov dword ptr [rsp + 0x78], edx; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000048af45: mov dword ptr [rsp + 0x80], eax; mov qword ptr [rsp + 0x10], r8; call rsi; 
0x000000000048ae5a: mov dword ptr [rsp + 0x80], eax; mov qword ptr [rsp + 8], r8; mov qword ptr [rsp + 0x10], rcx; call rsi; 
0x000000000043ec88: mov dword ptr [rsp + 0x98], eax; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000481ff0: mov dword ptr [rsp + 0xa0], eax; mov qword ptr [rsp + 0xa8], rcx; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000047239e: mov dword ptr [rsp + 0xa0], eax; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x00000000004820c6: mov dword ptr [rsp + 0xa0], ecx; mov qword ptr [rsp + 0xa8], rax; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x00000000004820ce: mov dword ptr [rsp + 0xa8], eax; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000481ff8: mov dword ptr [rsp + 0xa8], ecx; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000044bbbf: mov dword ptr [rsp + 0xb0], eax; mov qword ptr [rsp + 0xb8], r11; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000047d8d2: mov dword ptr [rsp + 0xb0], eax; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000047d6c2: mov dword ptr [rsp + 0xb0], ecx; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000044b1ce: mov dword ptr [rsp + 0xb8], eax; mov qword ptr [rsp + 0xc0], rcx; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000402cd4: mov dword ptr [rsp + 0xb8], eax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000044bbc7: mov dword ptr [rsp + 0xb8], ebx; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000044b26d: mov dword ptr [rsp + 0xb8], ecx; mov qword ptr [rsp + 0xc0], rax; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000040b99d: mov dword ptr [rsp + 0xb8], edi; mov qword ptr [rsp + 0xc0], rcx; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000402c87: mov dword ptr [rsp + 0xb8], edx; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000040bb09: mov dword ptr [rsp + 0xc0], 0; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000044b275: mov dword ptr [rsp + 0xc0], eax; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000044b1d6: mov dword ptr [rsp + 0xc0], ecx; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000040b9a5: mov dword ptr [rsp + 0xc0], ecx; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000048ba4b: mov dword ptr [rsp + 0xc8], 0; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x000000000048f996: mov dword ptr [rsp + 0xc8], eax; mov qword ptr [rsp + 0xd0], rcx; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x00000000004792cc: mov dword ptr [rsp + 0xc8], eax; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000048ba0b: mov dword ptr [rsp + 0xc8], eax; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x0000000000409cb7: mov dword ptr [rsp + 0xc8], eax; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x00000000004200f2: mov dword ptr [rsp + 0xc8], ecx; mov qword ptr [rsp + 0xd0], rax; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000420246: mov dword ptr [rsp + 0xc8], esi; mov qword ptr [rsp + 0xd0], r9; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000497530: mov dword ptr [rsp + 0xc], ebx; call 0x94dc0; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000401c4c: mov dword ptr [rsp + 0xc], edx; ret; 
0x00000000004200fa: mov dword ptr [rsp + 0xd0], eax; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000042024e: mov dword ptr [rsp + 0xd0], ecx; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000048f99e: mov dword ptr [rsp + 0xd0], ecx; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000044aa3b: mov dword ptr [rsp + 0xd8], eax; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x00000000004244f4: mov dword ptr [rsp + 0xd8], ecx; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000044e01c: mov dword ptr [rsp + 0xe0], eax; mov qword ptr [rsp + 0xe8], 0; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x000000000047f712: mov dword ptr [rsp + 0xe0], edx; mov qword ptr [rsp + 0xe8], rcx; mov qword ptr [rsp + 0xf0], rax; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x000000000044e024: mov dword ptr [rsp + 0xe8], 0; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x0000000000476367: mov dword ptr [rsp + 0xe8], eax; mov qword ptr [rsp + 0xf0], rsi; mov qword ptr [rsp + 0xf8], rdi; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000044e1c4: mov dword ptr [rsp + 0xe8], eax; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x000000000047f71a: mov dword ptr [rsp + 0xe8], ecx; mov qword ptr [rsp + 0xf0], rax; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x0000000000475d13: mov dword ptr [rsp + 0xf0], eax; mov qword ptr [rsp + 0xf8], rcx; mov qword ptr [rsp + 0x100], rdi; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000047f722: mov dword ptr [rsp + 0xf0], eax; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x0000000000477597: mov dword ptr [rsp + 0xf0], eax; xorps xmm0, xmm0; movups xmmword ptr [rsp + 0xf8], xmm0; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x000000000047636f: mov dword ptr [rsp + 0xf0], esi; mov qword ptr [rsp + 0xf8], rdi; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000477679: mov dword ptr [rsp + 0xf8], eax; mov qword ptr [rsp + 0x100], rcx; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x0000000000475d1b: mov dword ptr [rsp + 0xf8], ecx; mov qword ptr [rsp + 0x100], rdi; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000476377: mov dword ptr [rsp + 0xf8], edi; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000040e0f2: mov dword ptr [rsp + 8], 0; mov rax, qword ptr [rdx]; call rax; 
0x000000000042edd3: mov dword ptr [rsp + 8], 0x80; mov qword ptr [rsp + 0x10], 0x80; call 0x2ee20; mov rbp, qword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x0000000000434004: mov dword ptr [rsp + 8], 0xe; mov qword ptr [rsp + 0x10], 0xe; call 0x33be0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000401034: mov dword ptr [rsp + 8], eax; call 0x1060; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045e9ec: mov dword ptr [rsp + 8], eax; call 0x11f80; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045ddce: mov dword ptr [rsp + 8], eax; call 0x29ae0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040cf47: mov dword ptr [rsp + 8], eax; call 0x2b300; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004464f5: mov dword ptr [rsp + 8], eax; call 0x2f340; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004051d3: mov dword ptr [rsp + 8], eax; call 0x34f20; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000405e7d: mov dword ptr [rsp + 8], eax; call 0x34f20; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000043bb66: mov dword ptr [rsp + 8], eax; call 0x36560; call 0x3ad60; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045b392: mov dword ptr [rsp + 8], eax; call 0x36ac0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000436f09: mov dword ptr [rsp + 8], eax; call 0x36d40; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000415ef5: mov dword ptr [rsp + 8], eax; call 0x3b00; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045f2fd: mov dword ptr [rsp + 8], eax; call 0x3c200; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000434c6c: mov dword ptr [rsp + 8], eax; call 0x3cda0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004450f0: mov dword ptr [rsp + 8], eax; call 0x46780; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x000000000045a152: mov dword ptr [rsp + 8], eax; call 0x59ce0; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000411fb2: mov dword ptr [rsp + 8], eax; call 0x63da0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000413d47: mov dword ptr [rsp + 8], eax; call 0x63da0; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; nop; ret; 
0x000000000045a2ca: mov dword ptr [rsp + 8], eax; call 0x65060; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000475994: mov dword ptr [rsp + 8], eax; call 0x733a0; mov rbp, qword ptr [rsp + 0x690]; add rsp, 0x698; ret; 
0x0000000000475936: mov dword ptr [rsp + 8], eax; call 0x73480; mov rbp, qword ptr [rsp + 0x690]; add rsp, 0x698; ret; 
0x00000000004915ed: mov dword ptr [rsp + 8], eax; call 0x91260; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; nop; ret; 
0x0000000000491940: mov dword ptr [rsp + 8], eax; call 0x91260; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000495661: mov dword ptr [rsp + 8], eax; call 0x94740; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000049663d: mov dword ptr [rsp + 8], eax; call 0x94740; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000042351e: mov dword ptr [rsp + 8], eax; call 0xa5a0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048af95: mov dword ptr [rsp + 8], eax; dec rax; mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x10], rax; call rdx; 
0x0000000000435845: mov dword ptr [rsp + 8], eax; mov dword ptr [rsp + 0x10], ecx; call 0x64980; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000401c48: mov dword ptr [rsp + 8], eax; mov dword ptr [rsp + 0xc], edx; ret; 
0x0000000000497c06: mov dword ptr [rsp + 8], eax; mov qword ptr [rsp + 0x10], 5; call 0x91760; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000043454a: mov dword ptr [rsp + 8], eax; mov qword ptr [rsp + 0x10], rcx; call 0x33be0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000048ae62: mov dword ptr [rsp + 8], eax; mov qword ptr [rsp + 0x10], rcx; call rsi; 
0x0000000000429545: mov dword ptr [rsp + 8], eax; mov qword ptr [rsp + 0x10], rcx; mov rax, qword ptr [rip + 0x9ce4b]; lea rdx, [rip + 0x9ce44]; call rax; 
0x000000000042978a: mov dword ptr [rsp + 8], eax; mov qword ptr [rsp + 0x10], rcx; mov rax, qword ptr [rsp + 0x90]; lea rdx, [rsp + 0x90]; call rax; 
0x000000000045c5e4: mov dword ptr [rsp + 8], eax; mov qword ptr [rsp + 0x10], rcx; mov rdx, qword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x000000000048fdcf: mov dword ptr [rsp + 8], eax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x0000000000445d47: mov dword ptr [rsp + 8], eax; mov qword ptr [rsp + 0x10], rdi; call 0x44a80; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x0000000000403607: mov dword ptr [rsp + 8], eax; mov rax, qword ptr [rdx]; call rax; 
0x000000000040f857: mov dword ptr [rsp + 8], eax; mov rax, qword ptr [rdx]; nop; call rax; 
0x0000000000450898: mov dword ptr [rsp + 8], eax; mov rax, qword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x10], rax; mov rdx, qword ptr [rsp + 0x38]; mov rax, qword ptr [rdx]; call rax; 
0x000000000040f91a: mov dword ptr [rsp + 8], eax; mov rcx, qword ptr [rdx]; call rcx; 
0x0000000000464a2a: mov dword ptr [rsp + 8], eax; mov rdi, rsp; mov esi, 0; mov eax, 0x23; syscall; 
0x0000000000452dc6: mov dword ptr [rsp + 8], eax; mov rdx, qword ptr [rsp + 0xc0]; mov rcx, qword ptr [rdx]; call rcx; 
0x0000000000427e17: mov dword ptr [rsp + 8], eax; mov rsi, qword ptr [rsp + 0x110]; lea rdx, [rsp + 0x110]; call rsi; 
0x00000000004495b9: mov dword ptr [rsp + 8], eax; nop dword ptr [rax]; call 0x48560; mov rbp, qword ptr [rsp + 0x1a8]; add rsp, 0x1b0; ret; 
0x000000000044c5df: mov dword ptr [rsp + 8], eax; ret; 
0x00000000004296eb: mov dword ptr [rsp + 8], ebx; mov qword ptr [rsp + 0x10], rax; mov rax, qword ptr [rsp + 0x90]; lea rdx, [rsp + 0x90]; call rax; 
0x000000000041ffee: mov dword ptr [rsp + 8], ebx; mov rax, qword ptr [rsp + 0x70]; lea rdx, [rsp + 0x70]; call rax; 
0x000000000040df1f: mov dword ptr [rsp + 8], ebx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000040fe37: mov dword ptr [rsp + 8], ebx; mov rbx, qword ptr [rdx]; nop; call rbx; 
0x000000000045c5bd: mov dword ptr [rsp + 8], ebx; mov rbx, qword ptr [rsp + 0x50]; mov qword ptr [rsp + 0x10], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x00000000004287e1: mov dword ptr [rsp + 8], ebx; mov rcx, qword ptr [rsp + 0x110]; lea rdx, [rsp + 0x110]; call rcx; 
0x000000000047c4fb: mov dword ptr [rsp + 8], ebx; nop; call rax; 
0x0000000000442240: mov dword ptr [rsp + 8], ecx; call 0x2eba0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044a634: mov dword ptr [rsp + 8], ecx; call 0x49320; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000047332c: mov dword ptr [rsp + 8], ecx; call 0x73080; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000499802: mov dword ptr [rsp + 8], ecx; call rax; 
0x000000000048aaa4: mov dword ptr [rsp + 8], ecx; dec rcx; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x10], rcx; call rax; 
0x000000000048aeae: mov dword ptr [rsp + 8], ecx; inc rcx; mov qword ptr [rsp + 0x78], rcx; mov qword ptr [rsp + 0x10], rcx; nop; call rdx; 
0x000000000048ab15: mov dword ptr [rsp + 8], ecx; lea rsi, [rcx - 1]; mov qword ptr [rsp + 0x10], rsi; call rax; 
0x000000000041fd43: mov dword ptr [rsp + 8], ecx; mov qword ptr [rsp + 0x10], rax; call 0x2c220; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000411e06: mov dword ptr [rsp + 8], ecx; mov qword ptr [rsp + 0x10], rax; call 0x64040; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004052e7: mov dword ptr [rsp + 8], ecx; mov qword ptr [rsp + 0x10], rax; call 0x64040; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048ac25: mov dword ptr [rsp + 8], ecx; mov qword ptr [rsp + 0x10], rax; call 0x8ac60; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043444a: mov dword ptr [rsp + 8], ecx; mov qword ptr [rsp + 0x10], rcx; call 0x33be0; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000048b066: mov dword ptr [rsp + 8], ecx; mov qword ptr [rsp + 0x10], rdi; call rdx; 
0x000000000040a560: mov dword ptr [rsp + 8], ecx; mov qword ptr [rsp], rbx; mov rdx, qword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004540c9: mov dword ptr [rsp + 8], ecx; mov rbx, qword ptr [rax]; mov rdx, rax; call rbx; 
0x000000000040e28b: mov dword ptr [rsp + 8], ecx; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000456c9e: mov dword ptr [rsp + 8], ecx; mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; 
0x000000000040e012: mov dword ptr [rsp + 8], ecx; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000048aba3: mov dword ptr [rsp + 8], edi; mov rdi, qword ptr [rsp + 0x48]; lea r8, [rax + rdi]; mov qword ptr [rsp + 0x10], r8; call rdx; 
0x00000000004726f2: mov dword ptr [rsp + 8], edx; mov qword ptr [rsp + 0x10], rbx; mov qword ptr [rsp + 0x18], rdi; call rax; 
0x00000000004941db: mov dword ptr [rsp + 8], edx; mov qword ptr [rsp + 0x10], rbx; mov qword ptr [rsp + 0x18], rsi; call rax; 
0x000000000040eef9: mov dword ptr [rsp + 8], edx; mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; 
0x0000000000464e32: mov dword ptr [rsp + 8], esi; mov qword ptr [rsp], rdi; lea rax, [rip - 0x1fe01]; call rax; 
0x000000000047ca57: mov dword ptr [rsp + 8], esi; mov rax, qword ptr [rdx]; nop; call rax; 
0x000000000040e792: mov dword ptr [rsp + 8], esi; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000040ef49: mov dword ptr [rsp + 8], esi; mov rsi, qword ptr [rcx]; mov rdx, rcx; call rsi; 
0x0000000000444ea6: mov dword ptr [rsp], 0xd; call 0x46380; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044656e: mov dword ptr [rsp], 6; call 0x46380; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000042d903: mov dword ptr [rsp], eax; call 0x2d520; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000045c772: mov dword ptr [rsp], eax; call 0x2d6c0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000434328: mov dword ptr [rsp], eax; call 0x341e0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000434630: mov dword ptr [rsp], eax; call 0x34380; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004344c3: mov dword ptr [rsp], eax; call 0x34380; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000043b9ac: mov dword ptr [rsp], eax; call 0x3b700; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000043888d: mov dword ptr [rsp], eax; call 0x431e0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004398b2: mov dword ptr [rsp], eax; call 0x61580; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004069a8: mov dword ptr [rsp], eax; call 0x615e0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000415021: mov dword ptr [rsp], eax; call 0x61680; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000425654: mov dword ptr [rsp], eax; call 0x61680; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000403b62: mov dword ptr [rsp], eax; call 0x61680; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000431393: mov dword ptr [rsp], eax; call 0x61680; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000043ce06: mov dword ptr [rsp], eax; call 0x61680; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004044b1: mov dword ptr [rsp], eax; call 0x61680; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000460465: mov dword ptr [rsp], eax; call 0x61680; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000047fe11: mov dword ptr [rsp], eax; call 0x6af00; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x000000000046b88f: mov dword ptr [rsp], eax; call 0x6af00; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000473270: mov dword ptr [rsp], eax; call 0x72ca0; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048f4d1: mov dword ptr [rsp], eax; call 0x8eb00; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000048f7f1: mov dword ptr [rsp], eax; call 0x8eb60; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000049740f: mov dword ptr [rsp], eax; call 0x926c0; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000440b72: mov dword ptr [rsp], eax; call 0xaa00; mov rbp, qword ptr [rsp + 0xe0]; add rsp, 0xe8; ret; 
0x000000000043974f: mov dword ptr [rsp], eax; call 0xaa40; call 0x38b20; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043b7cd: mov dword ptr [rsp], eax; call 0xaa40; call 0x3ad60; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042b7e8: mov dword ptr [rsp], eax; call 0xaa40; mov rbp, qword ptr [rsp + 0x168]; add rsp, 0x170; nop; ret; 
0x000000000041f284: mov dword ptr [rsp], eax; call 0xaa40; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004161d1: mov dword ptr [rsp], eax; call 0xaa40; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000041c621: mov dword ptr [rsp], eax; call 0xaa40; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000041b1c6: mov dword ptr [rsp], eax; call 0xaa40; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042ba32: mov dword ptr [rsp], eax; call 0xaa40; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000045ca3f: mov dword ptr [rsp], eax; call 0xaa40; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x000000000044864d: mov dword ptr [rsp], eax; call 0xaa40; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000040b0f4: mov dword ptr [rsp], eax; call 0xaa40; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000040aa23: mov dword ptr [rsp], eax; call 0xb0e0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000049a3b8: mov dword ptr [rsp], eax; call rax; 
0x00000000004802c9: mov dword ptr [rsp], eax; call rbx; 
0x0000000000494839: mov dword ptr [rsp], eax; call rcx; 
0x0000000000438f65: mov dword ptr [rsp], eax; mov byte ptr [rsp + 8], 0; call 0x38cc0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040e0ee: mov dword ptr [rsp], eax; mov qword ptr [rsp + 8], 0; mov rax, qword ptr [rdx]; call rax; 
0x000000000040f916: mov dword ptr [rsp], eax; mov qword ptr [rsp + 8], rax; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000044223c: mov dword ptr [rsp], eax; mov qword ptr [rsp + 8], rcx; call 0x2eba0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044a630: mov dword ptr [rsp], eax; mov qword ptr [rsp + 8], rcx; call 0x49320; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000473328: mov dword ptr [rsp], eax; mov qword ptr [rsp + 8], rcx; call 0x73080; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040e287: mov dword ptr [rsp], eax; mov qword ptr [rsp + 8], rcx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000040e00e: mov dword ptr [rsp], eax; mov qword ptr [rsp + 8], rcx; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000040e78e: mov dword ptr [rsp], eax; mov qword ptr [rsp + 8], rsi; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000042f2ac: mov dword ptr [rsp], eax; mov rax, qword ptr [rdx]; call rax; 
0x000000000043acf0: mov dword ptr [rsp], eax; mov rax, qword ptr [rip + 0x8b84e]; lea rdx, [rip + 0x8b847]; call rax; 
0x00000000004035fe: mov dword ptr [rsp], eax; mov rax, qword ptr [rsp + 0x58]; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; call rax; 
0x000000000047ff06: mov dword ptr [rsp], eax; mov rax, qword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x0000000000434850: mov dword ptr [rsp], eax; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000043ac4f: mov dword ptr [rsp], eax; mov rcx, qword ptr [rip + 0x8b8ef]; lea rdx, [rip + 0x8b8e8]; call rcx; 
0x0000000000434746: mov dword ptr [rsp], eax; mov rcx, qword ptr [rip + 0x91df0]; lea rdx, [rip + 0x91de9]; call rcx; 
0x0000000000437aac: mov dword ptr [rsp], eax; mov rdx, qword ptr [rsp + 0x68]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000434eb8: mov dword ptr [rsp], eax; nop dword ptr [rax + rax]; call 0x615e0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045153a: mov dword ptr [rsp], eax; nop dword ptr [rax]; call 0x51a80; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000044999a: mov dword ptr [rsp], eax; nop dword ptr [rax]; call 0x61580; mov rbp, qword ptr [rsp + 0x1a0]; add rsp, 0x1a8; ret; 
0x000000000042b499: mov dword ptr [rsp], eax; nop dword ptr [rax]; call 0x61680; mov rbp, qword ptr [rsp + 0x168]; add rsp, 0x170; ret; 
0x000000000043781a: mov dword ptr [rsp], eax; nop dword ptr [rax]; call 0x64900; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048f919: mov dword ptr [rsp], eax; nop dword ptr [rax]; call 0x8eb60; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000041b8d9: mov dword ptr [rsp], eax; nop dword ptr [rax]; call 0xaa40; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000043f559: mov dword ptr [rsp], eax; nop dword ptr [rax]; call 0xab20; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000044511c: mov dword ptr [rsp], eax; nop; call 0x3e240; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000416adc: mov dword ptr [rsp], eax; nop; call 0x61680; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000041c35b: mov dword ptr [rsp], eax; nop; call 0xaa40; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004266bb: mov dword ptr [rsp], eax; nop; call 0xaa40; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045651c: mov dword ptr [rsp], eax; nop; call 0xaa40; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000426c1b: mov dword ptr [rsp], eax; nop; call 0xaa40; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x00000000004973fb: mov dword ptr [rsp], eax; nop; call rcx; 
0x000000000047ca53: mov dword ptr [rsp], ebp; mov qword ptr [rsp + 8], r14; mov rax, qword ptr [rdx]; nop; call rax; 
0x0000000000464ff9: mov dword ptr [rsp], ebx; call rax; 
0x0000000000465087: mov dword ptr [rsp], ebx; call rax; mov rsp, qword ptr [rsp]; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000468940: mov dword ptr [rsp], ebx; call rdx; 
0x000000000048af91: mov dword ptr [rsp], ebx; mov qword ptr [rsp + 8], rax; dec rax; mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x10], rax; call rdx; 
0x000000000045c5e0: mov dword ptr [rsp], ebx; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; mov rdx, qword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004105a4: mov dword ptr [rsp], ebx; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; call rax; 
0x000000000041709f: mov dword ptr [rsp], ebx; mov qword ptr [rsp + 8], rcx; mov rbx, qword ptr [rdx]; call rbx; 
0x00000000004346d2: mov dword ptr [rsp], ebx; mov rax, qword ptr [rip + 0x91e64]; lea rdx, [rip + 0x91e5d]; call rax; 
0x000000000040a565: mov dword ptr [rsp], ebx; mov rdx, qword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000430fc3: mov dword ptr [rsp], ecx; call 0x30b80; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004310c4: mov dword ptr [rsp], ecx; call rax; 
0x000000000047c599: mov dword ptr [rsp], ecx; call rdx; 
0x0000000000456d57: mov dword ptr [rsp], ecx; lea rcx, [rsp + 0x18]; mov qword ptr [rsp + 8], rcx; mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; 
0x0000000000439207: mov dword ptr [rsp], ecx; mov byte ptr [rsp + 8], 0; call 0x38cc0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004391ef: mov dword ptr [rsp], ecx; mov byte ptr [rsp + 8], 1; call 0x38cc0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045a14f: mov dword ptr [rsp], ecx; mov dword ptr [rsp + 8], eax; call 0x59ce0; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000049565e: mov dword ptr [rsp], ecx; mov dword ptr [rsp + 8], eax; call 0x94740; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004464f1: mov dword ptr [rsp], ecx; mov qword ptr [rsp + 8], rax; call 0x2f340; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000411fae: mov dword ptr [rsp], ecx; mov qword ptr [rsp + 8], rax; call 0x63da0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045a2c6: mov dword ptr [rsp], ecx; mov qword ptr [rsp + 8], rax; call 0x65060; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042351a: mov dword ptr [rsp], ecx; mov qword ptr [rsp + 8], rax; call 0xa5a0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043b5f4: mov dword ptr [rsp], ecx; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; nop; call rax; 
0x000000000047c4f7: mov dword ptr [rsp], ecx; mov qword ptr [rsp + 8], rbx; nop; call rax; 
0x00000000004726ee: mov dword ptr [rsp], ecx; mov qword ptr [rsp + 8], rdx; mov qword ptr [rsp + 0x10], rbx; mov qword ptr [rsp + 0x18], rdi; call rax; 
0x0000000000437d55: mov dword ptr [rsp], ecx; mov rax, qword ptr [rdx]; call rax; 
0x000000000047ffaa: mov dword ptr [rsp], ecx; mov rax, qword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x000000000048f0fb: mov dword ptr [rsp], ecx; mov rcx, qword ptr [rdx]; call rcx; 
0x0000000000456c95: mov dword ptr [rsp], ecx; mov rcx, qword ptr [rsp + 0x28]; mov qword ptr [rsp + 8], rcx; mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; 
0x00000000004997f6: mov dword ptr [rsp], ecx; mov rcx, qword ptr [rsp + 0xc8]; mov qword ptr [rsp + 8], rcx; call rax; 
0x0000000000437a6e: mov dword ptr [rsp], ecx; mov rdx, qword ptr [rsp + 0x68]; mov rax, qword ptr [rdx]; call rax; 
0x000000000045155c: mov dword ptr [rsp], ecx; nop; call 0x51a80; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000047c5fc: mov dword ptr [rsp], ecx; nop; call rax; 
0x0000000000464e37: mov dword ptr [rsp], edi; lea rax, [rip - 0x1fe01]; call rax; 
0x000000000041ffea: mov dword ptr [rsp], edi; mov qword ptr [rsp + 8], r11; mov rax, qword ptr [rsp + 0x70]; lea rdx, [rsp + 0x70]; call rax; 
0x000000000040f853: mov dword ptr [rsp], edi; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; nop; call rax; 
0x00000000004941d7: mov dword ptr [rsp], edi; mov qword ptr [rsp + 8], rdx; mov qword ptr [rsp + 0x10], rbx; mov qword ptr [rsp + 0x18], rsi; call rax; 
0x0000000000472fa6: mov dword ptr [rsp], edx; call 0x72ca0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000472deb: mov dword ptr [rsp], edx; call 0x72ca0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000467cf9: mov dword ptr [rsp], edx; call rcx; 
0x0000000000429541: mov dword ptr [rsp], edx; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; mov rax, qword ptr [rip + 0x9ce4b]; lea rdx, [rip + 0x9ce44]; call rax; 
0x0000000000429786: mov dword ptr [rsp], edx; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; mov rax, qword ptr [rsp + 0x90]; lea rdx, [rsp + 0x90]; call rax; 
0x00000000004296e7: mov dword ptr [rsp], edx; mov qword ptr [rsp + 8], rbx; mov qword ptr [rsp + 0x10], rax; mov rax, qword ptr [rsp + 0x90]; lea rdx, [rsp + 0x90]; call rax; 
0x000000000048aaa0: mov dword ptr [rsp], edx; mov qword ptr [rsp + 8], rcx; dec rcx; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x10], rcx; call rax; 
0x000000000048ab11: mov dword ptr [rsp], edx; mov qword ptr [rsp + 8], rcx; lea rsi, [rcx - 1]; mov qword ptr [rsp + 0x10], rsi; call rax; 
0x000000000040eef5: mov dword ptr [rsp], edx; mov qword ptr [rsp + 8], rdx; mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; 
0x000000000040ef45: mov dword ptr [rsp], edx; mov qword ptr [rsp + 8], rsi; mov rsi, qword ptr [rcx]; mov rdx, rcx; call rsi; 
0x00000000004688bc: mov dword ptr [rsp], edx; nop; call rcx; 
0x00000000004688e5: mov dword ptr [rsp], esi; call rbx; 
0x000000000040df1b: mov dword ptr [rsp], esi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000040fe33: mov dword ptr [rsp], esi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; nop; call rbx; 
0x00000000004111ee: mov dword ptr [rsp], esp; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; call rax; 
0x0000000000434b56: mov dword ptr es:[rdx], eax; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x48; add rsp, 0x50; ret; 
0x00000000004652f3: mov eax, 0; mov eax, 0x119; syscall; 
0x00000000004652f3: mov eax, 0; mov eax, 0x119; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000463280: mov eax, 0; ret; 
0x00000000004649ad: mov eax, 0; syscall; 
0x00000000004649ad: mov eax, 0; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000464933: mov eax, 0x101; syscall; 
0x0000000000443796: mov eax, 0x108; add byte ptr [rdx + rcx + 0x48], dh; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004652f9: mov eax, 0x119; syscall; 
0x00000000004652f9: mov eax, 0x119; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x00000000004652a4: mov eax, 0x123; syscall; 
0x00000000004652a4: mov eax, 0x123; syscall; mov dword ptr [rsp + 0x10], eax; ret; 
0x00000000004649e9: mov eax, 0x125; syscall; 
0x00000000004649e9: mov eax, 0x125; syscall; mov dword ptr [rsp + 0x18], eax; ret; 
0x000000000045b305: mov eax, 0x16; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x00000000004649c5: mov eax, 0x16; syscall; 
0x00000000004649c5: mov eax, 0x16; syscall; mov dword ptr [rsp + 0x10], eax; ret; 
0x0000000000465240: mov eax, 0x18; syscall; 
0x0000000000465240: mov eax, 0x18; syscall; ret; 
0x0000000000464b4f: mov eax, 0x1b; syscall; 
0x0000000000464b4f: mov eax, 0x1b; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x00000000004650af: mov eax, 0x1c; syscall; 
0x00000000004650af: mov eax, 0x1c; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000464a36: mov eax, 0x23; syscall; 
0x0000000000464a36: mov eax, 0x23; syscall; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004913be: mov eax, 0x246c8b48; add rsp, 0x48; ret; 
0x0000000000464b2e: mov eax, 0x26; syscall; 
0x0000000000464b2e: mov eax, 0x26; syscall; ret; 
0x0000000000464a80: mov eax, 0x27; syscall; 
0x0000000000464ae0: mov eax, 0x27; syscall; mov qword ptr [rsp + 8], rax; ret; 
0x0000000000465126: mov eax, 0x38; syscall; 
0x0000000000464910: mov eax, 0x3c; syscall; 
0x0000000000464acd: mov eax, 0x3e; syscall; 
0x0000000000464acd: mov eax, 0x3e; syscall; ret; 
0x0000000000465385: mov eax, 0x3f; syscall; 
0x0000000000465385: mov eax, 0x3f; syscall; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000042a472: mov eax, 0x448948c2; and al, 0x58; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004274c9: mov eax, 0x48000000; add esp, 0xc0; ret; 
0x0000000000445e13: mov eax, 0x48000000; mov dword ptr [rsp + 0x10], ecx; mov rbx, qword ptr [rdx]; nop; call rbx; 
0x000000000044b270: mov eax, 0x48000000; mov dword ptr [rsp + 0xc0], eax; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000044b1d1: mov eax, 0x48000000; mov dword ptr [rsp + 0xc0], ecx; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000040b9a0: mov eax, 0x48000000; mov dword ptr [rsp + 0xc0], ecx; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000445dc9: mov eax, 0x48000000; mov dword ptr [rsp], eax; mov rcx, qword ptr [rdx]; call rcx; 
0x0000000000476748: mov eax, 0x48000000; mov ebp, dword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x00000000004073a5: mov eax, 0x48000000; mov ebp, dword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000044bbca: mov eax, 0x48000000; mov ebp, dword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000044b2f8: mov eax, 0x48000000; mov ebp, dword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000402c8a: mov eax, 0x48000000; mov ebp, dword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000047e795: mov eax, 0x48000000; mov edx, dword ptr [rsp + 0x58]; mov qword ptr [rsp], rdx; call rcx; 
0x000000000047e7c0: mov eax, 0x48000000; mov esi, dword ptr [rsp + 0x68]; mov qword ptr [rsp], rsi; call rbx; 
0x000000000045778c: mov eax, 0x48000001; mov dword ptr [rsp + 0x68], eax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000458357: mov eax, 0x48000002; add esp, 0x2c0; ret; 
0x0000000000465332: mov eax, 0x48; syscall; 
0x0000000000465332: mov eax, 0x48; syscall; ret; 
0x0000000000461531: mov eax, 0x5858fffd; call 0x374a0; call 0x630c0; ret; 
0x00000000004651ab: mov eax, 0x83; syscall; 
0x000000000040388f: mov eax, 0x8b480002; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x0000000000403c02: mov eax, 0x8b480002; insb byte ptr [rdi], dx; and al, 0x50; add rsp, 0x58; ret; 
0x000000000043acf7: mov eax, 0x8d480008; adc eax, 0x8b847; call rax; 
0x000000000043acf7: mov eax, 0x8d480008; adc eax, 0x8b847; call rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000043ac56: mov eax, 0x8d480008; adc eax, 0x8b8e8; call rcx; 
0x0000000000419c3b: mov eax, 0x90000001; ret; 
0x00000000004653aa: mov eax, 0x95; syscall; 
0x00000000004653aa: mov eax, 0x95; syscall; mov qword ptr [rsp + 0x18], rax; ret; 
0x00000000004651fd: mov eax, 0x9e; syscall; 
0x000000000046502b: mov eax, 0xb; syscall; 
0x0000000000464a60: mov eax, 0xba; syscall; 
0x0000000000464a60: mov eax, 0xba; syscall; mov dword ptr [rsp + 8], eax; ret; 
0x00000000004650dc: mov eax, 0xca; syscall; 
0x00000000004650dc: mov eax, 0xca; syscall; mov dword ptr [rsp + 0x30], eax; ret; 
0x000000000046526f: mov eax, 0xcc; syscall; 
0x000000000046526f: mov eax, 0xcc; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x000000000042a3df: mov eax, 0xd00148c0; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000043acfe: mov eax, 0xd0ff0008; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000465284: mov eax, 0xd5; syscall; 
0x0000000000465284: mov eax, 0xd5; syscall; mov dword ptr [rsp + 0x10], eax; ret; 
0x0000000000464d74: mov eax, 0xd; syscall; 
0x0000000000464d74: mov eax, 0xd; syscall; mov dword ptr [rsp + 0x28], eax; ret; 
0x00000000004648e4: mov eax, 0xe7; syscall; 
0x00000000004648e4: mov eax, 0xe7; syscall; ret; 
0x000000000041a964: mov eax, 0xe8000107; xor ecx, dword ptr [rax]; add dword ptr [rax], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041eb24: mov eax, 0xe8000159; xor edx, dword ptr [rax + 1]; add cl, ch; ret; 
0x0000000000496c2e: mov eax, 0xe9000000; ret; 
0x00000000004652d1: mov eax, 0xe9; syscall; 
0x00000000004652d1: mov eax, 0xe9; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000464d33: mov eax, 0xe; syscall; 
0x0000000000464a9a: mov eax, 0xea; syscall; 
0x0000000000464a9a: mov eax, 0xea; syscall; ret; 
0x00000000004685c4: mov eax, 0xf000000; mov bh, 0x50; add dword ptr [rsi - 0x3f], esp; ret 0x4808; 
0x000000000042fbaf: mov eax, 0xf0; add byte ptr [rbp + 0x31], dh; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042fc75: mov eax, 0xf0; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000464f41: mov eax, 0xf; syscall; 
0x000000000046ad9a: mov eax, 0xfffffff5; mov rcx, qword ptr [rsp + 0x48]; lock xadd dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004381dc: mov eax, 0xffffffff; lea rcx, [rip + 0x11f060]; lock xadd dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000044f705: mov eax, 0xffffffff; lock xadd dword ptr [rbx + 0x2788], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000464973: mov eax, 0xffffffff; mov dword ptr [rsp + 0x10], eax; ret; 
0x0000000000464942: mov eax, 0xffffffff; mov dword ptr [rsp + 0x18], eax; ret; 
0x000000000048bfbf: mov eax, 0xffffffff; mov qword ptr [rsp + 0x128], rax; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x00000000004487ee: mov eax, 0xffffffff; mov qword ptr [rsp + 0x18], rax; call 0x39a0; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000493fc2: mov eax, 1; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000467e1a: mov eax, 1; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046498e: mov eax, 1; syscall; 
0x000000000046498e: mov eax, 1; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000464964: mov eax, 3; syscall; 
0x0000000000464f7d: mov eax, 9; syscall; 
0x0000000000445022: mov eax, dword ptr [0xfffffff8]; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000045f5a2: mov eax, dword ptr [0xfffffff8]; mov rax, qword ptr [rax + 0x30]; dec dword ptr [rax + 0x108]; ret; 
0x000000000043df07: mov eax, dword ptr [0xfffffff8]; mov rax, qword ptr [rax + 0x30]; dec dword ptr [rax + 0xf0]; mov rbp, qword ptr [rsp + 0x260]; add rsp, 0x268; ret; 
0x0000000000438ca2: mov eax, dword ptr [0xfffffff8]; mov rax, qword ptr [rax + 0x30]; mov byte ptr [rax + 0x114], 1; ret; 
0x000000000041059f: mov eax, dword ptr [r8 + 0xc]; mov qword ptr [rsp], r11; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; call rax; 
0x00000000004111e9: mov eax, dword ptr [r9 + 0xc]; mov qword ptr [rsp], r12; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; call rax; 
0x000000000040f84e: mov eax, dword ptr [r9 + 0xc]; mov qword ptr [rsp], r15; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; nop; call rax; 
0x000000000047d0b0: mov eax, dword ptr [rax + 0x100]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000485387: mov eax, dword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x40]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004855c7: mov eax, dword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x48]; mov qword ptr [rsp], rcx; call rax; 
0x000000000047e841: mov eax, dword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000486e33: mov eax, dword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x78]; mov qword ptr [rsp], rcx; call rax; 
0x000000000046567c: mov eax, dword ptr [rax + 0x10]; cmp qword ptr [rdx + 0x10], rax; sete al; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000452012: mov eax, dword ptr [rax + 0x10]; mov dword ptr [rsp + 0x48], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000451f2e: mov eax, dword ptr [rax + 0x10]; mov dword ptr [rsp + 0x78], eax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000043223d: mov eax, dword ptr [rax + 0x10]; mov qword ptr [rsp + 0x10], rcx; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000465546: mov eax, dword ptr [rax + 0x18]; cmp qword ptr [rdx + 0x18], rax; sete al; mov byte ptr [rsp + 0x18], al; ret; 
0x000000000044dcf8: mov eax, dword ptr [rax + 0x18]; mov qword ptr [rsp + 0x38], rcx; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004310c0: mov eax, dword ptr [rax + 0x18]; mov qword ptr [rsp], rcx; call rax; 
0x000000000040eef1: mov eax, dword ptr [rax + 0x18]; mov qword ptr [rsp], rdx; mov qword ptr [rsp + 8], rdx; mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; 
0x0000000000496f59: mov eax, dword ptr [rax + 0x18]; mov rcx, qword ptr [rsp + 0x240]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004970c1: mov eax, dword ptr [rax + 0x18]; mov rcx, qword ptr [rsp + 0x248]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000469601: mov eax, dword ptr [rax + 0x28]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000443792: mov eax, dword ptr [rax + 0x30]; cmp dword ptr [rax + 0x108], 0; je 0x437a8; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000421855: mov eax, dword ptr [rax + 0x30]; dec dword ptr [rax + 0x108]; mov qword ptr [rsp + 0x68], -1; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000045f5aa: mov eax, dword ptr [rax + 0x30]; dec dword ptr [rax + 0x108]; ret; 
0x000000000043df0f: mov eax, dword ptr [rax + 0x30]; dec dword ptr [rax + 0xf0]; mov rbp, qword ptr [rsp + 0x260]; add rsp, 0x268; ret; 
0x0000000000438caa: mov eax, dword ptr [rax + 0x30]; mov byte ptr [rax + 0x114], 1; ret; 
0x000000000042f314: mov eax, dword ptr [rax + 0x30]; mov ecx, dword ptr [rsp]; mov qword ptr [rax + 0x48], rcx; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000444f39: mov eax, dword ptr [rax + 0x30]; xor ecx, ecx; xchg dword ptr [rax + 0x334], ecx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000047ab34: mov eax, dword ptr [rax + 0x38]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000467970: mov eax, dword ptr [rax + 0x40]; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004674f0: mov eax, dword ptr [rax + 0x40]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048371e: mov eax, dword ptr [rax + 0x40]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000483f16: mov eax, dword ptr [rax + 0x40]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000047b894: mov eax, dword ptr [rax + 0x40]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000047c613: mov eax, dword ptr [rax + 0x48]; mov rcx, qword ptr [rsp + 0x90]; mov qword ptr [rsp], rcx; call rax; 
0x000000000042f2a8: mov eax, dword ptr [rax + 0x50]; mov qword ptr [rsp], rax; mov rax, qword ptr [rdx]; call rax; 
0x000000000047c4f3: mov eax, dword ptr [rax + 0x50]; mov qword ptr [rsp], rcx; mov qword ptr [rsp + 8], rbx; nop; call rax; 
0x00000000004997f2: mov eax, dword ptr [rax + 0x50]; mov qword ptr [rsp], rcx; mov rcx, qword ptr [rsp + 0xc8]; mov qword ptr [rsp + 8], rcx; call rax; 
0x0000000000468957: mov eax, dword ptr [rax + 0x60]; mov rcx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000446de9: mov eax, dword ptr [rax + 0x78]; mov qword ptr [rcx + 0x80], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000482597: mov eax, dword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; call rax; 
0x000000000047c5f5: mov eax, dword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; nop; call rax; 
0x00000000004105a0: mov eax, dword ptr [rax + 0xc]; mov qword ptr [rsp], r11; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; call rax; 
0x000000000043c95b: mov eax, dword ptr [rax + 0xd0]; inc dword ptr [rax + 0x14]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045f574: mov eax, dword ptr [rax + 0xd0]; movsxd rax, dword ptr [rax]; mov qword ptr [rsp + 8], rax; ret; 
0x0000000000485248: mov eax, dword ptr [rax + 0xe8]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000485315: mov eax, dword ptr [rax + 0xe8]; mov qword ptr [rsp], rcx; nop; call rax; 
0x0000000000484947: mov eax, dword ptr [rax + 0xf8]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004983d4: mov eax, dword ptr [rax + 0xf8]; mov qword ptr [rsp], rcx; nop; call rax; 
0x0000000000465712: mov eax, dword ptr [rax + 8]; cmp dword ptr [rdx + 8], eax; sete al; mov byte ptr [rsp + 0x18], al; nop; ret; 
0x0000000000465cb1: mov eax, dword ptr [rax + 8]; cmp qword ptr [rdx + 8], rax; sete al; mov byte ptr [rsp + 0x18], al; nop; ret; 
0x00000000004032f3: mov eax, dword ptr [rax + 8]; cmp qword ptr [rdx + 8], rax; sete al; mov byte ptr [rsp + 0x18], al; ret; 
0x000000000045e7c6: mov eax, dword ptr [rax + 8]; mov qword ptr [rsp + 0x10], rax; ret; 
0x00000000004695a9: mov eax, dword ptr [rax + 8]; mov qword ptr [rsp + 0x10], rcx; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000483795: mov eax, dword ptr [rax + 8]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048355f: mov eax, dword ptr [rax + 8]; mov qword ptr [rsp + 0x70], rcx; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000484908: mov eax, dword ptr [rax + 8]; mov qword ptr [rsp + 0x70], rcx; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000044b268: mov eax, dword ptr [rax + rdi + 8]; mov qword ptr [rsp + 0xb8], rcx; mov qword ptr [rsp + 0xc0], rax; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000045e5cb: mov eax, dword ptr [rax]; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000466e0d: mov eax, dword ptr [rax]; mov qword ptr [rsp + 0x18], rax; mov qword ptr [rsp + 0x20], rcx; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x00000000004356e6: mov eax, dword ptr [rax]; mov qword ptr [rsp + 0x18], rax; ret; 
0x000000000043473e: mov eax, dword ptr [rax]; mov qword ptr [rsp + 0x28], rax; mov qword ptr [rsp], rax; mov rcx, qword ptr [rip + 0x91df0]; lea rdx, [rip + 0x91de9]; call rcx; 
0x0000000000484032: mov eax, dword ptr [rax]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004032a5: mov eax, dword ptr [rax]; mov rcx, qword ptr [rsp + 8]; cmp dword ptr [rcx], eax; sete byte ptr [rsp + 0x18]; ret; 
0x00000000004032c6: mov eax, dword ptr [rax]; mov rcx, qword ptr [rsp + 8]; cmp qword ptr [rcx], rax; sete byte ptr [rsp + 0x18]; ret; 
0x000000000041206f: mov eax, dword ptr [rax]; not rax; nop; mov qword ptr [rcx + 0x40], rax; ret; 
0x0000000000479ba7: mov eax, dword ptr [rax]; shl rax, 3; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040ae81: mov eax, dword ptr [rax]; test eax, eax; setne byte ptr [rsp + 0x48]; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000041d79c: mov eax, dword ptr [rbx + 0x18]; add rax, rsi; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048ab0d: mov eax, dword ptr [rbx + 0x20]; mov qword ptr [rsp], rdx; mov qword ptr [rsp + 8], rcx; lea rsi, [rcx - 1]; mov qword ptr [rsp + 0x10], rsi; call rax; 
0x00000000004616f4: mov eax, dword ptr [rbx + 0xc0]; mov qword ptr fs:[0xfffffffffffffff8], rax; mov rsp, qword ptr [rax + 0x38]; mov qword ptr [rax + 0x38], 0; ret; 
0x0000000000422f49: mov eax, dword ptr [rbx + rdx*8 + 0x10]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048ff8b: mov eax, dword ptr [rcx + 0x38]; mov rcx, qword ptr [rcx + 0x40]; mov qword ptr [rsp + 0x10], rax; mov qword ptr [rsp + 0x18], rcx; ret; 
0x000000000049a3b1: mov eax, dword ptr [rcx + 0x98]; mov qword ptr [rsp], r8; call rax; 
0x00000000004111ea: mov eax, dword ptr [rcx + 0xc]; mov qword ptr [rsp], r12; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; call rax; 
0x000000000040f84f: mov eax, dword ptr [rcx + 0xc]; mov qword ptr [rsp], r15; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; nop; call rax; 
0x000000000044312f: mov eax, dword ptr [rcx + rax + 8]; mov qword ptr [rsp + 0x10], rdx; mov qword ptr [rsp + 0x18], rax; ret; 
0x000000000044ee99: mov eax, dword ptr [rcx + rax*8]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045b274: mov eax, dword ptr [rcx]; mov qword ptr [rip + 0x12be0b], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040e06c: mov eax, dword ptr [rcx]; mov qword ptr [rsp + 0x58], rax; mov byte ptr [rsp + 0x60], 1; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040b044: mov eax, dword ptr [rdx + rax + 8]; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004875fd: mov eax, dword ptr [rdx + rax + 8]; mov qword ptr [rsp + 0x50], rcx; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040360c: mov eax, dword ptr [rdx]; call rax; 
0x000000000040f85c: mov eax, dword ptr [rdx]; nop; call rax; 
0x0000000000427c68: mov eax, dword ptr [rip + 0x1194c2]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000444e7d: mov eax, dword ptr [rip + 0x1419bd]; bt eax, 0xd; jae 0x44e93; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042fa81: mov eax, dword ptr [rip + 0x156a09]; test eax, eax; jne 0x2fa95; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041ab41: mov eax, dword ptr [rip + 0x16e749]; mov qword ptr [rip + 0x16c4f2], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004840a8: mov eax, dword ptr [rip + 0x422ea]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043acf4: mov eax, dword ptr [rip + 0x8b84e]; lea rdx, [rip + 0x8b847]; call rax; 
0x0000000000434aba: mov eax, dword ptr [rip + 0x91aa8]; lea rdx, [rip + 0x91aa1]; call rax; 
0x00000000004346d6: mov eax, dword ptr [rip + 0x91e64]; lea rdx, [rip + 0x91e5d]; call rax; 
0x000000000042954f: mov eax, dword ptr [rip + 0x9ce4b]; lea rdx, [rip + 0x9ce44]; call rax; 
0x000000000048fe81: mov eax, dword ptr [rip + 0xbfe69]; mov rcx, qword ptr [rip + 0xbfe6a]; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000048fe41: mov eax, dword ptr [rip + 0xc6e39]; mov rcx, qword ptr [rip + 0xc6e3a]; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000048fe01: mov eax, dword ptr [rip + 0xc6e89]; mov rcx, qword ptr [rip + 0xc6e8a]; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000048fdc1: mov eax, dword ptr [rip + 0xc6ed9]; mov rcx, qword ptr [rip + 0xc6eda]; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x0000000000464d04: mov eax, dword ptr [rip + 0xdc456]; call rax; 
0x0000000000464c1e: mov eax, dword ptr [rip + 0xdc53c]; call rax; 
0x0000000000465079: mov eax, dword ptr [rip + 0xf19b9]; mov rbx, rsp; and rsp, 0xfffffffffffffff0; mov qword ptr [rsp], rbx; call rax; 
0x0000000000464feb: mov eax, dword ptr [rip + 0xf1a3f]; mov rbx, rsp; and rsp, 0xfffffffffffffff0; mov qword ptr [rsp], rbx; call rax; 
0x0000000000464f33: mov eax, dword ptr [rip + 0xf1ae7]; jmp rax; 
0x0000000000464ef3: mov eax, dword ptr [rip + 0xf1b27]; jmp rax; 
0x0000000000464d9e: mov eax, dword ptr [rip + 0xf1ca4]; mov rbx, rsp; and rsp, 0xfffffffffffffff0; call rax; 
0x0000000000442f25: mov eax, dword ptr [rip + 0xfe105]; mov dword ptr [rip + 0x143563], eax; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000044e018: mov eax, dword ptr [rsi + rax + 0xc]; mov dword ptr [rsp + 0xe0], eax; mov qword ptr [rsp + 0xe8], 0; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x0000000000464156: mov eax, dword ptr [rsi]; mov cl, byte ptr [rsi + 2]; mov word ptr [rdi], ax; mov byte ptr [rdi + 2], cl; ret; 
0x0000000000464150: mov eax, dword ptr [rsi]; mov dword ptr [rdi], eax; ret; 
0x0000000000464162: mov eax, dword ptr [rsi]; mov ecx, dword ptr [rsi + rbx - 4]; mov dword ptr [rdi], eax; mov dword ptr [rdi + rbx - 4], ecx; ret; 
0x0000000000464170: mov eax, dword ptr [rsi]; mov qword ptr [rdi], rax; ret; 
0x0000000000464177: mov eax, dword ptr [rsi]; mov rcx, qword ptr [rsi + rbx - 8]; mov qword ptr [rdi], rax; mov qword ptr [rdi + rbx - 8], rcx; ret; 
0x000000000045d49c: mov eax, dword ptr [rsp + 0x10]; cmp byte ptr [rax], 0; jne 0x5d4ae; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x00000000004032a1: mov eax, dword ptr [rsp + 0x10]; mov eax, dword ptr [rax]; mov rcx, qword ptr [rsp + 8]; cmp dword ptr [rcx], eax; sete byte ptr [rsp + 0x18]; ret; 
0x000000000045e44e: mov eax, dword ptr [rsp + 0x10]; mov qword ptr [rip + 0x12808f], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045eae5: mov eax, dword ptr [rsp + 0x10]; mov qword ptr [rip + 0xf8000], rax; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000040724b: mov eax, dword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x20], rax; ret; 
0x00000000004235e6: mov eax, dword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004066db: mov eax, dword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000402814: mov eax, dword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046750c: mov eax, dword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000414fb6: mov eax, dword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040d467: mov eax, dword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000042a6c6: mov eax, dword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004268eb: mov eax, dword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000424648: mov eax, dword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000047d8cd: mov eax, dword ptr [rsp + 0x10]; mov qword ptr [rsp + 0xb0], rax; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000402ccf: mov eax, dword ptr [rsp + 0x10]; mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x00000000004356e1: mov eax, dword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; mov qword ptr [rsp + 0x18], rax; ret; 
0x00000000004032c1: mov eax, dword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; mov rcx, qword ptr [rsp + 8]; cmp qword ptr [rcx], rax; sete byte ptr [rsp + 0x18]; ret; 
0x0000000000401e66: mov eax, dword ptr [rsp + 0x10]; mov rcx, qword ptr [rsp + 0x18]; lock cmpxchg qword ptr [rbx], rcx; sete byte ptr [rsp + 0x20]; ret; 
0x000000000045ae07: mov eax, dword ptr [rsp + 0x10]; mov rcx, qword ptr [rsp + 0x18]; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004695f7: mov eax, dword ptr [rsp + 0x10]; mov rcx, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax + 0x28]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000403261: mov eax, dword ptr [rsp + 0x10]; movzx eax, byte ptr [rax]; mov rcx, qword ptr [rsp + 8]; cmp byte ptr [rcx], al; sete byte ptr [rsp + 0x18]; ret; 
0x0000000000403281: mov eax, dword ptr [rsp + 0x10]; movzx eax, word ptr [rax]; mov rcx, qword ptr [rsp + 8]; cmp word ptr [rcx], ax; sete byte ptr [rsp + 0x18]; ret; 
0x0000000000401ec5: mov eax, dword ptr [rsp + 0x10]; xchg dword ptr [rbx], eax; ret; 
0x0000000000401ee6: mov eax, dword ptr [rsp + 0x10]; xchg qword ptr [rbx], rax; ret; 
0x0000000000438284: mov eax, dword ptr [rsp + 0x14]; cmp eax, ecx; ja 0x38274; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000047a413: mov eax, dword ptr [rsp + 0x178]; mov qword ptr [rsp + 0x1c8], rax; mov rbp, qword ptr [rsp + 0x160]; add rsp, 0x168; ret; 
0x0000000000483661: mov eax, dword ptr [rsp + 0x18]; and rax, 0x1f; mov qword ptr [rsp + 0x20], rax; ret; 
0x0000000000484c12: mov eax, dword ptr [rsp + 0x18]; bts rax, 7; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043ffcb: mov eax, dword ptr [rsp + 0x18]; mov dword ptr [rsp + 0x50], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000438d7b: mov eax, dword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x10], rax; call 0x386a0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040cdd9: mov eax, dword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040264d: mov eax, dword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x00000000004024df: mov eax, dword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000484d08: mov eax, dword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], 0x16; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044726d: mov eax, dword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x000000000042696f: mov eax, dword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004203e0: mov eax, dword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042613f: mov eax, dword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042a868: mov eax, dword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000430aa8: mov eax, dword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000403154: mov eax, dword ptr [rsp + 0x18]; mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x00000000004344be: mov eax, dword ptr [rsp + 0x18]; mov qword ptr [rsp], rax; call 0x34380; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000040b0ef: mov eax, dword ptr [rsp + 0x18]; mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000040aa1e: mov eax, dword ptr [rsp + 0x18]; mov qword ptr [rsp], rax; call 0xb0e0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000043aceb: mov eax, dword ptr [rsp + 0x18]; mov qword ptr [rsp], rax; mov rax, qword ptr [rip + 0x8b84e]; lea rdx, [rip + 0x8b847]; call rax; 
0x0000000000465118: mov eax, dword ptr [rsp + 0x18]; mov r9, qword ptr [rsp + 0x20]; mov r12, qword ptr [rsp + 0x28]; mov eax, 0x38; syscall; 
0x000000000045a347: mov eax, dword ptr [rsp + 0x18]; mov rcx, qword ptr [rsp + 0x20]; mov dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045ae86: mov eax, dword ptr [rsp + 0x18]; mov rcx, qword ptr [rsp + 0x20]; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000486226: mov eax, dword ptr [rsp + 0x18]; mov rcx, qword ptr [rsp + 0x20]; mov rax, qword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; call rax; 
0x000000000048493d: mov eax, dword ptr [rsp + 0x18]; mov rcx, qword ptr [rsp + 0x20]; mov rax, qword ptr [rax + 0xf8]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004983ca: mov eax, dword ptr [rsp + 0x18]; mov rcx, qword ptr [rsp + 0x20]; mov rax, qword ptr [rax + 0xf8]; mov qword ptr [rsp], rcx; nop; call rax; 
0x000000000042e26a: mov eax, dword ptr [rsp + 0x18]; neg eax; mov dword ptr [rsp + 0x50], eax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000442fb6: mov eax, dword ptr [rsp + 0x18]; test rax, rax; je 0x42fc5; mov dword ptr [rax], 0; mov dword ptr [rsp + 0x20], 0x7fffffff; ret; 
0x0000000000442fcf: mov eax, dword ptr [rsp + 0x18]; test rax, rax; je 0x42fda; mov dword ptr [rax], edx; mov dword ptr [rsp + 0x20], ebx; ret; 
0x0000000000403dde: mov eax, dword ptr [rsp + 0x1c]; mov dword ptr [rsp + 0x48], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042f43b: mov eax, dword ptr [rsp + 0x20]; bt eax, 0x1b; jae 0x2f44f; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004231fe: mov eax, dword ptr [rsp + 0x20]; cmp qword ptr [rax + 0x10], 0; je 0x23213; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042325e: mov eax, dword ptr [rsp + 0x20]; cmp qword ptr [rax + 0x10], 0; jne 0x23273; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043e42a: mov eax, dword ptr [rsp + 0x20]; cmp qword ptr [rax + 0x40], 0; je 0x3e43f; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000460362: mov eax, dword ptr [rsp + 0x20]; cmp rax, 0x20; jne 0x60376; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044c469: mov eax, dword ptr [rsp + 0x20]; lea rdx, [rsp + 0x20]; call rax; 
0x000000000045089d: mov eax, dword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x10], rax; mov rdx, qword ptr [rsp + 0x38]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004204f5: mov eax, dword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042df91: mov eax, dword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000046bd73: mov eax, dword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x48], rax; mov byte ptr [rsp + 0x50], 1; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048f13c: mov eax, dword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045be49: mov eax, dword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x50], rax; mov byte ptr [rsp + 0x58], 1; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040a06a: mov eax, dword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040cd19: mov eax, dword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000415a7f: mov eax, dword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000451c35: mov eax, dword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000045190d: mov eax, dword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x000000000043ac4a: mov eax, dword ptr [rsp + 0x20]; mov qword ptr [rsp], rax; mov rcx, qword ptr [rip + 0x8b8ef]; lea rdx, [rip + 0x8b8e8]; call rcx; 
0x0000000000464f74: mov eax, dword ptr [rsp + 0x20]; mov r9d, dword ptr [rsp + 0x24]; mov eax, 9; syscall; 
0x00000000004650d3: mov eax, dword ptr [rsp + 0x20]; mov r9d, dword ptr [rsp + 0x28]; mov eax, 0xca; syscall; 
0x00000000004650d3: mov eax, dword ptr [rsp + 0x20]; mov r9d, dword ptr [rsp + 0x28]; mov eax, 0xca; syscall; mov dword ptr [rsp + 0x30], eax; ret; 
0x000000000045a279: mov eax, dword ptr [rsp + 0x20]; mov rcx, qword ptr [rsp + 0x28]; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000045c106: mov eax, dword ptr [rsp + 0x20]; mov rcx, qword ptr [rsp + 0x40]; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000045ad5e: mov eax, dword ptr [rsp + 0x28]; cmp byte ptr [rax], 0; je 0x5ad71; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045b465: mov eax, dword ptr [rsp + 0x28]; mov byte ptr [rax], 1; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000471800: mov eax, dword ptr [rsp + 0x28]; mov qword ptr [rip + 0xe534d], rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000414efd: mov eax, dword ptr [rsp + 0x28]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000450f19: mov eax, dword ptr [rsp + 0x28]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000411ed3: mov eax, dword ptr [rsp + 0x28]; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004373de: mov eax, dword ptr [rsp + 0x28]; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000040102f: mov eax, dword ptr [rsp + 0x28]; mov qword ptr [rsp + 8], rax; call 0x1060; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045e9e7: mov eax, dword ptr [rsp + 0x28]; mov qword ptr [rsp + 8], rax; call 0x11f80; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000415ef0: mov eax, dword ptr [rsp + 0x28]; mov qword ptr [rsp + 8], rax; call 0x3b00; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042571e: mov eax, dword ptr [rsp + 0x28]; mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000483719: mov eax, dword ptr [rsp + 0x28]; mov rax, qword ptr [rax + 0x40]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048abfe: mov eax, dword ptr [rsp + 0x28]; mov rcx, qword ptr [rax + 0x18]; mov rdx, qword ptr [rsp + 0x30]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000403958: mov eax, dword ptr [rsp + 0x28]; mov rcx, qword ptr [rsp + 0x20]; xchg qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042e83c: mov eax, dword ptr [rsp + 0x28]; test eax, eax; jl 0x2e84e; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004733c2: mov eax, dword ptr [rsp + 0x28]; test rax, rax; jge 0x733d5; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045f186: mov eax, dword ptr [rsp + 0x28]; test rax, rax; jne 0x5f199; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004600b1: mov eax, dword ptr [rsp + 0x2c]; mov dword ptr [rsp + 0x48], eax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000412796: mov eax, dword ptr [rsp + 0x2c]; mov dword ptr [rsp + 0x4c], eax; mov qword ptr [rsp + 0x50], r9; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004102e6: mov eax, dword ptr [rsp + 0x30]; cmp qword ptr [rax + 0x18], 0; jne 0x102fb; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000410ea6: mov eax, dword ptr [rsp + 0x30]; cmp qword ptr [rax + 0x18], 0; jne 0x10ebb; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000411806: mov eax, dword ptr [rsp + 0x30]; cmp qword ptr [rax + 0x18], 0; jne 0x1181b; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040f426: mov eax, dword ptr [rsp + 0x30]; cmp qword ptr [rax + 0x18], 0; jne 0xf43b; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044ec86: mov eax, dword ptr [rsp + 0x30]; mov dword ptr [rsp + 0x78], eax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040ee49: mov eax, dword ptr [rsp + 0x30]; mov qword ptr [rdx + 0x58], rax; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000042e083: mov eax, dword ptr [rsp + 0x30]; mov qword ptr [rip + 0x1584ea], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000048c651: mov eax, dword ptr [rsp + 0x30]; mov qword ptr [rsp + 0x128], rax; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x0000000000404b07: mov eax, dword ptr [rsp + 0x30]; mov qword ptr [rsp + 0x18], rax; call 0x4b20; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004908fb: mov eax, dword ptr [rsp + 0x30]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000042e59a: mov eax, dword ptr [rsp + 0x30]; mov qword ptr [rsp + 0x660], rax; mov rbp, qword ptr [rsp + 0x648]; add rsp, 0x650; ret; 
0x0000000000460557: mov eax, dword ptr [rsp + 0x30]; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000447117: mov eax, dword ptr [rsp + 0x30]; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000043462b: mov eax, dword ptr [rsp + 0x30]; mov qword ptr [rsp], rax; call 0x34380; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048dfba: mov eax, dword ptr [rsp + 0x30]; mov r9, qword ptr [rsp + 0x38]; mov rax, qword ptr [rsp + 8]; syscall; 
0x0000000000483790: mov eax, dword ptr [rsp + 0x30]; mov rax, qword ptr [rax + 8]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048402d: mov eax, dword ptr [rsp + 0x30]; mov rax, qword ptr [rax]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000405a8f: mov eax, dword ptr [rsp + 0x30]; test rax, rax; setne byte ptr [rsp + 0xa9]; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000451f53: mov eax, dword ptr [rsp + 0x34]; mov dword ptr [rsp + 0x78], eax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000042eda5: mov eax, dword ptr [rsp + 0x34]; test eax, eax; jge 0x2edbd; mov rbp, qword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x0000000000483dcf: mov eax, dword ptr [rsp + 0x38]; bts rax, 7; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000041c640: mov eax, dword ptr [rsp + 0x38]; lea rcx, [rip + 0x16a53d]; lock xadd qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045e831: mov eax, dword ptr [rsp + 0x38]; mov qword ptr [rsp + 0x10], rax; call 0x11cc0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042aafd: mov eax, dword ptr [rsp + 0x38]; mov qword ptr [rsp + 0x10], rax; call 0x2a180; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000460250: mov eax, dword ptr [rsp + 0x38]; mov qword ptr [rsp + 0x10], rax; call 0x43640; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004605d1: mov eax, dword ptr [rsp + 0x38]; mov qword ptr [rsp + 0x10], rax; call 0x64040; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000483dfa: mov eax, dword ptr [rsp + 0x38]; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000484af4: mov eax, dword ptr [rsp + 0x38]; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044bc86: mov eax, dword ptr [rsp + 0x38]; mov qword ptr [rsp + 0x60], rax; mov qword ptr [rsp + 0x68], rcx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000415be6: mov eax, dword ptr [rsp + 0x38]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000490734: mov eax, dword ptr [rsp + 0x38]; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040cf42: mov eax, dword ptr [rsp + 0x38]; mov qword ptr [rsp + 8], rax; call 0x2b300; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000436f04: mov eax, dword ptr [rsp + 0x38]; mov qword ptr [rsp + 8], rax; call 0x36d40; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043b9a7: mov eax, dword ptr [rsp + 0x38]; mov qword ptr [rsp], rax; call 0x3b700; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000485382: mov eax, dword ptr [rsp + 0x38]; mov rax, qword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x40]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000483f11: mov eax, dword ptr [rsp + 0x38]; mov rax, qword ptr [rax + 0x40]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000043d583: mov eax, dword ptr [rsp + 0x3a0]; mov qword ptr [rdi], rax; mov qword ptr [rsp + 0x3e8], rdi; mov rbp, qword ptr [rsp + 0x3d0]; add rsp, 0x3d8; ret; 
0x000000000048afae: mov eax, dword ptr [rsp + 0x40]; cmp rcx, rax; jl 0x8af7c; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000451f2a: mov eax, dword ptr [rsp + 0x40]; mov eax, dword ptr [rax + 0x10]; mov dword ptr [rsp + 0x78], eax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000483c85: mov eax, dword ptr [rsp + 0x40]; mov qword ptr [rdi + 8], rax; mov qword ptr [rsp + 0x50], rdi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040a4b5: mov eax, dword ptr [rsp + 0x40]; mov qword ptr [rsp + 0x50], rax; mov byte ptr [rsp + 0x58], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040a3d0: mov eax, dword ptr [rsp + 0x40]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040be71: mov eax, dword ptr [rsp + 0x40]; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000045f78c: mov eax, dword ptr [rsp + 0x40]; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000409cb2: mov eax, dword ptr [rsp + 0x40]; mov qword ptr [rsp + 0xc8], rax; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x000000000049193b: mov eax, dword ptr [rsp + 0x40]; mov qword ptr [rsp + 8], rax; call 0x91260; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000043484b: mov eax, dword ptr [rsp + 0x40]; mov qword ptr [rsp], rax; mov rcx, qword ptr [rdx]; call rcx; 
0x00000000004855c2: mov eax, dword ptr [rsp + 0x40]; mov rax, qword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x48]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004970bc: mov eax, dword ptr [rsp + 0x40]; mov rax, qword ptr [rax + 0x18]; mov rcx, qword ptr [rsp + 0x248]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000482451: mov eax, dword ptr [rsp + 0x40]; movzx eax, byte ptr [rax]; mov byte ptr [rsp + 0x50], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044cfb8: mov eax, dword ptr [rsp + 0x48]; mov qword ptr [rsp + 0x118], rax; mov rbp, qword ptr [rsp + 0xf0]; add rsp, 0xf8; ret; 
0x000000000041f84c: mov eax, dword ptr [rsp + 0x48]; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000045726c: mov eax, dword ptr [rsp + 0x48]; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000048451f: mov eax, dword ptr [rsp + 0x50]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040408c: mov eax, dword ptr [rsp + 0x50]; mov qword ptr [rsp + 0x18], rax; call 0x41a0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004029a8: mov eax, dword ptr [rsp + 0x50]; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004847de: mov eax, dword ptr [rsp + 0x50]; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040c540: mov eax, dword ptr [rsp + 0x50]; mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000048f4cc: mov eax, dword ptr [rsp + 0x50]; mov qword ptr [rsp], rax; call 0x8eb00; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000040e0e9: mov eax, dword ptr [rsp + 0x50]; mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], 0; mov rax, qword ptr [rdx]; call rax; 
0x000000000040e009: mov eax, dword ptr [rsp + 0x50]; mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], rcx; mov rcx, qword ptr [rdx]; call rcx; 
0x00000000004035f9: mov eax, dword ptr [rsp + 0x50]; mov qword ptr [rsp], rax; mov rax, qword ptr [rsp + 0x58]; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; call rax; 
0x0000000000437aa7: mov eax, dword ptr [rsp + 0x50]; mov qword ptr [rsp], rax; mov rdx, qword ptr [rsp + 0x68]; mov rax, qword ptr [rdx]; call rax; 
0x000000000047e83c: mov eax, dword ptr [rsp + 0x50]; mov rax, qword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000468952: mov eax, dword ptr [rsp + 0x50]; mov rax, qword ptr [rax + 0x60]; mov rcx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000468914: mov eax, dword ptr [rsp + 0x50]; mov rcx, qword ptr [rax + 0x38]; mov rdx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rdx; call rcx; 
0x00000000004688ae: mov eax, dword ptr [rsp + 0x50]; mov rcx, qword ptr [rax + 0x40]; mov rdx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rdx; nop; call rcx; 
0x000000000047e78e: mov eax, dword ptr [rsp + 0x50]; mov rcx, qword ptr [rax + 0xb8]; mov rdx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rdx; call rcx; 
0x000000000045e0a7: mov eax, dword ptr [rsp + 0x50]; mov rcx, qword ptr [rsp + 0x58]; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x00000000004842b3: mov eax, dword ptr [rsp + 0x58]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000493ca0: mov eax, dword ptr [rsp + 0x58]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000044e1bf: mov eax, dword ptr [rsp + 0x58]; mov qword ptr [rsp + 0xe8], rax; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x0000000000403602: mov eax, dword ptr [rsp + 0x58]; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; call rax; 
0x000000000040f911: mov eax, dword ptr [rsp + 0x58]; mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], rax; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000040e282: mov eax, dword ptr [rsp + 0x58]; mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], rcx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000047bed4: mov eax, dword ptr [rsp + 0x58]; test rax, rax; jge 0x7bee7; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000492675: mov eax, dword ptr [rsp + 0x60]; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000046b88a: mov eax, dword ptr [rsp + 0x60]; mov qword ptr [rsp], rax; call 0x6af00; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000043ec83: mov eax, dword ptr [rsp + 0x68]; mov qword ptr [rsp + 0x98], rax; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000041fff3: mov eax, dword ptr [rsp + 0x70]; lea rdx, [rsp + 0x70]; call rax; 
0x00000000004914af: mov eax, dword ptr [rsp + 0x70]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; nop; ret; 
0x000000000048ba06: mov eax, dword ptr [rsp + 0x70]; mov qword ptr [rsp + 0xc8], rax; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x0000000000448648: mov eax, dword ptr [rsp + 0x70]; mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000486e2e: mov eax, dword ptr [rsp + 0x70]; mov rax, qword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x78]; mov qword ptr [rsp], rcx; call rax; 
0x000000000045413a: mov eax, dword ptr [rsp + 0x78]; mov qword ptr [rsp + 0x320], rax; mov rbp, qword ptr [rsp + 0x2c0]; add rsp, 0x2c8; ret; 
0x000000000044aa36: mov eax, dword ptr [rsp + 0x78]; mov qword ptr [rsp + 0xd8], rax; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000048fec2: mov eax, dword ptr [rsp + 0x78]; mov rcx, qword ptr [rax + 0x20]; mov rdx, qword ptr [rax + 0x28]; mov rcx, qword ptr [rcx + 0x18]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000459e84: mov eax, dword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x000000000047c60b: mov eax, dword ptr [rsp + 0x88]; mov rax, qword ptr [rax + 0x48]; mov rcx, qword ptr [rsp + 0x90]; mov qword ptr [rsp], rcx; call rax; 
0x000000000047c5d1: mov eax, dword ptr [rsp + 0x88]; mov rcx, qword ptr [rax + 0x48]; mov rdx, qword ptr [rsp + 0x90]; mov qword ptr [rsp], rdx; call rcx; 
0x00000000004296f5: mov eax, dword ptr [rsp + 0x90]; lea rdx, [rsp + 0x90]; call rax; 
0x000000000041dd9e: mov eax, dword ptr [rsp + 0x98]; add qword ptr [rax + 0x10], rdx; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x00000000004745c6: mov eax, dword ptr [rsp + 0x98]; mov qword ptr [rsp + 0x1e0], rax; mov rbp, qword ptr [rsp + 0x188]; add rsp, 0x190; ret; 
0x000000000047fcc8: mov eax, dword ptr [rsp + 0xa0]; mov qword ptr [rsp + 0x170], rax; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x0000000000445dc6: mov eax, dword ptr [rsp + 0xb8]; mov qword ptr [rsp], rax; mov rcx, qword ptr [rdx]; call rcx; 
0x00000000004937fe: mov eax, dword ptr [rsp + 0xe0]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x00000000004421c5: mov eax, dword ptr [rsp + 8]; bt rax, 0x20; jb 0x421da; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000493fed: mov eax, dword ptr [rsp + 8]; cmp byte ptr [rax + 0x4b], 0; je 0x94001; mov eax, 1; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000493fb8: mov eax, dword ptr [rsp + 8]; cmp byte ptr [rax + 0x4c], 0; je 0x93fcc; mov eax, 1; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000467ea1: mov eax, dword ptr [rsp + 8]; cmp qword ptr [rax + 0x18], 0; setne byte ptr [rsp + 0x10]; ret; 
0x0000000000464901: mov eax, dword ptr [rsp + 8]; mov dword ptr [rax], 0; mov edi, 0; mov eax, 0x3c; syscall; 
0x0000000000442fe1: mov eax, dword ptr [rsp + 8]; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000407241: mov eax, dword ptr [rsp + 8]; mov qword ptr [rsp + 0x18], rax; mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x20], rax; ret; 
0x00000000004162ce: mov eax, dword ptr [rsp + 8]; mov qword ptr [rsp + 0x20], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000426b4c: mov eax, dword ptr [rsp + 8]; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000483e73: mov eax, dword ptr [rsp + 8]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000424a66: mov eax, dword ptr [rsp + 8]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004836fe: mov eax, dword ptr [rsp + 8]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040d1a6: mov eax, dword ptr [rsp + 8]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000045e7c1: mov eax, dword ptr [rsp + 8]; mov rax, qword ptr [rax + 8]; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000045e7a1: mov eax, dword ptr [rsp + 8]; mov rax, qword ptr [rax]; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000493f61: mov eax, dword ptr [rsp + 8]; mov rcx, qword ptr [rax + 0x58]; movzx eax, byte ptr [rax + 0x48]; mov qword ptr [rsp + 0x10], rcx; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000493f81: mov eax, dword ptr [rsp + 8]; mov rcx, qword ptr [rax + 0x60]; movzx eax, byte ptr [rax + 0x49]; mov qword ptr [rsp + 0x10], rcx; mov byte ptr [rsp + 0x18], al; ret; 
0x00000000004695a1: mov eax, dword ptr [rsp + 8]; mov rcx, qword ptr [rax]; mov rax, qword ptr [rax + 8]; mov qword ptr [rsp + 0x10], rcx; mov qword ptr [rsp + 0x18], rax; ret; 
0x000000000047d0a6: mov eax, dword ptr [rsp + 8]; mov rcx, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0x100]; mov qword ptr [rsp], rcx; call rax; 
0x000000000048258d: mov eax, dword ptr [rsp + 8]; mov rcx, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; call rax; 
0x000000000047c5eb: mov eax, dword ptr [rsp + 8]; mov rcx, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; nop; call rax; 
0x000000000048523e: mov eax, dword ptr [rsp + 8]; mov rcx, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0xe8]; mov qword ptr [rsp], rcx; call rax; 
0x000000000048530b: mov eax, dword ptr [rsp + 8]; mov rcx, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0xe8]; mov qword ptr [rsp], rcx; nop; call rax; 
0x0000000000479c61: mov eax, dword ptr [rsp + 8]; movzx eax, byte ptr [rax + 0x15]; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000479c81: mov eax, dword ptr [rsp + 8]; movzx eax, byte ptr [rax + 0x16]; mov qword ptr [rsp + 0x10], rax; ret; 
0x00000000004673c1: mov eax, dword ptr [rsp + 8]; movzx eax, byte ptr [rax + 0x17]; and eax, 0x1f; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000494022: mov eax, dword ptr [rsp + 8]; movzx eax, byte ptr [rax + 0x4a]; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000493fd9: mov eax, dword ptr [rsp + 8]; movzx eax, byte ptr [rax + 0x4d]; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000494014: mov eax, dword ptr [rsp + 8]; movzx eax, byte ptr [rax + 0x4e]; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000462f80: mov eax, dword ptr [rsp + 8]; pause; sub eax, 1; jne 0x62f84; ret; 
0x000000000045b4c7: mov eax, dword ptr [rsp + 8]; sub rax, qword ptr [rip + 0x12bbd6]; add qword ptr [rip + 0x12bbc7], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048df55: mov eax, dword ptr [rsp + 8]; syscall; 
0x000000000045e5c1: mov eax, dword ptr [rsp + 8]; test rax, rax; je 0x5e5d3; mov rax, qword ptr [rax]; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000045e7e1: mov eax, dword ptr [rsp + 8]; test rax, rax; je 0x5e7f3; mov rax, qword ptr [rax]; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000423857: mov eax, dword ptr [rsp + 8]; test rax, rax; setne byte ptr [rsp + 0x38]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004648a2: mov eax, dword ptr [rsp]; add rsp, 0x170; popfq; pop rbp; ret; 
0x0000000000441aaf: mov eax, dword ptr [rsp]; mov dword ptr [rsp + 0x20], eax; mov qword ptr [rsp + 0x28], rbx; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000451294: mov eax, dword ptr [rsp]; mov qword ptr [rsp + 0x18], rax; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000407871: mov eax, ebp; add al, byte ptr [rax]; call 0x33b60; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000409294: mov eax, ecx; shr rcx, 0x20; xor rax, rcx; mov qword ptr [rsp + 0x18], rax; ret; 
0x000000000040921b: mov eax, ecx; shr rcx, 0x20; xor rcx, rax; mov qword ptr [rsp + 0x18], rcx; ret; 
0x00000000004090cd: mov eax, ecx; shr rcx, 0x20; xor rcx, rax; mov qword ptr [rsp + 0x20], rcx; ret; 
0x0000000000494833: mov eax, edi; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add al, 0x24; call rcx; 
0x0000000000441af7: mov eax, edx; lock cmpxchg qword ptr [rcx + 0x10], rbx; sete dl; test dl, dl; je 0x41ae5; ret; 
0x0000000000404704: mov ebp, 0x246c8b48; push 0x70c48348; ret; 
0x00000000004206af: mov ebp, 0x402444c6; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000440081: mov ebp, 0x40245c88; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004208eb: mov ebp, 0x440f48c1; ret 0x4890; 
0x000000000048df07: mov ebp, 0x48000c21; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000047af6b: mov ebp, 0x48fffe8d; mov ebp, dword ptr [rbp]; mov rbp, qword ptr [rsp + 0xe0]; add rsp, 0xe8; ret; 
0x0000000000406827: mov ebp, 0x8948000b; and al, 0x48; mov qword ptr [rsp + 0x50], 0x1d; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000451a54: mov ebp, 0x89480011; and al, 0x30; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045ddd4: mov ebp, 0x8b48fffc; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000048c108: mov ebp, 0xb9ebc031; mov qword ptr [rsp + 0x128], rax; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x0000000000402004: mov ebp, 0xe8d348c9; and rax, 1; lea rax, [rax*2 - 1]; mov qword ptr [r9], rax; ret; 
0x000000000040205f: mov ebp, 0xeed348cf; and rsi, 1; lea rax, [rsi*2 - 1]; mov qword ptr [r9], rax; ret; 
0x0000000000444e7f: mov ebp, 0xf001419; mov edx, 0xa730de0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000047a930: mov ebp, dword ptr [rbp]; mov byte ptr [rsp + 0x1b0], al; mov rbp, qword ptr [rsp + 0x138]; add rsp, 0x140; ret; 
0x000000000047b590: mov ebp, dword ptr [rbp]; mov byte ptr [rsp + 0x1d8], al; mov rbp, qword ptr [rsp + 0x150]; add rsp, 0x158; ret; 
0x000000000047b370: mov ebp, dword ptr [rbp]; mov byte ptr [rsp + 0x1e8], al; mov rbp, qword ptr [rsp + 0x158]; add rsp, 0x160; ret; 
0x000000000047d4f0: mov ebp, dword ptr [rbp]; mov byte ptr [rsp + 0x230], al; mov rbp, qword ptr [rsp + 0x1a0]; add rsp, 0x1a8; ret; 
0x0000000000479ef0: mov ebp, dword ptr [rbp]; mov rbp, qword ptr [rsp + 0x160]; add rsp, 0x168; ret; 
0x000000000047af70: mov ebp, dword ptr [rbp]; mov rbp, qword ptr [rsp + 0xe0]; add rsp, 0xe8; ret; 
0x000000000047b130: mov ebp, dword ptr [rbp]; mov rbp, qword ptr [rsp + 0xf0]; add rsp, 0xf8; ret; 
0x000000000045f2d1: mov ebp, dword ptr [rdi]; std; call qword ptr [rax + 0x2505e8]; add bl, ch; ret; 
0x000000000047bc71: mov ebp, dword ptr [rip - 0x76b7fffa]; and al, 0x58; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000462d82: mov ebp, dword ptr [rsp + 0x10000000]; add rsp, 0x10000008; ret; 
0x0000000000462a02: mov ebp, dword ptr [rsp + 0x1000000]; add rsp, 0x1000008; ret; 
0x0000000000462682: mov ebp, dword ptr [rsp + 0x100000]; add rsp, 0x100008; ret; 
0x000000000046139a: mov ebp, dword ptr [rsp + 0x10000]; add rsp, 0x10008; ret; 
0x000000000046111a: mov ebp, dword ptr [rsp + 0x1000]; add rsp, 0x1008; ret; 
0x000000000044cb98: mov ebp, dword ptr [rsp + 0x100]; add rsp, 0x108; ret; 
0x0000000000406de6: mov ebp, dword ptr [rsp + 0x108]; add rsp, 0x110; ret; 
0x0000000000407197: mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; nop; ret; 
0x000000000040103e: mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000480a8f: mov ebp, dword ptr [rsp + 0x110]; add rsp, 0x118; ret; 
0x0000000000458b91: mov ebp, dword ptr [rsp + 0x120]; add rsp, 0x128; nop; ret; 
0x000000000042864e: mov ebp, dword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x00000000004680a8: mov ebp, dword ptr [rsp + 0x128]; add rsp, 0x130; ret; 
0x000000000047a75c: mov ebp, dword ptr [rsp + 0x138]; add rsp, 0x140; ret; 
0x000000000047b59b: mov ebp, dword ptr [rsp + 0x150]; add rsp, 0x158; ret; 
0x000000000047b37b: mov ebp, dword ptr [rsp + 0x158]; add rsp, 0x160; ret; 
0x0000000000479ef4: mov ebp, dword ptr [rsp + 0x160]; add rsp, 0x168; ret; 
0x000000000042b7f1: mov ebp, dword ptr [rsp + 0x168]; add rsp, 0x170; nop; ret; 
0x000000000042b4a6: mov ebp, dword ptr [rsp + 0x168]; add rsp, 0x170; ret; 
0x0000000000474c51: mov ebp, dword ptr [rsp + 0x188]; add rsp, 0x190; nop; ret; 
0x00000000004745d6: mov ebp, dword ptr [rsp + 0x188]; add rsp, 0x190; ret; 
0x000000000040fdd7: mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; nop; ret; 
0x000000000040281e: mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045550a: mov ebp, dword ptr [rsp + 0x198]; add rsp, 0x1a0; ret; 
0x00000000004499a6: mov ebp, dword ptr [rsp + 0x1a0]; add rsp, 0x1a8; ret; 
0x00000000004495c6: mov ebp, dword ptr [rsp + 0x1a8]; add rsp, 0x1b0; ret; 
0x0000000000419c31: mov ebp, dword ptr [rsp + 0x1b0]; add rsp, 0x1b8; nop; ret; 
0x00000000004813ad: mov ebp, dword ptr [rsp + 0x1b0]; add rsp, 0x1b8; ret; 
0x0000000000498012: mov ebp, dword ptr [rsp + 0x1c8]; add rsp, 0x1d0; ret; 
0x000000000041cb67: mov ebp, dword ptr [rsp + 0x1f8]; add rsp, 0x200; ret; 
0x0000000000462e62: mov ebp, dword ptr [rsp + 0x20000000]; add rsp, 0x20000008; ret; 
0x0000000000462ae2: mov ebp, dword ptr [rsp + 0x2000000]; add rsp, 0x2000008; ret; 
0x0000000000462762: mov ebp, dword ptr [rsp + 0x200000]; add rsp, 0x200008; ret; 
0x00000000004623e2: mov ebp, dword ptr [rsp + 0x20000]; add rsp, 0x20008; ret; 
0x00000000004611ba: mov ebp, dword ptr [rsp + 0x2000]; add rsp, 0x2008; ret; 
0x0000000000460f88: mov ebp, dword ptr [rsp + 0x200]; add rsp, 0x208; ret; 
0x000000000042e965: mov ebp, dword ptr [rsp + 0x2020]; add rsp, 0x2028; ret; 
0x000000000047c8c5: mov ebp, dword ptr [rsp + 0x208]; add rsp, 0x210; ret; 
0x0000000000401db7: mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x0000000000401cc2: mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043df19: mov ebp, dword ptr [rsp + 0x260]; add rsp, 0x268; ret; 
0x0000000000454ec0: mov ebp, dword ptr [rsp + 0x278]; add rsp, 0x280; ret; 
0x0000000000432377: mov ebp, dword ptr [rsp + 0x28]; add rsp, 0x30; nop; ret; 
0x0000000000403b6b: mov ebp, dword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000458354: mov ebp, dword ptr [rsp + 0x2b8]; add rsp, 0x2c0; ret; 
0x0000000000453442: mov ebp, dword ptr [rsp + 0x2c0]; add rsp, 0x2c8; ret; 
0x0000000000406a77: mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; nop; ret; 
0x0000000000401a26: mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000403717: mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x0000000000402951: mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000464e58: mov ebp, dword ptr [rsp + 0x38]; mov rbx, qword ptr [rsp + 0x40]; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000043d329: mov ebp, dword ptr [rsp + 0x3d0]; add rsp, 0x3d8; ret; 
0x0000000000474ff1: mov ebp, dword ptr [rsp + 0x3e8]; add rsp, 0x3f0; nop; ret; 
0x0000000000462f42: mov ebp, dword ptr [rsp + 0x40000000]; add rsp, 0x40000008; ret; 
0x0000000000462bc2: mov ebp, dword ptr [rsp + 0x4000000]; add rsp, 0x4000008; ret; 
0x0000000000462842: mov ebp, dword ptr [rsp + 0x400000]; add rsp, 0x400008; ret; 
0x00000000004624c2: mov ebp, dword ptr [rsp + 0x40000]; add rsp, 0x40008; ret; 
0x000000000046125a: mov ebp, dword ptr [rsp + 0x4000]; add rsp, 0x4008; ret; 
0x0000000000461008: mov ebp, dword ptr [rsp + 0x400]; add rsp, 0x408; ret; 
0x0000000000428b77: mov ebp, dword ptr [rsp + 0x40]; add rsp, 0x48; nop; ret; 
0x000000000040931c: mov ebp, dword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000441345: mov ebp, dword ptr [rsp + 0x430]; add rsp, 0x438; ret; 
0x000000000042ed33: mov ebp, dword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x000000000040be97: mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; nop; ret; 
0x0000000000406930: mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000043f5b7: mov ebp, dword ptr [rsp + 0x50]; add rsp, 0x58; nop; ret; 
0x0000000000403c06: mov ebp, dword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000437c37: mov ebp, dword ptr [rsp + 0x58]; add rsp, 0x60; nop; ret; 
0x0000000000411586: mov ebp, dword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000045a737: mov ebp, dword ptr [rsp + 0x60]; add rsp, 0x68; nop; ret; 
0x000000000041ea9f: mov ebp, dword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000042e45e: mov ebp, dword ptr [rsp + 0x648]; add rsp, 0x650; ret; 
0x0000000000424177: mov ebp, dword ptr [rsp + 0x68]; add rsp, 0x70; nop; ret; 
0x0000000000403a60: mov ebp, dword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000475940: mov ebp, dword ptr [rsp + 0x690]; add rsp, 0x698; ret; 
0x00000000004503f7: mov ebp, dword ptr [rsp + 0x70]; add rsp, 0x78; nop; ret; 
0x0000000000404b86: mov ebp, dword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000463318: mov ebp, dword ptr [rsp + 0x70]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x00000000004914b7: mov ebp, dword ptr [rsp + 0x78]; sub rsp, -0x80; nop; ret; 
0x0000000000404286: mov ebp, dword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000462ca2: mov ebp, dword ptr [rsp + 0x8000000]; add rsp, 0x8000008; ret; 
0x0000000000462922: mov ebp, dword ptr [rsp + 0x800000]; add rsp, 0x800008; ret; 
0x00000000004625a2: mov ebp, dword ptr [rsp + 0x80000]; add rsp, 0x80008; ret; 
0x00000000004612fa: mov ebp, dword ptr [rsp + 0x8000]; add rsp, 0x8008; ret; 
0x0000000000461088: mov ebp, dword ptr [rsp + 0x800]; add rsp, 0x808; ret; 
0x000000000041d111: mov ebp, dword ptr [rsp + 0x80]; add rsp, 0x88; nop; ret; 
0x0000000000405742: mov ebp, dword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x00000000004064e3: mov ebp, dword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000402c8f: mov ebp, dword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x0000000000469ef1: mov ebp, dword ptr [rsp + 0x98]; add rsp, 0xa0; nop; ret; 
0x000000000040b9ad: mov ebp, dword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000044e030: mov ebp, dword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x0000000000409cbf: mov ebp, dword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x00000000004274c6: mov ebp, dword ptr [rsp + 0xb8]; add rsp, 0xc0; ret; 
0x0000000000448c64: mov ebp, dword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x0000000000413d51: mov ebp, dword ptr [rsp + 0xc8]; add rsp, 0xd0; nop; ret; 
0x000000000040161b: mov ebp, dword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x000000000045fded: mov ebp, dword ptr [rsp + 0xd0]; add rsp, 0xd8; ret; 
0x0000000000407760: mov ebp, dword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x0000000000440b7b: mov ebp, dword ptr [rsp + 0xe0]; add rsp, 0xe8; ret; 
0x000000000048be71: mov ebp, dword ptr [rsp + 0xe8]; add rsp, 0xf0; nop; ret; 
0x000000000048bb3a: mov ebp, dword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x000000000044cfc5: mov ebp, dword ptr [rsp + 0xf0]; add rsp, 0xf8; ret; 
0x000000000044d84a: mov ebp, dword ptr [rsp + 0xf8]; add rsp, 0x100; ret; 
0x0000000000437d97: mov ebp, dword ptr [rsp + 8]; add rsp, 0x10; nop; ret; 
0x0000000000405feb: mov ebp, dword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000462fcf: mov ebp, dword ptr [rsp - 8]; sub qword ptr [rsp], 5; mov rbx, qword ptr [rdx]; jmp rbx; 
0x000000000040607a: mov ebp, dword ptr [rsp]; add rsp, 8; ret; 
0x0000000000464dd5: mov ebp, esp; and rsp, 0xfffffffffffffff0; call rax; 
0x0000000000464dd5: mov ebp, esp; and rsp, 0xfffffffffffffff0; call rax; mov rsp, rbp; pop rbp; ret; 
0x000000000040b6e3: mov ebx, 0; add byte ptr [rax + 0x1480000], al; ret; 
0x00000000004222ac: mov ebx, 0; add byte ptr [rax + 0x1490000], al; ret; 
0x000000000045b4cf: mov ebx, 0x1480012; add eax, 0x12bbc7; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004064da: mov ebx, 0x1f68; add byte ptr [rdi + 0x10], dh; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000043f4c4: mov ebx, 0x2778; add byte ptr [rsi - 0x1c], bh; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000404281: mov ebx, 0x48000002; mov ebp, dword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000436f81: mov ebx, 0x480000c6; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000496fa1: mov ebx, 0x48fff99e; mov ebp, dword ptr [rsp + 0x260]; add rsp, 0x268; ret; 
0x000000000045a481: mov ebx, 0x48fffaa1; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043f561: mov ebx, 0x48fffcb5; mov ebp, dword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000484f01: mov ebx, 0x48ffff5d; mov eax, dword ptr [rsp + 8]; mov rcx, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0x100]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000492fa1: mov ebx, 0x48ffffe7; mov ebp, dword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x00000000004529c1: mov ebx, 0x48ffffea; mov ebp, dword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004348a1: mov ebx, 0x48fffff2; mov ebp, dword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000043e141: mov ebx, 0x48fffffb; mov ebp, dword ptr [rsp + 0x260]; add rsp, 0x268; ret; 
0x0000000000402618: mov ebx, 0x52ef6b; imul rcx, rax; mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000402942: mov ebx, 0x52ef6b; imul rcx, rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004311b7: mov ebx, 0x8b480002; insb byte ptr [rdi], dx; and al, 0x50; add rsp, 0x58; ret; 
0x000000000045b4d6: mov ebx, 0x8b480012; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000045b683: mov ebx, 0x8b48fffd; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000498e75: mov ebx, 0x8b48fffe; and al, 0x18; mov rcx, qword ptr [rsp + 0x20]; mov rax, qword ptr [rax + 0xf8]; mov qword ptr [rsp], rcx; call rax; 
0x000000000041709b: mov ebx, dword ptr [rax + 0x10]; mov qword ptr [rsp], rbx; mov qword ptr [rsp + 8], rcx; mov rbx, qword ptr [rdx]; call rbx; 
0x00000000004540ce: mov ebx, dword ptr [rax]; mov rdx, rax; call rbx; 
0x0000000000461611: mov ebx, dword ptr [rbx + 0x30]; mov rsi, qword ptr [rbx]; cmp rsi, rax; jne 0x61625; lea rax, [rip - 0x2bf23]; jmp rax; 
0x00000000004802c2: mov ebx, dword ptr [rbx + 0x98]; mov qword ptr [rsp], rax; call rbx; 
0x00000000004615d2: mov ebx, dword ptr [rbx + 8]; jmp rbx; 
0x00000000004617bb: mov ebx, dword ptr [rbx]; mov qword ptr fs:[0xfffffffffffffff8], rbx; mov rsp, qword ptr [rbx + 0x38]; call 0x496e0; call 0x630c0; ret; 
0x00000000004688dc: mov ebx, dword ptr [rdx + 0x40]; mov rsi, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rsi; call rbx; 
0x000000000047e7be: mov ebx, dword ptr [rdx + 0xb8]; mov rsi, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rsi; call rbx; 
0x0000000000486df1: mov ebx, dword ptr [rdx + 0xd0]; mov rsi, qword ptr [rsp + 0x78]; mov qword ptr [rsp], rsi; call rbx; 
0x000000000040519f: mov ebx, dword ptr [rdx]; call rbx; 
0x0000000000462fd9: mov ebx, dword ptr [rdx]; jmp rbx; 
0x000000000040fe3c: mov ebx, dword ptr [rdx]; nop; call rbx; 
0x0000000000464e5d: mov ebx, dword ptr [rsp + 0x40]; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000045c5c2: mov ebx, dword ptr [rsp + 0x50]; mov qword ptr [rsp + 0x10], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000046893b: mov ebx, dword ptr [rsp + 0x68]; mov qword ptr [rsp], rbx; call rdx; 
0x0000000000401ec1: mov ebx, dword ptr [rsp + 8]; mov eax, dword ptr [rsp + 0x10]; xchg dword ptr [rbx], eax; ret; 
0x00000000004630a1: mov ebx, dword ptr [rsp + 8]; mov qword ptr fs:[0xfffffffffffffff8], rbx; ret; 
0x0000000000401ee1: mov ebx, dword ptr [rsp + 8]; mov rax, qword ptr [rsp + 0x10]; xchg qword ptr [rbx], rax; ret; 
0x0000000000464da5: mov ebx, esp; and rsp, 0xfffffffffffffff0; call rax; 
0x0000000000464ff2: mov ebx, esp; and rsp, 0xfffffffffffffff0; mov qword ptr [rsp], rbx; call rax; 
0x0000000000461492: mov ecx, 0; call rax; 
0x0000000000401c40: mov ecx, 0; xgetbv; mov dword ptr [rsp + 8], eax; mov dword ptr [rsp + 0xc], edx; ret; 
0x000000000048c10c: mov ecx, 0x24848948; sub byte ptr [rcx], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x000000000048d1cb: mov ecx, 0x48000c9a; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046507b: mov ecx, 0x48000f19; mov ebx, esp; and rsp, 0xfffffffffffffff0; mov qword ptr [rsp], rbx; call rax; 
0x0000000000463403: mov ecx, 0x48fffffe; xchg eax, ebx; ret; 
0x000000000041b906: mov ecx, 0xc5eb0013; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044f24a: mov ecx, 1; lock xadd dword ptr [rax + 0x2788], ecx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000048f0f7: mov ecx, dword ptr [rax + 0x10]; mov qword ptr [rsp], rcx; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000048ac03: mov ecx, dword ptr [rax + 0x18]; mov rdx, qword ptr [rsp + 0x30]; mov qword ptr [rsp], rdx; call rcx; 
0x000000000048fec7: mov ecx, dword ptr [rax + 0x20]; mov rdx, qword ptr [rax + 0x28]; mov rcx, qword ptr [rcx + 0x18]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000403f70: mov ecx, dword ptr [rax + 0x30]; cmp qword ptr [rcx], rax; jne 0x3f82; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000467cf0: mov ecx, dword ptr [rax + 0x38]; mov rdx, qword ptr [rsp + 0x38]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000468919: mov ecx, dword ptr [rax + 0x38]; mov rdx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rdx; call rcx; 
0x00000000004688b3: mov ecx, dword ptr [rax + 0x40]; mov rdx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rdx; nop; call rcx; 
0x000000000047c5d9: mov ecx, dword ptr [rax + 0x48]; mov rdx, qword ptr [rsp + 0x90]; mov qword ptr [rsp], rdx; call rcx; 
0x00000000004607e7: mov ecx, dword ptr [rax + 0x50]; test r9, r9; je 0x607f4; call 0x35860; ret; 
0x0000000000493f66: mov ecx, dword ptr [rax + 0x58]; movzx eax, byte ptr [rax + 0x48]; mov qword ptr [rsp + 0x10], rcx; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000493f86: mov ecx, dword ptr [rax + 0x60]; movzx eax, byte ptr [rax + 0x49]; mov qword ptr [rsp + 0x10], rcx; mov byte ptr [rsp + 0x18], al; ret; 
0x000000000047e793: mov ecx, dword ptr [rax + 0xb8]; mov rdx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000432239: mov ecx, dword ptr [rax + 8]; mov rax, qword ptr [rax + 0x10]; mov qword ptr [rsp + 0x10], rcx; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000425dc0: mov ecx, dword ptr [rax]; mov qword ptr [rdx], rcx; xorps xmm0, xmm0; movups xmmword ptr [rax], xmm0; ret; 
0x0000000000405192: mov ecx, dword ptr [rax]; mov qword ptr [rsp + 0x18], rcx; mov rdx, qword ptr [rsp + 0x48]; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000405e3c: mov ecx, dword ptr [rax]; mov qword ptr [rsp + 0x20], rcx; mov rdx, qword ptr [rsp + 0x50]; mov rbx, qword ptr [rdx]; call rbx; 
0x00000000004695a6: mov ecx, dword ptr [rax]; mov rax, qword ptr [rax + 8]; mov qword ptr [rsp + 0x10], rcx; mov qword ptr [rsp + 0x18], rax; ret; 
0x000000000040eefe: mov ecx, dword ptr [rax]; mov rdx, rax; call rcx; 
0x0000000000456ca3: mov ecx, dword ptr [rax]; mov rdx, rax; call rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000456d65: mov ecx, dword ptr [rax]; mov rdx, rax; call rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048fecf: mov ecx, dword ptr [rcx + 0x18]; mov qword ptr [rsp], rdx; call rcx; 
0x000000000048ff8f: mov ecx, dword ptr [rcx + 0x40]; mov qword ptr [rsp + 0x10], rax; mov qword ptr [rsp + 0x18], rcx; ret; 
0x0000000000468975: mov ecx, dword ptr [rcx + 0x60]; mov rdx, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000494832: mov ecx, dword ptr [rcx + 0xf8]; mov qword ptr [rsp], rax; call rcx; 
0x000000000048353f: mov ecx, dword ptr [rcx + 8]; mov qword ptr [rsp + 0x70], rcx; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004973f4: mov ecx, dword ptr [rdx + 0xf8]; mov qword ptr [rsp], rax; nop; call rcx; 
0x000000000040e017: mov ecx, dword ptr [rdx]; call rcx; 
0x0000000000439287: mov ecx, dword ptr [rip + 0x11dfcf]; test ecx, ecx; je 0x3929b; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042b621: mov ecx, dword ptr [rip + 0x15aeb1]; test rcx, rcx; jg 0x2b632; mov byte ptr [rsp + 0x10], 0; ret; 
0x000000000043ac53: mov ecx, dword ptr [rip + 0x8b8ef]; lea rdx, [rip + 0x8b8e8]; call rcx; 
0x000000000043474a: mov ecx, dword ptr [rip + 0x91df0]; lea rdx, [rip + 0x91de9]; call rcx; 
0x000000000048fe88: mov ecx, dword ptr [rip + 0xbfe6a]; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000048ec30: mov ecx, dword ptr [rip + 0xc10f2]; mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048d8df: mov ecx, dword ptr [rip + 0xc25d3]; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048fe48: mov ecx, dword ptr [rip + 0xc6e3a]; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000048fe08: mov ecx, dword ptr [rip + 0xc6e8a]; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000048fdc8: mov ecx, dword ptr [rip + 0xc6eda]; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x0000000000464ee5: mov ecx, dword ptr [rip + 0xf1bcd]; lea r9, [rip - 0xf2]; mov rax, qword ptr [rip + 0xf1b27]; jmp rax; 
0x0000000000464164: mov ecx, dword ptr [rsi + rbx - 4]; mov dword ptr [rdi], eax; mov dword ptr [rdi + rbx - 4], ecx; ret; 
0x000000000046417a: mov ecx, dword ptr [rsi + rbx - 8]; mov qword ptr [rdi], rax; mov qword ptr [rdi + rbx - 8], rcx; ret; 
0x000000000040228d: mov ecx, dword ptr [rsi + rbx - 8]; mov rdx, qword ptr [rdi + rbx - 8]; cmp rcx, rdx; sete byte ptr [rax]; ret; 
0x0000000000456fa2: mov ecx, dword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x30], rax; mov qword ptr [rsp + 0x38], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000457c41: mov ecx, dword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x38], rax; mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000482154: mov ecx, dword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040680b: mov ecx, dword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042bf7a: mov ecx, dword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x48], rcx; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048d3ba: mov ecx, dword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000047d0ab: mov ecx, dword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0x100]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000482592: mov ecx, dword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; call rax; 
0x000000000047c5f0: mov ecx, dword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; nop; call rax; 
0x0000000000485243: mov ecx, dword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0xe8]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000485310: mov ecx, dword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0xe8]; mov qword ptr [rsp], rcx; nop; call rax; 
0x00000000004287e6: mov ecx, dword ptr [rsp + 0x110]; lea rdx, [rsp + 0x110]; call rcx; 
0x0000000000401e6b: mov ecx, dword ptr [rsp + 0x18]; lock cmpxchg qword ptr [rbx], rcx; sete byte ptr [rsp + 0x20]; ret; 
0x0000000000422ba0: mov ecx, dword ptr [rsp + 0x18]; mov qword ptr [rcx + 8], rax; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000045ae0c: mov ecx, dword ptr [rsp + 0x18]; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044dd2c: mov ecx, dword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x38], rax; mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042996b: mov ecx, dword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045ed43: mov ecx, dword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x40], rcx; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044e602: mov ecx, dword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x48], rcx; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044e6d3: mov ecx, dword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x50], rcx; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048d496: mov ecx, dword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x60], rcx; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004695fc: mov ecx, dword ptr [rsp + 0x18]; mov rax, qword ptr [rax + 0x28]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004310b4: mov ecx, dword ptr [rsp + 0x20]; cmp byte ptr [rsp + 0x28], 0; je 0x3111a; mov rax, qword ptr [rax + 0x18]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000461800: mov ecx, dword ptr [rsp + 0x20]; cmp rcx, 0x20; ja 0x61813; lea rax, [rip + 0x1cf]; jmp rax; 
0x000000000045a34c: mov ecx, dword ptr [rsp + 0x20]; mov dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045ae8b: mov ecx, dword ptr [rsp + 0x20]; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044807d: mov ecx, dword ptr [rsp + 0x20]; mov qword ptr [rdx + rax + 0x460], rcx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040774b: mov ecx, dword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x100], rax; mov qword ptr [rsp + 0x108], rcx; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x0000000000480a7a: mov ecx, dword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x128], rax; mov qword ptr [rsp + 0x130], rcx; mov rbp, qword ptr [rsp + 0x110]; add rsp, 0x118; ret; 
0x0000000000466b3b: mov ecx, dword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042a655: mov ecx, dword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045c5fd: mov ecx, dword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x58], rax; mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044b3cd: mov ecx, dword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x68], rcx; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048358f: mov ecx, dword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x70], rax; mov qword ptr [rsp + 0x78], rcx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000046511d: mov ecx, dword ptr [rsp + 0x20]; mov r12, qword ptr [rsp + 0x28]; mov eax, 0x38; syscall; 
0x00000000004997ed: mov ecx, dword ptr [rsp + 0x20]; mov rax, qword ptr [rax + 0x50]; mov qword ptr [rsp], rcx; mov rcx, qword ptr [rsp + 0xc8]; mov qword ptr [rsp + 8], rcx; call rax; 
0x000000000048622b: mov ecx, dword ptr [rsp + 0x20]; mov rax, qword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000484942: mov ecx, dword ptr [rsp + 0x20]; mov rax, qword ptr [rax + 0xf8]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004983cf: mov ecx, dword ptr [rsp + 0x20]; mov rax, qword ptr [rax + 0xf8]; mov qword ptr [rsp], rcx; nop; call rax; 
0x000000000040395d: mov ecx, dword ptr [rsp + 0x20]; xchg qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000496e33: mov ecx, dword ptr [rsp + 0x238]; mov qword ptr [rsp], rcx; nop; call rax; 
0x0000000000496f5d: mov ecx, dword ptr [rsp + 0x240]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004970c5: mov ecx, dword ptr [rsp + 0x248]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000464f79: mov ecx, dword ptr [rsp + 0x24]; mov eax, 9; syscall; 
0x00000000004971d8: mov ecx, dword ptr [rsp + 0x278]; mov dword ptr [rsp + 0x18], ecx; call rax; 
0x000000000044c3d3: mov ecx, dword ptr [rsp + 0x28]; add rax, rcx; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004650d8: mov ecx, dword ptr [rsp + 0x28]; mov eax, 0xca; syscall; 
0x00000000004650d8: mov ecx, dword ptr [rsp + 0x28]; mov eax, 0xca; syscall; mov dword ptr [rsp + 0x30], eax; ret; 
0x000000000045a27e: mov ecx, dword ptr [rsp + 0x28]; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000407023: mov ecx, dword ptr [rsp + 0x28]; mov qword ptr [rsp + 0x120], rax; mov qword ptr [rsp + 0x128], rcx; mov rbp, qword ptr [rsp + 0x108]; add rsp, 0x110; ret; 
0x00000000004671c1: mov ecx, dword ptr [rsp + 0x28]; mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048d2eb: mov ecx, dword ptr [rsp + 0x28]; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000481e5c: mov ecx, dword ptr [rsp + 0x28]; mov qword ptr [rsp + 0x58], rax; mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000041fc7b: mov ecx, dword ptr [rsp + 0x28]; mov qword ptr [rsp + 0x58], rcx; mov dword ptr [rsp + 0x60], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000456c99: mov ecx, dword ptr [rsp + 0x28]; mov qword ptr [rsp + 8], rcx; mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; 
0x000000000041529b: mov ecx, dword ptr [rsp + 0x28]; xchg dword ptr [rcx + 0x6c0], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000466beb: mov ecx, dword ptr [rsp + 0x30]; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000407219: mov ecx, dword ptr [rsp + 0x30]; mov qword ptr [rsp + 0x58], rax; mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000043b5ef: mov ecx, dword ptr [rsp + 0x30]; mov qword ptr [rsp], rcx; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; nop; call rax; 
0x000000000041ec91: mov ecx, dword ptr [rsp + 0x38]; add qword ptr [rax + 0x16b0], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044ee13: mov ecx, dword ptr [rsp + 0x38]; mov dword ptr [rsp + 0x70], eax; mov qword ptr [rsp + 0x78], rcx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000428bdb: mov ecx, dword ptr [rsp + 0x38]; mov qword ptr [rsp + 0x60], rcx; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004820c1: mov ecx, dword ptr [rsp + 0x38]; mov qword ptr [rsp + 0xa0], rcx; mov qword ptr [rsp + 0xa8], rax; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000048dfbf: mov ecx, dword ptr [rsp + 0x38]; mov rax, qword ptr [rsp + 8]; syscall; 
0x0000000000464fe6: mov ecx, dword ptr [rsp + 0x3c]; mov rax, qword ptr [rip + 0xf1a3f]; mov rbx, rsp; and rsp, 0xfffffffffffffff0; mov qword ptr [rsp], rbx; call rax; 
0x0000000000452407: mov ecx, dword ptr [rsp + 0x40]; add qword ptr [rax + 0x1640], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000045d2ed: mov ecx, dword ptr [rsp + 0x40]; mov byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000042abf9: mov ecx, dword ptr [rsp + 0x40]; mov qword ptr [rax + 0x28], rcx; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045c10b: mov ecx, dword ptr [rsp + 0x40]; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004849a4: mov ecx, dword ptr [rsp + 0x40]; mov qword ptr [rsp + 0x70], rax; mov qword ptr [rsp + 0x78], rcx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000048538e: mov ecx, dword ptr [rsp + 0x40]; mov qword ptr [rsp], rcx; call rax; 
0x000000000041f3cf: mov ecx, dword ptr [rsp + 0x40]; sub rax, rcx; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000046ada0: mov ecx, dword ptr [rsp + 0x48]; lock xadd dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000494eba: mov ecx, dword ptr [rsp + 0x48]; mov byte ptr [rcx + 0x4c], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004920c0: mov ecx, dword ptr [rsp + 0x48]; mov byte ptr [rcx + 0xe], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000445232: mov ecx, dword ptr [rsp + 0x48]; mov qword ptr [rax + 0x80], rcx; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x00000000004855ce: mov ecx, dword ptr [rsp + 0x48]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000461a0b: mov ecx, dword ptr [rsp + 0x48]; mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x38]; mov rax, qword ptr [rdx]; call rax; 
0x000000000046b318: mov ecx, dword ptr [rsp + 0x48]; mov rdx, qword ptr [rcx + 0x20]; test rdx, rdx; je 0x6b2fe; mov rax, qword ptr [rdx]; call rax; 
0x000000000048abc0: mov ecx, dword ptr [rsp + 0x50]; cmp rcx, rax; jg 0x8ab82; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040499d: mov ecx, dword ptr [rsp + 0x50]; mov qword ptr [rax + 8], rcx; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004238eb: mov ecx, dword ptr [rsp + 0x50]; mov qword ptr [rdx + rax*8], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004070a5: mov ecx, dword ptr [rsp + 0x50]; mov qword ptr [rsp + 0x120], rax; mov qword ptr [rsp + 0x128], rcx; mov rbp, qword ptr [rsp + 0x108]; add rsp, 0x110; ret; 
0x00000000004035e2: mov ecx, dword ptr [rsp + 0x58]; cmp rax, rcx; sete byte ptr [rsp + 0x60]; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000045e0ac: mov ecx, dword ptr [rsp + 0x58]; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000046895b: mov ecx, dword ptr [rsp + 0x58]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000481feb: mov ecx, dword ptr [rsp + 0x60]; mov qword ptr [rsp + 0xa0], rax; mov qword ptr [rsp + 0xa8], rcx; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000468970: mov ecx, dword ptr [rsp + 0x60]; mov rcx, qword ptr [rcx + 0x60]; mov rdx, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000468932: mov ecx, dword ptr [rsp + 0x60]; mov rdx, qword ptr [rcx + 0x38]; mov rbx, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rbx; call rdx; 
0x0000000000461aab: mov ecx, dword ptr [rsp + 0x68]; mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x58]; mov rax, qword ptr [rdx]; call rax; 
0x000000000042cbf6: mov ecx, dword ptr [rsp + 0x68]; xchg qword ptr [rax], rcx; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000491ca0: mov ecx, dword ptr [rsp + 0x70]; mov byte ptr [rcx + 0xe], al; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000486e3a: mov ecx, dword ptr [rsp + 0x78]; mov qword ptr [rsp], rcx; call rax; 
0x000000000047c617: mov ecx, dword ptr [rsp + 0x90]; mov qword ptr [rsp], rcx; call rax; 
0x000000000049a40e: mov ecx, dword ptr [rsp + 0x98]; cmp rax, rcx; jl 0x9a342; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x00000000004200ea: mov ecx, dword ptr [rsp + 0xa0]; mov qword ptr [rsp + 0xc8], rcx; mov qword ptr [rsp + 0xd0], rax; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000048cce2: mov ecx, dword ptr [rsp + 0xa8]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004997fa: mov ecx, dword ptr [rsp + 0xc8]; mov qword ptr [rsp + 8], rcx; call rax; 
0x0000000000493abb: mov ecx, dword ptr [rsp + 0xf8]; mov byte ptr [rcx + 0xe], al; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x0000000000403269: mov ecx, dword ptr [rsp + 8]; cmp byte ptr [rcx], al; sete byte ptr [rsp + 0x18]; ret; 
0x00000000004032a8: mov ecx, dword ptr [rsp + 8]; cmp dword ptr [rcx], eax; sete byte ptr [rsp + 0x18]; ret; 
0x00000000004032c9: mov ecx, dword ptr [rsp + 8]; cmp qword ptr [rcx], rax; sete byte ptr [rsp + 0x18]; ret; 
0x0000000000403289: mov ecx, dword ptr [rsp + 8]; cmp word ptr [rcx], ax; sete byte ptr [rsp + 0x18]; ret; 
0x000000000046489d: mov ecx, dword ptr [rsp + 8]; mov rax, qword ptr [rsp]; add rsp, 0x170; popfq; pop rbp; ret; 
0x000000000042f317: mov ecx, dword ptr [rsp]; mov qword ptr [rax + 0x48], rcx; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000043c1cc: mov ecx, eax; mov qword ptr [rcx + 0x48], rax; cmp qword ptr [rcx + 0x50], 0; jne 0x3c1da; ret; 
0x0000000000401e44: mov ecx, eax; shr rax, 0x20; add rax, rcx; and rax, 0x7f; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000046304c: mov ecx, ebx; call rax; 
0x00000000004640ee: mov ecx, ebx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000441972: mov ecx, ebx; test edx, edx; jne 0x4196a; mov dword ptr [rsp + 0x10], ecx; ret; 
0x000000000042a105: mov ecx, edi; shl rbx, cl; or qword ptr [rdx + rax*8], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000464bd1: mov edi, 0; lea rsi, [rsp]; call rax; 
0x000000000046490b: mov edi, 0; mov eax, 0x3c; syscall; 
0x00000000004651f6: mov edi, 0x1002; mov rax, 0x9e; syscall; 
0x0000000000494012: mov edi, 0x24448b48; or byte ptr [rdi], cl; mov dh, 0x40; mov byte ptr [rsp + r12 + 0x18], r8b; ret; 
0x0000000000438445: mov edi, 0x480014e0; xchg dword ptr [rax], ecx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004624bd: mov edi, 0x48ffffe2; mov ebp, dword ptr [rsp + 0x40000]; add rsp, 0x40008; ret; 
0x0000000000465173: mov edi, 0x6f; mov eax, 0x3c; syscall; 
0x000000000041b0e1: mov edi, 0x83480016; rol byte ptr [rdx], 0x89; add eax, 0x16bede; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000046abef: mov edi, 0x940f000e; and al, 0x38; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042c761: mov edi, 0xfc0570f; adc dword ptr [rsp + 0x18], eax; ret; 
0x0000000000464920: mov edi, 0xffffff9c; mov rsi, qword ptr [rsp + 8]; mov edx, dword ptr [rsp + 0x10]; mov r10d, dword ptr [rsp + 0x14]; mov eax, 0x101; syscall; 
0x0000000000464cb1: mov edi, 1; lea rsi, [rsp]; call rax; 
0x000000000042b0ea: mov edi, dword ptr [rcx + rbx*8]; cmp rsi, rdi; je 0x2b0dd; mov byte ptr [rsp + 0x38], 0; ret; 
0x000000000046303d: mov edi, dword ptr [rdi + 8]; sub rdi, rdx; mov qword ptr [rsp + 0x28], rdi; mov rdi, rbx; mov rcx, rbx; call rax; 
0x0000000000461637: mov edi, dword ptr [rdi]; call rdi; 
0x0000000000461637: mov edi, dword ptr [rdi]; call rdi; pop rax; lea rax, [rip - 0x2bf03]; jmp rax; 
0x0000000000461714: mov edi, dword ptr [rdi]; jmp rdi; 
0x00000000004726ea: mov edi, dword ptr [rsi + 0x10]; mov qword ptr [rsp], rcx; mov qword ptr [rsp + 8], rdx; mov qword ptr [rsp + 0x10], rbx; mov qword ptr [rsp + 0x18], rdi; call rax; 
0x00000000004636f5: mov edi, dword ptr [rsp + 0x20]; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000048aba8: mov edi, dword ptr [rsp + 0x48]; lea r8, [rax + rdi]; mov qword ptr [rsp + 0x10], r8; call rdx; 
0x00000000004652a0: mov edi, dword ptr [rsp + 8]; mov eax, 0x123; syscall; 
0x00000000004652a0: mov edi, dword ptr [rsp + 8]; mov eax, 0x123; syscall; mov dword ptr [rsp + 0x10], eax; ret; 
0x0000000000465381: mov edi, dword ptr [rsp + 8]; mov eax, 0x3f; syscall; 
0x0000000000465381: mov edi, dword ptr [rsp + 8]; mov eax, 0x3f; syscall; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000465280: mov edi, dword ptr [rsp + 8]; mov eax, 0xd5; syscall; 
0x0000000000465280: mov edi, dword ptr [rsp + 8]; mov eax, 0xd5; syscall; mov dword ptr [rsp + 0x10], eax; ret; 
0x00000000004648e0: mov edi, dword ptr [rsp + 8]; mov eax, 0xe7; syscall; 
0x00000000004648e0: mov edi, dword ptr [rsp + 8]; mov eax, 0xe7; syscall; ret; 
0x0000000000464960: mov edi, dword ptr [rsp + 8]; mov eax, 3; syscall; 
0x0000000000465359: mov edi, dword ptr [rsp + 8]; mov rsi, 4; mov rdx, 0x800; or edx, eax; mov eax, 0x48; syscall; 
0x00000000004653a1: mov edi, dword ptr [rsp + 8]; mov rsi, qword ptr [rsp + 0x10]; mov eax, 0x95; syscall; 
0x00000000004650a1: mov edi, dword ptr [rsp + 8]; mov rsi, qword ptr [rsp + 0x10]; mov edx, dword ptr [rsp + 0x18]; mov rax, 0x1c; syscall; 
0x00000000004651a1: mov edi, dword ptr [rsp + 8]; mov rsi, qword ptr [rsp + 0x10]; mov rax, 0x83; syscall; 
0x0000000000464ac7: mov edi, eax; mov esi, dword ptr [rsp + 8]; mov eax, 0x3e; syscall; 
0x0000000000464ac7: mov edi, eax; mov esi, dword ptr [rsp + 8]; mov eax, 0x3e; syscall; ret; 
0x0000000000463049: mov edi, ebx; mov rcx, rbx; call rax; 
0x000000000045c72b: mov edi, edi; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x0000000000464a94: mov edi, esp; mov edx, dword ptr [rsp + 8]; mov eax, 0xea; syscall; 
0x0000000000464a94: mov edi, esp; mov edx, dword ptr [rsp + 8]; mov eax, 0xea; syscall; ret; 
0x0000000000464a2f: mov edi, esp; mov esi, 0; mov eax, 0x23; syscall; 
0x0000000000462d41: mov edi, esp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x10000018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004629c1: mov edi, esp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x1000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462641: mov edi, esp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x100018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004622c1: mov edi, esp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x10018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461f41: mov edi, esp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x1018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461c2b: mov edi, esp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x118]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462e21: mov edi, esp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x20000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462aa1: mov edi, esp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x2000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462721: mov edi, esp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x200018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004623a1: mov edi, esp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x20018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462021: mov edi, esp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x2018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461ceb: mov edi, esp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x218]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461a10: mov edi, esp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x38]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462f01: mov edi, esp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x40000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462b81: mov edi, esp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x4000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462801: mov edi, esp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x400018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462481: mov edi, esp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x40018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462101: mov edi, esp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x4018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461dab: mov edi, esp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x418]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461ab0: mov edi, esp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x58]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462c61: mov edi, esp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x8000018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004628e1: mov edi, esp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x800018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462561: mov edi, esp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x80018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004621e1: mov edi, esp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x8018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461e6b: mov edi, esp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x818]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461b68: mov edi, esp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x98]; mov rax, qword ptr [rdx]; call rax; 
0x000000000043ef7f: mov edi, fs; adc dword ptr [rax], eax; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000464a93: mov edi, r12d; mov edx, dword ptr [rsp + 8]; mov eax, 0xea; syscall; 
0x0000000000464a93: mov edi, r12d; mov edx, dword ptr [rsp + 8]; mov eax, 0xea; syscall; ret; 
0x0000000000429db9: mov edx, 0; add byte ptr [rax + 0x1480000], al; ret 0x8948; 
0x0000000000412475: mov edx, 0; add byte ptr [rax + 0x1480000], al; ret 0xc148; 
0x000000000046534c: mov edx, 0; mov eax, 0x48; syscall; 
0x000000000046148b: mov edx, 0; mov rcx, 0; call rax; 
0x0000000000478b69: mov edx, 0x244c8948; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042a72d: mov edx, 0x40; cmove rcx, rdx; shl rax, 6; add rax, rcx; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000412ca2: mov edx, 0x48000002; mov ebp, dword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000047be2e: mov edx, 0x48000427; mov dword ptr [rsp + 0x50], eax; mov qword ptr [rsp + 0x58], 6; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000441f7c: mov edx, 0x729020e0; or cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x78; sub rsp, -0x80; ret; 
0x000000000049abc1: mov edx, 0x7500000e; adc dword ptr [rax - 0x77], ecx; add eax, 0xbbe92; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000482278: mov edx, 0x7a7308e0; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000465365: mov edx, 0x800; or edx, eax; mov eax, 0x48; syscall; 
0x0000000000465365: mov edx, 0x800; or edx, eax; mov eax, 0x48; syscall; ret; 
0x000000000041dc5f: mov edx, 0x830f04e7; ret 0; 
0x0000000000484c18: mov edx, 0x894807e8; and al, 0x50; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000483dd5: mov edx, 0x894807e8; and al, 0x58; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004853e8: mov edx, 0x894807ea; push rsp; and al, 0x58; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000485636: mov edx, 0x894807ea; push rsp; and al, 0x60; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004803c2: mov edx, 0x90fffb15; call 0x30e60; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x0000000000432a8e: mov edx, 0x920f01e1; ret 0x3de9; 
0x0000000000401a7f: mov edx, 0x920f13e0; add eax, 0x184ff8; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004421cb: mov edx, 0xa7220e0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000444e84: mov edx, 0xa730de0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042f440: mov edx, 0xa731be0; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004691bb: mov edx, 0xe82484c6; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x0000000000464a61: mov edx, 0xf000000; add eax, 0x8244489; ret; 
0x000000000046532c: mov edx, 1; mov eax, 0x48; syscall; 
0x000000000046532c: mov edx, 1; mov eax, 0x48; syscall; ret; 
0x000000000048fecb: mov edx, dword ptr [rax + 0x28]; mov rcx, qword ptr [rcx + 0x18]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000497de3: mov edx, dword ptr [rax + 0x48]; mov qword ptr [rsp], rcx; call rdx; 
0x000000000040e0e5: mov edx, dword ptr [rax + 0x48]; mov rax, qword ptr [rsp + 0x50]; mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], 0; mov rax, qword ptr [rdx]; call rax; 
0x000000000047c592: mov edx, dword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; call rdx; 
0x00000000004569d4: mov edx, dword ptr [rax + rcx*8]; test rdx, rdx; jne 0x5697d; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x000000000041059c: mov edx, dword ptr [rbx + 0x48]; mov eax, dword ptr [r8 + 0xc]; mov qword ptr [rsp], r11; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; call rax; 
0x00000000004111e6: mov edx, dword ptr [rbx + 0x48]; mov eax, dword ptr [r9 + 0xc]; mov qword ptr [rsp], r12; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; call rax; 
0x000000000046b31d: mov edx, dword ptr [rcx + 0x20]; test rdx, rdx; je 0x6b2fe; mov rax, qword ptr [rdx]; call rax; 
0x0000000000468937: mov edx, dword ptr [rcx + 0x38]; mov rbx, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rbx; call rdx; 
0x000000000044312b: mov edx, dword ptr [rcx + rax]; mov rax, qword ptr [rcx + rax + 8]; mov qword ptr [rsp + 0x10], rdx; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000402292: mov edx, dword ptr [rdi + rbx - 8]; cmp rcx, rdx; sete byte ptr [rax]; ret; 
0x0000000000448f9e: mov edx, dword ptr [rdx + 0x10]; add rcx, rdx; mov qword ptr [rax + 0x68], rcx; ret; 
0x00000000004391a3: mov edx, dword ptr [rip + 0x11e177]; mov qword ptr [rsp], rcx; mov rax, qword ptr [rdx]; call rax; 
0x0000000000437d4e: mov edx, dword ptr [rip + 0x11f5cc]; mov qword ptr [rsp], rcx; mov rax, qword ptr [rdx]; call rax; 
0x000000000042f292: mov edx, dword ptr [rip + 0x127838]; test rdx, rdx; jne 0x2f2a7; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042ca44: mov edx, dword ptr [rsi]; cmp rdx, rax; jne 0x2ca55; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000462d46: mov edx, dword ptr [rsp + 0x10000018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004629c6: mov edx, dword ptr [rsp + 0x1000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462646: mov edx, dword ptr [rsp + 0x100018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004622c6: mov edx, dword ptr [rsp + 0x10018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461f46: mov edx, dword ptr [rsp + 0x1018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004652c8: mov edx, dword ptr [rsp + 0x10]; mov r10, qword ptr [rsp + 0x18]; mov eax, 0xe9; syscall; 
0x000000000046492a: mov edx, dword ptr [rsp + 0x10]; mov r10d, dword ptr [rsp + 0x14]; mov eax, 0x101; syscall; 
0x0000000000461c30: mov edx, dword ptr [rsp + 0x118]; mov rax, qword ptr [rdx]; call rax; 
0x000000000046492f: mov edx, dword ptr [rsp + 0x14]; mov eax, 0x101; syscall; 
0x00000000004649a9: mov edx, dword ptr [rsp + 0x18]; mov eax, 0; syscall; 
0x00000000004649a9: mov edx, dword ptr [rsp + 0x18]; mov eax, 0; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000464b4b: mov edx, dword ptr [rsp + 0x18]; mov eax, 0x1b; syscall; 
0x0000000000464b4b: mov edx, dword ptr [rsp + 0x18]; mov eax, 0x1b; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000464b2a: mov edx, dword ptr [rsp + 0x18]; mov eax, 0x26; syscall; 
0x0000000000464b2a: mov edx, dword ptr [rsp + 0x18]; mov eax, 0x26; syscall; ret; 
0x000000000046526b: mov edx, dword ptr [rsp + 0x18]; mov eax, 0xcc; syscall; 
0x000000000046526b: mov edx, dword ptr [rsp + 0x18]; mov eax, 0xcc; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x00000000004652cd: mov edx, dword ptr [rsp + 0x18]; mov eax, 0xe9; syscall; 
0x00000000004652cd: mov edx, dword ptr [rsp + 0x18]; mov eax, 0xe9; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000464b0b: mov edx, dword ptr [rsp + 0x18]; mov eax, 0xea; syscall; 
0x0000000000464b0b: mov edx, dword ptr [rsp + 0x18]; mov eax, 0xea; syscall; ret; 
0x000000000046498a: mov edx, dword ptr [rsp + 0x18]; mov eax, 1; syscall; 
0x000000000046498a: mov edx, dword ptr [rsp + 0x18]; mov eax, 1; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000464d6b: mov edx, dword ptr [rsp + 0x18]; mov r10, qword ptr [rsp + 0x20]; mov eax, 0xd; syscall; 
0x00000000004652e9: mov edx, dword ptr [rsp + 0x18]; mov r10d, dword ptr [rsp + 0x1c]; mov r8, 0; mov eax, 0x119; syscall; 
0x0000000000464d2a: mov edx, dword ptr [rsp + 0x18]; mov r10d, dword ptr [rsp + 0x20]; mov eax, 0xe; syscall; 
0x00000000004650ce: mov edx, dword ptr [rsp + 0x18]; mov r8, qword ptr [rsp + 0x20]; mov r9d, dword ptr [rsp + 0x28]; mov eax, 0xca; syscall; 
0x00000000004650aa: mov edx, dword ptr [rsp + 0x18]; mov rax, 0x1c; syscall; 
0x00000000004650aa: mov edx, dword ptr [rsp + 0x18]; mov rax, 0x1c; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000406a55: mov edx, dword ptr [rsp + 0x18]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004652ee: mov edx, dword ptr [rsp + 0x1c]; mov r8, 0; mov eax, 0x119; syscall; 
0x0000000000464f6f: mov edx, dword ptr [rsp + 0x1c]; mov r8d, dword ptr [rsp + 0x20]; mov r9d, dword ptr [rsp + 0x24]; mov eax, 9; syscall; 
0x0000000000462e26: mov edx, dword ptr [rsp + 0x20000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462aa6: mov edx, dword ptr [rsp + 0x2000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462726: mov edx, dword ptr [rsp + 0x200018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004623a6: mov edx, dword ptr [rsp + 0x20018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462026: mov edx, dword ptr [rsp + 0x2018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000464d70: mov edx, dword ptr [rsp + 0x20]; mov eax, 0xd; syscall; 
0x0000000000464d70: mov edx, dword ptr [rsp + 0x20]; mov eax, 0xd; syscall; mov dword ptr [rsp + 0x28], eax; ret; 
0x0000000000464d2f: mov edx, dword ptr [rsp + 0x20]; mov eax, 0xe; syscall; 
0x000000000041510b: mov edx, dword ptr [rsp + 0x20]; mov qword ptr [rdx + rcx*8 + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048df50: mov edx, dword ptr [rsp + 0x20]; mov rax, qword ptr [rsp + 8]; syscall; 
0x0000000000464dcf: mov edx, dword ptr [rsp + 0x20]; push rbp; mov rbp, rsp; and rsp, 0xfffffffffffffff0; call rax; 
0x0000000000461cf0: mov edx, dword ptr [rsp + 0x218]; mov rax, qword ptr [rdx]; call rax; 
0x000000000048dfb5: mov edx, dword ptr [rsp + 0x28]; mov r8, qword ptr [rsp + 0x30]; mov r9, qword ptr [rsp + 0x38]; mov rax, qword ptr [rsp + 8]; syscall; 
0x000000000040a569: mov edx, dword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x000000000048ac07: mov edx, dword ptr [rsp + 0x30]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000464d99: mov edx, dword ptr [rsp + 0x30]; mov rax, qword ptr [rip + 0xf1ca4]; mov rbx, rsp; and rsp, 0xfffffffffffffff0; call rax; 
0x0000000000467cf4: mov edx, dword ptr [rsp + 0x38]; mov qword ptr [rsp], rdx; call rcx; 
0x000000000047d9d7: mov edx, dword ptr [rsp + 0x38]; mov qword ptr [rsp], rdx; nop; call rcx; 
0x00000000004508a7: mov edx, dword ptr [rsp + 0x38]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462f06: mov edx, dword ptr [rsp + 0x40000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462b86: mov edx, dword ptr [rsp + 0x4000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462806: mov edx, dword ptr [rsp + 0x400018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462486: mov edx, dword ptr [rsp + 0x40018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462106: mov edx, dword ptr [rsp + 0x4018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461db0: mov edx, dword ptr [rsp + 0x418]; mov rax, qword ptr [rdx]; call rax; 
0x000000000040519a: mov edx, dword ptr [rsp + 0x48]; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000405e44: mov edx, dword ptr [rsp + 0x50]; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000046891d: mov edx, dword ptr [rsp + 0x58]; mov qword ptr [rsp], rdx; call rcx; 
0x00000000004688b7: mov edx, dword ptr [rsp + 0x58]; mov qword ptr [rsp], rdx; nop; call rcx; 
0x0000000000461ab5: mov edx, dword ptr [rsp + 0x58]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004688d7: mov edx, dword ptr [rsp + 0x60]; mov rbx, qword ptr [rdx + 0x40]; mov rsi, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rsi; call rbx; 
0x000000000047e7b9: mov edx, dword ptr [rsp + 0x60]; mov rbx, qword ptr [rdx + 0xb8]; mov rsi, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rsi; call rbx; 
0x0000000000472616: mov edx, dword ptr [rsp + 0x68]; mov qword ptr [rsp + 0x18], rdx; nop; call rax; 
0x0000000000468979: mov edx, dword ptr [rsp + 0x68]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000437a72: mov edx, dword ptr [rsp + 0x68]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000486378: mov edx, dword ptr [rsp + 0x70]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000486dec: mov edx, dword ptr [rsp + 0x70]; mov rbx, qword ptr [rdx + 0xd0]; mov rsi, qword ptr [rsp + 0x78]; mov qword ptr [rsp], rsi; call rbx; 
0x0000000000486d8e: mov edx, dword ptr [rsp + 0x78]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000462c66: mov edx, dword ptr [rsp + 0x8000018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004628e6: mov edx, dword ptr [rsp + 0x800018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462566: mov edx, dword ptr [rsp + 0x80018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004621e6: mov edx, dword ptr [rsp + 0x8018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461e70: mov edx, dword ptr [rsp + 0x818]; mov rax, qword ptr [rdx]; call rax; 
0x000000000047c5dd: mov edx, dword ptr [rsp + 0x90]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000461b6d: mov edx, dword ptr [rsp + 0x98]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000452dcb: mov edx, dword ptr [rsp + 0xc0]; mov rcx, qword ptr [rdx]; call rcx; 
0x0000000000464a96: mov edx, dword ptr [rsp + 8]; mov eax, 0xea; syscall; 
0x0000000000464a96: mov edx, dword ptr [rsp + 8]; mov eax, 0xea; syscall; ret; 
0x00000000004540d1: mov edx, eax; call rbx; 
0x000000000040ef01: mov edx, eax; call rcx; 
0x0000000000456ca6: mov edx, eax; call rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000456d68: mov edx, eax; call rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040ef51: mov edx, ecx; call rsi; 
0x0000000000461634: mov edx, edi; mov rdi, qword ptr [rdi]; call rdi; 
0x0000000000461634: mov edx, edi; mov rdi, qword ptr [rdi]; call rdi; pop rax; lea rax, [rip - 0x2bf03]; jmp rax; 
0x0000000000461711: mov edx, edi; mov rdi, qword ptr [rdi]; jmp rdi; 
0x0000000000434ab5: mov es, word ptr [rax]; add byte ptr [rax], al; mov rax, qword ptr [rip + 0x91aa8]; lea rdx, [rip + 0x91aa1]; call rax; 
0x00000000004658a0: mov es, word ptr [rip + 0x4c894800]; and al, 0x28; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000464a31: mov esi, 0; mov eax, 0x23; syscall; 
0x0000000000464cfd: mov esi, 0; mov rax, qword ptr [rip + 0xdc456]; call rax; 
0x0000000000464c17: mov esi, 0; mov rax, qword ptr [rip + 0xdc53c]; call rax; 
0x0000000000478c04: mov esi, 0x244c8948; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000466983: mov esi, 0x402444c6; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000049a7e8: mov esi, 0x7500000e; adc dword ptr [rax - 0x77], ecx; add eax, 0xbc473; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000422b52: mov esi, 0x8348dead; ret 0x4804; 
0x00000000004067a1: mov esi, 0x8948000b; and al, 0x48; mov qword ptr [rsp + 0x50], 0x1d; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000049abcb: mov esi, 0x8b48000b; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000045b270: mov esi, 0x8b480012; add dword ptr [rax - 0x77], ecx; add eax, 0x12be0b; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045b27a: mov esi, 0x8b480012; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000041b0eb: mov esi, 0x8b480016; sub al, 0x24; add rsp, 8; ret; 
0x00000000004877ab: mov esi, 0x8b48ffff; and al, 0x18; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000465325: mov esi, 2; mov rdx, 1; mov eax, 0x48; syscall; 
0x0000000000465325: mov esi, 2; mov rdx, 1; mov eax, 0x48; syscall; ret; 
0x0000000000465345: mov esi, 3; mov rdx, 0; mov eax, 0x48; syscall; 
0x000000000046535e: mov esi, 4; mov rdx, 0x800; or edx, eax; mov eax, 0x48; syscall; 
0x000000000040ef41: mov esi, dword ptr [rax + 0xc]; mov qword ptr [rsp], rdx; mov qword ptr [rsp + 8], rsi; mov rsi, qword ptr [rcx]; mov rdx, rcx; call rsi; 
0x0000000000441a01: mov esi, dword ptr [rax + rbx*8]; lea rdx, [rax + rbx*8]; call rsi; 
0x0000000000461615: mov esi, dword ptr [rbx]; cmp rsi, rax; jne 0x61625; lea rax, [rip - 0x2bf23]; jmp rax; 
0x000000000040ef4e: mov esi, dword ptr [rcx]; mov rdx, rcx; call rsi; 
0x0000000000463056: mov esi, dword ptr [rdi + 8]; sub rsi, qword ptr [rsp + 0x28]; mov qword ptr fs:[0xfffffffffffffff8], rdi; mov rsp, rsi; mov dword ptr [rsp + 0x18], eax; ret; 
0x0000000000472c92: mov esi, dword ptr [rdi]; adc dword ptr [rax], eax; ret; 
0x000000000042b0e6: mov esi, dword ptr [rdx + rbx*8]; mov rdi, qword ptr [rcx + rbx*8]; cmp rsi, rdi; je 0x2b0dd; mov byte ptr [rsp + 0x38], 0; ret; 
0x000000000045e9f1: mov esi, dword ptr [rip - 0x74b70005]; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000497fad: mov esi, dword ptr [rsp + 0x100]; mov qword ptr [rsp], rsi; call rbx; 
0x00000000004653a6: mov esi, dword ptr [rsp + 0x10]; mov eax, 0x95; syscall; 
0x00000000004653a6: mov esi, dword ptr [rsp + 0x10]; mov eax, 0x95; syscall; mov qword ptr [rsp + 0x18], rax; ret; 
0x00000000004649a5: mov esi, dword ptr [rsp + 0x10]; mov edx, dword ptr [rsp + 0x18]; mov eax, 0; syscall; 
0x0000000000464986: mov esi, dword ptr [rsp + 0x10]; mov edx, dword ptr [rsp + 0x18]; mov eax, 1; syscall; 
0x00000000004652e5: mov esi, dword ptr [rsp + 0x10]; mov edx, dword ptr [rsp + 0x18]; mov r10d, dword ptr [rsp + 0x1c]; mov r8, 0; mov eax, 0x119; syscall; 
0x00000000004650a6: mov esi, dword ptr [rsp + 0x10]; mov edx, dword ptr [rsp + 0x18]; mov rax, 0x1c; syscall; 
0x00000000004650a6: mov esi, dword ptr [rsp + 0x10]; mov edx, dword ptr [rsp + 0x18]; mov rax, 0x1c; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x00000000004651a6: mov esi, dword ptr [rsp + 0x10]; mov rax, 0x83; syscall; 
0x0000000000465026: mov esi, dword ptr [rsp + 0x10]; mov rax, 0xb; syscall; 
0x0000000000464b46: mov esi, dword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x18]; mov eax, 0x1b; syscall; 
0x0000000000464b25: mov esi, dword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x18]; mov eax, 0x26; syscall; 
0x0000000000465266: mov esi, dword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x18]; mov eax, 0xcc; syscall; 
0x0000000000464b06: mov esi, dword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x18]; mov eax, 0xea; syscall; 
0x0000000000427e1c: mov esi, dword ptr [rsp + 0x110]; lea rdx, [rsp + 0x110]; call rsi; 
0x000000000048df4b: mov esi, dword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x20]; mov rax, qword ptr [rsp + 8]; syscall; 
0x00000000004636f0: mov esi, dword ptr [rsp + 0x28]; mov r15, qword ptr [rsp + 0x20]; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000046308e: mov esi, dword ptr [rsp + 0x28]; mov rsp, rsi; mov dword ptr [rsp + 0x18], eax; ret; 
0x000000000040df16: mov esi, dword ptr [rsp + 0x50]; mov qword ptr [rsp], rsi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000040e186: mov esi, dword ptr [rsp + 0x58]; mov qword ptr [rsp], rsi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x00000000004688e0: mov esi, dword ptr [rsp + 0x68]; mov qword ptr [rsp], rsi; call rbx; 
0x0000000000486df8: mov esi, dword ptr [rsp + 0x78]; mov qword ptr [rsp], rsi; call rbx; 
0x00000000004649e5: mov esi, dword ptr [rsp + 8]; mov eax, 0x125; syscall; 
0x00000000004649e5: mov esi, dword ptr [rsp + 8]; mov eax, 0x125; syscall; mov dword ptr [rsp + 0x18], eax; ret; 
0x0000000000464ac9: mov esi, dword ptr [rsp + 8]; mov eax, 0x3e; syscall; 
0x0000000000464ac9: mov esi, dword ptr [rsp + 8]; mov eax, 0x3e; syscall; ret; 
0x0000000000464926: mov esi, dword ptr [rsp + 8]; mov edx, dword ptr [rsp + 0x10]; mov r10d, dword ptr [rsp + 0x14]; mov eax, 0x101; syscall; 
0x0000000000464a91: mov esi, eax; mov edi, r12d; mov edx, dword ptr [rsp + 8]; mov eax, 0xea; syscall; 
0x0000000000464a91: mov esi, eax; mov edi, r12d; mov edx, dword ptr [rsp + 8]; mov eax, 0xea; syscall; ret; 
0x00000000004651f3: mov esi, edi; mov rdi, 0x1002; mov rax, 0x9e; syscall; 
0x00000000004023e8: mov esp, 0x39ce74d2; fidiv dword ptr [rbx - 0x36]; mov qword ptr [r8], rdx; ret; 
0x00000000004023b6: mov esp, 0x490875d2; mov dword ptr [rax], 0xffffffff; ret; 
0x000000000040240a: mov esp, 0x49ac74d2; mov dword ptr [rax], edx; ret; 
0x00000000004047d0: mov esp, 0x8b4889eb; insb byte ptr [rdi], dx; and al, 0x68; add rsp, 0x70; ret; 
0x0000000000402468: mov esp, 0xf72948d2; add rdx, rdi; mov qword ptr [r8], rdx; vzeroupper; ret; 
0x0000000000461704: mov esp, dword ptr [rax + 0x38]; mov qword ptr [rax + 0x38], 0; ret; 
0x00000000004617c7: mov esp, dword ptr [rbx + 0x38]; call 0x496e0; call 0x630c0; ret; 
0x000000000046162f: mov esp, dword ptr [rsi + 0x38]; push rax; mov rdx, rdi; mov rdi, qword ptr [rdi]; call rdi; 
0x0000000000465122: mov esp, dword ptr [rsp + 0x28]; mov eax, 0x38; syscall; 
0x0000000000464fff: mov esp, dword ptr [rsp]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046508d: mov esp, dword ptr [rsp]; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000464a88: mov esp, eax; mov eax, 0xba; syscall; 
0x0000000000464dde: mov esp, ebp; pop rbp; ret; 
0x0000000000464dae: mov esp, ebx; mov dword ptr [rsp + 0x38], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004616dc: mov esp, ebx; mov rdx, rdi; mov rdi, qword ptr [rdi]; call rdi; 
0x0000000000463068: mov esp, esi; mov dword ptr [rsp + 0x18], eax; ret; 
0x0000000000465163: mov qword ptr [0xfffffffffffffff8], r9; call 0x630e0; call r12; mov edi, 0x6f; mov eax, 0x3c; syscall; 
0x00000000004616fb: mov qword ptr [0xfffffffffffffff8], rax; mov rsp, qword ptr [rax + 0x38]; mov qword ptr [rax + 0x38], 0; ret; 
0x00000000004617be: mov qword ptr [0xfffffffffffffff8], rbx; mov rsp, qword ptr [rbx + 0x38]; call 0x496e0; call 0x630c0; ret; 
0x00000000004630a6: mov qword ptr [0xfffffffffffffff8], rbx; ret; 
0x000000000046305f: mov qword ptr [0xfffffffffffffff8], rdi; mov rsp, rsi; mov dword ptr [rsp + 0x18], eax; ret; 
0x0000000000460801: mov qword ptr [0xfffffffffffffff8], rdi; ret; 
0x0000000000461626: mov qword ptr [0xfffffffffffffff8], rsi; mov rsp, qword ptr [rsi + 0x38]; push rax; mov rdx, rdi; mov rdi, qword ptr [rdi]; call rdi; 
0x0000000000443a3a: mov qword ptr [r8 + 0x48], 0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004607e2: mov qword ptr [r8 + 0x68], rbp; mov r9, qword ptr [r8 + 0x50]; test r9, r9; je 0x607f4; call 0x35860; ret; 
0x00000000004023ba: mov qword ptr [r8], -1; ret; 
0x00000000004023c8: mov qword ptr [r8], rdi; ret; 
0x00000000004023f0: mov qword ptr [r8], rdx; ret; 
0x0000000000402470: mov qword ptr [r8], rdx; vzeroupper; ret; 
0x0000000000401fd5: mov qword ptr [r9], rax; ret; 
0x00000000004351f6: mov qword ptr [rax + 0x10], -0x522; mov qword ptr [rsp + 0x70], r8; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000426136: mov qword ptr [rax + 0x10], -0x522; mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004373d5: mov qword ptr [rax + 0x10], -0x522; mov rax, qword ptr [rsp + 0x28]; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000040aa9f: mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000419c28: mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 0x1b0]; add rsp, 0x1b8; nop; ret; 
0x0000000000438979: mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000452314: mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004362e2: mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000437c2e: mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; nop; ret; 
0x0000000000435564: mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000042416e: mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; nop; ret; 
0x0000000000418d50: mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000451ad0: mov qword ptr [rax + 0x10], -0x522; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000041e412: mov qword ptr [rax + 0x10], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x0000000000425cbc: mov qword ptr [rax + 0x10], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042d672: mov qword ptr [rax + 0x1748], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000409cfc: mov qword ptr [rax + 0x18], r9; xorps xmm0, xmm0; movups xmmword ptr [rsp + 0xc0], xmm0; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x000000000044522d: mov qword ptr [rax + 0x18], rcx; mov rcx, qword ptr [rsp + 0x48]; mov qword ptr [rax + 0x80], rcx; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000430672: mov qword ptr [rax + 0x28], rcx; call 0x63280; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042abfd: mov qword ptr [rax + 0x28], rcx; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000412175: mov qword ptr [rax + 0x30], rdx; mov qword ptr [rsp + 0x40], rdi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000461707: mov qword ptr [rax + 0x38], 0; ret; 
0x0000000000496975: mov qword ptr [rax + 0x48], rcx; mov byte ptr [rax + 0x50], dl; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000042f31a: mov qword ptr [rax + 0x48], rcx; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000493def: mov qword ptr [rax + 0x49], 0; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000448fa4: mov qword ptr [rax + 0x68], rcx; ret; 
0x0000000000445236: mov qword ptr [rax + 0x80], rcx; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x000000000042dc03: mov qword ptr [rax + 0xa0], rcx; nop; mov qword ptr [rdx], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000444b2b: mov qword ptr [rax + 0xa8], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042c746: mov qword ptr [rax + 8], rbx; sub qword ptr [rax + 0x18], rsi; mov qword ptr [rsp + 0x18], rdi; mov qword ptr [rsp + 0x20], r8; ret; 
0x00000000004049a1: mov qword ptr [rax + 8], rcx; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000045c2d2: mov qword ptr [rax + 8], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; nop; ret; 
0x0000000000493cda: mov qword ptr [rax + 8], rsi; mov byte ptr [rdx + rcx], bl; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000447f51: mov qword ptr [rax + rcx + 0x460], rdx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042a16b: mov qword ptr [rax + rcx*8], -1; inc rcx; cmp rcx, 8; jl 0x2a169; ret; 
0x0000000000431ec7: mov qword ptr [rax], 0; mov rbp, qword ptr [rsp + 0xb8]; add rsp, 0xc0; ret; 
0x0000000000414fb2: mov qword ptr [rax], rcx; mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004615c1: mov qword ptr [rbx + 0x18], 0; mov qword ptr [rbx + 0x30], 0; mov rbx, qword ptr [rbx + 8]; jmp rbx; 
0x00000000004615b9: mov qword ptr [rbx + 0x20], 0; mov qword ptr [rbx + 0x18], 0; mov qword ptr [rbx + 0x30], 0; mov rbx, qword ptr [rbx + 8]; jmp rbx; 
0x00000000004615c9: mov qword ptr [rbx + 0x30], 0; mov rbx, qword ptr [rbx + 8]; jmp rbx; 
0x00000000004734d3: mov qword ptr [rbx + 0x320], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042c889: mov qword ptr [rbx + 8], rdi; sub qword ptr [rbx + 0x18], r8; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000048b530: mov qword ptr [rbx + r13*8 + 8], r8; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048b52c: mov qword ptr [rbx + r13*8], rdx; mov qword ptr [rbx + r13*8 + 8], r8; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000420e7c: mov qword ptr [rbx + rax + 0x28], rcx; inc qword ptr [rdx + 0x140]; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004616d8: mov qword ptr [rbx], rdx; mov rsp, rbx; mov rdx, rdi; mov rdi, qword ptr [rdi]; call rdi; 
0x000000000040c372: mov qword ptr [rcx + 0x10], -0x522; mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000040f2ec: mov qword ptr [rcx + 0x10], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000412075: mov qword ptr [rcx + 0x40], rax; ret; 
0x000000000043c1ce: mov qword ptr [rcx + 0x48], rax; cmp qword ptr [rcx + 0x50], 0; jne 0x3c1da; ret; 
0x0000000000446dec: mov qword ptr [rcx + 0x80], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045aa2e: mov qword ptr [rcx + 0xa0], rdx; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000042314e: mov qword ptr [rcx + 8], rax; cmp dword ptr [rip + 0x16330b], 1; je 0x23165; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000486e29: mov qword ptr [rcx + 8], rax; mov rax, qword ptr [rsp + 0x70]; mov rax, qword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x78]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000422ba4: mov qword ptr [rcx + 8], rax; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000425dbb: mov qword ptr [rcx + 8], rbx; mov rcx, qword ptr [rax]; mov qword ptr [rdx], rcx; xorps xmm0, xmm0; movups xmmword ptr [rax], xmm0; ret; 
0x000000000042c732: mov qword ptr [rcx + rdx + 8], r8; sub qword ptr [rax + 0x18], r9; mov qword ptr [rsp + 0x18], r8; mov qword ptr [rsp + 0x20], rbx; ret; 
0x0000000000425cb9: mov qword ptr [rcx], rax; mov qword ptr [rax + 0x10], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045ae10: mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045ae8f: mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045a282: mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000045c10f: mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000045e0b0: mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000483c89: mov qword ptr [rdi + 8], rax; mov qword ptr [rsp + 0x50], rdi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000049455c: mov qword ptr [rdi + 8], rcx; mov byte ptr [rbx + rax], 0x3f; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000495a4c: mov qword ptr [rdi + 8], rcx; mov byte ptr [rdx + rax], 0x7d; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x000000000045e63c: mov qword ptr [rdi + 8], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000420bd1: mov qword ptr [rdi + rax*8 + 0x20], rdx; inc qword ptr [rdi + 0x10]; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000463f76: mov qword ptr [rdi + rbx - 8], rax; ret; 
0x0000000000464181: mov qword ptr [rdi + rbx - 8], rcx; ret; 
0x0000000000491306: mov qword ptr [rdi], r8; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000045e639: mov qword ptr [rdi], rax; mov qword ptr [rdi + 8], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000463f73: mov qword ptr [rdi], rax; mov qword ptr [rdi + rbx - 8], rax; ret; 
0x000000000046417e: mov qword ptr [rdi], rax; mov qword ptr [rdi + rbx - 8], rcx; ret; 
0x000000000043d58a: mov qword ptr [rdi], rax; mov qword ptr [rsp + 0x3e8], rdi; mov rbp, qword ptr [rsp + 0x3d0]; add rsp, 0x3d8; ret; 
0x000000000040ddb4: mov qword ptr [rdi], rax; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004717fc: mov qword ptr [rdi], rax; mov rax, qword ptr [rsp + 0x28]; mov qword ptr [rip + 0xe534d], rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000484523: mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004842b7: mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000045a733: mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; nop; ret; 
0x000000000045a5cb: mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x00000000004914b3: mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; nop; ret; 
0x000000000046331c: mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000493805: mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x0000000000463f6f: mov qword ptr [rdi], rax; ret; 
0x00000000004946c6: mov qword ptr [rdi], rbx; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000496b94: mov qword ptr [rdi], rbx; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x00000000004954d6: mov qword ptr [rdi], rbx; movzx eax, byte ptr [rsp + 0x47]; mov byte ptr [rdi + 0x4b], al; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000040d832: mov qword ptr [rdi], rdx; mov qword ptr [rsp + 0x78], rdx; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x00000000004987a2: mov qword ptr [rdi], rdx; mov rbp, qword ptr [rsp + 0x1c8]; add rsp, 0x1d0; ret; 
0x0000000000495b62: mov qword ptr [rdi], rdx; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x0000000000437fc4: mov qword ptr [rdx + 0x10], -0x522; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000451d60: mov qword ptr [rdx + 0x10], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000444142: mov qword ptr [rdx + 0x10], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000424a34: mov qword ptr [rdx + 0x1228], rax; mov qword ptr [rsp + 0x38], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040ee4d: mov qword ptr [rdx + 0x58], rax; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000045dc03: mov qword ptr [rdx + 8], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000451185: mov qword ptr [rdx + r8*8], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000448081: mov qword ptr [rdx + rax + 0x460], rcx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000450fe4: mov qword ptr [rdx + rax*8], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004238ef: mov qword ptr [rdx + rax*8], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041510f: mov qword ptr [rdx + rcx*8 + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045dc00: mov qword ptr [rdx], rax; mov qword ptr [rdx + 8], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042dc0b: mov qword ptr [rdx], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000425dc2: mov qword ptr [rdx], rcx; xorps xmm0, xmm0; movups xmmword ptr [rax], xmm0; ret; 
0x0000000000430989: mov qword ptr [rip + 0x126130], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042f8aa: mov qword ptr [rip + 0x127267], rax; mov rbp, qword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x000000000045e452: mov qword ptr [rip + 0x12808f], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045b276: mov qword ptr [rip + 0x12be0b], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040634a: mov qword ptr [rip + 0x1534c7], rax; xor eax, eax; xchg dword ptr [rdx], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042e087: mov qword ptr [rip + 0x1584ea], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000041f1b0: mov qword ptr [rip + 0x15e7f9], rdi; ret; 
0x000000000041ab47: mov qword ptr [rip + 0x16c4f2], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000041a468: mov qword ptr [rip + 0x16ee29], rax; cmp byte ptr [rip + 0x14329a], 0; jne 0x1a488; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x00000000004171c9: mov qword ptr [rip + 0x16fe40], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000401f09: mov qword ptr [rip + 0x184584], 0x3f; ret; 
0x000000000049abc7: mov qword ptr [rip + 0xbbe92], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000049a7ee: mov qword ptr [rip + 0xbc473], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048df04: mov qword ptr [rip + 0xc21bd], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048e534: mov qword ptr [rip + 0xc5655], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000490f6d: mov qword ptr [rip + 0xc5ea4], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000490bea: mov qword ptr [rip + 0xc62ff], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048fcea: mov qword ptr [rip + 0xc7017], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048d1c8: mov qword ptr [rip + 0xc9ab9], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048745c: mov qword ptr [rip + 0xcf61d], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000472b9f: mov qword ptr [rip + 0xe4002], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004722ec: mov qword ptr [rip + 0xe4955], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000471804: mov qword ptr [rip + 0xe534d], rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000046c622: mov qword ptr [rip + 0xea6ff], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046c25b: mov qword ptr [rip + 0xea8d6], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000469624: mov qword ptr [rip + 0xed62d], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045eae9: mov qword ptr [rip + 0xf8000], rax; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x00000000004737e1: mov qword ptr [rsi + 8], rdx; mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000430c8a: mov qword ptr [rsi + rcx*8], rax; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000040774f: mov qword ptr [rsp + 0x100], rax; mov qword ptr [rsp + 0x108], rcx; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x0000000000477680: mov qword ptr [rsp + 0x100], rcx; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x0000000000497dda: mov qword ptr [rsp + 0x100], rcx; mov rdx, qword ptr [rax + 0x48]; mov qword ptr [rsp], rcx; call rdx; 
0x0000000000475d22: mov qword ptr [rsp + 0x100], rdi; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000045fde4: mov qword ptr [rsp + 0x108], r8; mov rbp, qword ptr [rsp + 0xd0]; add rsp, 0xd8; ret; 
0x0000000000407757: mov qword ptr [rsp + 0x108], rcx; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000045d451: mov qword ptr [rsp + 0x10], -1; call 0x386a0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040a72e: mov qword ptr [rsp + 0x10], 0; ret; 
0x000000000042eddb: mov qword ptr [rsp + 0x10], 0x80; call 0x2ee20; mov rbp, qword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x0000000000403884: mov qword ptr [rsp + 0x10], 0x80; call 0x2f0e0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043400c: mov qword ptr [rsp + 0x10], 0xe; call 0x33be0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000497c0a: mov qword ptr [rsp + 0x10], 5; call 0x91760; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000048abb0: mov qword ptr [rsp + 0x10], r8; call rdx; 
0x000000000048af4c: mov qword ptr [rsp + 0x10], r8; call rsi; 
0x000000000045e835: mov qword ptr [rsp + 0x10], rax; call 0x11cc0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000423de1: mov qword ptr [rsp + 0x10], rax; call 0x26d60; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042ab01: mov qword ptr [rsp + 0x10], rax; call 0x2a180; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041fd47: mov qword ptr [rsp + 0x10], rax; call 0x2c220; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000456766: mov qword ptr [rsp + 0x10], rax; call 0x34660; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000438d7f: mov qword ptr [rsp + 0x10], rax; call 0x386a0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000460254: mov qword ptr [rsp + 0x10], rax; call 0x43640; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000411e0a: mov qword ptr [rsp + 0x10], rax; call 0x64040; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004052eb: mov qword ptr [rsp + 0x10], rax; call 0x64040; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000482da9: mov qword ptr [rsp + 0x10], rax; call 0x6b1a0; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x000000000048ac29: mov qword ptr [rsp + 0x10], rax; call 0x8ac60; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048afa1: mov qword ptr [rsp + 0x10], rax; call rdx; 
0x0000000000443110: mov qword ptr [rsp + 0x10], rax; mov qword ptr [rsp + 0x18], 0x13; ret; 
0x000000000048e5e7: mov qword ptr [rsp + 0x10], rax; mov qword ptr [rsp + 0x18], 0xb; ret; 
0x0000000000457ab0: mov qword ptr [rsp + 0x10], rax; mov qword ptr [rsp + 0x18], rcx; ret; 
0x00000000004296ef: mov qword ptr [rsp + 0x10], rax; mov rax, qword ptr [rsp + 0x90]; lea rdx, [rsp + 0x90]; call rax; 
0x00000000004508a1: mov qword ptr [rsp + 0x10], rax; mov rdx, qword ptr [rsp + 0x38]; mov rax, qword ptr [rdx]; call rax; 
0x000000000046bf16: mov qword ptr [rsp + 0x10], rax; nop dword ptr [rax + rax]; call 0x6ba80; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000042f579: mov qword ptr [rsp + 0x10], rax; nop; call 0x64b00; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046725a: mov qword ptr [rsp + 0x10], rax; nop; ret; 
0x0000000000401e51: mov qword ptr [rsp + 0x10], rax; ret; 
0x00000000004726f6: mov qword ptr [rsp + 0x10], rbx; mov qword ptr [rsp + 0x18], rdi; call rax; 
0x00000000004941df: mov qword ptr [rsp + 0x10], rbx; mov qword ptr [rsp + 0x18], rsi; call rax; 
0x000000000045c5c6: mov qword ptr [rsp + 0x10], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000472610: mov qword ptr [rsp + 0x10], rbx; mov rdx, qword ptr [rsp + 0x68]; mov qword ptr [rsp + 0x18], rdx; nop; call rax; 
0x000000000043454e: mov qword ptr [rsp + 0x10], rcx; call 0x33be0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000043444e: mov qword ptr [rsp + 0x10], rcx; call 0x33be0; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000048aab0: mov qword ptr [rsp + 0x10], rcx; call rax; 
0x000000000048ae66: mov qword ptr [rsp + 0x10], rcx; call rsi; 
0x0000000000493f6d: mov qword ptr [rsp + 0x10], rcx; mov byte ptr [rsp + 0x18], al; ret; 
0x00000000004971d3: mov qword ptr [rsp + 0x10], rcx; mov ecx, dword ptr [rsp + 0x278]; mov dword ptr [rsp + 0x18], ecx; call rax; 
0x000000000042f13b: mov qword ptr [rsp + 0x10], rcx; mov qword ptr [rsp + 0x18], rax; call 0x43000; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000432240: mov qword ptr [rsp + 0x10], rcx; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000429549: mov qword ptr [rsp + 0x10], rcx; mov rax, qword ptr [rip + 0x9ce4b]; lea rdx, [rip + 0x9ce44]; call rax; 
0x000000000044c4fd: mov qword ptr [rsp + 0x10], rcx; mov rax, qword ptr [rsp + 0x20]; lea rdx, [rsp + 0x20]; call rax; 
0x000000000042978e: mov qword ptr [rsp + 0x10], rcx; mov rax, qword ptr [rsp + 0x90]; lea rdx, [rsp + 0x90]; call rax; 
0x0000000000445e17: mov qword ptr [rsp + 0x10], rcx; mov rbx, qword ptr [rdx]; nop; call rbx; 
0x000000000045c5e8: mov qword ptr [rsp + 0x10], rcx; mov rdx, qword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000492717: mov qword ptr [rsp + 0x10], rcx; nop dword ptr [rax]; call 0x91760; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000492f99: mov qword ptr [rsp + 0x10], rcx; nop; call 0x91760; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000048aeba: mov qword ptr [rsp + 0x10], rcx; nop; call rdx; 
0x0000000000423b53: mov qword ptr [rsp + 0x10], rcx; ret; 
0x0000000000445d4b: mov qword ptr [rsp + 0x10], rdi; call 0x44a80; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000048b06a: mov qword ptr [rsp + 0x10], rdi; call rdx; 
0x00000000004342ab: mov qword ptr [rsp + 0x10], rdx; call 0x33be0; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x00000000004490f5: mov qword ptr [rsp + 0x10], rdx; call 0x52d00; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000443133: mov qword ptr [rsp + 0x10], rdx; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000464e2c: mov qword ptr [rsp + 0x10], rdx; mov qword ptr [rsp + 8], rsi; mov qword ptr [rsp], rdi; lea rax, [rip - 0x1fe01]; call rax; 
0x000000000040a728: mov qword ptr [rsp + 0x10], rdx; ret; 
0x000000000048ab1d: mov qword ptr [rsp + 0x10], rsi; call rax; 
0x000000000044cfbc: mov qword ptr [rsp + 0x118], rax; mov rbp, qword ptr [rsp + 0xf0]; add rsp, 0xf8; ret; 
0x0000000000406dd5: mov qword ptr [rsp + 0x120], rax; mov qword ptr [rsp + 0x128], rcx; mov rbp, qword ptr [rsp + 0x108]; add rsp, 0x110; ret; 
0x0000000000480a7e: mov qword ptr [rsp + 0x128], rax; mov qword ptr [rsp + 0x130], rcx; mov rbp, qword ptr [rsp + 0x110]; add rsp, 0x118; ret; 
0x000000000048bfc5: mov qword ptr [rsp + 0x128], rax; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x0000000000406ddd: mov qword ptr [rsp + 0x128], rcx; mov rbp, qword ptr [rsp + 0x108]; add rsp, 0x110; ret; 
0x0000000000480a86: mov qword ptr [rsp + 0x130], rcx; mov rbp, qword ptr [rsp + 0x110]; add rsp, 0x118; ret; 
0x00000000004286dd: mov qword ptr [rsp + 0x140], rcx; mov qword ptr [rsp + 0x148], rax; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x0000000000428645: mov qword ptr [rsp + 0x148], rax; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x000000000047fcbf: mov qword ptr [rsp + 0x168], rax; mov rax, qword ptr [rsp + 0xa0]; mov qword ptr [rsp + 0x170], rax; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x000000000047fccf: mov qword ptr [rsp + 0x170], rax; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x000000000042a743: mov qword ptr [rsp + 0x18], -1; ret; 
0x000000000044c27c: mov qword ptr [rsp + 0x18], 0; mov byte ptr [rsp + 0x20], 0; ret; 
0x00000000004060d3: mov qword ptr [rsp + 0x18], 0; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x00000000004210ff: mov qword ptr [rsp + 0x18], 0; ret; 
0x0000000000443115: mov qword ptr [rsp + 0x18], 0x13; ret; 
0x0000000000493048: mov qword ptr [rsp + 0x18], 0x44; call 0x91400; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; nop; ret; 
0x000000000048e5ec: mov qword ptr [rsp + 0x18], 0xb; ret; 
0x000000000042c73b: mov qword ptr [rsp + 0x18], r8; mov qword ptr [rsp + 0x20], rbx; ret; 
0x00000000004487f3: mov qword ptr [rsp + 0x18], rax; call 0x39a0; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000404090: mov qword ptr [rsp + 0x18], rax; call 0x41a0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042f140: mov qword ptr [rsp + 0x18], rax; call 0x43000; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000404b0b: mov qword ptr [rsp + 0x18], rax; call 0x4b20; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044c2ce: mov qword ptr [rsp + 0x18], rax; mov byte ptr [rsp + 0x20], 1; ret; 
0x0000000000466e0f: mov qword ptr [rsp + 0x18], rax; mov qword ptr [rsp + 0x20], rcx; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000407245: mov qword ptr [rsp + 0x18], rax; mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x20], rax; ret; 
0x000000000044c4b1: mov qword ptr [rsp + 0x18], rax; mov rax, qword ptr [rsp + 0x20]; lea rdx, [rsp + 0x20]; call rax; 
0x0000000000451297: mov qword ptr [rsp + 0x18], rax; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000487731: mov qword ptr [rsp + 0x18], rax; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000040929d: mov qword ptr [rsp + 0x18], rax; ret; 
0x000000000048fa33: mov qword ptr [rsp + 0x18], rbp; lea rbp, [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x000000000040485f: mov qword ptr [rsp + 0x18], rbx; call 0x4540; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x000000000045a47b: mov qword ptr [rsp + 0x18], rbx; call 0x4640; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000049395d: mov qword ptr [rsp + 0x18], rbx; call 0x91400; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x0000000000445e79: mov qword ptr [rsp + 0x18], rcx; mov qword ptr [rsp + 0x20], rax; call 0x3dc80; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000048b2d8: mov qword ptr [rsp + 0x18], rcx; mov qword ptr [rsp + 0x20], rax; call 0x8ab60; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000046595b: mov qword ptr [rsp + 0x18], rcx; mov qword ptr [rsp + 0x20], rax; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000467c91: mov qword ptr [rsp + 0x18], rcx; mov qword ptr [rsp + 0x20], rax; ret; 
0x0000000000405194: mov qword ptr [rsp + 0x18], rcx; mov rdx, qword ptr [rsp + 0x48]; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000409224: mov qword ptr [rsp + 0x18], rcx; ret; 
0x00000000004726fb: mov qword ptr [rsp + 0x18], rdi; call rax; 
0x000000000042c74e: mov qword ptr [rsp + 0x18], rdi; mov qword ptr [rsp + 0x20], r8; ret; 
0x0000000000404279: mov qword ptr [rsp + 0x18], rdi; nop; call 0x4540; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x00000000004927ab: mov qword ptr [rsp + 0x18], rdx; call 0x91400; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000049390c: mov qword ptr [rsp + 0x18], rdx; call 0x91400; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x0000000000406074: mov qword ptr [rsp + 0x18], rdx; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000047261a: mov qword ptr [rsp + 0x18], rdx; nop; call rax; 
0x00000000004941e4: mov qword ptr [rsp + 0x18], rsi; call rax; 
0x000000000042c0bf: mov qword ptr [rsp + 0x18], rsi; ret; 
0x000000000047a41a: mov qword ptr [rsp + 0x1c8], rax; mov rbp, qword ptr [rsp + 0x160]; add rsp, 0x168; ret; 
0x0000000000474855: mov qword ptr [rsp + 0x1d8], rax; mov qword ptr [rsp + 0x1e0], rcx; mov rbp, qword ptr [rsp + 0x188]; add rsp, 0x190; ret; 
0x000000000047470f: mov qword ptr [rsp + 0x1d8], rcx; mov qword ptr [rsp + 0x1e0], rdx; mov rbp, qword ptr [rsp + 0x188]; add rsp, 0x190; ret; 
0x00000000004745cd: mov qword ptr [rsp + 0x1e0], rax; mov rbp, qword ptr [rsp + 0x188]; add rsp, 0x190; ret; 
0x000000000047485d: mov qword ptr [rsp + 0x1e0], rcx; mov rbp, qword ptr [rsp + 0x188]; add rsp, 0x190; ret; 
0x0000000000481394: mov qword ptr [rsp + 0x1e0], rdx; mov qword ptr [rsp + 0x1e8], rbx; mov qword ptr [rsp + 0x1f0], rsi; mov rbp, qword ptr [rsp + 0x1b0]; add rsp, 0x1b8; ret; 
0x0000000000474c48: mov qword ptr [rsp + 0x1e0], rdx; mov rbp, qword ptr [rsp + 0x188]; add rsp, 0x190; nop; ret; 
0x0000000000474717: mov qword ptr [rsp + 0x1e0], rdx; mov rbp, qword ptr [rsp + 0x188]; add rsp, 0x190; ret; 
0x000000000048139c: mov qword ptr [rsp + 0x1e8], rbx; mov qword ptr [rsp + 0x1f0], rsi; mov rbp, qword ptr [rsp + 0x1b0]; add rsp, 0x1b8; ret; 
0x00000000004813a4: mov qword ptr [rsp + 0x1f0], rsi; mov rbp, qword ptr [rsp + 0x1b0]; add rsp, 0x1b8; ret; 
0x000000000042a9f8: mov qword ptr [rsp + 0x20], -1; mov qword ptr [rsp + 0x28], rsi; ret; 
0x00000000004017eb: mov qword ptr [rsp + 0x20], -1; ret; 
0x00000000004096b6: mov qword ptr [rsp + 0x20], 0; nop; ret; 
0x00000000004096b0: mov qword ptr [rsp + 0x20], r8; ret; 
0x0000000000459e7e: mov qword ptr [rsp + 0x20], r9; mov rax, qword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x0000000000412c33: mov qword ptr [rsp + 0x20], rax; call 0x12f60; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000445e7e: mov qword ptr [rsp + 0x20], rax; call 0x3dc80; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000048b2dd: mov qword ptr [rsp + 0x20], rax; call 0x8ab60; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000044c459: mov qword ptr [rsp + 0x20], rax; lea rax, [rsp + 0x40]; mov qword ptr [rsp + 0x28], rax; mov rax, qword ptr [rsp + 0x20]; lea rdx, [rsp + 0x20]; call rax; 
0x0000000000464bff: mov qword ptr [rsp + 0x20], rax; mov dword ptr [rsp + 0x28], edx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004162d2: mov qword ptr [rsp + 0x20], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000465960: mov qword ptr [rsp + 0x20], rax; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000046892c: mov qword ptr [rsp + 0x20], rax; mov rcx, qword ptr [rsp + 0x60]; mov rdx, qword ptr [rcx + 0x38]; mov rbx, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rbx; call rdx; 
0x000000000040724f: mov qword ptr [rsp + 0x20], rax; ret; 
0x00000000004017e5: mov qword ptr [rsp + 0x20], rbx; ret; 
0x00000000004873d6: mov qword ptr [rsp + 0x20], rcx; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000041d492: mov qword ptr [rsp + 0x20], rcx; mov rax, qword ptr [rdx]; call rax; 
0x000000000040da54: mov qword ptr [rsp + 0x20], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000466e14: mov qword ptr [rsp + 0x20], rcx; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000405e3e: mov qword ptr [rsp + 0x20], rcx; mov rdx, qword ptr [rsp + 0x50]; mov rbx, qword ptr [rdx]; call rbx; 
0x00000000004090d6: mov qword ptr [rsp + 0x20], rcx; ret; 
0x000000000042a9da: mov qword ptr [rsp + 0x20], rdi; mov qword ptr [rsp + 0x28], rax; ret; 
0x000000000042aa07: mov qword ptr [rsp + 0x20], rdi; mov qword ptr [rsp + 0x28], rsi; ret; 
0x0000000000464f92: mov qword ptr [rsp + 0x28], 0; mov qword ptr [rsp + 0x30], rax; ret; 
0x00000000004994ee: mov qword ptr [rsp + 0x28], rax; call 0x97ca0; mov rbp, qword ptr [rsp + 0x1c8]; add rsp, 0x1d0; ret; 
0x0000000000464fa1: mov qword ptr [rsp + 0x28], rax; mov qword ptr [rsp + 0x30], 0; ret; 
0x0000000000498002: mov qword ptr [rsp + 0x28], rax; mov qword ptr [rsp + 0x30], rcx; call 0x95800; mov rbp, qword ptr [rsp + 0x1c8]; add rsp, 0x1d0; ret; 
0x000000000048df83: mov qword ptr [rsp + 0x28], rax; mov qword ptr [rsp + 0x30], rdx; mov qword ptr [rsp + 0x38], 0; call 0x5f320; ret; 
0x0000000000434740: mov qword ptr [rsp + 0x28], rax; mov qword ptr [rsp], rax; mov rcx, qword ptr [rip + 0x91df0]; lea rdx, [rip + 0x91de9]; call rcx; 
0x000000000044c463: mov qword ptr [rsp + 0x28], rax; mov rax, qword ptr [rsp + 0x20]; lea rdx, [rsp + 0x20]; call rax; 
0x0000000000426b50: mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004235ea: mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042dea5: mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000042a9df: mov qword ptr [rsp + 0x28], rax; ret; 
0x0000000000441ab6: mov qword ptr [rsp + 0x28], rbx; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000048aaab: mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x10], rcx; call rax; 
0x0000000000467449: mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x30], rax; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046772c: mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; nop; ret; 
0x000000000040b048: mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000041d48d: mov qword ptr [rsp + 0x28], rdi; mov qword ptr [rsp + 0x20], rcx; mov rax, qword ptr [rdx]; call rax; 
0x0000000000463043: mov qword ptr [rsp + 0x28], rdi; mov rdi, rbx; mov rcx, rbx; call rax; 
0x0000000000473705: mov qword ptr [rsp + 0x28], rdx; mov qword ptr [rsp + 0x30], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000438642: mov qword ptr [rsp + 0x28], rdx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000463080: mov qword ptr [rsp + 0x28], rdx; mov rdi, rbx; mov rcx, rbx; call rax; 
0x000000000042aa01: mov qword ptr [rsp + 0x28], rsi; ret; 
0x0000000000454eb7: mov qword ptr [rsp + 0x2b0], rbx; mov rbp, qword ptr [rsp + 0x278]; add rsp, 0x280; ret; 
0x0000000000464fa6: mov qword ptr [rsp + 0x30], 0; ret; 
0x000000000040b068: mov qword ptr [rsp + 0x30], 4; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046744e: mov qword ptr [rsp + 0x30], rax; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042bdc8: mov qword ptr [rsp + 0x30], rax; mov qword ptr [rsp + 0x38], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000467698: mov qword ptr [rsp + 0x30], rax; mov qword ptr [rsp + 0x38], rbx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000456e4e: mov qword ptr [rsp + 0x30], rax; mov qword ptr [rsp + 0x38], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000408ee7: mov qword ptr [rsp + 0x30], rax; mov qword ptr [rsp + 0x38], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000456e3a: mov qword ptr [rsp + 0x30], rax; mov qword ptr [rsp + 0x38], rdx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000467731: mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; nop; ret; 
0x000000000040b04d: mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004066df: mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046896a: mov qword ptr [rsp + 0x30], rax; mov rcx, qword ptr [rsp + 0x60]; mov rcx, qword ptr [rcx + 0x60]; mov rdx, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000464f9b: mov qword ptr [rsp + 0x30], rax; ret; 
0x000000000042cd75: mov qword ptr [rsp + 0x30], rbx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000498007: mov qword ptr [rsp + 0x30], rcx; call 0x95800; mov rbp, qword ptr [rsp + 0x1c8]; add rsp, 0x1d0; ret; 
0x000000000043843d: mov qword ptr [rsp + 0x30], rcx; lea rax, [rip + 0x14e0bf]; xchg qword ptr [rax], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004678b5: mov qword ptr [rsp + 0x30], rcx; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000408ec5: mov qword ptr [rsp + 0x30], rcx; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046cec6: mov qword ptr [rsp + 0x30], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048df88: mov qword ptr [rsp + 0x30], rdx; mov qword ptr [rsp + 0x38], 0; call 0x5f320; ret; 
0x00000000004204af: mov qword ptr [rsp + 0x30], rdx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004148d8: mov qword ptr [rsp + 0x30], rdx; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000045413e: mov qword ptr [rsp + 0x320], rax; mov rbp, qword ptr [rsp + 0x2c0]; add rsp, 0x2c8; ret; 
0x0000000000453439: mov qword ptr [rsp + 0x320], rdi; mov rbp, qword ptr [rsp + 0x2c0]; add rsp, 0x2c8; ret; 
0x000000000048df8d: mov qword ptr [rsp + 0x38], 0; call 0x5f320; ret; 
0x00000000004735bc: mov qword ptr [rsp + 0x38], r9; mov byte ptr [rsp + 0x40], sil; mov qword ptr [rsp + 0x48], rbx; mov qword ptr [rsp + 0x50], rcx; mov byte ptr [rsp + 0x58], sil; ret; 
0x000000000048df78: mov qword ptr [rsp + 0x38], rax; call 0x5f320; ret; 
0x000000000045c545: mov qword ptr [rsp + 0x38], rax; mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048fa72: mov qword ptr [rsp + 0x38], rax; mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044dd30: mov qword ptr [rsp + 0x38], rax; mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000467453: mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000402818: mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000408eca: mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000414fba: mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045d0e2: mov qword ptr [rsp + 0x38], rax; movups xmmword ptr [rsp + 0x40], xmm0; call 0x52f40; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000042bdcd: mov qword ptr [rsp + 0x38], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046769d: mov qword ptr [rsp + 0x38], rbx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044dcfb: mov qword ptr [rsp + 0x38], rcx; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046cd66: mov qword ptr [rsp + 0x38], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045efd1: mov qword ptr [rsp + 0x38], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; nop; ret; 
0x0000000000456e53: mov qword ptr [rsp + 0x38], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000408eec: mov qword ptr [rsp + 0x38], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000469578: mov qword ptr [rsp + 0x38], rdi; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000456e3f: mov qword ptr [rsp + 0x38], rdx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043d31c: mov qword ptr [rsp + 0x3e8], 0; mov rbp, qword ptr [rsp + 0x3d0]; add rsp, 0x3d8; ret; 
0x000000000043d58d: mov qword ptr [rsp + 0x3e8], rdi; mov rbp, qword ptr [rsp + 0x3d0]; add rsp, 0x3d8; ret; 
0x000000000046c8b5: mov qword ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044eefb: mov qword ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000459590: mov qword ptr [rsp + 0x40], 1; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004595d2: mov qword ptr [rsp + 0x40], 2; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000459630: mov qword ptr [rsp + 0x40], 3; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045969c: mov qword ptr [rsp + 0x40], 4; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042be8a: mov qword ptr [rsp + 0x40], r9; mov qword ptr [rsp + 0x48], rdi; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040febf: mov qword ptr [rsp + 0x40], rax; mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041098e: mov qword ptr [rsp + 0x40], rax; mov byte ptr [rsp + 0x48], 1; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045df8d: mov qword ptr [rsp + 0x40], rax; mov byte ptr [rsp + 0x48], cl; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; nop; ret; 
0x000000000045dfdd: mov qword ptr [rsp + 0x40], rax; mov byte ptr [rsp + 0x48], cl; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048af9c: mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x10], rax; call rdx; 
0x0000000000482173: mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x48], 0xe; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042996f: mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004675cc: mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; nop; ret; 
0x0000000000466b3f: mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000482158: mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048dff2: mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x48], rdx; mov qword ptr [rsp + 0x50], 0; call 0x5f320; ret; 
0x000000000040d46b: mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000048f136: mov qword ptr [rsp + 0x40], rax; mov rax, qword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004291df: mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040fc0c: mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000402651: mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x00000000004024e3: mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042df95: mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000041212e: mov qword ptr [rsp + 0x40], rbx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045ed47: mov qword ptr [rsp + 0x40], rcx; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000046c07a: mov qword ptr [rsp + 0x40], rcx; mov qword ptr [rsp + 0x48], rdx; mov byte ptr [rsp + 0x50], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045c54a: mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004737e5: mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000402621: mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000412179: mov qword ptr [rsp + 0x40], rdi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000467365: mov qword ptr [rsp + 0x40], rdx; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004121c9: mov qword ptr [rsp + 0x40], rdx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000427cb1: mov qword ptr [rsp + 0x40], rsi; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x0000000000474fe0: mov qword ptr [rsp + 0x440], rax; mov qword ptr [rsp + 0x448], rcx; mov rbp, qword ptr [rsp + 0x3e8]; add rsp, 0x3f0; nop; ret; 
0x0000000000474fe8: mov qword ptr [rsp + 0x448], rcx; mov rbp, qword ptr [rsp + 0x3e8]; add rsp, 0x3f0; nop; ret; 
0x0000000000450634: mov qword ptr [rsp + 0x48], -1; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042998c: mov qword ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000440fcb: mov qword ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000482178: mov qword ptr [rsp + 0x48], 0xe; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000450598: mov qword ptr [rsp + 0x48], r8; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000046bd77: mov qword ptr [rsp + 0x48], rax; mov byte ptr [rsp + 0x50], 1; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000047361a: mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], 0; mov byte ptr [rsp + 0x58], dl; ret; 
0x0000000000484d0c: mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], 0x16; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004067a4: mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], 0x1d; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044b62f: mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040bfac: mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], rcx; mov byte ptr [rsp + 0x58], dl; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044bd43: mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], rcx; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044be45: mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], rcx; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048fafb: mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], rcx; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048ed7e: mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048ec36: mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040680f: mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040a064: mov qword ptr [rsp + 0x48], rax; mov rax, qword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040a3ca: mov qword ptr [rsp + 0x48], rax; mov rax, qword ptr [rsp + 0x40]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000041268a: mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000447271: mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x000000000040a26c: mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004850b1: mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; nop; ret; 
0x000000000042ac01: mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000043ccfe: mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000429a5c: mov qword ptr [rsp + 0x48], rax; shl rsi, 0xd; mov qword ptr [rsp + 0x50], rsi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004735c6: mov qword ptr [rsp + 0x48], rbx; mov qword ptr [rsp + 0x50], rcx; mov byte ptr [rsp + 0x58], sil; ret; 
0x000000000042bf52: mov qword ptr [rsp + 0x48], rbx; mov qword ptr [rsp + 0x50], rsi; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000041702f: mov qword ptr [rsp + 0x48], rbx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042bf7e: mov qword ptr [rsp + 0x48], rcx; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044e606: mov qword ptr [rsp + 0x48], rcx; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000490c6f: mov qword ptr [rsp + 0x48], rcx; mov qword ptr [rsp + 0x50], rdx; mov qword ptr [rsp + 0x58], rbx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040718c: mov qword ptr [rsp + 0x48], rcx; mov qword ptr [rsp + 0x50], rsi; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; nop; ret; 
0x0000000000437a68: mov qword ptr [rsp + 0x48], rcx; mov qword ptr [rsp], rcx; mov rdx, qword ptr [rsp + 0x68]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000429974: mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004675d1: mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; nop; ret; 
0x0000000000466b44: mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000417086: mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042be8f: mov qword ptr [rsp + 0x48], rdi; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000429947: mov qword ptr [rsp + 0x48], rdi; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046c07f: mov qword ptr [rsp + 0x48], rdx; mov byte ptr [rsp + 0x50], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048dff7: mov qword ptr [rsp + 0x48], rdx; mov qword ptr [rsp + 0x50], 0; call 0x5f320; ret; 
0x000000000043f184: mov qword ptr [rsp + 0x48], rdx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041276f: mov qword ptr [rsp + 0x4c], rax; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048dffc: mov qword ptr [rsp + 0x50], 0; call 0x5f320; ret; 
0x000000000047361f: mov qword ptr [rsp + 0x50], 0; mov byte ptr [rsp + 0x58], dl; ret; 
0x0000000000429aab: mov qword ptr [rsp + 0x50], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000415a9c: mov qword ptr [rsp + 0x50], 0; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042f018: mov qword ptr [rsp + 0x50], 0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000484d11: mov qword ptr [rsp + 0x50], 0x16; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004067a9: mov qword ptr [rsp + 0x50], 0x1d; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044b634: mov qword ptr [rsp + 0x50], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000041279e: mov qword ptr [rsp + 0x50], r9; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048dfe7: mov qword ptr [rsp + 0x50], rax; call 0x5f320; ret; 
0x000000000040a4b9: mov qword ptr [rsp + 0x50], rax; mov byte ptr [rsp + 0x58], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045be4d: mov qword ptr [rsp + 0x50], rax; mov byte ptr [rsp + 0x58], 1; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000047bdad: mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], 4; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000047be32: mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], 6; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042a6ca: mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000412565: mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rbx; mov qword ptr [rsp + 0x60], rdx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048d66b: mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rbx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004831c9: mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048f07a: mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040ddb7: mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048d2ef: mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000466bef: mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041fc24: mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rdx; mov dword ptr [rsp + 0x60], ecx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048d299: mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000484aee: mov qword ptr [rsp + 0x50], rax; mov rax, qword ptr [rsp + 0x38]; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040a3d4: mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040a06e: mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040cd1d: mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000415a83: mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042f02b: mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004417d9: mov qword ptr [rsp + 0x50], rbx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040bfb1: mov qword ptr [rsp + 0x50], rcx; mov byte ptr [rsp + 0x58], dl; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004735cb: mov qword ptr [rsp + 0x50], rcx; mov byte ptr [rsp + 0x58], sil; ret; 
0x000000000048309b: mov qword ptr [rsp + 0x50], rcx; mov qword ptr [rsp + 0x58], rax; mov qword ptr [rsp + 0x60], rsi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044e6d7: mov qword ptr [rsp + 0x50], rcx; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000047990c: mov qword ptr [rsp + 0x50], rcx; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x000000000047ad41: mov qword ptr [rsp + 0x50], rcx; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000044bd48: mov qword ptr [rsp + 0x50], rcx; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046c18f: mov qword ptr [rsp + 0x50], rcx; mov qword ptr [rsp + 0x58], rdx; mov byte ptr [rsp + 0x60], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041adb4: mov qword ptr [rsp + 0x50], rcx; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000443e6b: mov qword ptr [rsp + 0x50], rcx; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048fb00: mov qword ptr [rsp + 0x50], rcx; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000483df4: mov qword ptr [rsp + 0x50], rcx; mov rax, qword ptr [rsp + 0x38]; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000412774: mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000484c38: mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048ec3b: mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000406814: mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000483c8d: mov qword ptr [rsp + 0x50], rdi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000490c74: mov qword ptr [rsp + 0x50], rdx; mov qword ptr [rsp + 0x58], rbx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000407191: mov qword ptr [rsp + 0x50], rsi; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; nop; ret; 
0x000000000042bf57: mov qword ptr [rsp + 0x50], rsi; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000429a65: mov qword ptr [rsp + 0x50], rsi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042a8a5: mov qword ptr [rsp + 0x58], -1; mov qword ptr [rsp + 0x60], rdx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044c1ce: mov qword ptr [rsp + 0x58], -1; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040d642: mov qword ptr [rsp + 0x58], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000444084: mov qword ptr [rsp + 0x58], 0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000047bdb2: mov qword ptr [rsp + 0x58], 4; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000047be37: mov qword ptr [rsp + 0x58], 6; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042a882: mov qword ptr [rsp + 0x58], r8; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000420d11: mov qword ptr [rsp + 0x58], rax; cmp rbx, rsi; sete byte ptr [rsp + 0x60]; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000049098e: mov qword ptr [rsp + 0x58], rax; lea rax, [rip + 0x4b7c6]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040dfcb: mov qword ptr [rsp + 0x58], rax; mov byte ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040e06e: mov qword ptr [rsp + 0x58], rax; mov byte ptr [rsp + 0x60], 1; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000045c601: mov qword ptr [rsp + 0x58], rax; mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040721d: mov qword ptr [rsp + 0x58], rax; mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004830a0: mov qword ptr [rsp + 0x58], rax; mov qword ptr [rsp + 0x60], rsi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042a862: mov qword ptr [rsp + 0x58], rax; mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000450f13: mov qword ptr [rsp + 0x58], rax; mov rax, qword ptr [rsp + 0x28]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004908f5: mov qword ptr [rsp + 0x58], rax; mov rax, qword ptr [rsp + 0x30]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004833dd: mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000483dd8: mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004203e4: mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004100df: mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000479911: mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x0000000000402998: mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000044c00f: mov qword ptr [rsp + 0x58], rax; shr rcx, 2; mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041256a: mov qword ptr [rsp + 0x58], rbx; mov qword ptr [rsp + 0x60], rdx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000490c79: mov qword ptr [rsp + 0x58], rbx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048d670: mov qword ptr [rsp + 0x58], rbx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041fc7f: mov qword ptr [rsp + 0x58], rcx; mov dword ptr [rsp + 0x60], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004124bc: mov qword ptr [rsp + 0x58], rcx; mov qword ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000047b6b5: mov qword ptr [rsp + 0x58], rcx; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004825bb: mov qword ptr [rsp + 0x58], rcx; mov qword ptr [rsp + 0x60], rdx; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004831ce: mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044bd4d: mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040d5d2: mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000437fcc: mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040294b: mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000046c194: mov qword ptr [rsp + 0x58], rdx; mov byte ptr [rsp + 0x60], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041fc29: mov qword ptr [rsp + 0x58], rdx; mov dword ptr [rsp + 0x60], ecx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041adb9: mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048337e: mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000443e70: mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048fb05: mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000447c10: mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000483311: mov qword ptr [rsp + 0x58], rsi; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; nop; ret; 
0x000000000044c17f: mov qword ptr [rsp + 0x58], rsi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004124c1: mov qword ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000415b3d: mov qword ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044c3e9: mov qword ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000044c52b: mov qword ptr [rsp + 0x60], rax; mov byte ptr [rsp + 0x68], cl; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044e933: mov qword ptr [rsp + 0x60], rax; mov qword ptr [rsp + 0x68], rcx; mov dword ptr [rsp + 0x70], edx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000483928: mov qword ptr [rsp + 0x60], rax; mov qword ptr [rsp + 0x68], rcx; mov qword ptr [rsp + 0x70], rdx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000044bc8a: mov qword ptr [rsp + 0x60], rax; mov qword ptr [rsp + 0x68], rcx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044b7a5: mov qword ptr [rsp + 0x60], rax; mov qword ptr [rsp + 0x68], rsi; mov qword ptr [rsp + 0x70], rbx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000460551: mov qword ptr [rsp + 0x60], rax; mov rax, qword ptr [rsp + 0x30]; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000042a86c: mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040d1aa: mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000415bea: mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000041f3d6: mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000423378: mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000048d58e: mov qword ptr [rsp + 0x60], rax; xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x68], xmm0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040e2ec: mov qword ptr [rsp + 0x60], rcx; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x0000000000428bdf: mov qword ptr [rsp + 0x60], rcx; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000048d49a: mov qword ptr [rsp + 0x60], rcx; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000482ff8: mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045c606: mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000407222: mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004825c0: mov qword ptr [rsp + 0x60], rdx; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000485639: mov qword ptr [rsp + 0x60], rdx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041256f: mov qword ptr [rsp + 0x60], rdx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042a8ae: mov qword ptr [rsp + 0x60], rdx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040db45: mov qword ptr [rsp + 0x60], rdx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000492536: mov qword ptr [rsp + 0x60], rsi; mov qword ptr [rsp + 0x68], rbx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004924ea: mov qword ptr [rsp + 0x60], rsi; mov qword ptr [rsp + 0x68], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004830a5: mov qword ptr [rsp + 0x60], rsi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042e451: mov qword ptr [rsp + 0x660], 0; mov rbp, qword ptr [rsp + 0x648]; add rsp, 0x650; ret; 
0x000000000042e59e: mov qword ptr [rsp + 0x660], rax; mov rbp, qword ptr [rsp + 0x648]; add rsp, 0x650; ret; 
0x000000000042185e: mov qword ptr [rsp + 0x68], -1; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000411f56: mov qword ptr [rsp + 0x68], 0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040e240: mov qword ptr [rsp + 0x68], 0; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000409312: mov qword ptr [rsp + 0x68], 0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000046b4a8: mov qword ptr [rsp + 0x68], r9; mov qword ptr [rsp + 0x70], r10; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000406b5c: mov qword ptr [rsp + 0x68], rax; mov qword ptr [rsp + 0x70], rdx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000411ed7: mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040e2f1: mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x0000000000409370: mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000457931: mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; nop; ret; 
0x0000000000457790: mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004373e2: mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x00000000004216aa: mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000043b42c: mov qword ptr [rsp + 0x68], rax; movzx eax, byte ptr [rsp + 0x1f]; mov byte ptr [rsp + 0x70], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000049253b: mov qword ptr [rsp + 0x68], rbx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000043b2fa: mov qword ptr [rsp + 0x68], rcx; mov byte ptr [rsp + 0x70], 0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044e938: mov qword ptr [rsp + 0x68], rcx; mov dword ptr [rsp + 0x70], edx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048d9d6: mov qword ptr [rsp + 0x68], rcx; mov qword ptr [rsp + 0x70], rax; mov qword ptr [rsp + 0x78], rdx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044b3d1: mov qword ptr [rsp + 0x68], rcx; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044b6d7: mov qword ptr [rsp + 0x68], rcx; mov qword ptr [rsp + 0x70], rdx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000046b446: mov qword ptr [rsp + 0x68], rcx; mov qword ptr [rsp + 0x70], rdx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004924ef: mov qword ptr [rsp + 0x68], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041478f: mov qword ptr [rsp + 0x68], rcx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044b7aa: mov qword ptr [rsp + 0x68], rsi; mov qword ptr [rsp + 0x70], rbx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000046b4ad: mov qword ptr [rsp + 0x70], r10; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004351fe: mov qword ptr [rsp + 0x70], r8; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x00000000004943d5: mov qword ptr [rsp + 0x70], rax; mov qword ptr [rsp + 0x78], rbx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000483593: mov qword ptr [rsp + 0x70], rax; mov qword ptr [rsp + 0x78], rcx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004849a8: mov qword ptr [rsp + 0x70], rax; mov qword ptr [rsp + 0x78], rcx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000492656: mov qword ptr [rsp + 0x70], rax; mov qword ptr [rsp + 0x78], rdx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048d9db: mov qword ptr [rsp + 0x70], rax; mov qword ptr [rsp + 0x78], rdx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000045f786: mov qword ptr [rsp + 0x70], rax; mov rax, qword ptr [rsp + 0x40]; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000486cf2: mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044b3d6: mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000451911: mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x000000000044711b: mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040d3b9: mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000045744c: mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000430aac: mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000044b7af: mov qword ptr [rsp + 0x70], rbx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000045743d: mov qword ptr [rsp + 0x70], rbx; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000483542: mov qword ptr [rsp + 0x70], rcx; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040be34: mov qword ptr [rsp + 0x70], rcx; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000040be6b: mov qword ptr [rsp + 0x70], rcx; mov rax, qword ptr [rsp + 0x40]; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000048b05d: mov qword ptr [rsp + 0x70], rdi; sub r9, rdi; mov qword ptr [rsp + 8], r9; mov qword ptr [rsp + 0x10], rdi; call rdx; 
0x0000000000454adf: mov qword ptr [rsp + 0x70], rdx; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000420960: mov qword ptr [rsp + 0x70], rdx; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044b6dc: mov qword ptr [rsp + 0x70], rdx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000406b61: mov qword ptr [rsp + 0x70], rdx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004846fe: mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000454ae4: mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000420965: mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040be39: mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000041f850: mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000457270: mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x00000000004943da: mov qword ptr [rsp + 0x78], rbx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048aeb5: mov qword ptr [rsp + 0x78], rcx; mov qword ptr [rsp + 0x10], rcx; nop; call rdx; 
0x000000000044ee1b: mov qword ptr [rsp + 0x78], rcx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004849ad: mov qword ptr [rsp + 0x78], rcx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004570ce: mov qword ptr [rsp + 0x78], rcx; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000049265b: mov qword ptr [rsp + 0x78], rdx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048d9e0: mov qword ptr [rsp + 0x78], rdx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040d835: mov qword ptr [rsp + 0x78], rdx; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000048af44: mov qword ptr [rsp + 0x80], r8; mov qword ptr [rsp + 0x10], r8; call rsi; 
0x000000000048ae59: mov qword ptr [rsp + 0x80], r8; mov qword ptr [rsp + 8], r8; mov qword ptr [rsp + 0x10], rcx; call rsi; 
0x000000000043ec87: mov qword ptr [rsp + 0x98], rax; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000481fef: mov qword ptr [rsp + 0xa0], rax; mov qword ptr [rsp + 0xa8], rcx; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000047239d: mov qword ptr [rsp + 0xa0], rax; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x00000000004820c5: mov qword ptr [rsp + 0xa0], rcx; mov qword ptr [rsp + 0xa8], rax; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x00000000004820cd: mov qword ptr [rsp + 0xa8], rax; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000481ff7: mov qword ptr [rsp + 0xa8], rcx; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000044bbbe: mov qword ptr [rsp + 0xb0], rax; mov qword ptr [rsp + 0xb8], r11; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000047d8d1: mov qword ptr [rsp + 0xb0], rax; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000047d6c1: mov qword ptr [rsp + 0xb0], rcx; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000044bbc6: mov qword ptr [rsp + 0xb8], r11; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000044b1cd: mov qword ptr [rsp + 0xb8], rax; mov qword ptr [rsp + 0xc0], rcx; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000402cd3: mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000044b26c: mov qword ptr [rsp + 0xb8], rcx; mov qword ptr [rsp + 0xc0], rax; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000040b99c: mov qword ptr [rsp + 0xb8], rdi; mov qword ptr [rsp + 0xc0], rcx; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000402c86: mov qword ptr [rsp + 0xb8], rdx; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000040bb08: mov qword ptr [rsp + 0xc0], 0; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000044b274: mov qword ptr [rsp + 0xc0], rax; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000044b1d5: mov qword ptr [rsp + 0xc0], rcx; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000040b9a4: mov qword ptr [rsp + 0xc0], rcx; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000048ba4a: mov qword ptr [rsp + 0xc8], 0; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x000000000048f995: mov qword ptr [rsp + 0xc8], rax; mov qword ptr [rsp + 0xd0], rcx; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x00000000004792cb: mov qword ptr [rsp + 0xc8], rax; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000048ba0a: mov qword ptr [rsp + 0xc8], rax; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x0000000000409cb6: mov qword ptr [rsp + 0xc8], rax; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x00000000004200f1: mov qword ptr [rsp + 0xc8], rcx; mov qword ptr [rsp + 0xd0], rax; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000420245: mov qword ptr [rsp + 0xc8], rsi; mov qword ptr [rsp + 0xd0], r9; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000042024d: mov qword ptr [rsp + 0xd0], r9; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x00000000004200f9: mov qword ptr [rsp + 0xd0], rax; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000048f99d: mov qword ptr [rsp + 0xd0], rcx; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000044aa3a: mov qword ptr [rsp + 0xd8], rax; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x00000000004244f3: mov qword ptr [rsp + 0xd8], rcx; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000047f711: mov qword ptr [rsp + 0xe0], rdx; mov qword ptr [rsp + 0xe8], rcx; mov qword ptr [rsp + 0xf0], rax; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x000000000044e023: mov qword ptr [rsp + 0xe8], 0; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x0000000000476366: mov qword ptr [rsp + 0xe8], rax; mov qword ptr [rsp + 0xf0], rsi; mov qword ptr [rsp + 0xf8], rdi; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000044e1c3: mov qword ptr [rsp + 0xe8], rax; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x000000000047f719: mov qword ptr [rsp + 0xe8], rcx; mov qword ptr [rsp + 0xf0], rax; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x0000000000475d12: mov qword ptr [rsp + 0xf0], rax; mov qword ptr [rsp + 0xf8], rcx; mov qword ptr [rsp + 0x100], rdi; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000047f721: mov qword ptr [rsp + 0xf0], rax; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x0000000000477596: mov qword ptr [rsp + 0xf0], rax; xorps xmm0, xmm0; movups xmmword ptr [rsp + 0xf8], xmm0; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x000000000047636e: mov qword ptr [rsp + 0xf0], rsi; mov qword ptr [rsp + 0xf8], rdi; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000477678: mov qword ptr [rsp + 0xf8], rax; mov qword ptr [rsp + 0x100], rcx; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x0000000000475d1a: mov qword ptr [rsp + 0xf8], rcx; mov qword ptr [rsp + 0x100], rdi; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000476376: mov qword ptr [rsp + 0xf8], rdi; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000040e0f1: mov qword ptr [rsp + 8], 0; mov rax, qword ptr [rdx]; call rax; 
0x000000000042edd2: mov qword ptr [rsp + 8], 0x80; mov qword ptr [rsp + 0x10], 0x80; call 0x2ee20; mov rbp, qword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x0000000000434003: mov qword ptr [rsp + 8], 0xe; mov qword ptr [rsp + 0x10], 0xe; call 0x33be0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000041ffed: mov qword ptr [rsp + 8], r11; mov rax, qword ptr [rsp + 0x70]; lea rdx, [rsp + 0x70]; call rax; 
0x000000000047ca56: mov qword ptr [rsp + 8], r14; mov rax, qword ptr [rdx]; nop; call rax; 
0x000000000048ae61: mov qword ptr [rsp + 8], r8; mov qword ptr [rsp + 0x10], rcx; call rsi; 
0x0000000000427e16: mov qword ptr [rsp + 8], r8; mov rsi, qword ptr [rsp + 0x110]; lea rdx, [rsp + 0x110]; call rsi; 
0x000000000048b065: mov qword ptr [rsp + 8], r9; mov qword ptr [rsp + 0x10], rdi; call rdx; 
0x0000000000401033: mov qword ptr [rsp + 8], rax; call 0x1060; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045e9eb: mov qword ptr [rsp + 8], rax; call 0x11f80; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045ddcd: mov qword ptr [rsp + 8], rax; call 0x29ae0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040cf46: mov qword ptr [rsp + 8], rax; call 0x2b300; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004464f4: mov qword ptr [rsp + 8], rax; call 0x2f340; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004051d2: mov qword ptr [rsp + 8], rax; call 0x34f20; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000405e7c: mov qword ptr [rsp + 8], rax; call 0x34f20; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000043bb65: mov qword ptr [rsp + 8], rax; call 0x36560; call 0x3ad60; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045b391: mov qword ptr [rsp + 8], rax; call 0x36ac0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000436f08: mov qword ptr [rsp + 8], rax; call 0x36d40; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000415ef4: mov qword ptr [rsp + 8], rax; call 0x3b00; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045f2fc: mov qword ptr [rsp + 8], rax; call 0x3c200; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000434c6b: mov qword ptr [rsp + 8], rax; call 0x3cda0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004450ef: mov qword ptr [rsp + 8], rax; call 0x46780; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000411fb1: mov qword ptr [rsp + 8], rax; call 0x63da0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000413d46: mov qword ptr [rsp + 8], rax; call 0x63da0; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; nop; ret; 
0x000000000045a2c9: mov qword ptr [rsp + 8], rax; call 0x65060; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000475993: mov qword ptr [rsp + 8], rax; call 0x733a0; mov rbp, qword ptr [rsp + 0x690]; add rsp, 0x698; ret; 
0x0000000000475935: mov qword ptr [rsp + 8], rax; call 0x73480; mov rbp, qword ptr [rsp + 0x690]; add rsp, 0x698; ret; 
0x00000000004915ec: mov qword ptr [rsp + 8], rax; call 0x91260; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; nop; ret; 
0x000000000049193f: mov qword ptr [rsp + 8], rax; call 0x91260; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000042351d: mov qword ptr [rsp + 8], rax; call 0xa5a0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048af94: mov qword ptr [rsp + 8], rax; dec rax; mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x10], rax; call rdx; 
0x0000000000435844: mov qword ptr [rsp + 8], rax; mov dword ptr [rsp + 0x10], ecx; call 0x64980; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000497c05: mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], 5; call 0x91760; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000434549: mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; call 0x33be0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000429544: mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; mov rax, qword ptr [rip + 0x9ce4b]; lea rdx, [rip + 0x9ce44]; call rax; 
0x0000000000429789: mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; mov rax, qword ptr [rsp + 0x90]; lea rdx, [rsp + 0x90]; call rax; 
0x000000000045c5e3: mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; mov rdx, qword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x000000000048fdce: mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x0000000000403606: mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; call rax; 
0x000000000040f856: mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; nop; call rax; 
0x0000000000450897: mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x10], rax; mov rdx, qword ptr [rsp + 0x38]; mov rax, qword ptr [rdx]; call rax; 
0x000000000040f919: mov qword ptr [rsp + 8], rax; mov rcx, qword ptr [rdx]; call rcx; 
0x0000000000464a29: mov qword ptr [rsp + 8], rax; mov rdi, rsp; mov esi, 0; mov eax, 0x23; syscall; 
0x0000000000452dc5: mov qword ptr [rsp + 8], rax; mov rdx, qword ptr [rsp + 0xc0]; mov rcx, qword ptr [rdx]; call rcx; 
0x00000000004495b8: mov qword ptr [rsp + 8], rax; nop dword ptr [rax]; call 0x48560; mov rbp, qword ptr [rsp + 0x1a8]; add rsp, 0x1b0; ret; 
0x000000000045f57d: mov qword ptr [rsp + 8], rax; ret; 
0x00000000004296ea: mov qword ptr [rsp + 8], rbx; mov qword ptr [rsp + 0x10], rax; mov rax, qword ptr [rsp + 0x90]; lea rdx, [rsp + 0x90]; call rax; 
0x000000000040df1e: mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000040fe36: mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; nop; call rbx; 
0x000000000045c5bc: mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rsp + 0x50]; mov qword ptr [rsp + 0x10], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x00000000004287e0: mov qword ptr [rsp + 8], rbx; mov rcx, qword ptr [rsp + 0x110]; lea rdx, [rsp + 0x110]; call rcx; 
0x000000000047c4fa: mov qword ptr [rsp + 8], rbx; nop; call rax; 
0x000000000044223f: mov qword ptr [rsp + 8], rcx; call 0x2eba0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044a633: mov qword ptr [rsp + 8], rcx; call 0x49320; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000047332b: mov qword ptr [rsp + 8], rcx; call 0x73080; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000499801: mov qword ptr [rsp + 8], rcx; call rax; 
0x000000000048aaa3: mov qword ptr [rsp + 8], rcx; dec rcx; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x10], rcx; call rax; 
0x000000000048aead: mov qword ptr [rsp + 8], rcx; inc rcx; mov qword ptr [rsp + 0x78], rcx; mov qword ptr [rsp + 0x10], rcx; nop; call rdx; 
0x000000000048ab14: mov qword ptr [rsp + 8], rcx; lea rsi, [rcx - 1]; mov qword ptr [rsp + 0x10], rsi; call rax; 
0x000000000041fd42: mov qword ptr [rsp + 8], rcx; mov qword ptr [rsp + 0x10], rax; call 0x2c220; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000411e05: mov qword ptr [rsp + 8], rcx; mov qword ptr [rsp + 0x10], rax; call 0x64040; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004052e6: mov qword ptr [rsp + 8], rcx; mov qword ptr [rsp + 0x10], rax; call 0x64040; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048ac24: mov qword ptr [rsp + 8], rcx; mov qword ptr [rsp + 0x10], rax; call 0x8ac60; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000434449: mov qword ptr [rsp + 8], rcx; mov qword ptr [rsp + 0x10], rcx; call 0x33be0; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000040a55f: mov qword ptr [rsp + 8], rcx; mov qword ptr [rsp], rbx; mov rdx, qword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004540c8: mov qword ptr [rsp + 8], rcx; mov rbx, qword ptr [rax]; mov rdx, rax; call rbx; 
0x000000000040e28a: mov qword ptr [rsp + 8], rcx; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000456c9d: mov qword ptr [rsp + 8], rcx; mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; 
0x000000000040e011: mov qword ptr [rsp + 8], rcx; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000048aba2: mov qword ptr [rsp + 8], rdi; mov rdi, qword ptr [rsp + 0x48]; lea r8, [rax + rdi]; mov qword ptr [rsp + 0x10], r8; call rdx; 
0x00000000004726f1: mov qword ptr [rsp + 8], rdx; mov qword ptr [rsp + 0x10], rbx; mov qword ptr [rsp + 0x18], rdi; call rax; 
0x00000000004941da: mov qword ptr [rsp + 8], rdx; mov qword ptr [rsp + 0x10], rbx; mov qword ptr [rsp + 0x18], rsi; call rax; 
0x000000000040eef8: mov qword ptr [rsp + 8], rdx; mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; 
0x0000000000464e31: mov qword ptr [rsp + 8], rsi; mov qword ptr [rsp], rdi; lea rax, [rip - 0x1fe01]; call rax; 
0x000000000040e791: mov qword ptr [rsp + 8], rsi; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000040ef48: mov qword ptr [rsp + 8], rsi; mov rsi, qword ptr [rcx]; mov rdx, rcx; call rsi; 
0x00000000004105a3: mov qword ptr [rsp], r11; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; call rax; 
0x00000000004111ed: mov qword ptr [rsp], r12; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; call rax; 
0x000000000047ca52: mov qword ptr [rsp], r13; mov qword ptr [rsp + 8], r14; mov rax, qword ptr [rdx]; nop; call rax; 
0x000000000040f852: mov qword ptr [rsp], r15; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; nop; call rax; 
0x000000000049a3b7: mov qword ptr [rsp], r8; call rax; 
0x0000000000451539: mov qword ptr [rsp], r8; nop dword ptr [rax]; call 0x51a80; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000042d902: mov qword ptr [rsp], rax; call 0x2d520; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000045c771: mov qword ptr [rsp], rax; call 0x2d6c0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000434327: mov qword ptr [rsp], rax; call 0x341e0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043462f: mov qword ptr [rsp], rax; call 0x34380; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004344c2: mov qword ptr [rsp], rax; call 0x34380; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000043b9ab: mov qword ptr [rsp], rax; call 0x3b700; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000043888c: mov qword ptr [rsp], rax; call 0x431e0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004398b1: mov qword ptr [rsp], rax; call 0x61580; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004069a7: mov qword ptr [rsp], rax; call 0x615e0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000415020: mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000425653: mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000403b61: mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000431392: mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000043ce05: mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004044b0: mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000460464: mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000047fe10: mov qword ptr [rsp], rax; call 0x6af00; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x000000000046b88e: mov qword ptr [rsp], rax; call 0x6af00; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000047326f: mov qword ptr [rsp], rax; call 0x72ca0; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048f4d0: mov qword ptr [rsp], rax; call 0x8eb00; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000048f7f0: mov qword ptr [rsp], rax; call 0x8eb60; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000049740e: mov qword ptr [rsp], rax; call 0x926c0; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000440b71: mov qword ptr [rsp], rax; call 0xaa00; mov rbp, qword ptr [rsp + 0xe0]; add rsp, 0xe8; ret; 
0x000000000043974e: mov qword ptr [rsp], rax; call 0xaa40; call 0x38b20; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043b7cc: mov qword ptr [rsp], rax; call 0xaa40; call 0x3ad60; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042b7e7: mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 0x168]; add rsp, 0x170; nop; ret; 
0x000000000041f283: mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004161d0: mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000041c620: mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000041b1c5: mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042ba31: mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000045ca3e: mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x000000000044864c: mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000040b0f3: mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000040aa22: mov qword ptr [rsp], rax; call 0xb0e0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x00000000004802c8: mov qword ptr [rsp], rax; call rbx; 
0x0000000000494838: mov qword ptr [rsp], rax; call rcx; 
0x0000000000438f64: mov qword ptr [rsp], rax; mov byte ptr [rsp + 8], 0; call 0x38cc0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040e0ed: mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], 0; mov rax, qword ptr [rdx]; call rax; 
0x000000000040f915: mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], rax; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000044a62f: mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], rcx; call 0x49320; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000473327: mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], rcx; call 0x73080; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040e286: mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], rcx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000040e00d: mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], rcx; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000040e78d: mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], rsi; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000042f2ab: mov qword ptr [rsp], rax; mov rax, qword ptr [rdx]; call rax; 
0x000000000043acef: mov qword ptr [rsp], rax; mov rax, qword ptr [rip + 0x8b84e]; lea rdx, [rip + 0x8b847]; call rax; 
0x00000000004035fd: mov qword ptr [rsp], rax; mov rax, qword ptr [rsp + 0x58]; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; call rax; 
0x000000000047ff05: mov qword ptr [rsp], rax; mov rax, qword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x000000000043484f: mov qword ptr [rsp], rax; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000043ac4e: mov qword ptr [rsp], rax; mov rcx, qword ptr [rip + 0x8b8ef]; lea rdx, [rip + 0x8b8e8]; call rcx; 
0x0000000000434745: mov qword ptr [rsp], rax; mov rcx, qword ptr [rip + 0x91df0]; lea rdx, [rip + 0x91de9]; call rcx; 
0x0000000000437aab: mov qword ptr [rsp], rax; mov rdx, qword ptr [rsp + 0x68]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000434eb7: mov qword ptr [rsp], rax; nop dword ptr [rax + rax]; call 0x615e0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000449999: mov qword ptr [rsp], rax; nop dword ptr [rax]; call 0x61580; mov rbp, qword ptr [rsp + 0x1a0]; add rsp, 0x1a8; ret; 
0x000000000042b498: mov qword ptr [rsp], rax; nop dword ptr [rax]; call 0x61680; mov rbp, qword ptr [rsp + 0x168]; add rsp, 0x170; ret; 
0x0000000000437819: mov qword ptr [rsp], rax; nop dword ptr [rax]; call 0x64900; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048f918: mov qword ptr [rsp], rax; nop dword ptr [rax]; call 0x8eb60; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000041b8d8: mov qword ptr [rsp], rax; nop dword ptr [rax]; call 0xaa40; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000043f558: mov qword ptr [rsp], rax; nop dword ptr [rax]; call 0xab20; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000044511b: mov qword ptr [rsp], rax; nop; call 0x3e240; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000416adb: mov qword ptr [rsp], rax; nop; call 0x61680; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000041c35a: mov qword ptr [rsp], rax; nop; call 0xaa40; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004266ba: mov qword ptr [rsp], rax; nop; call 0xaa40; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045651b: mov qword ptr [rsp], rax; nop; call 0xaa40; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000426c1a: mov qword ptr [rsp], rax; nop; call 0xaa40; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x00000000004973fa: mov qword ptr [rsp], rax; nop; call rcx; 
0x0000000000464ff8: mov qword ptr [rsp], rbx; call rax; 
0x0000000000465086: mov qword ptr [rsp], rbx; call rax; mov rsp, qword ptr [rsp]; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046893f: mov qword ptr [rsp], rbx; call rdx; 
0x000000000048af90: mov qword ptr [rsp], rbx; mov qword ptr [rsp + 8], rax; dec rax; mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x10], rax; call rdx; 
0x000000000045c5df: mov qword ptr [rsp], rbx; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; mov rdx, qword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x000000000041709e: mov qword ptr [rsp], rbx; mov qword ptr [rsp + 8], rcx; mov rbx, qword ptr [rdx]; call rbx; 
0x00000000004346d1: mov qword ptr [rsp], rbx; mov rax, qword ptr [rip + 0x91e64]; lea rdx, [rip + 0x91e5d]; call rax; 
0x000000000040a564: mov qword ptr [rsp], rbx; mov rdx, qword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000430fc2: mov qword ptr [rsp], rcx; call 0x30b80; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004310c3: mov qword ptr [rsp], rcx; call rax; 
0x000000000047c598: mov qword ptr [rsp], rcx; call rdx; 
0x0000000000456d56: mov qword ptr [rsp], rcx; lea rcx, [rsp + 0x18]; mov qword ptr [rsp + 8], rcx; mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; 
0x0000000000439206: mov qword ptr [rsp], rcx; mov byte ptr [rsp + 8], 0; call 0x38cc0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004391ee: mov qword ptr [rsp], rcx; mov byte ptr [rsp + 8], 1; call 0x38cc0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045a14e: mov qword ptr [rsp], rcx; mov dword ptr [rsp + 8], eax; call 0x59ce0; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000049565d: mov qword ptr [rsp], rcx; mov dword ptr [rsp + 8], eax; call 0x94740; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000411fad: mov qword ptr [rsp], rcx; mov qword ptr [rsp + 8], rax; call 0x63da0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045a2c5: mov qword ptr [rsp], rcx; mov qword ptr [rsp + 8], rax; call 0x65060; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000423519: mov qword ptr [rsp], rcx; mov qword ptr [rsp + 8], rax; call 0xa5a0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043b5f3: mov qword ptr [rsp], rcx; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; nop; call rax; 
0x000000000047c4f6: mov qword ptr [rsp], rcx; mov qword ptr [rsp + 8], rbx; nop; call rax; 
0x00000000004726ed: mov qword ptr [rsp], rcx; mov qword ptr [rsp + 8], rdx; mov qword ptr [rsp + 0x10], rbx; mov qword ptr [rsp + 0x18], rdi; call rax; 
0x0000000000437d54: mov qword ptr [rsp], rcx; mov rax, qword ptr [rdx]; call rax; 
0x000000000047ffa9: mov qword ptr [rsp], rcx; mov rax, qword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x000000000048f0fa: mov qword ptr [rsp], rcx; mov rcx, qword ptr [rdx]; call rcx; 
0x0000000000456c94: mov qword ptr [rsp], rcx; mov rcx, qword ptr [rsp + 0x28]; mov qword ptr [rsp + 8], rcx; mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; 
0x00000000004997f5: mov qword ptr [rsp], rcx; mov rcx, qword ptr [rsp + 0xc8]; mov qword ptr [rsp + 8], rcx; call rax; 
0x0000000000437a6d: mov qword ptr [rsp], rcx; mov rdx, qword ptr [rsp + 0x68]; mov rax, qword ptr [rdx]; call rax; 
0x000000000047c5fb: mov qword ptr [rsp], rcx; nop; call rax; 
0x0000000000464e36: mov qword ptr [rsp], rdi; lea rax, [rip - 0x1fe01]; call rax; 
0x000000000041ffe9: mov qword ptr [rsp], rdi; mov qword ptr [rsp + 8], r11; mov rax, qword ptr [rsp + 0x70]; lea rdx, [rsp + 0x70]; call rax; 
0x00000000004941d6: mov qword ptr [rsp], rdi; mov qword ptr [rsp + 8], rdx; mov qword ptr [rsp + 0x10], rbx; mov qword ptr [rsp + 0x18], rsi; call rax; 
0x0000000000472fa5: mov qword ptr [rsp], rdx; call 0x72ca0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000472dea: mov qword ptr [rsp], rdx; call 0x72ca0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000467cf8: mov qword ptr [rsp], rdx; call rcx; 
0x0000000000429540: mov qword ptr [rsp], rdx; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; mov rax, qword ptr [rip + 0x9ce4b]; lea rdx, [rip + 0x9ce44]; call rax; 
0x0000000000429785: mov qword ptr [rsp], rdx; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; mov rax, qword ptr [rsp + 0x90]; lea rdx, [rsp + 0x90]; call rax; 
0x00000000004296e6: mov qword ptr [rsp], rdx; mov qword ptr [rsp + 8], rbx; mov qword ptr [rsp + 0x10], rax; mov rax, qword ptr [rsp + 0x90]; lea rdx, [rsp + 0x90]; call rax; 
0x000000000048aa9f: mov qword ptr [rsp], rdx; mov qword ptr [rsp + 8], rcx; dec rcx; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x10], rcx; call rax; 
0x000000000048ab10: mov qword ptr [rsp], rdx; mov qword ptr [rsp + 8], rcx; lea rsi, [rcx - 1]; mov qword ptr [rsp + 0x10], rsi; call rax; 
0x000000000040eef4: mov qword ptr [rsp], rdx; mov qword ptr [rsp + 8], rdx; mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; 
0x000000000040ef44: mov qword ptr [rsp], rdx; mov qword ptr [rsp + 8], rsi; mov rsi, qword ptr [rcx]; mov rdx, rcx; call rsi; 
0x00000000004688bb: mov qword ptr [rsp], rdx; nop; call rcx; 
0x00000000004688e4: mov qword ptr [rsp], rsi; call rbx; 
0x000000000040df1a: mov qword ptr [rsp], rsi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000040fe32: mov qword ptr [rsp], rsi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; nop; call rbx; 
0x0000000000465162: mov qword ptr fs:[0xfffffffffffffff8], r9; call 0x630e0; call r12; mov edi, 0x6f; mov eax, 0x3c; syscall; 
0x00000000004616fa: mov qword ptr fs:[0xfffffffffffffff8], rax; mov rsp, qword ptr [rax + 0x38]; mov qword ptr [rax + 0x38], 0; ret; 
0x00000000004617bd: mov qword ptr fs:[0xfffffffffffffff8], rbx; mov rsp, qword ptr [rbx + 0x38]; call 0x496e0; call 0x630c0; ret; 
0x00000000004630a5: mov qword ptr fs:[0xfffffffffffffff8], rbx; ret; 
0x000000000046305e: mov qword ptr fs:[0xfffffffffffffff8], rdi; mov rsp, rsi; mov dword ptr [rsp + 0x18], eax; ret; 
0x0000000000460800: mov qword ptr fs:[0xfffffffffffffff8], rdi; ret; 
0x0000000000461625: mov qword ptr fs:[0xfffffffffffffff8], rsi; mov rsp, qword ptr [rsi + 0x38]; push rax; mov rdx, rdi; mov rdi, qword ptr [rdi]; call rdi; 
0x00000000004652cc: mov r10, qword ptr [rsp + 0x18]; mov eax, 0xe9; syscall; 
0x00000000004652cc: mov r10, qword ptr [rsp + 0x18]; mov eax, 0xe9; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x00000000004650cd: mov r10, qword ptr [rsp + 0x18]; mov r8, qword ptr [rsp + 0x20]; mov r9d, dword ptr [rsp + 0x28]; mov eax, 0xca; syscall; 
0x0000000000464d6f: mov r10, qword ptr [rsp + 0x20]; mov eax, 0xd; syscall; 
0x0000000000464d6f: mov r10, qword ptr [rsp + 0x20]; mov eax, 0xd; syscall; mov dword ptr [rsp + 0x28], eax; ret; 
0x000000000048dfb4: mov r10, qword ptr [rsp + 0x28]; mov r8, qword ptr [rsp + 0x30]; mov r9, qword ptr [rsp + 0x38]; mov rax, qword ptr [rsp + 8]; syscall; 
0x000000000045d45b: mov r10b, 0xfd; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000046492e: mov r10d, dword ptr [rsp + 0x14]; mov eax, 0x101; syscall; 
0x00000000004652ed: mov r10d, dword ptr [rsp + 0x1c]; mov r8, 0; mov eax, 0x119; syscall; 
0x0000000000464f6e: mov r10d, dword ptr [rsp + 0x1c]; mov r8d, dword ptr [rsp + 0x20]; mov r9d, dword ptr [rsp + 0x24]; mov eax, 9; syscall; 
0x0000000000464d2e: mov r10d, dword ptr [rsp + 0x20]; mov eax, 0xe; syscall; 
0x0000000000465121: mov r12, qword ptr [rsp + 0x28]; mov eax, 0x38; syscall; 
0x0000000000464a87: mov r12d, eax; mov eax, 0xba; syscall; 
0x0000000000463317: mov r13, qword ptr [rsp + 0x70]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x00000000004636ef: mov r14, qword ptr [rsp + 0x28]; mov r15, qword ptr [rsp + 0x20]; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x00000000004636f4: mov r15, qword ptr [rsp + 0x20]; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000464bd0: mov r15d, 0; lea rsi, [rsp]; call rax; 
0x0000000000464cb0: mov r15d, 1; lea rsi, [rsp]; call rax; 
0x00000000004652f2: mov r8, 0; mov eax, 0x119; syscall; 
0x00000000004652f2: mov r8, 0; mov eax, 0x119; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000465117: mov r8, qword ptr [rsp + 0x18]; mov r9, qword ptr [rsp + 0x20]; mov r12, qword ptr [rsp + 0x28]; mov eax, 0x38; syscall; 
0x00000000004650d2: mov r8, qword ptr [rsp + 0x20]; mov r9d, dword ptr [rsp + 0x28]; mov eax, 0xca; syscall; 
0x00000000004650d2: mov r8, qword ptr [rsp + 0x20]; mov r9d, dword ptr [rsp + 0x28]; mov eax, 0xca; syscall; mov dword ptr [rsp + 0x30], eax; ret; 
0x000000000048dfb9: mov r8, qword ptr [rsp + 0x30]; mov r9, qword ptr [rsp + 0x38]; mov rax, qword ptr [rsp + 8]; syscall; 
0x00000000004644a6: mov r8b, 0xf3; movq qword ptr [rbx - 0x40], mm1; movdqu xmmword ptr [rbx - 0x30], xmm10; movdqu xmmword ptr [rbx - 0x20], xmm11; movdqu xmmword ptr [rbx - 0x10], xmm12; ret; 
0x0000000000464582: mov r8b, 0xf3; movq qword ptr [rcx - 0x40], mm1; movdqu xmmword ptr [rcx - 0x30], xmm10; movdqu xmmword ptr [rcx - 0x20], xmm11; movdqu xmmword ptr [rcx - 0x10], xmm12; ret; 
0x000000000043acfd: mov r8d, 0xd0ff0008; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000464f73: mov r8d, dword ptr [rsp + 0x20]; mov r9d, dword ptr [rsp + 0x24]; mov eax, 9; syscall; 
0x00000000004607e6: mov r9, qword ptr [r8 + 0x50]; test r9, r9; je 0x607f4; call 0x35860; ret; 
0x000000000046511c: mov r9, qword ptr [rsp + 0x20]; mov r12, qword ptr [rsp + 0x28]; mov eax, 0x38; syscall; 
0x000000000048dfbe: mov r9, qword ptr [rsp + 0x38]; mov rax, qword ptr [rsp + 8]; syscall; 
0x0000000000464f78: mov r9d, dword ptr [rsp + 0x24]; mov eax, 9; syscall; 
0x00000000004650d7: mov r9d, dword ptr [rsp + 0x28]; mov eax, 0xca; syscall; 
0x00000000004650d7: mov r9d, dword ptr [rsp + 0x28]; mov eax, 0xca; syscall; mov dword ptr [rsp + 0x30], eax; ret; 
0x0000000000464fe5: mov r9d, dword ptr [rsp + 0x3c]; mov rax, qword ptr [rip + 0xf1a3f]; mov rbx, rsp; and rsp, 0xfffffffffffffff0; mov qword ptr [rsp], rbx; call rax; 
0x000000000048bfbe: mov rax, -1; mov qword ptr [rsp + 0x128], rax; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x00000000004650ae: mov rax, 0x1c; syscall; 
0x00000000004650ae: mov rax, 0x1c; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x00000000004651aa: mov rax, 0x83; syscall; 
0x00000000004651fc: mov rax, 0x9e; syscall; 
0x000000000046502a: mov rax, 0xb; syscall; 
0x0000000000464f40: mov rax, 0xf; syscall; 
0x0000000000445021: mov rax, qword ptr [0xfffffffffffffff8]; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000045f5a1: mov rax, qword ptr [0xfffffffffffffff8]; mov rax, qword ptr [rax + 0x30]; dec dword ptr [rax + 0x108]; ret; 
0x000000000043df06: mov rax, qword ptr [0xfffffffffffffff8]; mov rax, qword ptr [rax + 0x30]; dec dword ptr [rax + 0xf0]; mov rbp, qword ptr [rsp + 0x260]; add rsp, 0x268; ret; 
0x0000000000438ca1: mov rax, qword ptr [0xfffffffffffffff8]; mov rax, qword ptr [rax + 0x30]; mov byte ptr [rax + 0x114], 1; ret; 
0x000000000049a3b0: mov rax, qword ptr [r9 + 0x98]; mov qword ptr [rsp], r8; call rax; 
0x000000000047d0af: mov rax, qword ptr [rax + 0x100]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000485386: mov rax, qword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x40]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004855c6: mov rax, qword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x48]; mov qword ptr [rsp], rcx; call rax; 
0x000000000047e840: mov rax, qword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000486e32: mov rax, qword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x78]; mov qword ptr [rsp], rcx; call rax; 
0x000000000046567b: mov rax, qword ptr [rax + 0x10]; cmp qword ptr [rdx + 0x10], rax; sete al; mov byte ptr [rsp + 0x18], al; ret; 
0x000000000043223c: mov rax, qword ptr [rax + 0x10]; mov qword ptr [rsp + 0x10], rcx; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000465545: mov rax, qword ptr [rax + 0x18]; cmp qword ptr [rdx + 0x18], rax; sete al; mov byte ptr [rsp + 0x18], al; ret; 
0x000000000044dcf7: mov rax, qword ptr [rax + 0x18]; mov qword ptr [rsp + 0x38], rcx; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004310bf: mov rax, qword ptr [rax + 0x18]; mov qword ptr [rsp], rcx; call rax; 
0x000000000040eef0: mov rax, qword ptr [rax + 0x18]; mov qword ptr [rsp], rdx; mov qword ptr [rsp + 8], rdx; mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; 
0x0000000000496f58: mov rax, qword ptr [rax + 0x18]; mov rcx, qword ptr [rsp + 0x240]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004970c0: mov rax, qword ptr [rax + 0x18]; mov rcx, qword ptr [rsp + 0x248]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000469600: mov rax, qword ptr [rax + 0x28]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000443791: mov rax, qword ptr [rax + 0x30]; cmp dword ptr [rax + 0x108], 0; je 0x437a8; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000421854: mov rax, qword ptr [rax + 0x30]; dec dword ptr [rax + 0x108]; mov qword ptr [rsp + 0x68], -1; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000045f5a9: mov rax, qword ptr [rax + 0x30]; dec dword ptr [rax + 0x108]; ret; 
0x000000000043df0e: mov rax, qword ptr [rax + 0x30]; dec dword ptr [rax + 0xf0]; mov rbp, qword ptr [rsp + 0x260]; add rsp, 0x268; ret; 
0x0000000000438ca9: mov rax, qword ptr [rax + 0x30]; mov byte ptr [rax + 0x114], 1; ret; 
0x000000000042f313: mov rax, qword ptr [rax + 0x30]; mov ecx, dword ptr [rsp]; mov qword ptr [rax + 0x48], rcx; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000444f38: mov rax, qword ptr [rax + 0x30]; xor ecx, ecx; xchg dword ptr [rax + 0x334], ecx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000047ab33: mov rax, qword ptr [rax + 0x38]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000046796f: mov rax, qword ptr [rax + 0x40]; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004674ef: mov rax, qword ptr [rax + 0x40]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048371d: mov rax, qword ptr [rax + 0x40]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000483f15: mov rax, qword ptr [rax + 0x40]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000047b893: mov rax, qword ptr [rax + 0x40]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000047c612: mov rax, qword ptr [rax + 0x48]; mov rcx, qword ptr [rsp + 0x90]; mov qword ptr [rsp], rcx; call rax; 
0x000000000042f2a7: mov rax, qword ptr [rax + 0x50]; mov qword ptr [rsp], rax; mov rax, qword ptr [rdx]; call rax; 
0x000000000047c4f2: mov rax, qword ptr [rax + 0x50]; mov qword ptr [rsp], rcx; mov qword ptr [rsp + 8], rbx; nop; call rax; 
0x00000000004997f1: mov rax, qword ptr [rax + 0x50]; mov qword ptr [rsp], rcx; mov rcx, qword ptr [rsp + 0xc8]; mov qword ptr [rsp + 8], rcx; call rax; 
0x0000000000468956: mov rax, qword ptr [rax + 0x60]; mov rcx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000446de8: mov rax, qword ptr [rax + 0x78]; mov qword ptr [rcx + 0x80], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000482596: mov rax, qword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; call rax; 
0x000000000047c5f4: mov rax, qword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; nop; call rax; 
0x000000000043c95a: mov rax, qword ptr [rax + 0xd0]; inc dword ptr [rax + 0x14]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045f573: mov rax, qword ptr [rax + 0xd0]; movsxd rax, dword ptr [rax]; mov qword ptr [rsp + 8], rax; ret; 
0x0000000000485247: mov rax, qword ptr [rax + 0xe8]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000485314: mov rax, qword ptr [rax + 0xe8]; mov qword ptr [rsp], rcx; nop; call rax; 
0x0000000000484946: mov rax, qword ptr [rax + 0xf8]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004983d3: mov rax, qword ptr [rax + 0xf8]; mov qword ptr [rsp], rcx; nop; call rax; 
0x0000000000465cb0: mov rax, qword ptr [rax + 8]; cmp qword ptr [rdx + 8], rax; sete al; mov byte ptr [rsp + 0x18], al; nop; ret; 
0x00000000004032f2: mov rax, qword ptr [rax + 8]; cmp qword ptr [rdx + 8], rax; sete al; mov byte ptr [rsp + 0x18], al; ret; 
0x000000000045e7c5: mov rax, qword ptr [rax + 8]; mov qword ptr [rsp + 0x10], rax; ret; 
0x00000000004695a8: mov rax, qword ptr [rax + 8]; mov qword ptr [rsp + 0x10], rcx; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000483794: mov rax, qword ptr [rax + 8]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048355e: mov rax, qword ptr [rax + 8]; mov qword ptr [rsp + 0x70], rcx; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000484907: mov rax, qword ptr [rax + 8]; mov qword ptr [rsp + 0x70], rcx; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000044b267: mov rax, qword ptr [rax + rdi + 8]; mov qword ptr [rsp + 0xb8], rcx; mov qword ptr [rsp + 0xc0], rax; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000045e5ca: mov rax, qword ptr [rax]; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000466e0c: mov rax, qword ptr [rax]; mov qword ptr [rsp + 0x18], rax; mov qword ptr [rsp + 0x20], rcx; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x00000000004356e5: mov rax, qword ptr [rax]; mov qword ptr [rsp + 0x18], rax; ret; 
0x000000000043473d: mov rax, qword ptr [rax]; mov qword ptr [rsp + 0x28], rax; mov qword ptr [rsp], rax; mov rcx, qword ptr [rip + 0x91df0]; lea rdx, [rip + 0x91de9]; call rcx; 
0x0000000000484031: mov rax, qword ptr [rax]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004032c5: mov rax, qword ptr [rax]; mov rcx, qword ptr [rsp + 8]; cmp qword ptr [rcx], rax; sete byte ptr [rsp + 0x18]; ret; 
0x000000000041206e: mov rax, qword ptr [rax]; not rax; nop; mov qword ptr [rcx + 0x40], rax; ret; 
0x0000000000479ba6: mov rax, qword ptr [rax]; shl rax, 3; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041d79b: mov rax, qword ptr [rbx + 0x18]; add rax, rsi; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048ab0c: mov rax, qword ptr [rbx + 0x20]; mov qword ptr [rsp], rdx; mov qword ptr [rsp + 8], rcx; lea rsi, [rcx - 1]; mov qword ptr [rsp + 0x10], rsi; call rax; 
0x00000000004616f3: mov rax, qword ptr [rbx + 0xc0]; mov qword ptr fs:[0xfffffffffffffff8], rax; mov rsp, qword ptr [rax + 0x38]; mov qword ptr [rax + 0x38], 0; ret; 
0x0000000000422f48: mov rax, qword ptr [rbx + rdx*8 + 0x10]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048ff8a: mov rax, qword ptr [rcx + 0x38]; mov rcx, qword ptr [rcx + 0x40]; mov qword ptr [rsp + 0x10], rax; mov qword ptr [rsp + 0x18], rcx; ret; 
0x000000000044312e: mov rax, qword ptr [rcx + rax + 8]; mov qword ptr [rsp + 0x10], rdx; mov qword ptr [rsp + 0x18], rax; ret; 
0x000000000044ee98: mov rax, qword ptr [rcx + rax*8]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045b273: mov rax, qword ptr [rcx]; mov qword ptr [rip + 0x12be0b], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040e06b: mov rax, qword ptr [rcx]; mov qword ptr [rsp + 0x58], rax; mov byte ptr [rsp + 0x60], 1; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040b043: mov rax, qword ptr [rdx + rax + 8]; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004875fc: mov rax, qword ptr [rdx + rax + 8]; mov qword ptr [rsp + 0x50], rcx; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040360b: mov rax, qword ptr [rdx]; call rax; 
0x000000000040f85b: mov rax, qword ptr [rdx]; nop; call rax; 
0x0000000000427c67: mov rax, qword ptr [rip + 0x1194c2]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000041ab40: mov rax, qword ptr [rip + 0x16e749]; mov qword ptr [rip + 0x16c4f2], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004840a7: mov rax, qword ptr [rip + 0x422ea]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043acf3: mov rax, qword ptr [rip + 0x8b84e]; lea rdx, [rip + 0x8b847]; call rax; 
0x0000000000434ab9: mov rax, qword ptr [rip + 0x91aa8]; lea rdx, [rip + 0x91aa1]; call rax; 
0x00000000004346d5: mov rax, qword ptr [rip + 0x91e64]; lea rdx, [rip + 0x91e5d]; call rax; 
0x000000000042954e: mov rax, qword ptr [rip + 0x9ce4b]; lea rdx, [rip + 0x9ce44]; call rax; 
0x000000000048fe80: mov rax, qword ptr [rip + 0xbfe69]; mov rcx, qword ptr [rip + 0xbfe6a]; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000048fe40: mov rax, qword ptr [rip + 0xc6e39]; mov rcx, qword ptr [rip + 0xc6e3a]; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000048fe00: mov rax, qword ptr [rip + 0xc6e89]; mov rcx, qword ptr [rip + 0xc6e8a]; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000048fdc0: mov rax, qword ptr [rip + 0xc6ed9]; mov rcx, qword ptr [rip + 0xc6eda]; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x0000000000464d03: mov rax, qword ptr [rip + 0xdc456]; call rax; 
0x0000000000464c1d: mov rax, qword ptr [rip + 0xdc53c]; call rax; 
0x0000000000465078: mov rax, qword ptr [rip + 0xf19b9]; mov rbx, rsp; and rsp, 0xfffffffffffffff0; mov qword ptr [rsp], rbx; call rax; 
0x0000000000464fea: mov rax, qword ptr [rip + 0xf1a3f]; mov rbx, rsp; and rsp, 0xfffffffffffffff0; mov qword ptr [rsp], rbx; call rax; 
0x0000000000464f32: mov rax, qword ptr [rip + 0xf1ae7]; jmp rax; 
0x0000000000464ef2: mov rax, qword ptr [rip + 0xf1b27]; jmp rax; 
0x0000000000464d9d: mov rax, qword ptr [rip + 0xf1ca4]; mov rbx, rsp; and rsp, 0xfffffffffffffff0; call rax; 
0x000000000046416f: mov rax, qword ptr [rsi]; mov qword ptr [rdi], rax; ret; 
0x0000000000464176: mov rax, qword ptr [rsi]; mov rcx, qword ptr [rsi + rbx - 8]; mov qword ptr [rdi], rax; mov qword ptr [rdi + rbx - 8], rcx; ret; 
0x000000000045d49b: mov rax, qword ptr [rsp + 0x10]; cmp byte ptr [rax], 0; jne 0x5d4ae; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x00000000004032a0: mov rax, qword ptr [rsp + 0x10]; mov eax, dword ptr [rax]; mov rcx, qword ptr [rsp + 8]; cmp dword ptr [rcx], eax; sete byte ptr [rsp + 0x18]; ret; 
0x000000000045e44d: mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rip + 0x12808f], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045eae4: mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rip + 0xf8000], rax; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000040724a: mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x20], rax; ret; 
0x00000000004235e5: mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004066da: mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000402813: mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046750b: mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000414fb5: mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040d466: mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000042a6c5: mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004268ea: mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000424647: mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000047d8cc: mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0xb0], rax; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000402cce: mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x00000000004356e0: mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; mov qword ptr [rsp + 0x18], rax; ret; 
0x00000000004032c0: mov rax, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax]; mov rcx, qword ptr [rsp + 8]; cmp qword ptr [rcx], rax; sete byte ptr [rsp + 0x18]; ret; 
0x0000000000401e65: mov rax, qword ptr [rsp + 0x10]; mov rcx, qword ptr [rsp + 0x18]; lock cmpxchg qword ptr [rbx], rcx; sete byte ptr [rsp + 0x20]; ret; 
0x000000000045ae06: mov rax, qword ptr [rsp + 0x10]; mov rcx, qword ptr [rsp + 0x18]; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004695f6: mov rax, qword ptr [rsp + 0x10]; mov rcx, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax + 0x28]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000403260: mov rax, qword ptr [rsp + 0x10]; movzx eax, byte ptr [rax]; mov rcx, qword ptr [rsp + 8]; cmp byte ptr [rcx], al; sete byte ptr [rsp + 0x18]; ret; 
0x0000000000403280: mov rax, qword ptr [rsp + 0x10]; movzx eax, word ptr [rax]; mov rcx, qword ptr [rsp + 8]; cmp word ptr [rcx], ax; sete byte ptr [rsp + 0x18]; ret; 
0x0000000000401ee5: mov rax, qword ptr [rsp + 0x10]; xchg qword ptr [rbx], rax; ret; 
0x000000000047a412: mov rax, qword ptr [rsp + 0x178]; mov qword ptr [rsp + 0x1c8], rax; mov rbp, qword ptr [rsp + 0x160]; add rsp, 0x168; ret; 
0x0000000000483660: mov rax, qword ptr [rsp + 0x18]; and rax, 0x1f; mov qword ptr [rsp + 0x20], rax; ret; 
0x0000000000484c11: mov rax, qword ptr [rsp + 0x18]; bts rax, 7; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043ffca: mov rax, qword ptr [rsp + 0x18]; mov dword ptr [rsp + 0x50], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000438d7a: mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x10], rax; call 0x386a0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040cdd8: mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040264c: mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x00000000004024de: mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000484d07: mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], 0x16; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044726c: mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x000000000042696e: mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004203df: mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042613e: mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042a867: mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000430aa7: mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000403153: mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x00000000004344bd: mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp], rax; call 0x34380; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000040b0ee: mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000040aa1d: mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp], rax; call 0xb0e0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000043acea: mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp], rax; mov rax, qword ptr [rip + 0x8b84e]; lea rdx, [rip + 0x8b847]; call rax; 
0x000000000045ae85: mov rax, qword ptr [rsp + 0x18]; mov rcx, qword ptr [rsp + 0x20]; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000486225: mov rax, qword ptr [rsp + 0x18]; mov rcx, qword ptr [rsp + 0x20]; mov rax, qword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; call rax; 
0x000000000048493c: mov rax, qword ptr [rsp + 0x18]; mov rcx, qword ptr [rsp + 0x20]; mov rax, qword ptr [rax + 0xf8]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004983c9: mov rax, qword ptr [rsp + 0x18]; mov rcx, qword ptr [rsp + 0x20]; mov rax, qword ptr [rax + 0xf8]; mov qword ptr [rsp], rcx; nop; call rax; 
0x0000000000442fb5: mov rax, qword ptr [rsp + 0x18]; test rax, rax; je 0x42fc5; mov dword ptr [rax], 0; mov dword ptr [rsp + 0x20], 0x7fffffff; ret; 
0x0000000000442fce: mov rax, qword ptr [rsp + 0x18]; test rax, rax; je 0x42fda; mov dword ptr [rax], edx; mov dword ptr [rsp + 0x20], ebx; ret; 
0x000000000042f43a: mov rax, qword ptr [rsp + 0x20]; bt eax, 0x1b; jae 0x2f44f; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004231fd: mov rax, qword ptr [rsp + 0x20]; cmp qword ptr [rax + 0x10], 0; je 0x23213; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042325d: mov rax, qword ptr [rsp + 0x20]; cmp qword ptr [rax + 0x10], 0; jne 0x23273; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043e429: mov rax, qword ptr [rsp + 0x20]; cmp qword ptr [rax + 0x40], 0; je 0x3e43f; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000460361: mov rax, qword ptr [rsp + 0x20]; cmp rax, 0x20; jne 0x60376; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044c468: mov rax, qword ptr [rsp + 0x20]; lea rdx, [rsp + 0x20]; call rax; 
0x000000000045089c: mov rax, qword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x10], rax; mov rdx, qword ptr [rsp + 0x38]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004204f4: mov rax, qword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042df90: mov rax, qword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000046bd72: mov rax, qword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x48], rax; mov byte ptr [rsp + 0x50], 1; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048f13b: mov rax, qword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045be48: mov rax, qword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x50], rax; mov byte ptr [rsp + 0x58], 1; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040a069: mov rax, qword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040cd18: mov rax, qword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000415a7e: mov rax, qword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000451c34: mov rax, qword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000043ac49: mov rax, qword ptr [rsp + 0x20]; mov qword ptr [rsp], rax; mov rcx, qword ptr [rip + 0x8b8ef]; lea rdx, [rip + 0x8b8e8]; call rcx; 
0x000000000045a278: mov rax, qword ptr [rsp + 0x20]; mov rcx, qword ptr [rsp + 0x28]; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000045c105: mov rax, qword ptr [rsp + 0x20]; mov rcx, qword ptr [rsp + 0x40]; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000045ad5d: mov rax, qword ptr [rsp + 0x28]; cmp byte ptr [rax], 0; je 0x5ad71; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045b464: mov rax, qword ptr [rsp + 0x28]; mov byte ptr [rax], 1; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004717ff: mov rax, qword ptr [rsp + 0x28]; mov qword ptr [rip + 0xe534d], rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000414efc: mov rax, qword ptr [rsp + 0x28]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000450f18: mov rax, qword ptr [rsp + 0x28]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000411ed2: mov rax, qword ptr [rsp + 0x28]; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004373dd: mov rax, qword ptr [rsp + 0x28]; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000040102e: mov rax, qword ptr [rsp + 0x28]; mov qword ptr [rsp + 8], rax; call 0x1060; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045e9e6: mov rax, qword ptr [rsp + 0x28]; mov qword ptr [rsp + 8], rax; call 0x11f80; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000415eef: mov rax, qword ptr [rsp + 0x28]; mov qword ptr [rsp + 8], rax; call 0x3b00; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042571d: mov rax, qword ptr [rsp + 0x28]; mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000483718: mov rax, qword ptr [rsp + 0x28]; mov rax, qword ptr [rax + 0x40]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048abfd: mov rax, qword ptr [rsp + 0x28]; mov rcx, qword ptr [rax + 0x18]; mov rdx, qword ptr [rsp + 0x30]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000403957: mov rax, qword ptr [rsp + 0x28]; mov rcx, qword ptr [rsp + 0x20]; xchg qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004733c1: mov rax, qword ptr [rsp + 0x28]; test rax, rax; jge 0x733d5; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045f185: mov rax, qword ptr [rsp + 0x28]; test rax, rax; jne 0x5f199; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000412795: mov rax, qword ptr [rsp + 0x2c]; mov dword ptr [rsp + 0x4c], eax; mov qword ptr [rsp + 0x50], r9; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004102e5: mov rax, qword ptr [rsp + 0x30]; cmp qword ptr [rax + 0x18], 0; jne 0x102fb; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000410ea5: mov rax, qword ptr [rsp + 0x30]; cmp qword ptr [rax + 0x18], 0; jne 0x10ebb; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000411805: mov rax, qword ptr [rsp + 0x30]; cmp qword ptr [rax + 0x18], 0; jne 0x1181b; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040f425: mov rax, qword ptr [rsp + 0x30]; cmp qword ptr [rax + 0x18], 0; jne 0xf43b; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040ee48: mov rax, qword ptr [rsp + 0x30]; mov qword ptr [rdx + 0x58], rax; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000042e082: mov rax, qword ptr [rsp + 0x30]; mov qword ptr [rip + 0x1584ea], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000048c650: mov rax, qword ptr [rsp + 0x30]; mov qword ptr [rsp + 0x128], rax; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x0000000000404b06: mov rax, qword ptr [rsp + 0x30]; mov qword ptr [rsp + 0x18], rax; call 0x4b20; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004908fa: mov rax, qword ptr [rsp + 0x30]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000042e599: mov rax, qword ptr [rsp + 0x30]; mov qword ptr [rsp + 0x660], rax; mov rbp, qword ptr [rsp + 0x648]; add rsp, 0x650; ret; 
0x0000000000460556: mov rax, qword ptr [rsp + 0x30]; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000447116: mov rax, qword ptr [rsp + 0x30]; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000043462a: mov rax, qword ptr [rsp + 0x30]; mov qword ptr [rsp], rax; call 0x34380; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048378f: mov rax, qword ptr [rsp + 0x30]; mov rax, qword ptr [rax + 8]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048402c: mov rax, qword ptr [rsp + 0x30]; mov rax, qword ptr [rax]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000405a8e: mov rax, qword ptr [rsp + 0x30]; test rax, rax; setne byte ptr [rsp + 0xa9]; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000483dce: mov rax, qword ptr [rsp + 0x38]; bts rax, 7; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000041c63f: mov rax, qword ptr [rsp + 0x38]; lea rcx, [rip + 0x16a53d]; lock xadd qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045e830: mov rax, qword ptr [rsp + 0x38]; mov qword ptr [rsp + 0x10], rax; call 0x11cc0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042aafc: mov rax, qword ptr [rsp + 0x38]; mov qword ptr [rsp + 0x10], rax; call 0x2a180; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046024f: mov rax, qword ptr [rsp + 0x38]; mov qword ptr [rsp + 0x10], rax; call 0x43640; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004605d0: mov rax, qword ptr [rsp + 0x38]; mov qword ptr [rsp + 0x10], rax; call 0x64040; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000483df9: mov rax, qword ptr [rsp + 0x38]; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000484af3: mov rax, qword ptr [rsp + 0x38]; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044bc85: mov rax, qword ptr [rsp + 0x38]; mov qword ptr [rsp + 0x60], rax; mov qword ptr [rsp + 0x68], rcx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000415be5: mov rax, qword ptr [rsp + 0x38]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000490733: mov rax, qword ptr [rsp + 0x38]; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040cf41: mov rax, qword ptr [rsp + 0x38]; mov qword ptr [rsp + 8], rax; call 0x2b300; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000436f03: mov rax, qword ptr [rsp + 0x38]; mov qword ptr [rsp + 8], rax; call 0x36d40; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043b9a6: mov rax, qword ptr [rsp + 0x38]; mov qword ptr [rsp], rax; call 0x3b700; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000485381: mov rax, qword ptr [rsp + 0x38]; mov rax, qword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x40]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000483f10: mov rax, qword ptr [rsp + 0x38]; mov rax, qword ptr [rax + 0x40]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000043d582: mov rax, qword ptr [rsp + 0x3a0]; mov qword ptr [rdi], rax; mov qword ptr [rsp + 0x3e8], rdi; mov rbp, qword ptr [rsp + 0x3d0]; add rsp, 0x3d8; ret; 
0x000000000048afad: mov rax, qword ptr [rsp + 0x40]; cmp rcx, rax; jl 0x8af7c; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000451f29: mov rax, qword ptr [rsp + 0x40]; mov eax, dword ptr [rax + 0x10]; mov dword ptr [rsp + 0x78], eax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000483c84: mov rax, qword ptr [rsp + 0x40]; mov qword ptr [rdi + 8], rax; mov qword ptr [rsp + 0x50], rdi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040a4b4: mov rax, qword ptr [rsp + 0x40]; mov qword ptr [rsp + 0x50], rax; mov byte ptr [rsp + 0x58], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040a3cf: mov rax, qword ptr [rsp + 0x40]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040be70: mov rax, qword ptr [rsp + 0x40]; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000045f78b: mov rax, qword ptr [rsp + 0x40]; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000409cb1: mov rax, qword ptr [rsp + 0x40]; mov qword ptr [rsp + 0xc8], rax; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x000000000049193a: mov rax, qword ptr [rsp + 0x40]; mov qword ptr [rsp + 8], rax; call 0x91260; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000043484a: mov rax, qword ptr [rsp + 0x40]; mov qword ptr [rsp], rax; mov rcx, qword ptr [rdx]; call rcx; 
0x00000000004855c1: mov rax, qword ptr [rsp + 0x40]; mov rax, qword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x48]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004970bb: mov rax, qword ptr [rsp + 0x40]; mov rax, qword ptr [rax + 0x18]; mov rcx, qword ptr [rsp + 0x248]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000482450: mov rax, qword ptr [rsp + 0x40]; movzx eax, byte ptr [rax]; mov byte ptr [rsp + 0x50], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044cfb7: mov rax, qword ptr [rsp + 0x48]; mov qword ptr [rsp + 0x118], rax; mov rbp, qword ptr [rsp + 0xf0]; add rsp, 0xf8; ret; 
0x000000000041f84b: mov rax, qword ptr [rsp + 0x48]; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000045726b: mov rax, qword ptr [rsp + 0x48]; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000048451e: mov rax, qword ptr [rsp + 0x50]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040408b: mov rax, qword ptr [rsp + 0x50]; mov qword ptr [rsp + 0x18], rax; call 0x41a0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004029a7: mov rax, qword ptr [rsp + 0x50]; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004847dd: mov rax, qword ptr [rsp + 0x50]; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040c53f: mov rax, qword ptr [rsp + 0x50]; mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000048f4cb: mov rax, qword ptr [rsp + 0x50]; mov qword ptr [rsp], rax; call 0x8eb00; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000040e0e8: mov rax, qword ptr [rsp + 0x50]; mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], 0; mov rax, qword ptr [rdx]; call rax; 
0x000000000040e008: mov rax, qword ptr [rsp + 0x50]; mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], rcx; mov rcx, qword ptr [rdx]; call rcx; 
0x00000000004035f8: mov rax, qword ptr [rsp + 0x50]; mov qword ptr [rsp], rax; mov rax, qword ptr [rsp + 0x58]; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; call rax; 
0x0000000000437aa6: mov rax, qword ptr [rsp + 0x50]; mov qword ptr [rsp], rax; mov rdx, qword ptr [rsp + 0x68]; mov rax, qword ptr [rdx]; call rax; 
0x000000000047e83b: mov rax, qword ptr [rsp + 0x50]; mov rax, qword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000468951: mov rax, qword ptr [rsp + 0x50]; mov rax, qword ptr [rax + 0x60]; mov rcx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000468913: mov rax, qword ptr [rsp + 0x50]; mov rcx, qword ptr [rax + 0x38]; mov rdx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rdx; call rcx; 
0x00000000004688ad: mov rax, qword ptr [rsp + 0x50]; mov rcx, qword ptr [rax + 0x40]; mov rdx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rdx; nop; call rcx; 
0x000000000047e78d: mov rax, qword ptr [rsp + 0x50]; mov rcx, qword ptr [rax + 0xb8]; mov rdx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rdx; call rcx; 
0x000000000045e0a6: mov rax, qword ptr [rsp + 0x50]; mov rcx, qword ptr [rsp + 0x58]; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x00000000004842b2: mov rax, qword ptr [rsp + 0x58]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000493c9f: mov rax, qword ptr [rsp + 0x58]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000044e1be: mov rax, qword ptr [rsp + 0x58]; mov qword ptr [rsp + 0xe8], rax; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x0000000000403601: mov rax, qword ptr [rsp + 0x58]; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; call rax; 
0x000000000040f910: mov rax, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], rax; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000040e281: mov rax, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], rcx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000047bed3: mov rax, qword ptr [rsp + 0x58]; test rax, rax; jge 0x7bee7; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000492674: mov rax, qword ptr [rsp + 0x60]; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000046b889: mov rax, qword ptr [rsp + 0x60]; mov qword ptr [rsp], rax; call 0x6af00; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000043ec82: mov rax, qword ptr [rsp + 0x68]; mov qword ptr [rsp + 0x98], rax; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000041fff2: mov rax, qword ptr [rsp + 0x70]; lea rdx, [rsp + 0x70]; call rax; 
0x00000000004914ae: mov rax, qword ptr [rsp + 0x70]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; nop; ret; 
0x000000000048ba05: mov rax, qword ptr [rsp + 0x70]; mov qword ptr [rsp + 0xc8], rax; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x0000000000448647: mov rax, qword ptr [rsp + 0x70]; mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000486e2d: mov rax, qword ptr [rsp + 0x70]; mov rax, qword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x78]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000454139: mov rax, qword ptr [rsp + 0x78]; mov qword ptr [rsp + 0x320], rax; mov rbp, qword ptr [rsp + 0x2c0]; add rsp, 0x2c8; ret; 
0x000000000044aa35: mov rax, qword ptr [rsp + 0x78]; mov qword ptr [rsp + 0xd8], rax; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000048fec1: mov rax, qword ptr [rsp + 0x78]; mov rcx, qword ptr [rax + 0x20]; mov rdx, qword ptr [rax + 0x28]; mov rcx, qword ptr [rcx + 0x18]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000459e83: mov rax, qword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x000000000047c60a: mov rax, qword ptr [rsp + 0x88]; mov rax, qword ptr [rax + 0x48]; mov rcx, qword ptr [rsp + 0x90]; mov qword ptr [rsp], rcx; call rax; 
0x000000000047c5d0: mov rax, qword ptr [rsp + 0x88]; mov rcx, qword ptr [rax + 0x48]; mov rdx, qword ptr [rsp + 0x90]; mov qword ptr [rsp], rdx; call rcx; 
0x00000000004296f4: mov rax, qword ptr [rsp + 0x90]; lea rdx, [rsp + 0x90]; call rax; 
0x000000000041dd9d: mov rax, qword ptr [rsp + 0x98]; add qword ptr [rax + 0x10], rdx; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x00000000004745c5: mov rax, qword ptr [rsp + 0x98]; mov qword ptr [rsp + 0x1e0], rax; mov rbp, qword ptr [rsp + 0x188]; add rsp, 0x190; ret; 
0x000000000047fcc7: mov rax, qword ptr [rsp + 0xa0]; mov qword ptr [rsp + 0x170], rax; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x0000000000445dc5: mov rax, qword ptr [rsp + 0xb8]; mov qword ptr [rsp], rax; mov rcx, qword ptr [rdx]; call rcx; 
0x00000000004937fd: mov rax, qword ptr [rsp + 0xe0]; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x00000000004421c4: mov rax, qword ptr [rsp + 8]; bt rax, 0x20; jb 0x421da; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000493fec: mov rax, qword ptr [rsp + 8]; cmp byte ptr [rax + 0x4b], 0; je 0x94001; mov eax, 1; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000493fb7: mov rax, qword ptr [rsp + 8]; cmp byte ptr [rax + 0x4c], 0; je 0x93fcc; mov eax, 1; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000467ea0: mov rax, qword ptr [rsp + 8]; cmp qword ptr [rax + 0x18], 0; setne byte ptr [rsp + 0x10]; ret; 
0x0000000000464900: mov rax, qword ptr [rsp + 8]; mov dword ptr [rax], 0; mov edi, 0; mov eax, 0x3c; syscall; 
0x0000000000442fe0: mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000407240: mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x18], rax; mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x20], rax; ret; 
0x00000000004162cd: mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x20], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000426b4b: mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000483e72: mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000424a65: mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004836fd: mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040d1a5: mov rax, qword ptr [rsp + 8]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000045e7c0: mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax + 8]; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000045e7a0: mov rax, qword ptr [rsp + 8]; mov rax, qword ptr [rax]; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000493f60: mov rax, qword ptr [rsp + 8]; mov rcx, qword ptr [rax + 0x58]; movzx eax, byte ptr [rax + 0x48]; mov qword ptr [rsp + 0x10], rcx; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000493f80: mov rax, qword ptr [rsp + 8]; mov rcx, qword ptr [rax + 0x60]; movzx eax, byte ptr [rax + 0x49]; mov qword ptr [rsp + 0x10], rcx; mov byte ptr [rsp + 0x18], al; ret; 
0x00000000004695a0: mov rax, qword ptr [rsp + 8]; mov rcx, qword ptr [rax]; mov rax, qword ptr [rax + 8]; mov qword ptr [rsp + 0x10], rcx; mov qword ptr [rsp + 0x18], rax; ret; 
0x000000000047d0a5: mov rax, qword ptr [rsp + 8]; mov rcx, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0x100]; mov qword ptr [rsp], rcx; call rax; 
0x000000000048258c: mov rax, qword ptr [rsp + 8]; mov rcx, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; call rax; 
0x000000000047c5ea: mov rax, qword ptr [rsp + 8]; mov rcx, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; nop; call rax; 
0x000000000048523d: mov rax, qword ptr [rsp + 8]; mov rcx, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0xe8]; mov qword ptr [rsp], rcx; call rax; 
0x000000000048530a: mov rax, qword ptr [rsp + 8]; mov rcx, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0xe8]; mov qword ptr [rsp], rcx; nop; call rax; 
0x0000000000479c60: mov rax, qword ptr [rsp + 8]; movzx eax, byte ptr [rax + 0x15]; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000479c80: mov rax, qword ptr [rsp + 8]; movzx eax, byte ptr [rax + 0x16]; mov qword ptr [rsp + 0x10], rax; ret; 
0x00000000004673c0: mov rax, qword ptr [rsp + 8]; movzx eax, byte ptr [rax + 0x17]; and eax, 0x1f; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000494021: mov rax, qword ptr [rsp + 8]; movzx eax, byte ptr [rax + 0x4a]; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000493fd8: mov rax, qword ptr [rsp + 8]; movzx eax, byte ptr [rax + 0x4d]; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000494013: mov rax, qword ptr [rsp + 8]; movzx eax, byte ptr [rax + 0x4e]; mov byte ptr [rsp + 0x18], al; ret; 
0x000000000045b4c6: mov rax, qword ptr [rsp + 8]; sub rax, qword ptr [rip + 0x12bbd6]; add qword ptr [rip + 0x12bbc7], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048df54: mov rax, qword ptr [rsp + 8]; syscall; 
0x000000000045e5c0: mov rax, qword ptr [rsp + 8]; test rax, rax; je 0x5e5d3; mov rax, qword ptr [rax]; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000045e7e0: mov rax, qword ptr [rsp + 8]; test rax, rax; je 0x5e7f3; mov rax, qword ptr [rax]; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000423856: mov rax, qword ptr [rsp + 8]; test rax, rax; setne byte ptr [rsp + 0x38]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004648a1: mov rax, qword ptr [rsp]; add rsp, 0x170; popfq; pop rbp; ret; 
0x0000000000441aae: mov rax, qword ptr [rsp]; mov dword ptr [rsp + 0x20], eax; mov qword ptr [rsp + 0x28], rbx; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000451293: mov rax, qword ptr [rsp]; mov qword ptr [rsp + 0x18], rax; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000445020: mov rax, qword ptr fs:[0xfffffffffffffff8]; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000045f5a0: mov rax, qword ptr fs:[0xfffffffffffffff8]; mov rax, qword ptr [rax + 0x30]; dec dword ptr [rax + 0x108]; ret; 
0x000000000043df05: mov rax, qword ptr fs:[0xfffffffffffffff8]; mov rax, qword ptr [rax + 0x30]; dec dword ptr [rax + 0xf0]; mov rbp, qword ptr [rsp + 0x260]; add rsp, 0x268; ret; 
0x0000000000438ca0: mov rax, qword ptr fs:[0xfffffffffffffff8]; mov rax, qword ptr [rax + 0x30]; mov byte ptr [rax + 0x114], 1; ret; 
0x0000000000409293: mov rax, rcx; shr rcx, 0x20; xor rax, rcx; mov qword ptr [rsp + 0x18], rax; ret; 
0x000000000040921a: mov rax, rcx; shr rcx, 0x20; xor rcx, rax; mov qword ptr [rsp + 0x18], rcx; ret; 
0x00000000004090cc: mov rax, rcx; shr rcx, 0x20; xor rcx, rax; mov qword ptr [rsp + 0x20], rcx; ret; 
0x0000000000441af6: mov rax, rdx; lock cmpxchg qword ptr [rcx + 0x10], rbx; sete dl; test dl, dl; je 0x41ae5; ret; 
0x000000000047a92f: mov rbp, qword ptr [rbp]; mov byte ptr [rsp + 0x1b0], al; mov rbp, qword ptr [rsp + 0x138]; add rsp, 0x140; ret; 
0x000000000047b58f: mov rbp, qword ptr [rbp]; mov byte ptr [rsp + 0x1d8], al; mov rbp, qword ptr [rsp + 0x150]; add rsp, 0x158; ret; 
0x000000000047b36f: mov rbp, qword ptr [rbp]; mov byte ptr [rsp + 0x1e8], al; mov rbp, qword ptr [rsp + 0x158]; add rsp, 0x160; ret; 
0x000000000047d4ef: mov rbp, qword ptr [rbp]; mov byte ptr [rsp + 0x230], al; mov rbp, qword ptr [rsp + 0x1a0]; add rsp, 0x1a8; ret; 
0x0000000000479eef: mov rbp, qword ptr [rbp]; mov rbp, qword ptr [rsp + 0x160]; add rsp, 0x168; ret; 
0x000000000047af6f: mov rbp, qword ptr [rbp]; mov rbp, qword ptr [rsp + 0xe0]; add rsp, 0xe8; ret; 
0x000000000047b12f: mov rbp, qword ptr [rbp]; mov rbp, qword ptr [rsp + 0xf0]; add rsp, 0xf8; ret; 
0x0000000000462d81: mov rbp, qword ptr [rsp + 0x10000000]; add rsp, 0x10000008; ret; 
0x0000000000462a01: mov rbp, qword ptr [rsp + 0x1000000]; add rsp, 0x1000008; ret; 
0x0000000000462681: mov rbp, qword ptr [rsp + 0x100000]; add rsp, 0x100008; ret; 
0x0000000000461399: mov rbp, qword ptr [rsp + 0x10000]; add rsp, 0x10008; ret; 
0x0000000000461119: mov rbp, qword ptr [rsp + 0x1000]; add rsp, 0x1008; ret; 
0x000000000044cb97: mov rbp, qword ptr [rsp + 0x100]; add rsp, 0x108; ret; 
0x0000000000406de5: mov rbp, qword ptr [rsp + 0x108]; add rsp, 0x110; ret; 
0x0000000000407196: mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; nop; ret; 
0x000000000040103d: mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000480a8e: mov rbp, qword ptr [rsp + 0x110]; add rsp, 0x118; ret; 
0x0000000000458b90: mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; nop; ret; 
0x000000000042864d: mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x00000000004680a7: mov rbp, qword ptr [rsp + 0x128]; add rsp, 0x130; ret; 
0x000000000047a75b: mov rbp, qword ptr [rsp + 0x138]; add rsp, 0x140; ret; 
0x000000000047b59a: mov rbp, qword ptr [rsp + 0x150]; add rsp, 0x158; ret; 
0x000000000047b37a: mov rbp, qword ptr [rsp + 0x158]; add rsp, 0x160; ret; 
0x0000000000479ef3: mov rbp, qword ptr [rsp + 0x160]; add rsp, 0x168; ret; 
0x000000000042b7f0: mov rbp, qword ptr [rsp + 0x168]; add rsp, 0x170; nop; ret; 
0x000000000042b4a5: mov rbp, qword ptr [rsp + 0x168]; add rsp, 0x170; ret; 
0x0000000000474c50: mov rbp, qword ptr [rsp + 0x188]; add rsp, 0x190; nop; ret; 
0x00000000004745d5: mov rbp, qword ptr [rsp + 0x188]; add rsp, 0x190; ret; 
0x000000000040fdd6: mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; nop; ret; 
0x000000000040281d: mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000455509: mov rbp, qword ptr [rsp + 0x198]; add rsp, 0x1a0; ret; 
0x00000000004499a5: mov rbp, qword ptr [rsp + 0x1a0]; add rsp, 0x1a8; ret; 
0x00000000004495c5: mov rbp, qword ptr [rsp + 0x1a8]; add rsp, 0x1b0; ret; 
0x0000000000419c30: mov rbp, qword ptr [rsp + 0x1b0]; add rsp, 0x1b8; nop; ret; 
0x00000000004813ac: mov rbp, qword ptr [rsp + 0x1b0]; add rsp, 0x1b8; ret; 
0x0000000000498011: mov rbp, qword ptr [rsp + 0x1c8]; add rsp, 0x1d0; ret; 
0x000000000041cb66: mov rbp, qword ptr [rsp + 0x1f8]; add rsp, 0x200; ret; 
0x0000000000462e61: mov rbp, qword ptr [rsp + 0x20000000]; add rsp, 0x20000008; ret; 
0x0000000000462ae1: mov rbp, qword ptr [rsp + 0x2000000]; add rsp, 0x2000008; ret; 
0x0000000000462761: mov rbp, qword ptr [rsp + 0x200000]; add rsp, 0x200008; ret; 
0x00000000004623e1: mov rbp, qword ptr [rsp + 0x20000]; add rsp, 0x20008; ret; 
0x00000000004611b9: mov rbp, qword ptr [rsp + 0x2000]; add rsp, 0x2008; ret; 
0x0000000000460f87: mov rbp, qword ptr [rsp + 0x200]; add rsp, 0x208; ret; 
0x000000000042e964: mov rbp, qword ptr [rsp + 0x2020]; add rsp, 0x2028; ret; 
0x000000000047c8c4: mov rbp, qword ptr [rsp + 0x208]; add rsp, 0x210; ret; 
0x0000000000401db6: mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x0000000000401cc1: mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043df18: mov rbp, qword ptr [rsp + 0x260]; add rsp, 0x268; ret; 
0x0000000000454ebf: mov rbp, qword ptr [rsp + 0x278]; add rsp, 0x280; ret; 
0x0000000000432376: mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; nop; ret; 
0x0000000000403b6a: mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000458353: mov rbp, qword ptr [rsp + 0x2b8]; add rsp, 0x2c0; ret; 
0x0000000000453441: mov rbp, qword ptr [rsp + 0x2c0]; add rsp, 0x2c8; ret; 
0x0000000000406a76: mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; nop; ret; 
0x0000000000401a25: mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000403716: mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x0000000000402950: mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000464e57: mov rbp, qword ptr [rsp + 0x38]; mov rbx, qword ptr [rsp + 0x40]; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000043d328: mov rbp, qword ptr [rsp + 0x3d0]; add rsp, 0x3d8; ret; 
0x0000000000474ff0: mov rbp, qword ptr [rsp + 0x3e8]; add rsp, 0x3f0; nop; ret; 
0x0000000000462f41: mov rbp, qword ptr [rsp + 0x40000000]; add rsp, 0x40000008; ret; 
0x0000000000462bc1: mov rbp, qword ptr [rsp + 0x4000000]; add rsp, 0x4000008; ret; 
0x0000000000462841: mov rbp, qword ptr [rsp + 0x400000]; add rsp, 0x400008; ret; 
0x00000000004624c1: mov rbp, qword ptr [rsp + 0x40000]; add rsp, 0x40008; ret; 
0x0000000000461259: mov rbp, qword ptr [rsp + 0x4000]; add rsp, 0x4008; ret; 
0x0000000000461007: mov rbp, qword ptr [rsp + 0x400]; add rsp, 0x408; ret; 
0x0000000000428b76: mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; nop; ret; 
0x000000000040931b: mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000441344: mov rbp, qword ptr [rsp + 0x430]; add rsp, 0x438; ret; 
0x000000000042ed32: mov rbp, qword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x000000000040be96: mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; nop; ret; 
0x000000000040692f: mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000043f5b6: mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; nop; ret; 
0x0000000000403c05: mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000437c36: mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; nop; ret; 
0x0000000000411585: mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000045a736: mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; nop; ret; 
0x000000000041ea9e: mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000042e45d: mov rbp, qword ptr [rsp + 0x648]; add rsp, 0x650; ret; 
0x0000000000424176: mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; nop; ret; 
0x0000000000403a5f: mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x000000000047593f: mov rbp, qword ptr [rsp + 0x690]; add rsp, 0x698; ret; 
0x00000000004503f6: mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; nop; ret; 
0x0000000000404b85: mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x00000000004914b6: mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; nop; ret; 
0x0000000000404285: mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000462ca1: mov rbp, qword ptr [rsp + 0x8000000]; add rsp, 0x8000008; ret; 
0x0000000000462921: mov rbp, qword ptr [rsp + 0x800000]; add rsp, 0x800008; ret; 
0x00000000004625a1: mov rbp, qword ptr [rsp + 0x80000]; add rsp, 0x80008; ret; 
0x00000000004612f9: mov rbp, qword ptr [rsp + 0x8000]; add rsp, 0x8008; ret; 
0x0000000000461087: mov rbp, qword ptr [rsp + 0x800]; add rsp, 0x808; ret; 
0x000000000041d110: mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; nop; ret; 
0x0000000000405741: mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x00000000004064e2: mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000402c8e: mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x0000000000469ef0: mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; nop; ret; 
0x000000000040b9ac: mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000044e02f: mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x0000000000409cbe: mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x00000000004274c5: mov rbp, qword ptr [rsp + 0xb8]; add rsp, 0xc0; ret; 
0x0000000000448c63: mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x0000000000413d50: mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; nop; ret; 
0x000000000040161a: mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x000000000045fdec: mov rbp, qword ptr [rsp + 0xd0]; add rsp, 0xd8; ret; 
0x000000000040775f: mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x0000000000440b7a: mov rbp, qword ptr [rsp + 0xe0]; add rsp, 0xe8; ret; 
0x000000000048be70: mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; nop; ret; 
0x000000000048bb39: mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x000000000044cfc4: mov rbp, qword ptr [rsp + 0xf0]; add rsp, 0xf8; ret; 
0x000000000044d849: mov rbp, qword ptr [rsp + 0xf8]; add rsp, 0x100; ret; 
0x0000000000437d96: mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; nop; ret; 
0x0000000000405fea: mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000462fce: mov rbp, qword ptr [rsp - 8]; sub qword ptr [rsp], 5; mov rbx, qword ptr [rdx]; jmp rbx; 
0x0000000000406079: mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000464dd4: mov rbp, rsp; and rsp, 0xfffffffffffffff0; call rax; 
0x0000000000464dd4: mov rbp, rsp; and rsp, 0xfffffffffffffff0; call rax; mov rsp, rbp; pop rbp; ret; 
0x000000000041709a: mov rbx, qword ptr [rax + 0x10]; mov qword ptr [rsp], rbx; mov qword ptr [rsp + 8], rcx; mov rbx, qword ptr [rdx]; call rbx; 
0x00000000004540cd: mov rbx, qword ptr [rax]; mov rdx, rax; call rbx; 
0x0000000000461610: mov rbx, qword ptr [rbx + 0x30]; mov rsi, qword ptr [rbx]; cmp rsi, rax; jne 0x61625; lea rax, [rip - 0x2bf23]; jmp rax; 
0x00000000004802c1: mov rbx, qword ptr [rbx + 0x98]; mov qword ptr [rsp], rax; call rbx; 
0x00000000004615d1: mov rbx, qword ptr [rbx + 8]; jmp rbx; 
0x00000000004617ba: mov rbx, qword ptr [rbx]; mov qword ptr fs:[0xfffffffffffffff8], rbx; mov rsp, qword ptr [rbx + 0x38]; call 0x496e0; call 0x630c0; ret; 
0x00000000004688db: mov rbx, qword ptr [rdx + 0x40]; mov rsi, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rsi; call rbx; 
0x000000000047e7bd: mov rbx, qword ptr [rdx + 0xb8]; mov rsi, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rsi; call rbx; 
0x0000000000486df0: mov rbx, qword ptr [rdx + 0xd0]; mov rsi, qword ptr [rsp + 0x78]; mov qword ptr [rsp], rsi; call rbx; 
0x000000000040519e: mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000462fd8: mov rbx, qword ptr [rdx]; jmp rbx; 
0x000000000040fe3b: mov rbx, qword ptr [rdx]; nop; call rbx; 
0x0000000000464e5c: mov rbx, qword ptr [rsp + 0x40]; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000045c5c1: mov rbx, qword ptr [rsp + 0x50]; mov qword ptr [rsp + 0x10], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000046893a: mov rbx, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rbx; call rdx; 
0x0000000000401ec0: mov rbx, qword ptr [rsp + 8]; mov eax, dword ptr [rsp + 0x10]; xchg dword ptr [rbx], eax; ret; 
0x00000000004630a0: mov rbx, qword ptr [rsp + 8]; mov qword ptr fs:[0xfffffffffffffff8], rbx; ret; 
0x0000000000401ee0: mov rbx, qword ptr [rsp + 8]; mov rax, qword ptr [rsp + 0x10]; xchg qword ptr [rbx], rax; ret; 
0x0000000000464da4: mov rbx, rsp; and rsp, 0xfffffffffffffff0; call rax; 
0x0000000000464ff1: mov rbx, rsp; and rsp, 0xfffffffffffffff0; mov qword ptr [rsp], rbx; call rax; 
0x0000000000461491: mov rcx, 0; call rax; 
0x000000000048f0f6: mov rcx, qword ptr [rax + 0x10]; mov qword ptr [rsp], rcx; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000048ac02: mov rcx, qword ptr [rax + 0x18]; mov rdx, qword ptr [rsp + 0x30]; mov qword ptr [rsp], rdx; call rcx; 
0x000000000048fec6: mov rcx, qword ptr [rax + 0x20]; mov rdx, qword ptr [rax + 0x28]; mov rcx, qword ptr [rcx + 0x18]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000403f6f: mov rcx, qword ptr [rax + 0x30]; cmp qword ptr [rcx], rax; jne 0x3f82; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000467cef: mov rcx, qword ptr [rax + 0x38]; mov rdx, qword ptr [rsp + 0x38]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000468918: mov rcx, qword ptr [rax + 0x38]; mov rdx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rdx; call rcx; 
0x00000000004688b2: mov rcx, qword ptr [rax + 0x40]; mov rdx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rdx; nop; call rcx; 
0x000000000047c5d8: mov rcx, qword ptr [rax + 0x48]; mov rdx, qword ptr [rsp + 0x90]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000493f65: mov rcx, qword ptr [rax + 0x58]; movzx eax, byte ptr [rax + 0x48]; mov qword ptr [rsp + 0x10], rcx; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000493f85: mov rcx, qword ptr [rax + 0x60]; movzx eax, byte ptr [rax + 0x49]; mov qword ptr [rsp + 0x10], rcx; mov byte ptr [rsp + 0x18], al; ret; 
0x000000000047e792: mov rcx, qword ptr [rax + 0xb8]; mov rdx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000432238: mov rcx, qword ptr [rax + 8]; mov rax, qword ptr [rax + 0x10]; mov qword ptr [rsp + 0x10], rcx; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000425dbf: mov rcx, qword ptr [rax]; mov qword ptr [rdx], rcx; xorps xmm0, xmm0; movups xmmword ptr [rax], xmm0; ret; 
0x0000000000405191: mov rcx, qword ptr [rax]; mov qword ptr [rsp + 0x18], rcx; mov rdx, qword ptr [rsp + 0x48]; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000405e3b: mov rcx, qword ptr [rax]; mov qword ptr [rsp + 0x20], rcx; mov rdx, qword ptr [rsp + 0x50]; mov rbx, qword ptr [rdx]; call rbx; 
0x00000000004695a5: mov rcx, qword ptr [rax]; mov rax, qword ptr [rax + 8]; mov qword ptr [rsp + 0x10], rcx; mov qword ptr [rsp + 0x18], rax; ret; 
0x000000000040eefd: mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; 
0x0000000000456ca2: mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000456d64: mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048fece: mov rcx, qword ptr [rcx + 0x18]; mov qword ptr [rsp], rdx; call rcx; 
0x000000000048ff8e: mov rcx, qword ptr [rcx + 0x40]; mov qword ptr [rsp + 0x10], rax; mov qword ptr [rsp + 0x18], rcx; ret; 
0x0000000000468974: mov rcx, qword ptr [rcx + 0x60]; mov rdx, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000494831: mov rcx, qword ptr [rcx + 0xf8]; mov qword ptr [rsp], rax; call rcx; 
0x000000000048353e: mov rcx, qword ptr [rcx + 8]; mov qword ptr [rsp + 0x70], rcx; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004973f3: mov rcx, qword ptr [rdx + 0xf8]; mov qword ptr [rsp], rax; nop; call rcx; 
0x000000000040e016: mov rcx, qword ptr [rdx]; call rcx; 
0x0000000000439286: mov rcx, qword ptr [rip + 0x11dfcf]; test ecx, ecx; je 0x3929b; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042b620: mov rcx, qword ptr [rip + 0x15aeb1]; test rcx, rcx; jg 0x2b632; mov byte ptr [rsp + 0x10], 0; ret; 
0x000000000043ac52: mov rcx, qword ptr [rip + 0x8b8ef]; lea rdx, [rip + 0x8b8e8]; call rcx; 
0x0000000000434749: mov rcx, qword ptr [rip + 0x91df0]; lea rdx, [rip + 0x91de9]; call rcx; 
0x000000000048fe87: mov rcx, qword ptr [rip + 0xbfe6a]; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000048ec2f: mov rcx, qword ptr [rip + 0xc10f2]; mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048d8de: mov rcx, qword ptr [rip + 0xc25d3]; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048fe47: mov rcx, qword ptr [rip + 0xc6e3a]; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000048fe07: mov rcx, qword ptr [rip + 0xc6e8a]; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000048fdc7: mov rcx, qword ptr [rip + 0xc6eda]; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x0000000000464ee4: mov rcx, qword ptr [rip + 0xf1bcd]; lea r9, [rip - 0xf2]; mov rax, qword ptr [rip + 0xf1b27]; jmp rax; 
0x0000000000464179: mov rcx, qword ptr [rsi + rbx - 8]; mov qword ptr [rdi], rax; mov qword ptr [rdi + rbx - 8], rcx; ret; 
0x000000000040228c: mov rcx, qword ptr [rsi + rbx - 8]; mov rdx, qword ptr [rdi + rbx - 8]; cmp rcx, rdx; sete byte ptr [rax]; ret; 
0x0000000000456fa1: mov rcx, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x30], rax; mov qword ptr [rsp + 0x38], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000457c40: mov rcx, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x38], rax; mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000482153: mov rcx, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040680a: mov rcx, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042bf79: mov rcx, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x48], rcx; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048d3b9: mov rcx, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000047d0aa: mov rcx, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0x100]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000482591: mov rcx, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; call rax; 
0x000000000047c5ef: mov rcx, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; nop; call rax; 
0x0000000000485242: mov rcx, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0xe8]; mov qword ptr [rsp], rcx; call rax; 
0x000000000048530f: mov rcx, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0xe8]; mov qword ptr [rsp], rcx; nop; call rax; 
0x00000000004287e5: mov rcx, qword ptr [rsp + 0x110]; lea rdx, [rsp + 0x110]; call rcx; 
0x0000000000401e6a: mov rcx, qword ptr [rsp + 0x18]; lock cmpxchg qword ptr [rbx], rcx; sete byte ptr [rsp + 0x20]; ret; 
0x0000000000422b9f: mov rcx, qword ptr [rsp + 0x18]; mov qword ptr [rcx + 8], rax; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000045ae0b: mov rcx, qword ptr [rsp + 0x18]; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044dd2b: mov rcx, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x38], rax; mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042996a: mov rcx, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045ed42: mov rcx, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x40], rcx; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044e601: mov rcx, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x48], rcx; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044e6d2: mov rcx, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x50], rcx; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048d495: mov rcx, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x60], rcx; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004695fb: mov rcx, qword ptr [rsp + 0x18]; mov rax, qword ptr [rax + 0x28]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004310b3: mov rcx, qword ptr [rsp + 0x20]; cmp byte ptr [rsp + 0x28], 0; je 0x3111a; mov rax, qword ptr [rax + 0x18]; mov qword ptr [rsp], rcx; call rax; 
0x000000000045a34b: mov rcx, qword ptr [rsp + 0x20]; mov dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045ae8a: mov rcx, qword ptr [rsp + 0x20]; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044807c: mov rcx, qword ptr [rsp + 0x20]; mov qword ptr [rdx + rax + 0x460], rcx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040774a: mov rcx, qword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x100], rax; mov qword ptr [rsp + 0x108], rcx; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x0000000000480a79: mov rcx, qword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x128], rax; mov qword ptr [rsp + 0x130], rcx; mov rbp, qword ptr [rsp + 0x110]; add rsp, 0x118; ret; 
0x0000000000466b3a: mov rcx, qword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042a654: mov rcx, qword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045c5fc: mov rcx, qword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x58], rax; mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044b3cc: mov rcx, qword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x68], rcx; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048358e: mov rcx, qword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x70], rax; mov qword ptr [rsp + 0x78], rcx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004997ec: mov rcx, qword ptr [rsp + 0x20]; mov rax, qword ptr [rax + 0x50]; mov qword ptr [rsp], rcx; mov rcx, qword ptr [rsp + 0xc8]; mov qword ptr [rsp + 8], rcx; call rax; 
0x000000000048622a: mov rcx, qword ptr [rsp + 0x20]; mov rax, qword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000484941: mov rcx, qword ptr [rsp + 0x20]; mov rax, qword ptr [rax + 0xf8]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004983ce: mov rcx, qword ptr [rsp + 0x20]; mov rax, qword ptr [rax + 0xf8]; mov qword ptr [rsp], rcx; nop; call rax; 
0x000000000040395c: mov rcx, qword ptr [rsp + 0x20]; xchg qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000496e32: mov rcx, qword ptr [rsp + 0x238]; mov qword ptr [rsp], rcx; nop; call rax; 
0x0000000000496f5c: mov rcx, qword ptr [rsp + 0x240]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004970c4: mov rcx, qword ptr [rsp + 0x248]; mov qword ptr [rsp], rcx; call rax; 
0x000000000044c3d2: mov rcx, qword ptr [rsp + 0x28]; add rax, rcx; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000045a27d: mov rcx, qword ptr [rsp + 0x28]; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000407022: mov rcx, qword ptr [rsp + 0x28]; mov qword ptr [rsp + 0x120], rax; mov qword ptr [rsp + 0x128], rcx; mov rbp, qword ptr [rsp + 0x108]; add rsp, 0x110; ret; 
0x00000000004671c0: mov rcx, qword ptr [rsp + 0x28]; mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048d2ea: mov rcx, qword ptr [rsp + 0x28]; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000481e5b: mov rcx, qword ptr [rsp + 0x28]; mov qword ptr [rsp + 0x58], rax; mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000041fc7a: mov rcx, qword ptr [rsp + 0x28]; mov qword ptr [rsp + 0x58], rcx; mov dword ptr [rsp + 0x60], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000456c98: mov rcx, qword ptr [rsp + 0x28]; mov qword ptr [rsp + 8], rcx; mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; 
0x000000000041529a: mov rcx, qword ptr [rsp + 0x28]; xchg dword ptr [rcx + 0x6c0], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000466bea: mov rcx, qword ptr [rsp + 0x30]; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000407218: mov rcx, qword ptr [rsp + 0x30]; mov qword ptr [rsp + 0x58], rax; mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000043b5ee: mov rcx, qword ptr [rsp + 0x30]; mov qword ptr [rsp], rcx; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; nop; call rax; 
0x000000000041ec90: mov rcx, qword ptr [rsp + 0x38]; add qword ptr [rax + 0x16b0], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044ee12: mov rcx, qword ptr [rsp + 0x38]; mov dword ptr [rsp + 0x70], eax; mov qword ptr [rsp + 0x78], rcx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000428bda: mov rcx, qword ptr [rsp + 0x38]; mov qword ptr [rsp + 0x60], rcx; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004820c0: mov rcx, qword ptr [rsp + 0x38]; mov qword ptr [rsp + 0xa0], rcx; mov qword ptr [rsp + 0xa8], rax; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000452406: mov rcx, qword ptr [rsp + 0x40]; add qword ptr [rax + 0x1640], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000045d2ec: mov rcx, qword ptr [rsp + 0x40]; mov byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000042abf8: mov rcx, qword ptr [rsp + 0x40]; mov qword ptr [rax + 0x28], rcx; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045c10a: mov rcx, qword ptr [rsp + 0x40]; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004849a3: mov rcx, qword ptr [rsp + 0x40]; mov qword ptr [rsp + 0x70], rax; mov qword ptr [rsp + 0x78], rcx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000048538d: mov rcx, qword ptr [rsp + 0x40]; mov qword ptr [rsp], rcx; call rax; 
0x000000000041f3ce: mov rcx, qword ptr [rsp + 0x40]; sub rax, rcx; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000046ad9f: mov rcx, qword ptr [rsp + 0x48]; lock xadd dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000494eb9: mov rcx, qword ptr [rsp + 0x48]; mov byte ptr [rcx + 0x4c], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004920bf: mov rcx, qword ptr [rsp + 0x48]; mov byte ptr [rcx + 0xe], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000445231: mov rcx, qword ptr [rsp + 0x48]; mov qword ptr [rax + 0x80], rcx; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x00000000004855cd: mov rcx, qword ptr [rsp + 0x48]; mov qword ptr [rsp], rcx; call rax; 
0x000000000046b317: mov rcx, qword ptr [rsp + 0x48]; mov rdx, qword ptr [rcx + 0x20]; test rdx, rdx; je 0x6b2fe; mov rax, qword ptr [rdx]; call rax; 
0x000000000048abbf: mov rcx, qword ptr [rsp + 0x50]; cmp rcx, rax; jg 0x8ab82; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040499c: mov rcx, qword ptr [rsp + 0x50]; mov qword ptr [rax + 8], rcx; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004238ea: mov rcx, qword ptr [rsp + 0x50]; mov qword ptr [rdx + rax*8], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004070a4: mov rcx, qword ptr [rsp + 0x50]; mov qword ptr [rsp + 0x120], rax; mov qword ptr [rsp + 0x128], rcx; mov rbp, qword ptr [rsp + 0x108]; add rsp, 0x110; ret; 
0x00000000004035e1: mov rcx, qword ptr [rsp + 0x58]; cmp rax, rcx; sete byte ptr [rsp + 0x60]; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000045e0ab: mov rcx, qword ptr [rsp + 0x58]; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000046895a: mov rcx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000481fea: mov rcx, qword ptr [rsp + 0x60]; mov qword ptr [rsp + 0xa0], rax; mov qword ptr [rsp + 0xa8], rcx; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000046896f: mov rcx, qword ptr [rsp + 0x60]; mov rcx, qword ptr [rcx + 0x60]; mov rdx, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000468931: mov rcx, qword ptr [rsp + 0x60]; mov rdx, qword ptr [rcx + 0x38]; mov rbx, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rbx; call rdx; 
0x000000000042cbf5: mov rcx, qword ptr [rsp + 0x68]; xchg qword ptr [rax], rcx; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000491c9f: mov rcx, qword ptr [rsp + 0x70]; mov byte ptr [rcx + 0xe], al; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000486e39: mov rcx, qword ptr [rsp + 0x78]; mov qword ptr [rsp], rcx; call rax; 
0x000000000047c616: mov rcx, qword ptr [rsp + 0x90]; mov qword ptr [rsp], rcx; call rax; 
0x000000000049a40d: mov rcx, qword ptr [rsp + 0x98]; cmp rax, rcx; jl 0x9a342; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x00000000004200e9: mov rcx, qword ptr [rsp + 0xa0]; mov qword ptr [rsp + 0xc8], rcx; mov qword ptr [rsp + 0xd0], rax; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000048cce1: mov rcx, qword ptr [rsp + 0xa8]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004997f9: mov rcx, qword ptr [rsp + 0xc8]; mov qword ptr [rsp + 8], rcx; call rax; 
0x0000000000493aba: mov rcx, qword ptr [rsp + 0xf8]; mov byte ptr [rcx + 0xe], al; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x0000000000403268: mov rcx, qword ptr [rsp + 8]; cmp byte ptr [rcx], al; sete byte ptr [rsp + 0x18]; ret; 
0x00000000004032a7: mov rcx, qword ptr [rsp + 8]; cmp dword ptr [rcx], eax; sete byte ptr [rsp + 0x18]; ret; 
0x00000000004032c8: mov rcx, qword ptr [rsp + 8]; cmp qword ptr [rcx], rax; sete byte ptr [rsp + 0x18]; ret; 
0x0000000000403288: mov rcx, qword ptr [rsp + 8]; cmp word ptr [rcx], ax; sete byte ptr [rsp + 0x18]; ret; 
0x000000000046489c: mov rcx, qword ptr [rsp + 8]; mov rax, qword ptr [rsp]; add rsp, 0x170; popfq; pop rbp; ret; 
0x00000000004920be: mov rcx, qword ptr es:[rsp + 0x48]; mov byte ptr [rcx + 0xe], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000043c1cb: mov rcx, rax; mov qword ptr [rcx + 0x48], rax; cmp qword ptr [rcx + 0x50], 0; jne 0x3c1da; ret; 
0x0000000000401e43: mov rcx, rax; shr rax, 0x20; add rax, rcx; and rax, 0x7f; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000046304b: mov rcx, rbx; call rax; 
0x00000000004640ed: mov rcx, rbx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000042a104: mov rcx, rdi; shl rbx, cl; or qword ptr [rdx + rax*8], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004651f5: mov rdi, 0x1002; mov rax, 0x9e; syscall; 
0x000000000042b0e9: mov rdi, qword ptr [rcx + rbx*8]; cmp rsi, rdi; je 0x2b0dd; mov byte ptr [rsp + 0x38], 0; ret; 
0x000000000046303c: mov rdi, qword ptr [rdi + 8]; sub rdi, rdx; mov qword ptr [rsp + 0x28], rdi; mov rdi, rbx; mov rcx, rbx; call rax; 
0x0000000000461636: mov rdi, qword ptr [rdi]; call rdi; 
0x0000000000461636: mov rdi, qword ptr [rdi]; call rdi; pop rax; lea rax, [rip - 0x2bf03]; jmp rax; 
0x0000000000461713: mov rdi, qword ptr [rdi]; jmp rdi; 
0x00000000004726e9: mov rdi, qword ptr [rsi + 0x10]; mov qword ptr [rsp], rcx; mov qword ptr [rsp + 8], rdx; mov qword ptr [rsp + 0x10], rbx; mov qword ptr [rsp + 0x18], rdi; call rax; 
0x000000000048aba7: mov rdi, qword ptr [rsp + 0x48]; lea r8, [rax + rdi]; mov qword ptr [rsp + 0x10], r8; call rdx; 
0x0000000000465380: mov rdi, qword ptr [rsp + 8]; mov eax, 0x3f; syscall; 
0x0000000000465380: mov rdi, qword ptr [rsp + 8]; mov eax, 0x3f; syscall; mov qword ptr [rsp + 0x10], rax; ret; 
0x00000000004653a0: mov rdi, qword ptr [rsp + 8]; mov rsi, qword ptr [rsp + 0x10]; mov eax, 0x95; syscall; 
0x00000000004650a0: mov rdi, qword ptr [rsp + 8]; mov rsi, qword ptr [rsp + 0x10]; mov edx, dword ptr [rsp + 0x18]; mov rax, 0x1c; syscall; 
0x00000000004651a0: mov rdi, qword ptr [rsp + 8]; mov rsi, qword ptr [rsp + 0x10]; mov rax, 0x83; syscall; 
0x0000000000463048: mov rdi, rbx; mov rcx, rbx; call rax; 
0x0000000000464a2e: mov rdi, rsp; mov esi, 0; mov eax, 0x23; syscall; 
0x0000000000462d40: mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x10000018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004629c0: mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x1000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462640: mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x100018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004622c0: mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x10018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461f40: mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x1018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461c2a: mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x118]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462e20: mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x20000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462aa0: mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x2000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462720: mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x200018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004623a0: mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x20018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462020: mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x2018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461cea: mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x218]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461a0f: mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x38]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462f00: mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x40000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462b80: mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x4000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462800: mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x400018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462480: mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x40018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462100: mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x4018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461daa: mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x418]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461aaf: mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x58]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462c60: mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x8000018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004628e0: mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x800018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462560: mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x80018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004621e0: mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x8018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461e6a: mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x818]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461b67: mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x98]; mov rax, qword ptr [rdx]; call rax; 
0x000000000046534b: mov rdx, 0; mov eax, 0x48; syscall; 
0x000000000046148a: mov rdx, 0; mov rcx, 0; call rax; 
0x0000000000465364: mov rdx, 0x800; or edx, eax; mov eax, 0x48; syscall; 
0x0000000000465364: mov rdx, 0x800; or edx, eax; mov eax, 0x48; syscall; ret; 
0x000000000046532b: mov rdx, 1; mov eax, 0x48; syscall; 
0x000000000046532b: mov rdx, 1; mov eax, 0x48; syscall; ret; 
0x000000000048feca: mov rdx, qword ptr [rax + 0x28]; mov rcx, qword ptr [rcx + 0x18]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000497de2: mov rdx, qword ptr [rax + 0x48]; mov qword ptr [rsp], rcx; call rdx; 
0x000000000040e0e4: mov rdx, qword ptr [rax + 0x48]; mov rax, qword ptr [rsp + 0x50]; mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], 0; mov rax, qword ptr [rdx]; call rax; 
0x000000000047c591: mov rdx, qword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; call rdx; 
0x00000000004569d3: mov rdx, qword ptr [rax + rcx*8]; test rdx, rdx; jne 0x5697d; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x000000000041059b: mov rdx, qword ptr [rbx + 0x48]; mov eax, dword ptr [r8 + 0xc]; mov qword ptr [rsp], r11; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; call rax; 
0x00000000004111e5: mov rdx, qword ptr [rbx + 0x48]; mov eax, dword ptr [r9 + 0xc]; mov qword ptr [rsp], r12; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; call rax; 
0x000000000046b31c: mov rdx, qword ptr [rcx + 0x20]; test rdx, rdx; je 0x6b2fe; mov rax, qword ptr [rdx]; call rax; 
0x0000000000468936: mov rdx, qword ptr [rcx + 0x38]; mov rbx, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rbx; call rdx; 
0x000000000044312a: mov rdx, qword ptr [rcx + rax]; mov rax, qword ptr [rcx + rax + 8]; mov qword ptr [rsp + 0x10], rdx; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000402291: mov rdx, qword ptr [rdi + rbx - 8]; cmp rcx, rdx; sete byte ptr [rax]; ret; 
0x0000000000448f9d: mov rdx, qword ptr [rdx + 0x10]; add rcx, rdx; mov qword ptr [rax + 0x68], rcx; ret; 
0x00000000004391a2: mov rdx, qword ptr [rip + 0x11e177]; mov qword ptr [rsp], rcx; mov rax, qword ptr [rdx]; call rax; 
0x0000000000437d4d: mov rdx, qword ptr [rip + 0x11f5cc]; mov qword ptr [rsp], rcx; mov rax, qword ptr [rdx]; call rax; 
0x000000000042f291: mov rdx, qword ptr [rip + 0x127838]; test rdx, rdx; jne 0x2f2a7; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042ca43: mov rdx, qword ptr [rsi]; cmp rdx, rax; jne 0x2ca55; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000462d45: mov rdx, qword ptr [rsp + 0x10000018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004629c5: mov rdx, qword ptr [rsp + 0x1000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462645: mov rdx, qword ptr [rsp + 0x100018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004622c5: mov rdx, qword ptr [rsp + 0x10018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461f45: mov rdx, qword ptr [rsp + 0x1018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461c2f: mov rdx, qword ptr [rsp + 0x118]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000464b4a: mov rdx, qword ptr [rsp + 0x18]; mov eax, 0x1b; syscall; 
0x0000000000464b4a: mov rdx, qword ptr [rsp + 0x18]; mov eax, 0x1b; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000464b29: mov rdx, qword ptr [rsp + 0x18]; mov eax, 0x26; syscall; 
0x0000000000464b29: mov rdx, qword ptr [rsp + 0x18]; mov eax, 0x26; syscall; ret; 
0x000000000046526a: mov rdx, qword ptr [rsp + 0x18]; mov eax, 0xcc; syscall; 
0x000000000046526a: mov rdx, qword ptr [rsp + 0x18]; mov eax, 0xcc; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000464b0a: mov rdx, qword ptr [rsp + 0x18]; mov eax, 0xea; syscall; 
0x0000000000464b0a: mov rdx, qword ptr [rsp + 0x18]; mov eax, 0xea; syscall; ret; 
0x0000000000464d6a: mov rdx, qword ptr [rsp + 0x18]; mov r10, qword ptr [rsp + 0x20]; mov eax, 0xd; syscall; 
0x0000000000464d29: mov rdx, qword ptr [rsp + 0x18]; mov r10d, dword ptr [rsp + 0x20]; mov eax, 0xe; syscall; 
0x0000000000406a54: mov rdx, qword ptr [rsp + 0x18]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462e25: mov rdx, qword ptr [rsp + 0x20000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462aa5: mov rdx, qword ptr [rsp + 0x2000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462725: mov rdx, qword ptr [rsp + 0x200018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004623a5: mov rdx, qword ptr [rsp + 0x20018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462025: mov rdx, qword ptr [rsp + 0x2018]; mov rax, qword ptr [rdx]; call rax; 
0x000000000041510a: mov rdx, qword ptr [rsp + 0x20]; mov qword ptr [rdx + rcx*8 + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048df4f: mov rdx, qword ptr [rsp + 0x20]; mov rax, qword ptr [rsp + 8]; syscall; 
0x0000000000464dce: mov rdx, qword ptr [rsp + 0x20]; push rbp; mov rbp, rsp; and rsp, 0xfffffffffffffff0; call rax; 
0x0000000000461cef: mov rdx, qword ptr [rsp + 0x218]; mov rax, qword ptr [rdx]; call rax; 
0x000000000040a568: mov rdx, qword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x000000000048ac06: mov rdx, qword ptr [rsp + 0x30]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000464d98: mov rdx, qword ptr [rsp + 0x30]; mov rax, qword ptr [rip + 0xf1ca4]; mov rbx, rsp; and rsp, 0xfffffffffffffff0; call rax; 
0x0000000000467cf3: mov rdx, qword ptr [rsp + 0x38]; mov qword ptr [rsp], rdx; call rcx; 
0x000000000047d9d6: mov rdx, qword ptr [rsp + 0x38]; mov qword ptr [rsp], rdx; nop; call rcx; 
0x00000000004508a6: mov rdx, qword ptr [rsp + 0x38]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462f05: mov rdx, qword ptr [rsp + 0x40000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462b85: mov rdx, qword ptr [rsp + 0x4000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462805: mov rdx, qword ptr [rsp + 0x400018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462485: mov rdx, qword ptr [rsp + 0x40018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462105: mov rdx, qword ptr [rsp + 0x4018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461daf: mov rdx, qword ptr [rsp + 0x418]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000405199: mov rdx, qword ptr [rsp + 0x48]; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000405e43: mov rdx, qword ptr [rsp + 0x50]; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000046891c: mov rdx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rdx; call rcx; 
0x00000000004688b6: mov rdx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rdx; nop; call rcx; 
0x0000000000461ab4: mov rdx, qword ptr [rsp + 0x58]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004688d6: mov rdx, qword ptr [rsp + 0x60]; mov rbx, qword ptr [rdx + 0x40]; mov rsi, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rsi; call rbx; 
0x000000000047e7b8: mov rdx, qword ptr [rsp + 0x60]; mov rbx, qword ptr [rdx + 0xb8]; mov rsi, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rsi; call rbx; 
0x0000000000472615: mov rdx, qword ptr [rsp + 0x68]; mov qword ptr [rsp + 0x18], rdx; nop; call rax; 
0x0000000000468978: mov rdx, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000437a71: mov rdx, qword ptr [rsp + 0x68]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000486377: mov rdx, qword ptr [rsp + 0x70]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000486deb: mov rdx, qword ptr [rsp + 0x70]; mov rbx, qword ptr [rdx + 0xd0]; mov rsi, qword ptr [rsp + 0x78]; mov qword ptr [rsp], rsi; call rbx; 
0x0000000000486d8d: mov rdx, qword ptr [rsp + 0x78]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000462c65: mov rdx, qword ptr [rsp + 0x8000018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004628e5: mov rdx, qword ptr [rsp + 0x800018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462565: mov rdx, qword ptr [rsp + 0x80018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004621e5: mov rdx, qword ptr [rsp + 0x8018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461e6f: mov rdx, qword ptr [rsp + 0x818]; mov rax, qword ptr [rdx]; call rax; 
0x000000000047c5dc: mov rdx, qword ptr [rsp + 0x90]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000461b6c: mov rdx, qword ptr [rsp + 0x98]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000452dca: mov rdx, qword ptr [rsp + 0xc0]; mov rcx, qword ptr [rdx]; call rcx; 
0x00000000004540d0: mov rdx, rax; call rbx; 
0x000000000040ef00: mov rdx, rax; call rcx; 
0x0000000000456ca5: mov rdx, rax; call rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000456d67: mov rdx, rax; call rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040ef50: mov rdx, rcx; call rsi; 
0x0000000000461633: mov rdx, rdi; mov rdi, qword ptr [rdi]; call rdi; 
0x0000000000461633: mov rdx, rdi; mov rdi, qword ptr [rdi]; call rdi; pop rax; lea rax, [rip - 0x2bf03]; jmp rax; 
0x0000000000461710: mov rdx, rdi; mov rdi, qword ptr [rdi]; jmp rdi; 
0x0000000000464cfc: mov rsi, 0; mov rax, qword ptr [rip + 0xdc456]; call rax; 
0x0000000000464c16: mov rsi, 0; mov rax, qword ptr [rip + 0xdc53c]; call rax; 
0x0000000000465324: mov rsi, 2; mov rdx, 1; mov eax, 0x48; syscall; 
0x0000000000465324: mov rsi, 2; mov rdx, 1; mov eax, 0x48; syscall; ret; 
0x0000000000465344: mov rsi, 3; mov rdx, 0; mov eax, 0x48; syscall; 
0x000000000046535d: mov rsi, 4; mov rdx, 0x800; or edx, eax; mov eax, 0x48; syscall; 
0x000000000040ef40: mov rsi, qword ptr [rax + 0xc]; mov qword ptr [rsp], rdx; mov qword ptr [rsp + 8], rsi; mov rsi, qword ptr [rcx]; mov rdx, rcx; call rsi; 
0x0000000000441a00: mov rsi, qword ptr [rax + rbx*8]; lea rdx, [rax + rbx*8]; call rsi; 
0x0000000000461614: mov rsi, qword ptr [rbx]; cmp rsi, rax; jne 0x61625; lea rax, [rip - 0x2bf23]; jmp rax; 
0x000000000040ef4d: mov rsi, qword ptr [rcx]; mov rdx, rcx; call rsi; 
0x0000000000463055: mov rsi, qword ptr [rdi + 8]; sub rsi, qword ptr [rsp + 0x28]; mov qword ptr fs:[0xfffffffffffffff8], rdi; mov rsp, rsi; mov dword ptr [rsp + 0x18], eax; ret; 
0x000000000042b0e5: mov rsi, qword ptr [rdx + rbx*8]; mov rdi, qword ptr [rcx + rbx*8]; cmp rsi, rdi; je 0x2b0dd; mov byte ptr [rsp + 0x38], 0; ret; 
0x0000000000497fac: mov rsi, qword ptr [rsp + 0x100]; mov qword ptr [rsp], rsi; call rbx; 
0x00000000004653a5: mov rsi, qword ptr [rsp + 0x10]; mov eax, 0x95; syscall; 
0x00000000004653a5: mov rsi, qword ptr [rsp + 0x10]; mov eax, 0x95; syscall; mov qword ptr [rsp + 0x18], rax; ret; 
0x00000000004649a4: mov rsi, qword ptr [rsp + 0x10]; mov edx, dword ptr [rsp + 0x18]; mov eax, 0; syscall; 
0x0000000000464985: mov rsi, qword ptr [rsp + 0x10]; mov edx, dword ptr [rsp + 0x18]; mov eax, 1; syscall; 
0x00000000004652e4: mov rsi, qword ptr [rsp + 0x10]; mov edx, dword ptr [rsp + 0x18]; mov r10d, dword ptr [rsp + 0x1c]; mov r8, 0; mov eax, 0x119; syscall; 
0x00000000004650a5: mov rsi, qword ptr [rsp + 0x10]; mov edx, dword ptr [rsp + 0x18]; mov rax, 0x1c; syscall; 
0x00000000004650a5: mov rsi, qword ptr [rsp + 0x10]; mov edx, dword ptr [rsp + 0x18]; mov rax, 0x1c; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x00000000004651a5: mov rsi, qword ptr [rsp + 0x10]; mov rax, 0x83; syscall; 
0x0000000000465025: mov rsi, qword ptr [rsp + 0x10]; mov rax, 0xb; syscall; 
0x0000000000464b45: mov rsi, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x18]; mov eax, 0x1b; syscall; 
0x0000000000464b24: mov rsi, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x18]; mov eax, 0x26; syscall; 
0x0000000000465265: mov rsi, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x18]; mov eax, 0xcc; syscall; 
0x0000000000464b05: mov rsi, qword ptr [rsp + 0x10]; mov rdx, qword ptr [rsp + 0x18]; mov eax, 0xea; syscall; 
0x0000000000427e1b: mov rsi, qword ptr [rsp + 0x110]; lea rdx, [rsp + 0x110]; call rsi; 
0x000000000048df4a: mov rsi, qword ptr [rsp + 0x18]; mov rdx, qword ptr [rsp + 0x20]; mov rax, qword ptr [rsp + 8]; syscall; 
0x000000000046308d: mov rsi, qword ptr [rsp + 0x28]; mov rsp, rsi; mov dword ptr [rsp + 0x18], eax; ret; 
0x000000000040df15: mov rsi, qword ptr [rsp + 0x50]; mov qword ptr [rsp], rsi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000040e185: mov rsi, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rsi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x00000000004688df: mov rsi, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rsi; call rbx; 
0x0000000000486df7: mov rsi, qword ptr [rsp + 0x78]; mov qword ptr [rsp], rsi; call rbx; 
0x0000000000464925: mov rsi, qword ptr [rsp + 8]; mov edx, dword ptr [rsp + 0x10]; mov r10d, dword ptr [rsp + 0x14]; mov eax, 0x101; syscall; 
0x00000000004651f2: mov rsi, rdi; mov rdi, 0x1002; mov rax, 0x9e; syscall; 
0x0000000000461703: mov rsp, qword ptr [rax + 0x38]; mov qword ptr [rax + 0x38], 0; ret; 
0x00000000004617c6: mov rsp, qword ptr [rbx + 0x38]; call 0x496e0; call 0x630c0; ret; 
0x000000000046162e: mov rsp, qword ptr [rsi + 0x38]; push rax; mov rdx, rdi; mov rdi, qword ptr [rdi]; call rdi; 
0x0000000000464ffe: mov rsp, qword ptr [rsp]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046508c: mov rsp, qword ptr [rsp]; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000464ddd: mov rsp, rbp; pop rbp; ret; 
0x0000000000464dad: mov rsp, rbx; mov dword ptr [rsp + 0x38], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004616db: mov rsp, rbx; mov rdx, rdi; mov rdi, qword ptr [rdi]; call rdi; 
0x0000000000463067: mov rsp, rsi; mov dword ptr [rsp + 0x18], eax; ret; 
0x0000000000484fbe: mov ss, word ptr [rbx]; add al, 0; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040d6d1: mov word ptr [rax + 0xa], cx; ret; 
0x0000000000496f5e: mov word ptr [rax + rax*2], fs; add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; or al, 0x24; call rax; 
0x00000000004580e0: mov word ptr [rax + rax*8], fs; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0x8d0f; 
0x000000000040f869: mov word ptr [rax + rax*8], fs; add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x59; or dh, dh; ret; 
0x0000000000497ddc: mov word ptr [rax + rax], fs; add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; push rax; mov qword ptr [rsp], rcx; call rdx; 
0x000000000048cce3: mov word ptr [rax + rbp*4], fs; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; or al, 0x24; call rax; 
0x000000000048adf9: mov word ptr [rax + rbp*4], fs; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x0000000000468dc6: mov word ptr [rax + rbx*8], fs; add byte ptr [rax], al; add cl, ch; ret; 
0x00000000004970c6: mov word ptr [rax + rcx*2], fs; add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; or al, 0x24; call rax; 
0x00000000004997fb: mov word ptr [rax + rcx*8], fs; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 8; call rax; 
0x0000000000496e34: mov word ptr [rax + rdi], fs; add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; or al, 0x24; nop; call rax; 
0x000000000041d086: mov word ptr [rax + rdx*4], fs; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; push rcx; cmp byte ptr [rax + 0x29], cl; ret 0x8948; 
0x000000000047c618: mov word ptr [rax + rdx*4], fs; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; or al, 0x24; call rax; 
0x0000000000448e01: mov word ptr [rax + rdx*8], fs; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; push rcx; cmp byte ptr [rax + 0x29], cl; ret 0x8948; 
0x000000000047a1cc: mov word ptr [rax + rdx*8], fs; add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x51; adc al, 0xf6; ret 0xf01; 
0x0000000000454047: mov word ptr [rax - 0x80], es; call qword ptr [rbx]; 
0x0000000000437195: mov word ptr [rax], es; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000401099: mov word ptr [rax], fs; add byte ptr [rax], al; add byte ptr [rax - 0x76b7f615], dl; ret 0x8948; 
0x00000000004852d8: mov word ptr [rax], ss; add al, 0; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004618d0: mov word ptr [rcx], cs; add byte ptr [rax], al; jmp rax; 
0x0000000000463f62: mov word ptr [rdi + rbx - 2], ax; ret; 
0x000000000046415b: mov word ptr [rdi], ax; mov byte ptr [rdi + 2], cl; ret; 
0x0000000000463f5f: mov word ptr [rdi], ax; mov word ptr [rdi + rbx - 2], ax; ret; 
0x00000000004499a9: movabs al, byte ptr [0x1a8c48148000001]; add byte ptr [rax], al; ret; 
0x000000000043af61: movabs al, byte ptr [0x1b15894890000000]; ret; 
0x0000000000404b80: movabs al, byte ptr [0x246c8b4800000000]; jo 0x4bd3; add esp, 0x78; ret; 
0x0000000000404c1d: movabs al, byte ptr [0x246c8b4800000000]; jo 0x4c70; add esp, 0x78; ret; 
0x0000000000405078: movabs al, byte ptr [0x246c8b4800000000]; jo 0x50cb; add esp, 0x78; ret; 
0x0000000000404df6: movabs al, byte ptr [0x246c8b4801000000]; jo 0x4e49; add esp, 0x78; ret; 
0x0000000000404fcb: movabs al, byte ptr [0x246c8b4801000000]; jo 0x501e; add esp, 0x78; ret; 
0x000000000040502c: movabs al, byte ptr [0x246c8b4801000000]; jo 0x507f; add esp, 0x78; ret; 
0x000000000040c424: movabs al, byte ptr [0x2c6830f000000]; add byte ptr [rcx - 0x77], cl; ret 0x8948; 
0x000000000044b55d: movabs al, byte ptr [0x30246c8b48000000]; add rsp, 0x38; ret; 
0x000000000042dc06: movabs al, byte ptr [0x4802894890000000]; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004293b2: movabs al, byte ptr [0x48fffffefde90003]; mov ebp, dword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x00000000004474c8: movabs al, byte ptr [0x58246c8b48000000]; add rsp, 0x60; ret; 
0x000000000044e877: movabs al, byte ptr [0x60246c8b48000000]; add rsp, 0x68; ret; 
0x0000000000403a5b: movabs al, byte ptr [0x68246c8b48000000]; add rsp, 0x70; ret; 
0x000000000040aea7: movabs al, byte ptr [0x6c8b4801482444c6]; and al, 0x28; add rsp, 0x30; ret; 
0x0000000000424d6e: movabs al, byte ptr [0x70246c8b48000000]; add rsp, 0x78; ret; 
0x0000000000427af8: movabs al, byte ptr [0x78246c8b48000000]; sub rsp, -0x80; ret; 
0x000000000044e033: movabs al, byte ptr [0xa8c48148000000]; add byte ptr [rax], al; ret; 
0x000000000044c3d1: movabs al, byte ptr [0xc8014828244c8b48]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004642b8: movabs al, byte ptr [0xf3b01f5c7f0f44f3]; movq qword ptr [rdi + rbx - 0x40], mm4; movdqu xmmword ptr [rdi + rbx - 0x30], xmm13; movdqu xmmword ptr [rdi + rbx - 0x20], xmm14; movdqu xmmword ptr [rdi + rbx - 0x10], xmm15; ret; 
0x000000000045b463: movabs byte ptr [0x100c62824448b48], al; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004022fa: movabs byte ptr [0x1202444c6fffffe], al; ret; 
0x0000000000401c29: movabs byte ptr [0x14245c8910244489], al; mov dword ptr [rsp + 0x18], ecx; mov dword ptr [rsp + 0x1c], edx; ret; 
0x000000000042f84e: movabs byte ptr [0x44824ac8b48], al; add rsp, 0x450; ret; 
0x00000000004346cd: movabs byte ptr [0x48241c8948000001], al; mov eax, dword ptr [rip + 0x91e64]; lea rdx, [rip + 0x91e5d]; call rax; 
0x000000000041381a: movabs byte ptr [0x6c8b4840245c8948], al; and al, 0x28; add rsp, 0x30; ret; 
0x0000000000406a83: movabs dword ptr [0x4830246c8b480002], eax; add esp, 0x38; ret; 
0x000000000046a919: movabs dword ptr [0x6c8b48dcebffff8a], eax; and al, 0x30; add rsp, 0x38; ret; 
0x00000000004487f9: movabs dword ptr [0x78246c8b48fffbb1], eax; sub rsp, -0x80; ret; 
0x0000000000433e3b: movabs eax, dword ptr [0x10246c8b48000006]; add rsp, 0x18; ret; 
0x0000000000496d42: movabs eax, dword ptr [0x26024ac8b48fff9]; add byte ptr [rax], al; add rsp, 0x268; ret; 
0x000000000045a482: movabs eax, dword ptr [0x4820246c8b48fffa]; add esp, 0x28; ret; 
0x000000000043a945: movabs eax, dword ptr [0x6c8b4801282444c6]; and al, 0x18; add rsp, 0x20; ret; 
0x0000000000414788: movabs eax, dword ptr [0x8948602444891375]; and al, 0x68; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000049482e: movabs eax, dword ptr [0xf8898b480004]; add byte ptr [rax - 0x77], cl; add al, 0x24; call rcx; 
0x000000000040388e: movabs rax, 0x4818246c8b480002; add esp, 0x20; ret; 
0x0000000000402613: movabs rax, 0x52ef6bbb8f63bf; imul rcx, rax; mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042a5ae: movabs rax, 0x8000000000000000; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000040293d: movabs rcx, 0x52ef6bbb8f63bf; imul rcx, rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000464187: movdqu xmm0, xmmword ptr [rsi]; movdqu xmm1, xmmword ptr [rsi + rbx - 0x10]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + rbx - 0x10], xmm1; ret; 
0x000000000046418b: movdqu xmm1, xmmword ptr [rsi + rbx - 0x10]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + rbx - 0x10], xmm1; ret; 
0x00000000004641ab: movdqu xmm3, xmmword ptr [rsi + rbx - 0x10]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm1; movdqu xmmword ptr [rdi + rbx - 0x20], xmm2; movdqu xmmword ptr [rdi + rbx - 0x10], xmm3; ret; 
0x0000000000464656: movdqu xmmword ptr [rax + 0x40], xmm9; movdqu xmmword ptr [rax + 0x50], xmm10; movdqu xmmword ptr [rax + 0x60], xmm11; movdqu xmmword ptr [rax + 0x70], xmm12; ret; 
0x000000000046465c: movdqu xmmword ptr [rax + 0x50], xmm10; movdqu xmmword ptr [rax + 0x60], xmm11; movdqu xmmword ptr [rax + 0x70], xmm12; ret; 
0x0000000000464662: movdqu xmmword ptr [rax + 0x60], xmm11; movdqu xmmword ptr [rax + 0x70], xmm12; ret; 
0x0000000000464668: movdqu xmmword ptr [rax + 0x70], xmm12; ret; 
0x00000000004644ba: movdqu xmmword ptr [rbx - 0x10], xmm12; ret; 
0x00000000004644b4: movdqu xmmword ptr [rbx - 0x20], xmm11; movdqu xmmword ptr [rbx - 0x10], xmm12; ret; 
0x00000000004644ae: movdqu xmmword ptr [rbx - 0x30], xmm10; movdqu xmmword ptr [rbx - 0x20], xmm11; movdqu xmmword ptr [rbx - 0x10], xmm12; ret; 
0x00000000004644a8: movdqu xmmword ptr [rbx - 0x40], xmm9; movdqu xmmword ptr [rbx - 0x30], xmm10; movdqu xmmword ptr [rbx - 0x20], xmm11; movdqu xmmword ptr [rbx - 0x10], xmm12; ret; 
0x0000000000464596: movdqu xmmword ptr [rcx - 0x10], xmm12; ret; 
0x0000000000464590: movdqu xmmword ptr [rcx - 0x20], xmm11; movdqu xmmword ptr [rcx - 0x10], xmm12; ret; 
0x000000000046458a: movdqu xmmword ptr [rcx - 0x30], xmm10; movdqu xmmword ptr [rcx - 0x20], xmm11; movdqu xmmword ptr [rcx - 0x10], xmm12; ret; 
0x0000000000464584: movdqu xmmword ptr [rcx - 0x40], xmm9; movdqu xmmword ptr [rcx - 0x30], xmm10; movdqu xmmword ptr [rcx - 0x20], xmm11; movdqu xmmword ptr [rcx - 0x10], xmm12; ret; 
0x0000000000463f8b: movdqu xmmword ptr [rdi + 0x10], xmm0; movdqu xmmword ptr [rdi + rbx - 0x20], xmm0; movdqu xmmword ptr [rdi + rbx - 0x10], xmm0; ret; 
0x00000000004641b5: movdqu xmmword ptr [rdi + 0x10], xmm1; movdqu xmmword ptr [rdi + rbx - 0x20], xmm2; movdqu xmmword ptr [rdi + rbx - 0x10], xmm3; ret; 
0x0000000000463f80: movdqu xmmword ptr [rdi + rbx - 0x10], xmm0; ret; 
0x00000000004642d5: movdqu xmmword ptr [rdi + rbx - 0x10], xmm15; ret; 
0x0000000000464195: movdqu xmmword ptr [rdi + rbx - 0x10], xmm1; ret; 
0x00000000004641c0: movdqu xmmword ptr [rdi + rbx - 0x10], xmm3; ret; 
0x0000000000464217: movdqu xmmword ptr [rdi + rbx - 0x10], xmm7; ret; 
0x0000000000463f90: movdqu xmmword ptr [rdi + rbx - 0x20], xmm0; movdqu xmmword ptr [rdi + rbx - 0x10], xmm0; ret; 
0x00000000004642ce: movdqu xmmword ptr [rdi + rbx - 0x20], xmm14; movdqu xmmword ptr [rdi + rbx - 0x10], xmm15; ret; 
0x00000000004641ba: movdqu xmmword ptr [rdi + rbx - 0x20], xmm2; movdqu xmmword ptr [rdi + rbx - 0x10], xmm3; ret; 
0x0000000000464211: movdqu xmmword ptr [rdi + rbx - 0x20], xmm6; movdqu xmmword ptr [rdi + rbx - 0x10], xmm7; ret; 
0x0000000000463fb6: movdqu xmmword ptr [rdi + rbx - 0x30], xmm0; movdqu xmmword ptr [rdi + rbx - 0x20], xmm0; movdqu xmmword ptr [rdi + rbx - 0x10], xmm0; ret; 
0x00000000004642c7: movdqu xmmword ptr [rdi + rbx - 0x30], xmm13; movdqu xmmword ptr [rdi + rbx - 0x20], xmm14; movdqu xmmword ptr [rdi + rbx - 0x10], xmm15; ret; 
0x000000000046420b: movdqu xmmword ptr [rdi + rbx - 0x30], xmm5; movdqu xmmword ptr [rdi + rbx - 0x20], xmm6; movdqu xmmword ptr [rdi + rbx - 0x10], xmm7; ret; 
0x0000000000463fb0: movdqu xmmword ptr [rdi + rbx - 0x40], xmm0; movdqu xmmword ptr [rdi + rbx - 0x30], xmm0; movdqu xmmword ptr [rdi + rbx - 0x20], xmm0; movdqu xmmword ptr [rdi + rbx - 0x10], xmm0; ret; 
0x00000000004642c0: movdqu xmmword ptr [rdi + rbx - 0x40], xmm12; movdqu xmmword ptr [rdi + rbx - 0x30], xmm13; movdqu xmmword ptr [rdi + rbx - 0x20], xmm14; movdqu xmmword ptr [rdi + rbx - 0x10], xmm15; ret; 
0x0000000000464205: movdqu xmmword ptr [rdi + rbx - 0x40], xmm4; movdqu xmmword ptr [rdi + rbx - 0x30], xmm5; movdqu xmmword ptr [rdi + rbx - 0x20], xmm6; movdqu xmmword ptr [rdi + rbx - 0x10], xmm7; ret; 
0x0000000000464002: movdqu xmmword ptr [rdi + rbx - 0x50], xmm0; movdqu xmmword ptr [rdi + rbx - 0x40], xmm0; movdqu xmmword ptr [rdi + rbx - 0x30], xmm0; movdqu xmmword ptr [rdi + rbx - 0x20], xmm0; movdqu xmmword ptr [rdi + rbx - 0x10], xmm0; ret; 
0x00000000004642b9: movdqu xmmword ptr [rdi + rbx - 0x50], xmm11; movdqu xmmword ptr [rdi + rbx - 0x40], xmm12; movdqu xmmword ptr [rdi + rbx - 0x30], xmm13; movdqu xmmword ptr [rdi + rbx - 0x20], xmm14; movdqu xmmword ptr [rdi + rbx - 0x10], xmm15; ret; 
0x0000000000463f87: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm0; movdqu xmmword ptr [rdi + rbx - 0x20], xmm0; movdqu xmmword ptr [rdi + rbx - 0x10], xmm0; ret; 
0x00000000004641b1: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm1; movdqu xmmword ptr [rdi + rbx - 0x20], xmm2; movdqu xmmword ptr [rdi + rbx - 0x10], xmm3; ret; 
0x0000000000463f7c: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + rbx - 0x10], xmm0; ret; 
0x0000000000464191: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + rbx - 0x10], xmm1; ret; 
0x0000000000464188: movq mm0, qword ptr [rsi]; movdqu xmm1, xmmword ptr [rsi + rbx - 0x10]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + rbx - 0x10], xmm1; ret; 
0x000000000046418c: movq mm1, qword ptr [rsi + rbx - 0x10]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + rbx - 0x10], xmm1; ret; 
0x00000000004641ac: movq mm3, qword ptr [rsi + rbx - 0x10]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm1; movdqu xmmword ptr [rdi + rbx - 0x20], xmm2; movdqu xmmword ptr [rdi + rbx - 0x10], xmm3; ret; 
0x0000000000464658: movq qword ptr [rax + 0x40], mm1; movdqu xmmword ptr [rax + 0x50], xmm10; movdqu xmmword ptr [rax + 0x60], xmm11; movdqu xmmword ptr [rax + 0x70], xmm12; ret; 
0x000000000046465e: movq qword ptr [rax + 0x50], mm2; movdqu xmmword ptr [rax + 0x60], xmm11; movdqu xmmword ptr [rax + 0x70], xmm12; ret; 
0x0000000000464664: movq qword ptr [rax + 0x60], mm3; movdqu xmmword ptr [rax + 0x70], xmm12; ret; 
0x000000000046466a: movq qword ptr [rax + 0x70], mm4; ret; 
0x00000000004644bc: movq qword ptr [rbx - 0x10], mm4; ret; 
0x00000000004644b6: movq qword ptr [rbx - 0x20], mm3; movdqu xmmword ptr [rbx - 0x10], xmm12; ret; 
0x00000000004644b0: movq qword ptr [rbx - 0x30], mm2; movdqu xmmword ptr [rbx - 0x20], xmm11; movdqu xmmword ptr [rbx - 0x10], xmm12; ret; 
0x00000000004644aa: movq qword ptr [rbx - 0x40], mm1; movdqu xmmword ptr [rbx - 0x30], xmm10; movdqu xmmword ptr [rbx - 0x20], xmm11; movdqu xmmword ptr [rbx - 0x10], xmm12; ret; 
0x0000000000464598: movq qword ptr [rcx - 0x10], mm4; ret; 
0x0000000000464592: movq qword ptr [rcx - 0x20], mm3; movdqu xmmword ptr [rcx - 0x10], xmm12; ret; 
0x000000000046458c: movq qword ptr [rcx - 0x30], mm2; movdqu xmmword ptr [rcx - 0x20], xmm11; movdqu xmmword ptr [rcx - 0x10], xmm12; ret; 
0x0000000000464586: movq qword ptr [rcx - 0x40], mm1; movdqu xmmword ptr [rcx - 0x30], xmm10; movdqu xmmword ptr [rcx - 0x20], xmm11; movdqu xmmword ptr [rcx - 0x10], xmm12; ret; 
0x0000000000463f8c: movq qword ptr [rdi + 0x10], mm0; movdqu xmmword ptr [rdi + rbx - 0x20], xmm0; movdqu xmmword ptr [rdi + rbx - 0x10], xmm0; ret; 
0x00000000004641b6: movq qword ptr [rdi + 0x10], mm1; movdqu xmmword ptr [rdi + rbx - 0x20], xmm2; movdqu xmmword ptr [rdi + rbx - 0x10], xmm3; ret; 
0x0000000000463f81: movq qword ptr [rdi + rbx - 0x10], mm0; ret; 
0x0000000000464196: movq qword ptr [rdi + rbx - 0x10], mm1; ret; 
0x00000000004641c1: movq qword ptr [rdi + rbx - 0x10], mm3; ret; 
0x0000000000464218: movq qword ptr [rdi + rbx - 0x10], mm7; ret; 
0x0000000000463f91: movq qword ptr [rdi + rbx - 0x20], mm0; movdqu xmmword ptr [rdi + rbx - 0x10], xmm0; ret; 
0x00000000004641bb: movq qword ptr [rdi + rbx - 0x20], mm2; movdqu xmmword ptr [rdi + rbx - 0x10], xmm3; ret; 
0x00000000004642d0: movq qword ptr [rdi + rbx - 0x20], mm6; movdqu xmmword ptr [rdi + rbx - 0x10], xmm15; ret; 
0x0000000000464212: movq qword ptr [rdi + rbx - 0x20], mm6; movdqu xmmword ptr [rdi + rbx - 0x10], xmm7; ret; 
0x0000000000463fb7: movq qword ptr [rdi + rbx - 0x30], mm0; movdqu xmmword ptr [rdi + rbx - 0x20], xmm0; movdqu xmmword ptr [rdi + rbx - 0x10], xmm0; ret; 
0x00000000004642c9: movq qword ptr [rdi + rbx - 0x30], mm5; movdqu xmmword ptr [rdi + rbx - 0x20], xmm14; movdqu xmmword ptr [rdi + rbx - 0x10], xmm15; ret; 
0x000000000046420c: movq qword ptr [rdi + rbx - 0x30], mm5; movdqu xmmword ptr [rdi + rbx - 0x20], xmm6; movdqu xmmword ptr [rdi + rbx - 0x10], xmm7; ret; 
0x0000000000463fb1: movq qword ptr [rdi + rbx - 0x40], mm0; movdqu xmmword ptr [rdi + rbx - 0x30], xmm0; movdqu xmmword ptr [rdi + rbx - 0x20], xmm0; movdqu xmmword ptr [rdi + rbx - 0x10], xmm0; ret; 
0x00000000004642c2: movq qword ptr [rdi + rbx - 0x40], mm4; movdqu xmmword ptr [rdi + rbx - 0x30], xmm13; movdqu xmmword ptr [rdi + rbx - 0x20], xmm14; movdqu xmmword ptr [rdi + rbx - 0x10], xmm15; ret; 
0x0000000000464206: movq qword ptr [rdi + rbx - 0x40], mm4; movdqu xmmword ptr [rdi + rbx - 0x30], xmm5; movdqu xmmword ptr [rdi + rbx - 0x20], xmm6; movdqu xmmword ptr [rdi + rbx - 0x10], xmm7; ret; 
0x0000000000464003: movq qword ptr [rdi + rbx - 0x50], mm0; movdqu xmmword ptr [rdi + rbx - 0x40], xmm0; movdqu xmmword ptr [rdi + rbx - 0x30], xmm0; movdqu xmmword ptr [rdi + rbx - 0x20], xmm0; movdqu xmmword ptr [rdi + rbx - 0x10], xmm0; ret; 
0x00000000004642bb: movq qword ptr [rdi + rbx - 0x50], mm3; movdqu xmmword ptr [rdi + rbx - 0x40], xmm12; movdqu xmmword ptr [rdi + rbx - 0x30], xmm13; movdqu xmmword ptr [rdi + rbx - 0x20], xmm14; movdqu xmmword ptr [rdi + rbx - 0x10], xmm15; ret; 
0x0000000000463f88: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0x10], xmm0; movdqu xmmword ptr [rdi + rbx - 0x20], xmm0; movdqu xmmword ptr [rdi + rbx - 0x10], xmm0; ret; 
0x00000000004641b2: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0x10], xmm1; movdqu xmmword ptr [rdi + rbx - 0x20], xmm2; movdqu xmmword ptr [rdi + rbx - 0x10], xmm3; ret; 
0x0000000000463f7d: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + rbx - 0x10], xmm0; ret; 
0x0000000000464192: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + rbx - 0x10], xmm1; ret; 
0x00000000004608c3: movq qword ptr [rdx], xmm0; ret; 
0x00000000004608a1: movq qword ptr [rdx], xmm1; ret; 
0x000000000046090f: movq qword ptr [rdx], xmm2; ret; 
0x00000000004609b0: movq qword ptr [rdx], xmm4; ret; 
0x0000000000460b36: movq qword ptr [rdx], xmm8; ret; 
0x00000000004631d5: movq qword ptr [rsp + 0x18], xmm0; ret; 
0x00000000004106d0: movsb byte ptr [rdi], byte ptr [rsi]; and al, 0x88; add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret; 
0x000000000046cec5: movsb byte ptr [rdi], byte ptr [rsi]; mov qword ptr [rsp + 0x30], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046cd65: movsb byte ptr [rdi], byte ptr [rsi]; mov qword ptr [rsp + 0x38], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000492535: movsb byte ptr [rdi], byte ptr [rsi]; mov qword ptr [rsp + 0x60], rsi; mov qword ptr [rsp + 0x68], rbx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000462d44: movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x10000018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004629c4: movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x1000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462644: movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x100018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004622c4: movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x10018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461f44: movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x1018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461c2e: movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x118]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462e24: movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x20000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462aa4: movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x2000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462724: movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x200018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004623a4: movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x20018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462024: movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x2018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461cee: movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x218]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461a13: movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x38]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462f04: movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x40000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462b84: movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x4000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462804: movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x400018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462484: movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x40018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462104: movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x4018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461dae: movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x418]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461ab3: movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x58]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462c64: movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x8000018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004628e4: movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x800018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462564: movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x80018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004621e4: movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x8018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461e6e: movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x818]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461b6b: movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x98]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000490f70: movsb byte ptr [rdi], byte ptr [rsi]; pop rsi; or al, 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040a2b7: movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000419119: movsd dword ptr [rdi], dword ptr [rsi]; add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000443c77: movsd dword ptr [rdi], dword ptr [rsi]; add eax, 0xafeb0000; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000456517: movsd dword ptr [rdi], dword ptr [rsi]; call qword ptr [rdx]; 
0x000000000048ab49: movsd dword ptr [rdi], dword ptr [rsi]; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000417755: movsd qword ptr [rdx + 0x40], xmm1; divsd xmm0, xmm2; movsd qword ptr [rdx + 0x48], xmm0; ret; 
0x000000000041775e: movsd qword ptr [rdx + 0x48], xmm0; ret; 
0x000000000041831f: movsd qword ptr [rip + 0x165681], xmm0; call 0x1f0e0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000408f26: movsd qword ptr [rsp + 0x10], xmm0; ret; 
0x0000000000408f20: movsd xmm0, qword ptr [rsp + 8]; movsd qword ptr [rsp + 0x10], xmm0; ret; 
0x0000000000423b32: movsxd rax, dword ptr [rax - 0x6af0fe06]; ret 0xd284; 
0x0000000000425768: movsxd rax, dword ptr [rax - 0x7af0fe05]; ret 1; 
0x000000000045cfb2: movsxd rax, dword ptr [rax]; add bl, ch; ret 0x8d48; 
0x000000000045f57b: movsxd rax, dword ptr [rax]; mov qword ptr [rsp + 8], rax; ret; 
0x00000000004617c8: movsxd rdi, dword ptr [rax]; call 0x496e0; call 0x630c0; ret; 
0x0000000000462fcc: movsxd rdi, eax; mov rbp, qword ptr [rsp - 8]; sub qword ptr [rsp], 5; mov rbx, qword ptr [rdx]; jmp rbx; 
0x0000000000423a9f: movsxd rdi, edi; retf 0xfa80; add dword ptr [rdi + 0xa], esi; cmp qword ptr [rcx + 0x70], rax; seta byte ptr [rsp + 0x10]; ret; 
0x0000000000463229: movsxd rsi, dword ptr [rsi]; adc al, byte ptr [rax]; aesenc xmm0, xmmword ptr [rip + 0x12366a]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x00000000004644be: movsxd rsi, eax; ret; 
0x0000000000463d72: movups xmm0, xmmword ptr [rsi]; add rsi, 0x10; movups xmmword ptr [rdi], xmm0; add rdi, 0x10; ret; 
0x0000000000408f21: movups xmm0, xmmword ptr [rsp + 8]; movsd qword ptr [rsp + 0x10], xmm0; ret; 
0x000000000041774e: movups xmm2, xmm1; divsd xmm1, xmm0; movsd qword ptr [rdx + 0x40], xmm1; divsd xmm0, xmm2; movsd qword ptr [rdx + 0x48], xmm0; ret; 
0x0000000000415225: movups xmmword ptr [rax + 0x10], xmm0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000452386: movups xmmword ptr [rax + 0x1640], xmm0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000443127: movups xmmword ptr [rax], xmm0; mov rdx, qword ptr [rcx + rax]; mov rax, qword ptr [rcx + rax + 8]; mov qword ptr [rsp + 0x10], rdx; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000425dc8: movups xmmword ptr [rax], xmm0; ret; 
0x00000000004639e0: movups xmmword ptr [rdi + 0x10], xmm0; movups xmmword ptr [rdi + 0x20], xmm0; movups xmmword ptr [rdi + 0x30], xmm0; lea rdi, [rdi + 0x40]; ret; 
0x00000000004639e4: movups xmmword ptr [rdi + 0x20], xmm0; movups xmmword ptr [rdi + 0x30], xmm0; lea rdi, [rdi + 0x40]; ret; 
0x00000000004639e8: movups xmmword ptr [rdi + 0x30], xmm0; lea rdi, [rdi + 0x40]; ret; 
0x0000000000463d79: movups xmmword ptr [rdi], xmm0; add rdi, 0x10; ret; 
0x000000000040f15c: movups xmmword ptr [rdi], xmm0; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x00000000004639dd: movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + 0x10], xmm0; movups xmmword ptr [rdi + 0x20], xmm0; movups xmmword ptr [rdi + 0x30], xmm0; lea rdi, [rdi + 0x40]; ret; 
0x0000000000417756: movups xmmword ptr [rdx + 0x40], xmm1; divsd xmm0, xmm2; movsd qword ptr [rdx + 0x48], xmm0; ret; 
0x000000000041775f: movups xmmword ptr [rdx + 0x48], xmm0; ret; 
0x0000000000418320: movups xmmword ptr [rip + 0x165681], xmm0; call 0x1f0e0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000408f27: movups xmmword ptr [rsp + 0x10], xmm0; ret; 
0x000000000044d083: movups xmmword ptr [rsp + 0x110], xmm0; mov rbp, qword ptr [rsp + 0xf0]; add rsp, 0xf8; ret; 
0x0000000000452822: movups xmmword ptr [rsp + 0x18], xmm0; call 0x51480; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004529b6: movups xmmword ptr [rsp + 0x18], xmm0; nop dword ptr [rax + rax]; call 0x51480; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042c765: movups xmmword ptr [rsp + 0x18], xmm0; ret; 
0x000000000044dece: movups xmmword ptr [rsp + 0x28], xmm0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000467484: movups xmmword ptr [rsp + 0x30], xmm0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000456fbd: movups xmmword ptr [rsp + 0x30], xmm0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044dd47: movups xmmword ptr [rsp + 0x38], xmm0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045d0e7: movups xmmword ptr [rsp + 0x40], xmm0; call 0x52f40; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000046bd9d: movups xmmword ptr [rsp + 0x40], xmm0; mov byte ptr [rsp + 0x50], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004126a5: movups xmmword ptr [rsp + 0x40], xmm0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004675e4: movups xmmword ptr [rsp + 0x40], xmm0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040a4d0: movups xmmword ptr [rsp + 0x48], xmm0; mov byte ptr [rsp + 0x58], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042bf95: movups xmmword ptr [rsp + 0x48], xmm0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048ecc8: movups xmmword ptr [rsp + 0x48], xmm0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000467116: movups xmmword ptr [rsp + 0x48], xmm0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000046c17b: movups xmmword ptr [rsp + 0x50], xmm0; mov byte ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048f098: movups xmmword ptr [rsp + 0x50], xmm0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000483013: movups xmmword ptr [rsp + 0x58], xmm0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048e136: movups xmmword ptr [rsp + 0x58], xmm0; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000046056d: movups xmmword ptr [rsp + 0x60], xmm0; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000048d596: movups xmmword ptr [rsp + 0x68], xmm0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000406b28: movups xmmword ptr [rsp + 0x68], xmm0; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000472577: movups xmmword ptr [rsp + 0x78], xmm0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044b2f4: movups xmmword ptr [rsp + 0xb8], xmm0; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000409d03: movups xmmword ptr [rsp + 0xc0], xmm0; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x0000000000477670: movups xmmword ptr [rsp + 0xe8], xmm0; mov qword ptr [rsp + 0xf8], rax; mov qword ptr [rsp + 0x100], rcx; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x00000000004775a1: movups xmmword ptr [rsp + 0xf8], xmm0; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x0000000000457a60: movzx eax, ax; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000479c65: movzx eax, byte ptr [rax + 0x15]; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000479c85: movzx eax, byte ptr [rax + 0x16]; mov qword ptr [rsp + 0x10], rax; ret; 
0x00000000004673c5: movzx eax, byte ptr [rax + 0x17]; and eax, 0x1f; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000493f69: movzx eax, byte ptr [rax + 0x48]; mov qword ptr [rsp + 0x10], rcx; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000493f89: movzx eax, byte ptr [rax + 0x49]; mov qword ptr [rsp + 0x10], rcx; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000494026: movzx eax, byte ptr [rax + 0x4a]; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000493fdd: movzx eax, byte ptr [rax + 0x4d]; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000494018: movzx eax, byte ptr [rax + 0x4e]; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000482455: movzx eax, byte ptr [rax]; mov byte ptr [rsp + 0x50], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000403265: movzx eax, byte ptr [rax]; mov rcx, qword ptr [rsp + 8]; cmp byte ptr [rcx], al; sete byte ptr [rsp + 0x18]; ret; 
0x000000000047304f: movzx eax, byte ptr [rcx + rsi]; cmp dil, r8b; je 0x73038; setb byte ptr [rsp + 0x30]; ret; 
0x0000000000472c89: movzx eax, byte ptr [rip + 0x113df7]; mov byte ptr [rip + 0x11378b], al; ret; 
0x0000000000440e59: movzx eax, byte ptr [rsp + 0x10]; mov byte ptr [rsp + 0x30], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040af11: movzx eax, byte ptr [rsp + 0x10]; mov byte ptr [rsp + 0x38], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000467d2f: movzx eax, byte ptr [rsp + 0x10]; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000403610: movzx eax, byte ptr [rsp + 0x10]; mov byte ptr [rsp + 0x60], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000458da5: movzx eax, byte ptr [rsp + 0x18]; mov byte ptr [rsp + 0x148], al; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x000000000046559e: movzx eax, byte ptr [rsp + 0x18]; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000455dfc: movzx eax, byte ptr [rsp + 0x18]; mov byte ptr [rsp + 0x50], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045e585: movzx eax, byte ptr [rsp + 0x18]; mov byte ptr [rsp + 0x50], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000468996: movzx eax, byte ptr [rsp + 0x18]; mov byte ptr [rsp + 0x78], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040afba: movzx eax, byte ptr [rsp + 0x1f]; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043b431: movzx eax, byte ptr [rsp + 0x1f]; mov byte ptr [rsp + 0x70], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000046929d: movzx eax, byte ptr [rsp + 0x28]; mov byte ptr [rsp + 0xe8], al; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x000000000047f168: movzx eax, byte ptr [rsp + 0x28]; mov byte ptr [rsp + 0xf0], al; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x00000000004954d9: movzx eax, byte ptr [rsp + 0x47]; mov byte ptr [rdi + 0x4b], al; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000467a6f: movzx eax, word ptr [rax + 0x30]; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000047ba53: movzx eax, word ptr [rax + 0x30]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000459c7d: movzx eax, word ptr [rax + 4]; and eax, 0x7fff; mov dword ptr [rsp + 0x60], eax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000403285: movzx eax, word ptr [rax]; mov rcx, qword ptr [rsp + 8]; cmp word ptr [rcx], ax; sete byte ptr [rsp + 0x18]; ret; 
0x000000000040fb46: movzx ecx, byte ptr [rax + 8]; and ecx, 0xfffffff7; mov byte ptr [rax + 8], cl; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000044c2c4: movzx ecx, cl; test rcx, rcx; cmovne rax, rsi; mov qword ptr [rsp + 0x18], rax; mov byte ptr [rsp + 0x20], 1; ret; 
0x0000000000457c92: movzx ecx, cx; cmp rcx, 1; je 0x57ca1; mov byte ptr [rsp + 0x10], 0; ret; 
0x0000000000457a9b: movzx ecx, cx; nop; test rcx, rcx; jne 0x57aab; movups xmmword ptr [rsp + 0x10], xmm0; ret; 
0x000000000040d6cb: movzx ecx, word ptr [rax + 0xa]; inc ecx; mov word ptr [rax + 0xa], cx; ret; 
0x00000000004017db: movzx esi, byte ptr [rdx + rbx]; nop; cmp sil, cl; jne 0x17d3; mov qword ptr [rsp + 0x20], rbx; ret; 
0x000000000047304e: movzx r8d, byte ptr [rcx + rsi]; cmp dil, r8b; je 0x73038; setb byte ptr [rsp + 0x30]; ret; 
0x0000000000460976: mul byte ptr [rsi + 0xf]; cmp ah, bl; jmp qword ptr [rsi + 0xf]; 
0x0000000000464a27: mul edx; mov qword ptr [rsp + 8], rax; mov rdi, rsp; mov esi, 0; mov eax, 0x23; syscall; 
0x000000000042fa37: neg eax; lea rcx, [rip + 0x156a50]; xchg dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042e26e: neg eax; mov dword ptr [rsp + 0x50], eax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048df76: neg eax; mov qword ptr [rsp + 0x38], rax; call 0x5f320; ret; 
0x000000000048dfe5: neg eax; mov qword ptr [rsp + 0x50], rax; call 0x5f320; ret; 
0x000000000042a219: neg ebx; and qword ptr [rdx + rsi*8], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042fa36: neg rax; lea rcx, [rip + 0x156a50]; xchg dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048df75: neg rax; mov qword ptr [rsp + 0x38], rax; call 0x5f320; ret; 
0x000000000048dfe4: neg rax; mov qword ptr [rsp + 0x50], rax; call 0x5f320; ret; 
0x000000000042a218: neg rbx; and qword ptr [rdx + rsi*8], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045b1fb: nop dword ptr [rax + rax]; call 0x21300; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000444a5b: nop dword ptr [rax + rax]; call 0x33b60; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x000000000043db1b: nop dword ptr [rax + rax]; call 0x3db00; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043db5b: nop dword ptr [rax + rax]; call 0x3db40; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043db9b: nop dword ptr [rax + rax]; call 0x3db80; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043dbdb: nop dword ptr [rax + rax]; call 0x3dbc0; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043dc1b: nop dword ptr [rax + rax]; call 0x3dc00; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043dc5b: nop dword ptr [rax + rax]; call 0x3dc40; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x00000000004529bb: nop dword ptr [rax + rax]; call 0x51480; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000452bfb: nop dword ptr [rax + rax]; call 0x51480; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000434ebb: nop dword ptr [rax + rax]; call 0x615e0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046bf1b: nop dword ptr [rax + rax]; call 0x6ba80; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000401a1b: nop dword ptr [rax + rax]; cmp eax, 7; jae 0x1a2f; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000041cc1b: nop dword ptr [rax + rax]; cmp ecx, 6; jne 0x1cd37; mov rbp, qword ptr [rsp + 0x1f8]; add rsp, 0x200; ret; 
0x000000000044d83b: nop dword ptr [rax + rax]; cmp rcx, rax; jg 0x4d772; mov rbp, qword ptr [rsp + 0xf8]; add rsp, 0x100; ret; 
0x000000000040a77b: nop dword ptr [rax + rax]; cmp rcx, rax; jne 0xa78f; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004046fb: nop dword ptr [rax + rax]; cmp rdi, rbx; jb 0x46c2; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000496f9d: nop dword ptr [rax]; call 0x30e60; mov rbp, qword ptr [rsp + 0x260]; add rsp, 0x268; ret; 
0x000000000045617c: nop dword ptr [rax]; call 0x344e0; call 0x33b60; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000043963d: nop dword ptr [rax]; call 0x38b20; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043bdbd: nop dword ptr [rax]; call 0x410e0; call 0x3ad60; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004495bd: nop dword ptr [rax]; call 0x48560; mov rbp, qword ptr [rsp + 0x1a8]; add rsp, 0x1b0; ret; 
0x000000000045153d: nop dword ptr [rax]; call 0x51a80; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000466f1d: nop dword ptr [rax]; call 0x5e4e0; call 0x5f600; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044999d: nop dword ptr [rax]; call 0x61580; mov rbp, qword ptr [rsp + 0x1a0]; add rsp, 0x1a8; ret; 
0x000000000042b49c: nop dword ptr [rax]; call 0x61680; mov rbp, qword ptr [rsp + 0x168]; add rsp, 0x170; ret; 
0x000000000043781d: nop dword ptr [rax]; call 0x64900; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048f91c: nop dword ptr [rax]; call 0x8eb60; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000049271c: nop dword ptr [rax]; call 0x91760; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000041b8dc: nop dword ptr [rax]; call 0xaa40; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000043f55c: nop dword ptr [rax]; call 0xab20; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x00000000004219dd: nop dword ptr [rax]; cmp esi, eax; jne 0x219c2; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004554fc: nop dword ptr [rax]; cmp rcx, rax; jg 0x55482; mov rbp, qword ptr [rsp + 0x198]; add rsp, 0x1a0; ret; 
0x000000000044267c: nop dword ptr [rax]; cmp rcx, rax; jne 0x4268f; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045b79c: nop dword ptr [rax]; test cl, cl; je 0x5b7aa; mov byte ptr [rsp + 0x18], 1; ret; 
0x000000000042ea9c: nop dword ptr [rax]; test eax, eax; jl 0x2eaae; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000042b2dd: nop dword ptr [rax]; test rcx, rcx; jne 0x2b257; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044d83a: nop word ptr [rax + rax]; cmp rcx, rax; jg 0x4d772; mov rbp, qword ptr [rsp + 0xf8]; add rsp, 0x100; ret; 
0x000000000047d076: nop; add al, byte ptr [rax]; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x208]; add rsp, 0x210; ret; 
0x0000000000414342: nop; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret; 
0x000000000041d088: nop; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; push rcx; cmp byte ptr [rax + 0x29], cl; ret 0x8948; 
0x000000000047c5e0: nop; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; adc al, 0x24; call rcx; 
0x000000000047c61a: nop; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; or al, 0x24; call rax; 
0x000000000045e177: nop; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000478c78: nop; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000045b9cb: nop; add byte ptr [rax], al; add byte ptr [rbx - 0x6bf0fd05], al; ret; 
0x000000000045e277: nop; add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000473f5d: nop; add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000478c8a: nop; add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000468efa: nop; add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0x52; add dword ptr [rsi - 0x3f], esp; ret 0x4808; 
0x0000000000436c85: nop; add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, esp; ret; 
0x0000000000457aab: nop; add rax, 3; mov qword ptr [rsp + 0x10], rax; mov qword ptr [rsp + 0x18], rcx; ret; 
0x000000000048772c: nop; and rax, 0x1f; mov qword ptr [rsp + 0x18], rax; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000042f0bf: nop; call 0x2f5a0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x00000000004803c6: nop; call 0x30e60; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x0000000000496d3f: nop; call 0x30e60; mov rbp, qword ptr [rsp + 0x260]; add rsp, 0x268; ret; 
0x0000000000434c10: nop; call 0x30e60; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; nop; ret; 
0x000000000043489f: nop; call 0x33b60; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000045d3ff: nop; call 0x33be0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004340bf: nop; call 0x344e0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044511f: nop; call 0x3e240; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000436f7f: nop; call 0x43640; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040427f: nop; call 0x4540; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000045261f: nop; call 0x51480; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000452a9f: nop; call 0x51480; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000045155f: nop; call 0x51a80; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x00000000004552ff: nop; call 0x55320; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000416adf: nop; call 0x61680; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x0000000000463441: nop; call 0x632c0; xchg rax, r8; ret; 
0x000000000042f57f: nop; call 0x64b00; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000492f9f: nop; call 0x91760; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000494dff: nop; call 0x91aa0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000049ab5f: nop; call 0x94260; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000041c35f: nop; call 0xaa40; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004266bf: nop; call 0xaa40; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045651f: nop; call 0xaa40; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000426c1f: nop; call 0xaa40; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000040f85f: nop; call rax; 
0x000000000040fe3f: nop; call rbx; 
0x00000000004688bf: nop; call rcx; 
0x000000000048aebf: nop; call rdx; 
0x000000000049a27b: nop; cld; jmp qword ptr [rsi - 0x70]; 
0x000000000041369f: nop; cmp r8, rcx; ja 0x13633; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000048b0bf: nop; cmp rbx, rdi; jg 0x8b0d5; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000044a61f: nop; cmp rdx, rbx; ja 0x4a62f; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004017df: nop; cmp sil, cl; jne 0x17d3; mov qword ptr [rsp + 0x20], rbx; ret; 
0x000000000047c593: nop; cwde; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; or al, 0x24; call rdx; 
0x0000000000441f7f: nop; jb 0x41f8c; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000041cb5f: nop; jne 0x1cc4b; mov rbp, qword ptr [rsp + 0x1f8]; add rsp, 0x200; ret; 
0x000000000043613f: nop; jne 0x3614c; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000045a63f: nop; jne 0x5a64c; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000444b2a: nop; mov qword ptr [rax + 0xa8], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000420e7b: nop; mov qword ptr [rbx + rax + 0x28], rcx; inc qword ptr [rdx + 0x140]; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000412074: nop; mov qword ptr [rcx + 0x40], rax; ret; 
0x000000000042dc0a: nop; mov qword ptr [rdx], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045c544: nop; mov qword ptr [rsp + 0x38], rax; mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040d641: nop; mov qword ptr [rsp + 0x58], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042095f: nop; mov qword ptr [rsp + 0x70], rdx; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000042db43: nop; mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000496f9c: nop; nop dword ptr [rax]; call 0x30e60; mov rbp, qword ptr [rsp + 0x260]; add rsp, 0x268; ret; 
0x0000000000496d3e: nop; nop; call 0x30e60; mov rbp, qword ptr [rsp + 0x260]; add rsp, 0x268; ret; 
0x0000000000444b29: nop; nop; mov qword ptr [rax + 0xa8], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044784d: nop; ret 0xbb48; 
0x0000000000454e6a: nop; ret 6; 
0x0000000000401dbf: nop; ret; 
0x0000000000457a5a: nop; shl ecx, 8; or eax, ecx; movzx eax, ax; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000462f85: nop; sub eax, 1; jne 0x62f84; ret; 
0x000000000042c3a5: nop; sub r11, rdi; add qword ptr [rbx + 0x18], r11; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004377ff: nop; test al, al; je 0x3780e; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000041be9f: nop; test al, al; jne 0x1beae; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000042113f: nop; test dl, dl; je 0x2112d; ret; 
0x0000000000469bff: nop; test eax, eax; jne 0x69c14; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000457a9f: nop; test rcx, rcx; jne 0x57aab; movups xmmword ptr [rsp + 0x10], xmm0; ret; 
0x0000000000412072: not eax; nop; mov qword ptr [rcx + 0x40], rax; ret; 
0x000000000042a24d: not ebx; and qword ptr [rdx + rax*8], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004204ad: not edx; mov qword ptr [rsp + 0x30], rdx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000412071: not rax; nop; mov qword ptr [rcx + 0x40], rax; ret; 
0x000000000042a24c: not rbx; and qword ptr [rdx + rax*8], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004204ac: not rdx; mov qword ptr [rsp + 0x30], rdx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000409e32: or al, 0; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; ret; 
0x000000000048f243: or al, 0; mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048ec34: or al, 0; mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048d8e3: or al, 0; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048dd09: or al, 0; mov qword ptr [rsp + 0x58], rax; mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048fdcc: or al, 0; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000048df09: or al, 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000487461: or al, 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048e539: or al, 0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000048f0f4: or al, 0; mov rcx, qword ptr [rax + 0x10]; mov qword ptr [rsp], rcx; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000048fe45: or al, 0; mov rcx, qword ptr [rip + 0xc6e3a]; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000048fe05: or al, 0; mov rcx, qword ptr [rip + 0xc6e8a]; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000048fdc5: or al, 0; mov rcx, qword ptr [rip + 0xc6eda]; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000044deb5: or al, 0x13; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000401fc5: or al, 0x1e; cmp cl, byte ptr [rdi + rbx]; seta al; lea rax, [rax*2 - 1]; mov qword ptr [r9], rax; ret; 
0x0000000000401fc8: or al, 0x1f; seta al; lea rax, [rax*2 - 1]; mov qword ptr [r9], rax; ret; 
0x0000000000430fc4: or al, 0x24; call 0x30b80; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004310c5: or al, 0x24; call rax; 
0x000000000047c59a: or al, 0x24; call rdx; 
0x0000000000456d58: or al, 0x24; lea rcx, [rsp + 0x18]; mov qword ptr [rsp + 8], rcx; mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; 
0x0000000000439208: or al, 0x24; mov byte ptr [rsp + 8], 0; call 0x38cc0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004391f0: or al, 0x24; mov byte ptr [rsp + 8], 1; call 0x38cc0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045a150: or al, 0x24; mov dword ptr [rsp + 8], eax; call 0x59ce0; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000049565f: or al, 0x24; mov dword ptr [rsp + 8], eax; call 0x94740; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000042f318: or al, 0x24; mov qword ptr [rax + 0x48], rcx; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x00000000004464f2: or al, 0x24; mov qword ptr [rsp + 8], rax; call 0x2f340; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000411faf: or al, 0x24; mov qword ptr [rsp + 8], rax; call 0x63da0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045a2c7: or al, 0x24; mov qword ptr [rsp + 8], rax; call 0x65060; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042351b: or al, 0x24; mov qword ptr [rsp + 8], rax; call 0xa5a0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043b5f5: or al, 0x24; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; nop; call rax; 
0x000000000047c4f8: or al, 0x24; mov qword ptr [rsp + 8], rbx; nop; call rax; 
0x00000000004726ef: or al, 0x24; mov qword ptr [rsp + 8], rdx; mov qword ptr [rsp + 0x10], rbx; mov qword ptr [rsp + 0x18], rdi; call rax; 
0x0000000000437d56: or al, 0x24; mov rax, qword ptr [rdx]; call rax; 
0x000000000047ffab: or al, 0x24; mov rax, qword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x000000000048f0fc: or al, 0x24; mov rcx, qword ptr [rdx]; call rcx; 
0x0000000000456c96: or al, 0x24; mov rcx, qword ptr [rsp + 0x28]; mov qword ptr [rsp + 8], rcx; mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; 
0x00000000004997f7: or al, 0x24; mov rcx, qword ptr [rsp + 0xc8]; mov qword ptr [rsp + 8], rcx; call rax; 
0x0000000000437a6f: or al, 0x24; mov rdx, qword ptr [rsp + 0x68]; mov rax, qword ptr [rdx]; call rax; 
0x000000000045155d: or al, 0x24; nop; call 0x51a80; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000047c5fd: or al, 0x24; nop; call rax; 
0x000000000040fc60: or al, 0x48; lea esi, [rsp + 0x38]; mov qword ptr [rsp], rsi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000040ff47: or al, 0x48; lea esi, [rsp + 0x50]; mov qword ptr [rsp], rsi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x00000000004113c7: or al, 0x48; lea esi, [rsp + 0x78]; mov qword ptr [rsp], rsi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000401f08: or al, 0x48; mov dword ptr [rip + 0x184584], 0x3f; ret; 
0x000000000040da53: or al, 0x48; mov dword ptr [rsp + 0x20], ecx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040ef43: or al, 0x48; mov dword ptr [rsp], edx; mov qword ptr [rsp + 8], rsi; mov rsi, qword ptr [rcx]; mov rdx, rcx; call rsi; 
0x000000000040df14: or al, 0x48; mov esi, dword ptr [rsp + 0x50]; mov qword ptr [rsp], rsi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000040e184: or al, 0x48; mov esi, dword ptr [rsp + 0x58]; mov qword ptr [rsp], rsi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x00000000004105a2: or al, 0x4c; mov dword ptr [rsp], ebx; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; call rax; 
0x000000000040f851: or al, 0x4c; mov dword ptr [rsp], edi; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; nop; call rax; 
0x00000000004111ec: or al, 0x4c; mov dword ptr [rsp], esp; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; call rax; 
0x00000000004652c7: or al, 0x8b; push rsp; and al, 0x10; mov r10, qword ptr [rsp + 0x18]; mov eax, 0xe9; syscall; 
0x0000000000478791: or al, 0x8b; test byte ptr [rax + rcx*4], ah; add byte ptr [rax], al; add cl, ch; ret 0xfff7; 
0x00000000004238f1: or al, 0xc2; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000401c27: or al, 0xf; movabs byte ptr [0x14245c8910244489], al; mov dword ptr [rsp + 0x18], ecx; mov dword ptr [rsp + 0x1c], edx; ret; 
0x0000000000433c82: or al, 3; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x000000000048e5e4: or al, 3; add byte ptr [rax - 0x77], cl; and al, 0x10; mov qword ptr [rsp + 0x18], 0xb; ret; 
0x00000000004819fb: or al, 3; inc dword ptr [rdx]; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000046c7d9: or al, 9; ret; 
0x000000000040a8ea: or al, byte ptr [rax + 0xf]; xchg eax, esp; mov dword ptr [rax - 0x7c], 0x48e374ff; mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040a946: or al, byte ptr [rax + 0xf]; xchg eax, esp; mov dword ptr [rax - 0x7c], 0x48e574ff; mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000492bff: or al, byte ptr [rax]; jne 0x92c0d; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000406128: or al, byte ptr [rbx + 0x58801f0]; add dword ptr [rbx], eax; sbb byte ptr [rax], al; ret; 
0x000000000047fbe3: or al, byte ptr [rcx - 0x7fff36]; jmp qword ptr [rsi - 0x77]; 
0x0000000000433dd2: or al, byte ptr [rdi]; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; nop; ret; 
0x000000000045b395: or al, ch; and eax, 0x48fffdb7; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000401037: or al, ch; and eax, dword ptr [rax]; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004081e2: or al, ch; clc; ret 2; 
0x0000000000411fb5: or al, ch; in eax, 0x1d; add eax, 0x6c8b4800; and al, 0x18; add rsp, 0x20; ret; 
0x000000000048eced: or al, ch; insd dword ptr [rdi], dx; ret; 
0x000000000045a2cd: or al, ch; lea ebp, [rbp - 0x74b80000]; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000405cce: or al, ch; lodsb al, byte ptr [rsi]; ret 0; 
0x000000000040cf4a: or al, ch; mov al, 0xe3; add dword ptr [rax], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045f2cf: or al, ch; mov ebp, dword ptr [rdi]; std; call qword ptr [rax + 0x2505e8]; add bl, ch; ret; 
0x00000000004803c0: or al, ch; mov edx, 0x90fffb15; call 0x30e60; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x000000000045e9ef: or al, ch; mov esi, dword ptr [rip - 0x74b70005]; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000443c75: or al, ch; movsd dword ptr [rdi], dword ptr [rsi]; add eax, 0xafeb0000; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045ddd1: or al, ch; or dword ptr [rbp - 0x74b70004], edi; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000492c18: or al, ch; out 0xff, al; jmp qword ptr [rsi - 0x70]; 
0x000000000040816b: or al, ch; outsd dx, dword ptr [rsi]; ret; 
0x00000000004728b8: or al, ch; ret 0xfbf0; 
0x0000000000422117: or al, ch; ret; 
0x00000000004051d6: or al, ch; std; add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000482752: or al, ch; sub dl, dh; cli; call qword ptr [rax - 0x20f7d18]; jmp qword ptr [rsi - 0x70]; 
0x0000000000434c6f: or al, ch; sub eax, dword ptr [rcx - 0x74b80000]; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x00000000004450f3: or al, ch; xchg dword ptr [rsi], edx; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x000000000045b302: or al, dh; cmp byte ptr [rax + 0x16], 0x48; mov ebp, dword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000464904: or bh, al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi], bh; mov eax, 0x3c; syscall; 
0x0000000000452dd4: or bh, bh; rol dword ptr [rax + 0x10247c], 1; jne 0x52d65; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x0000000000493fc1: or bh, byte ptr [rax + 1]; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000443944: or bl, bpl; ret; 
0x000000000044f441: or bl, ch; cwde; mov byte ptr [rsp + 0x30], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040a57b: or bl, ch; iretd; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042d233: or bl, ch; ret; 
0x0000000000451462: or bl, ch; ror byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000462f83: or bl, dh; nop; sub eax, 1; jne 0x62f84; ret; 
0x0000000000423150: or byte ptr [r11 + 0x16330b3d], al; add byte ptr [rcx], al; je 0x23165; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004489b6: or byte ptr [r15 + r9 - 0x4a], r8b; sub bl, ch; ret 0x8b48; 
0x0000000000486e2b: or byte ptr [r8 - 0x75], cl; and al, 0x70; mov rax, qword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x78]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000422ba6: or byte ptr [r8 - 0x75], cl; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x000000000044e621: or byte ptr [r8 - 0x75], cl; sbb ecx, dword ptr [rax + 0x63]; ret 0x3948; 
0x000000000045e63e: or byte ptr [r8 - 0x75], r9b; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x0000000000483540: or byte ptr [r8 - 0x77], cl; and al, 0x70; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044191d: or byte ptr [r8 - 0x77], cl; ret; 
0x0000000000483c8b: or byte ptr [r8 - 0x77], r9b; jl 0x83cb5; push rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004697c0: or byte ptr [r8 - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x89; ret 0x8348; 
0x000000000046b95f: or byte ptr [r8], r8b; add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret 0x3948; 
0x00000000004652a3: or byte ptr [rax + 0x123], bh; syscall; 
0x00000000004652a3: or byte ptr [rax + 0x123], bh; syscall; mov dword ptr [rsp + 0x10], eax; ret; 
0x00000000004649e8: or byte ptr [rax + 0x125], bh; syscall; 
0x00000000004649e8: or byte ptr [rax + 0x125], bh; syscall; mov dword ptr [rsp + 0x18], eax; ret; 
0x00000000004649c4: or byte ptr [rax + 0x16], bh; syscall; 
0x00000000004649c4: or byte ptr [rax + 0x16], bh; syscall; mov dword ptr [rsp + 0x10], eax; ret; 
0x000000000042db42: or byte ptr [rax + 0x24048948], dl; call 0xaa40; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x00000000004374e9: or byte ptr [rax + 0x29], cl; fimul dword ptr [rax - 0x7f]; ret 0x400; 
0x000000000042c749: or byte ptr [rax + 0x29], cl; jo 0x2c766; mov qword ptr [rsp + 0x18], rdi; mov qword ptr [rsp + 0x20], r8; ret; 
0x000000000046303f: or byte ptr [rax + 0x29], cl; xlatb; mov qword ptr [rsp + 0x28], rdi; mov rdi, rbx; mov rcx, rbx; call rax; 
0x000000000045b4ca: or byte ptr [rax + 0x2b], cl; add eax, 0x12bbd6; add qword ptr [rip + 0x12bbc7], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004032cc: or byte ptr [rax + 0x39], cl; add dword ptr [rdi], ecx; xchg eax, esp; and al, 0x18; ret; 
0x0000000000478266: or byte ptr [rax + 0x39], cl; ret; 
0x0000000000402282: or byte ptr [rax + 0x39], cl; sal dword ptr [rbx - 0x3a], 1; add byte ptr [rax], al; ret; 
0x0000000000464acc: or byte ptr [rax + 0x3e], bh; syscall; 
0x0000000000464acc: or byte ptr [rax + 0x3e], bh; syscall; ret; 
0x0000000000465384: or byte ptr [rax + 0x3f], bh; syscall; 
0x0000000000465384: or byte ptr [rax + 0x3f], bh; syscall; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000042edd6: or byte ptr [rax + 0x48000000], al; mov dword ptr [rsp + 0x10], 0x80; call 0x2ee20; mov rbp, qword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x0000000000493ff0: or byte ptr [rax + 0x74004b78], al; or bh, byte ptr [rax + 1]; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000493fbb: or byte ptr [rax + 0x74004c78], al; or bh, byte ptr [rax + 1]; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000465283: or byte ptr [rax + 0xd5], bh; syscall; 
0x0000000000465283: or byte ptr [rax + 0xd5], bh; syscall; mov dword ptr [rsp + 0x10], eax; ret; 
0x00000000004648e3: or byte ptr [rax + 0xe7], bh; syscall; 
0x00000000004648e3: or byte ptr [rax + 0xe7], bh; syscall; ret; 
0x0000000000464a99: or byte ptr [rax + 0xea], bh; syscall; 
0x0000000000464a99: or byte ptr [rax + 0xea], bh; syscall; ret; 
0x00000000004421c8: or byte ptr [rax + 0xf], cl; mov edx, 0xa7220e0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000409085: or byte ptr [rax + 0xf], cl; scasd eax, dword ptr [rdi]; ret; 
0x000000000045fb0b: or byte ptr [rax + 1], cl; ret; 
0x0000000000464963: or byte ptr [rax + 3], bh; syscall; 
0x0000000000412069: or byte ptr [rax + 3], cl; mov rax, qword ptr [rax]; not rax; nop; mov qword ptr [rcx + 0x40], rax; ret; 
0x0000000000447f54: or byte ptr [rax + 4], ah; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000401cb7: or byte ptr [rax + r10 + 0x31], sil; ror byte ptr [rax + 0x48402444], 0x8b; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000048ff87: or byte ptr [rax + rax + 0x38418b48], al; mov rcx, qword ptr [rcx + 0x40]; mov qword ptr [rsp + 0x10], rax; mov qword ptr [rsp + 0x18], rcx; ret; 
0x0000000000433e35: or byte ptr [rax + rax], al; add byte ptr [rax], al; call 0x344e0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000401cb8: or byte ptr [rax + rdx + 0x31], dh; ror byte ptr [rax + 0x48402444], 0x8b; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000046535c: or byte ptr [rax - 0x39], cl; mov byte ptr [rax + rax], 0; add byte ptr [rax - 0x39], cl; ret 0x800; 
0x0000000000465343: or byte ptr [rax - 0x39], cl; mov byte ptr [rbx], 0; add byte ptr [rax], al; mov rdx, 0; mov eax, 0x48; syscall; 
0x0000000000465323: or byte ptr [rax - 0x39], cl; mov byte ptr [rdx], 0; add byte ptr [rax], al; mov rdx, 1; mov eax, 0x48; syscall; 
0x0000000000416157: or byte ptr [rax - 0x73], 0x3c; ret 0x8d48; 
0x0000000000415660: or byte ptr [rax - 0x73], 4; ret 0x8d48; 
0x000000000048ab18: or byte ptr [rax - 0x73], cl; jno 0x8ab1c; mov qword ptr [rsp + 0x10], rsi; call rax; 
0x00000000004419f7: or byte ptr [rax - 0x73], cl; sbb al, 0x19; lea rbx, [rbx + 3]; mov rsi, qword ptr [rax + rbx*8]; lea rdx, [rax + rbx*8]; call rsi; 
0x0000000000493cdd: or byte ptr [rax - 0x74b7f5e4], cl; insb byte ptr [rdi], dx; and al, 0x60; add rsp, 0x68; ret; 
0x000000000043223b: or byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x77], cl; and al, 0x10; mov qword ptr [rsp + 0x18], rax; ret; 
0x000000000040f85a: or byte ptr [rax - 0x75], cl; add ah, byte ptr [rsi - 0x70]; call rax; 
0x00000000004648a0: or byte ptr [rax - 0x75], cl; add al, 0x24; add rsp, 0x170; popfq; pop rbp; ret; 
0x000000000045e7a4: or byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x77], cl; and al, 0x10; ret; 
0x0000000000414fb4: or byte ptr [rax - 0x75], cl; and al, 0x10; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000047d0a9: or byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax + 0x100]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000482590: or byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; call rax; 
0x000000000047c5ee: or byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; nop; call rax; 
0x0000000000485241: or byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax + 0xe8]; mov qword ptr [rsp], rcx; call rax; 
0x000000000048530e: or byte ptr [rax - 0x75], cl; and al, 0x10; mov rax, qword ptr [rax + 0xe8]; mov qword ptr [rsp], rcx; nop; call rax; 
0x0000000000401e64: or byte ptr [rax - 0x75], cl; and al, 0x10; mov rcx, qword ptr [rsp + 0x18]; lock cmpxchg qword ptr [rbx], rcx; sete byte ptr [rsp + 0x20]; ret; 
0x0000000000401ee4: or byte ptr [rax - 0x75], cl; and al, 0x10; xchg qword ptr [rbx], rax; ret; 
0x000000000045089b: or byte ptr [rax - 0x75], cl; and al, 0x20; mov qword ptr [rsp + 0x10], rax; mov rdx, qword ptr [rsp + 0x38]; mov rax, qword ptr [rdx]; call rax; 
0x000000000041fff1: or byte ptr [rax - 0x75], cl; and al, 0x70; lea rdx, [rsp + 0x70]; call rax; 
0x0000000000486e2c: or byte ptr [rax - 0x75], cl; and al, 0x70; mov rax, qword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x78]; mov qword ptr [rsp], rcx; call rax; 
0x000000000045dc06: or byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000045c2d5: or byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; nop; ret; 
0x000000000045e63f: or byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x000000000043844b: or byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; ret; 
0x000000000042cbfc: or byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x50; add rsp, 0x58; ret; 
0x0000000000422ba7: or byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x0000000000464984: or byte ptr [rax - 0x75], cl; je 0x649ad; adc byte ptr [rbx - 0x47e7dbac], cl; add dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x00000000004649a3: or byte ptr [rax - 0x75], cl; je 0x649cc; adc byte ptr [rbx - 0x47e7dbac], cl; add byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x0000000000465024: or byte ptr [rax - 0x75], cl; je 0x6504d; adc byte ptr [rax - 0x39], cl; ror byte ptr [rbx], 0; add byte ptr [rax], al; syscall; 
0x00000000004650a4: or byte ptr [rax - 0x75], cl; je 0x650cd; adc byte ptr [rbx + 0x48182454], cl; mov eax, 0x1c; syscall; 
0x0000000000465103: or byte ptr [rax - 0x75], cl; je 0x6512c; adc byte ptr [rax - 0x39], cl; ret 0; 
0x00000000004653a4: or byte ptr [rax - 0x75], cl; je 0x653cd; adc byte ptr [rax + 0x95], bh; syscall; 
0x00000000004653a4: or byte ptr [rax - 0x75], cl; je 0x653cd; adc byte ptr [rax + 0x95], bh; syscall; mov qword ptr [rsp + 0x18], rax; ret; 
0x000000000048aba6: or byte ptr [rax - 0x75], cl; jl 0x8abcf; lea r8, [rax + rdi]; mov qword ptr [rsp + 0x10], r8; call rdx; 
0x0000000000427e1a: or byte ptr [rax - 0x75], cl; mov ah, 0x24; adc byte ptr [rcx], al; add byte ptr [rax], al; lea rdx, [rsp + 0x110]; call rsi; 
0x00000000004695a4: or byte ptr [rax - 0x75], cl; or byte ptr [rax - 0x75], cl; or byte ptr [rax - 0x77], cl; and al, 0x10; mov qword ptr [rsp + 0x18], rax; ret; 
0x00000000004695a7: or byte ptr [rax - 0x75], cl; or byte ptr [rax - 0x77], cl; and al, 0x10; mov qword ptr [rsp + 0x18], rax; ret; 
0x000000000045e7c4: or byte ptr [rax - 0x75], cl; or byte ptr [rax - 0x77], cl; and al, 0x10; ret; 
0x000000000040eefc: or byte ptr [rax - 0x75], cl; or byte ptr [rax - 0x77], cl; ret 0xd1ff; 
0x0000000000412bec: or byte ptr [rax - 0x75], cl; or byte ptr [rcx], sil; shr bl, cl; add ecx, dword ptr [rax - 1]; ret 0x3948; 
0x0000000000493f64: or byte ptr [rax - 0x75], cl; pop rax; movzx eax, byte ptr [rax + 0x48]; mov qword ptr [rsp + 0x10], rcx; mov byte ptr [rsp + 0x18], al; ret; 
0x000000000045c5c0: or byte ptr [rax - 0x75], cl; pop rsp; and al, 0x50; mov qword ptr [rsp + 0x10], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000040fe3a: or byte ptr [rax - 0x75], cl; sbb ah, byte ptr [rsi - 0x70]; call rbx; 
0x00000000004540cc: or byte ptr [rax - 0x75], cl; sbb byte ptr [rax - 0x77], cl; ret 0xd3ff; 
0x0000000000459c50: or byte ptr [rax - 0x75], cl; sbb dword ptr [rax - 0x75], ecx; je 0x59c7c; xor byte ptr [rax + 0x39], cl; ret 0x3674; 
0x000000000044e622: or byte ptr [rax - 0x75], cl; sbb ecx, dword ptr [rax + 0x63]; ret 0x3948; 
0x000000000040fb4f: or byte ptr [rax - 0x75], cl; sub al, 0x24; add rsp, 8; ret; 
0x0000000000444b28: or byte ptr [rax - 0x7776b770], dl; test al, 0; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042a5b7: or byte ptr [rax - 0x77], 0x44; and al, 0x10; ret; 
0x00000000004291de: or byte ptr [rax - 0x77], 0x44; and al, 0x40; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000041501f: or byte ptr [rax - 0x77], cl; add al, 0x24; call 0x61680; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000425652: or byte ptr [rax - 0x77], cl; add al, 0x24; call 0x61680; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000431391: or byte ptr [rax - 0x77], cl; add al, 0x24; call 0x61680; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000043ce04: or byte ptr [rax - 0x77], cl; add al, 0x24; call 0x61680; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041fd46: or byte ptr [rax - 0x77], cl; and al, 0x10; call 0x2c220; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043454d: or byte ptr [rax - 0x77], cl; and al, 0x10; call 0x33be0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000043444d: or byte ptr [rax - 0x77], cl; and al, 0x10; call 0x33be0; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000411e09: or byte ptr [rax - 0x77], cl; and al, 0x10; call 0x64040; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004052ea: or byte ptr [rax - 0x77], cl; and al, 0x10; call 0x64040; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048ac28: or byte ptr [rax - 0x77], cl; and al, 0x10; call 0x8ac60; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048ae65: or byte ptr [rax - 0x77], cl; and al, 0x10; call rsi; 
0x00000000004695ab: or byte ptr [rax - 0x77], cl; and al, 0x10; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000429548: or byte ptr [rax - 0x77], cl; and al, 0x10; mov rax, qword ptr [rip + 0x9ce4b]; lea rdx, [rip + 0x9ce44]; call rax; 
0x00000000004296ee: or byte ptr [rax - 0x77], cl; and al, 0x10; mov rax, qword ptr [rsp + 0x90]; lea rdx, [rsp + 0x90]; call rax; 
0x000000000045c5e7: or byte ptr [rax - 0x77], cl; and al, 0x10; mov rdx, qword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004321e4: or byte ptr [rax - 0x77], cl; and al, 0x10; ret; 
0x0000000000407244: or byte ptr [rax - 0x77], cl; and al, 0x18; mov rax, qword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x20], rax; ret; 
0x0000000000405193: or byte ptr [rax - 0x77], cl; and al, 0x18; mov rdx, qword ptr [rsp + 0x48]; mov rbx, qword ptr [rdx]; call rbx; 
0x00000000004162d1: or byte ptr [rax - 0x77], cl; and al, 0x20; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000405e3d: or byte ptr [rax - 0x77], cl; and al, 0x20; mov rdx, qword ptr [rsp + 0x50]; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000040b047: or byte ptr [rax - 0x77], cl; and al, 0x28; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000426b4f: or byte ptr [rax - 0x77], cl; and al, 0x28; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000483e76: or byte ptr [rax - 0x77], cl; and al, 0x38; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000424a69: or byte ptr [rax - 0x77], cl; and al, 0x38; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004737e4: or byte ptr [rax - 0x77], cl; and al, 0x40; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045216b: or byte ptr [rax - 0x77], cl; and al, 0x40; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000487600: or byte ptr [rax - 0x77], cl; and al, 0x50; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004100de: or byte ptr [rax - 0x77], cl; and al, 0x58; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004049a4: or byte ptr [rax - 0x77], cl; and al, 0x58; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040d1a9: or byte ptr [rax - 0x77], cl; and al, 0x60; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000483541: or byte ptr [rax - 0x77], cl; and al, 0x70; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000048490a: or byte ptr [rax - 0x77], cl; and al, 0x70; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000464e35: or byte ptr [rax - 0x77], cl; cmp al, 0x24; lea rax, [rip - 0x1fe01]; call rax; 
0x00000000004651f1: or byte ptr [rax - 0x77], cl; dec byte ptr [rax - 0x39]; mov dword ptr [rdx], 0x48000010; mov eax, 0x9e; syscall; 
0x0000000000483c8c: or byte ptr [rax - 0x77], cl; jl 0x83cb5; push rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000464a2d: or byte ptr [rax - 0x77], cl; out 0xbe, eax; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x23; syscall; 
0x0000000000462c5f: or byte ptr [rax - 0x77], cl; out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x8000018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004726f5: or byte ptr [rax - 0x77], cl; pop rsp; and al, 0x10; mov qword ptr [rsp + 0x18], rdi; call rax; 
0x00000000004941de: or byte ptr [rax - 0x77], cl; pop rsp; and al, 0x10; mov qword ptr [rsp + 0x18], rsi; call rax; 
0x0000000000443132: or byte ptr [rax - 0x77], cl; push rsp; and al, 0x10; mov qword ptr [rsp + 0x18], rax; ret; 
0x000000000046b355: or byte ptr [rax - 0x77], cl; ret 0x8948; 
0x0000000000456a34: or byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x000000000040eeff: or byte ptr [rax - 0x77], cl; ret 0xd1ff; 
0x000000000042aa24: or byte ptr [rax - 0x77], cl; ret 0xf748; 
0x000000000044191e: or byte ptr [rax - 0x77], cl; ret; 
0x000000000048b2cc: or byte ptr [rax - 0x77], cl; ror dword ptr [rax + 0x29], 1; ret 0x8948; 
0x000000000040a563: or byte ptr [rax - 0x77], cl; sbb al, 0x24; mov rdx, qword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000410cad: or byte ptr [rax - 0x77], r9b; and al, 0x58; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042385a: or byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x95; and al, 0x38; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004697c1: or byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rcx + 0x48], 0x89; ret 0x8348; 
0x000000000045e5c4: or byte ptr [rax - 0x7b], cl; sal byte ptr [rcx + rcx + 0x48], 0x8b; add byte ptr [rax - 0x77], cl; and al, 0x10; ret; 
0x000000000042cfd1: or byte ptr [rax - 0x7b], cl; sal byte ptr [rdi + rcx + 0x48], 0x89; and al, 0x38; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000047d524: or byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rdx + 0x48], 0x8d; or eax, 0x614cf; mov qword ptr [rsp + 0x18], rcx; mov qword ptr [rsp + 0x20], rax; ret; 
0x0000000000467c84: or byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rdx + 0x48], 0x8d; or eax, 0x769af; mov qword ptr [rsp + 0x18], rcx; mov qword ptr [rsp + 0x20], rax; ret; 
0x0000000000467ea4: or byte ptr [rax - 0x7d], cl; js 0x67ec1; add byte ptr [rdi], cl; xchg eax, ebp; and al, 0x10; ret; 
0x000000000047dc44: or byte ptr [rax - 0x7d], cl; js 0x7dc61; add byte ptr [rdi], cl; xchg eax, ebp; and al, 0x10; ret; 
0x000000000042f553: or byte ptr [rax - 0x7d], cl; ret 0x31fc; 
0x000000000041484d: or byte ptr [rax - 0x7d], cl; ret; 
0x000000000048aaa7: or byte ptr [rax - 1], cl; leave; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x10], rcx; call rax; 
0x0000000000418857: or byte ptr [rax - 1], cl; ret 0x1f0f; 
0x0000000000427b58: or byte ptr [rax - 1], cl; ret 0x2948; 
0x000000000042df6b: or byte ptr [rax - 1], cl; ret 0x8348; 
0x000000000040a5c9: or byte ptr [rax - 1], cl; ret 0x8948; 
0x00000000004129ef: or byte ptr [rax - 1], cl; ret; 
0x000000000048aeb1: or byte ptr [rax - 1], cl; ror dword ptr [rax - 0x77], 0x4c; and al, 0x78; mov qword ptr [rsp + 0x10], rcx; nop; call rdx; 
0x00000000004611c4: or byte ptr [rax], ah; add byte ptr [rax], al; ret; 
0x000000000046268c: or byte ptr [rax], al; adc byte ptr [rax], al; ret; 
0x00000000004624cc: or byte ptr [rax], al; add al, 0; ret; 
0x00000000004623ec: or byte ptr [rax], al; add al, byte ptr [rax]; ret; 
0x000000000042ed28: or byte ptr [rax], al; add byte ptr [rax + rax], al; call 0x3b00; mov rbp, qword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x000000000040a831: or byte ptr [rax], al; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000462e6c: or byte ptr [rax], al; add byte ptr [rax], ah; ret; 
0x000000000046b960: or byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret 0x3948; 
0x0000000000446d53: or byte ptr [rax], al; add byte ptr [rax], al; call 0x64d20; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000462cac: or byte ptr [rax], al; add byte ptr [rax], cl; ret; 
0x0000000000462d8c: or byte ptr [rax], al; add byte ptr [rax], dl; ret; 
0x0000000000462a0c: or byte ptr [rax], al; add byte ptr [rcx], al; ret; 
0x0000000000465368: or byte ptr [rax], al; add byte ptr [rcx], cl; ret 0x48b8; 
0x000000000046186e: or byte ptr [rax], al; add byte ptr [rdi + 9], dh; lea rax, [rip + 0x5a6]; jmp rax; 
0x0000000000462aec: or byte ptr [rax], al; add byte ptr [rdx], al; ret; 
0x00000000004613a4: or byte ptr [rax], al; add dword ptr [rax], eax; ret; 
0x00000000004625a7: or byte ptr [rax], al; add rsp, 0x80008; ret; 
0x000000000046276c: or byte ptr [rax], al; and byte ptr [rax], al; ret; 
0x0000000000438f6b: or byte ptr [rax], al; call 0x38cc0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043acff: or byte ptr [rax], al; call rax; 
0x000000000043acff: or byte ptr [rax], al; call rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000043ac5e: or byte ptr [rax], al; call rcx; 
0x00000000004618ff: or byte ptr [rax], al; ja 0x6190c; lea rax, [rip + 0xbf6]; jmp rax; 
0x0000000000403fa2: or byte ptr [rax], al; je 0x3fb0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000404060: or byte ptr [rax], al; je 0x406e; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042b5df: or byte ptr [rax], al; jne 0x2b5ed; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045cdcf: or byte ptr [rax], al; jne 0x5cddd; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000492d33: or byte ptr [rax], al; jne 0x92d41; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000043acf8: or byte ptr [rax], al; lea rdx, [rip + 0x8b847]; call rax; 
0x000000000043acf8: or byte ptr [rax], al; lea rdx, [rip + 0x8b847]; call rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000043ac57: or byte ptr [rax], al; lea rdx, [rip + 0x8b8e8]; call rcx; 
0x000000000046256b: or byte ptr [rax], al; mov rax, qword ptr [rdx]; call rax; 
0x000000000046255e: or byte ptr [rax], al; mov rdi, rsp; rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x80018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004625ac: or byte ptr [rax], al; or byte ptr [rax], al; ret; 
0x00000000004625ae: or byte ptr [rax], al; ret; 
0x0000000000483b72: or byte ptr [rax], al; setne byte ptr [rsp + 0x30]; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040326c: or byte ptr [rax], bh; add dword ptr [rdi], ecx; xchg eax, esp; and al, 0x18; ret; 
0x0000000000461092: or byte ptr [rax], cl; add byte ptr [rax], al; ret; 
0x0000000000415fc3: or byte ptr [rax], dh; add byte ptr [rax], al; add al, ch; xchg eax, ebx; ret 1; 
0x0000000000461124: or byte ptr [rax], dl; add byte ptr [rax], al; ret; 
0x0000000000456853: or byte ptr [rbp + 0x10], bh; xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000465678: or byte ptr [rbp + 0x10], dh; mov rax, qword ptr [rax + 0x10]; cmp qword ptr [rdx + 0x10], rax; sete al; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000465677: or byte ptr [rbp + 0x10], sil; mov rax, qword ptr [rax + 0x10]; cmp qword ptr [rdx + 0x10], rax; sete al; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000415cf7: or byte ptr [rbp + 4], dh; test eax, eax; jne 0x15d08; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004096ad: or byte ptr [rbp - 0x2b], dh; mov qword ptr [rsp + 0x20], r8; ret; 
0x000000000046894e: or byte ptr [rbp - 0x4d], dh; mov rax, qword ptr [rsp + 0x50]; mov rax, qword ptr [rax + 0x60]; mov rcx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rcx; call rax; 
0x000000000047e838: or byte ptr [rbp - 0x53], dh; mov rax, qword ptr [rsp + 0x50]; mov rax, qword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rcx; call rax; 
0x000000000045d4f4: or byte ptr [rbp - 0x74b70003], cl; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000044e05b: or byte ptr [rbp - 0x75], cl; or byte ptr [rbp - 0x75], cl; push rax; adc byte ptr [rax + 0x63], cl; ret 0x3948; 
0x000000000044e05e: or byte ptr [rbp - 0x75], cl; push rax; adc byte ptr [rax + 0x63], cl; ret 0x3948; 
0x0000000000423151: or byte ptr [rbx + 0x16330b3d], al; add byte ptr [rcx], al; je 0x23165; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000464929: or byte ptr [rbx + 0x44102454], cl; mov edx, dword ptr [rsp + 0x14]; mov eax, 0x101; syscall; 
0x000000000040fb49: or byte ptr [rbx + 0x4888f7e1], al; or byte ptr [rax - 0x75], cl; sub al, 0x24; add rsp, 8; ret; 
0x000000000048227a: or byte ptr [rbx + 0x7a], dh; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000443104: or byte ptr [rbx + rbx], bh; jb 0x4311f; lea rax, [rip + 0x7d76a]; mov qword ptr [rsp + 0x10], rax; mov qword ptr [rsp + 0x18], 0x13; ret; 
0x000000000041b214: or byte ptr [rbx], al; add byte ptr [rax], al; add al, ch; ret 0x192; 
0x0000000000435fc1: or byte ptr [rbx], bl; add byte ptr [rax], al; add al, ch; xchg eax, ebp; ret 0xffff; 
0x000000000040c014: or byte ptr [rbx], cl; add byte ptr [rax], al; add al, ch; ret 0x284; 
0x000000000048d16a: or byte ptr [rbx], dl; add byte ptr [rax], al; add al, ch; lodsb al, byte ptr [rsi]; ret; 
0x000000000042c88c: or byte ptr [rcx + rbp + 0x43], cl; sbb byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x58; add rsp, 0x60; ret; 
0x000000000042c736: or byte ptr [rcx + rbp + 0x48], cl; sbb byte ptr [rcx + rcx*4 + 0x44], cl; and al, 0x18; mov qword ptr [rsp + 0x20], rbx; ret; 
0x0000000000450fb9: or byte ptr [rcx + rcx*4 + 0xc], cl; ret 0x9066; 
0x00000000004106cd: or byte ptr [rcx + rcx*4 - 0x5c], cl; and al, 0x88; add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret; 
0x0000000000435848: or byte ptr [rcx - 0x17efdbb4], cl; int1; add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044c588: or byte ptr [rcx - 0x17efdbb4], cl; out dx, al; add dword ptr [rcx], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040c8d0: or byte ptr [rcx - 0x77], cl; ret 0x74e9; 
0x000000000040f5e5: or byte ptr [rcx - 0xa], al; ret; 
0x000000000041a96a: or byte ptr [rcx], al; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x0000000000408180: or byte ptr [rcx], al; add byte ptr [rax], al; add al, ch; push rsi; ret; 
0x000000000043b0d4: or byte ptr [rcx], al; add byte ptr [rax], al; add al, ch; ret 0x5d; 
0x0000000000443797: or byte ptr [rcx], al; add byte ptr [rax], al; add byte ptr [rdx + rcx + 0x48], dh; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000406de9: or byte ptr [rcx], al; add byte ptr [rax], al; add rsp, 0x110; ret; 
0x000000000042185a: or byte ptr [rcx], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x68], -1; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x00000000004216a6: or byte ptr [rcx], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000433b26: or byte ptr [rcx], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043c355: or byte ptr [rcx], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000043c740: or byte ptr [rcx], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000045fde8: or byte ptr [rcx], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xd0]; add rsp, 0xd8; ret; 
0x000000000040775b: or byte ptr [rcx], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000044cba2: or byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x00000000004391f5: or byte ptr [rcx], al; call 0x38cc0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000439414: or byte ptr [rcx], bh; add byte ptr [rax], al; add al, ch; ret 0xffb0; 
0x00000000004032ab: or byte ptr [rcx], bh; add dword ptr [rdi], ecx; xchg eax, esp; and al, 0x18; ret; 
0x000000000041e814: or byte ptr [rcx], cl; add byte ptr [rax], al; add al, ch; ret 0x15c; 
0x0000000000435136: or byte ptr [rcx], dh; fucomi st(0); ret 0x2e2; 
0x00000000004017ce: or byte ptr [rcx], dh; fucomi st(3); add ecx, dword ptr [rax - 1]; ret; 
0x0000000000412bf0: or byte ptr [rcx], dh; shr bl, cl; add ecx, dword ptr [rax - 1]; ret 0x3948; 
0x0000000000412bef: or byte ptr [rcx], sil; shr bl, cl; add ecx, dword ptr [rax - 1]; ret 0x3948; 
0x00000000004630ec: or byte ptr [rdi + 5], dh; call 0x630c0; cmp rsp, qword ptr [rax]; ja 0x630fe; call 0x630c0; ret; 
0x0000000000461990: or byte ptr [rdi + 9], dh; lea rax, [rip + 0x1266]; jmp rax; 
0x00000000004489b7: or byte ptr [rdi + rcx - 0x4a], al; sub bl, ch; ret 0x8b48; 
0x000000000045eaed: or byte ptr [rdi], 0; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000047ac1a: or byte ptr [rdi], 0x95; and al, 0x50; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042cf14: or byte ptr [rdi], al; add byte ptr [rax], al; add al, ch; ret 0x75; 
0x0000000000446714: or byte ptr [rdi], al; add byte ptr [rax], al; add al, ch; ret 0xfedd; 
0x0000000000444614: or byte ptr [rdi], al; add byte ptr [rax], al; add al, ch; ret 0xfefe; 
0x0000000000436414: or byte ptr [rdi], al; add byte ptr [rax], al; add al, ch; ret 0xffe0; 
0x000000000042b094: or byte ptr [rdi], bl; add byte ptr [rax], al; add al, ch; ret 0x71; 
0x000000000042a091: or byte ptr [rdi], cl; adc dword ptr [rdi + 0x48000000], -0x39; ret; 
0x0000000000457c91: or byte ptr [rdi], cl; mov bh, 0xc9; cmp rcx, 1; je 0x57ca1; mov byte ptr [rsp + 0x10], 0; ret; 
0x0000000000493fdc: or byte ptr [rdi], cl; mov dh, 0x40; mov byte ptr [r12 + 0x18], r8b; ret; 
0x0000000000494025: or byte ptr [rdi], cl; mov dh, 0x40; mov byte ptr [rsp + r12 + 0x18], al; ret; 
0x0000000000494017: or byte ptr [rdi], cl; mov dh, 0x40; mov byte ptr [rsp + r12 + 0x18], r8b; ret; 
0x000000000047ea4c: or byte ptr [rdi], cl; mov dh, 0x84; and al, 0xe8; add byte ptr [rax], al; add byte ptr [rax - 0x17dfdbbc], cl; ret 0xfffc; 
0x0000000000403331: or byte ptr [rdi], cl; ror dword ptr cs:[rdi], 0x94; ror dword ptr [rdi], 0x9b; shl byte ptr [rcx], 0xc1; mov byte ptr [rsp + 0x18], cl; ret; 
0x000000000042a1d1: or byte ptr [rdi], cl; sbb dword ptr [rdi + 0x48000000], -0x39; ret; 
0x00000000004421b8: or byte ptr [rdi], cl; xchg eax, esp; ret 0x1f0f; 
0x000000000041dc5b: or byte ptr [rdx + rcx + 0xf], dh; mov edx, 0x830f04e7; ret 0; 
0x0000000000432414: or byte ptr [rdx], al; add byte ptr [rax], al; add al, ch; ret 0x20; 
0x0000000000428214: or byte ptr [rdx], al; add byte ptr [rax], al; add al, ch; ret 0xc2; 
0x0000000000456114: or byte ptr [rdx], al; add byte ptr [rax], al; add al, ch; ret 0xfde3; 
0x000000000047c8c8: or byte ptr [rdx], al; add byte ptr [rax], al; add rsp, 0x210; ret; 
0x0000000000460f92: or byte ptr [rdx], al; add byte ptr [rax], al; ret; 
0x000000000040b414: or byte ptr [rdx], dl; add byte ptr [rax], al; add al, ch; ret 0x290; 
0x0000000000435b4e: or byte ptr [rip + 0x6c8b4800], dl; and al, 0x40; add rsp, 0x48; ret; 
0x0000000000426003: or byte ptr [rip - 0x18000000], bl; push rbx; ret 0; 
0x0000000000440514: or byte ptr [rip - 0x18000000], cl; ret 0xff3f; 
0x0000000000430694: or byte ptr [rip - 0x18000000], dl; ret 0x1b; 
0x0000000000454c14: or byte ptr [rip - 0x18000000], dl; ret 0xfdf8; 
0x000000000040328c: or byte ptr [rsi + 0x39], ah; add dword ptr [rdi], ecx; xchg eax, esp; and al, 0x18; ret; 
0x0000000000448f9a: or byte ptr [rsi + 0xb], dh; mov rdx, qword ptr [rdx + 0x10]; add rcx, rdx; mov qword ptr [rax + 0x68], rcx; ret; 
0x0000000000448f99: or byte ptr [rsi + 0xb], sil; mov rdx, qword ptr [rdx + 0x10]; add rcx, rdx; mov qword ptr [rax + 0x68], rcx; ret; 
0x0000000000403371: or byte ptr [rsi + 0xf], ah; ror dword ptr cs:[rdi], 0x94; ror dword ptr [rdi], 0x9b; shl byte ptr [rcx], 0xc1; mov byte ptr [rsp + 0x18], cl; ret; 
0x0000000000494dfd: or byte ptr [rsi - 0x70], ah; call 0x91aa0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000041a714: or byte ptr [rsi], al; add byte ptr [rax], al; add al, ch; ret 0x19d; 
0x0000000000423aa6: or cl, byte ptr [rax + 0x39]; jo 0x23abb; xchg eax, edi; and al, 0x10; ret; 
0x000000000042d3cc: or cl, byte ptr [rax + 0x39]; ret 0xa77; 
0x0000000000423b3c: or cl, byte ptr [rax - 0x39]; and al, 0x10; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000040391c: or cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000040a784: or cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x0000000000404063: or cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000403f77: or cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x0000000000401a24: or cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x0000000000415cfd: or cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; ret; 
0x00000000004174f6: or cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x000000000042e843: or cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x48; add rsp, 0x50; ret; 
0x000000000041bea3: or cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x50; add rsp, 0x58; ret; 
0x00000000004557c4: or cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x58; add rsp, 0x60; ret; 
0x000000000041ea9d: or cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x60; add rsp, 0x68; ret; 
0x00000000004502e9: or cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x70; add rsp, 0x78; ret; 
0x0000000000441f81: or cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x78; sub rsp, -0x80; ret; 
0x000000000042daa6: or cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x000000000042dc02: or cl, byte ptr [rax - 0x77]; mov byte ptr [rax - 0x70000000], ah; mov qword ptr [rdx], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000456eef: or cl, byte ptr [rax - 0x7d]; rcr byte ptr [rax + 0x48], 0x89; and al, 0x10; ret; 
0x0000000000456eae: or cl, byte ptr [rax - 0x7d]; sal byte ptr [rax], 0x48; mov dword ptr [rsp + 0x10], eax; ret; 
0x0000000000456ed1: or cl, byte ptr [rax - 0x7d]; sar byte ptr [rax], 0x48; mov dword ptr [rsp + 0x10], eax; ret; 
0x0000000000413de4: or cl, byte ptr [rax - 1]; ret; 
0x000000000041dc5d: or cl, byte ptr [rdi]; mov edx, 0x830f04e7; ret 0; 
0x00000000004982ce: or dh, al; add al, 0xb; pop rbp; mov rbp, qword ptr [rsp + 0x1c8]; add rsp, 0x1d0; ret; 
0x0000000000495a4f: or dh, al; add al, 2; jge 0x95a9d; mov ebp, dword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x0000000000484e12: or dh, al; and al, 0x10; add al, ch; ret; 
0x0000000000453c3b: or dh, bh; jmp qword ptr [rsi - 0x70]; 
0x00000000004034d4: or dh, byte ptr [rax + rdx + 0x31]; ror byte ptr [rax + 0x48402444], 0x8b; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x00000000004032ef: or dh, byte ptr [rbp + 0x10]; mov rax, qword ptr [rax + 8]; cmp qword ptr [rdx + 8], rax; sete al; mov byte ptr [rsp + 0x18], al; ret; 
0x000000000045a63d: or dh, byte ptr [rdx]; nop; jne 0x5a64c; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000040fcb6: or dh, dh; ret 0x7408; 
0x000000000040e5b1: or dh, dh; ret 0xf04; 
0x000000000040ec70: or dh, dh; ret; 
0x0000000000432372: or dh, dl; add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; nop; ret; 
0x0000000000430e52: or dl, byte ptr [rax + rax]; add byte ptr [rax + 0x30984e8], dl; add bl, ch; ret 0xcccc; 
0x0000000000408f25: or dl, dh; movups xmmword ptr [rsp + 0x10], xmm0; ret; 
0x000000000044f70d: or dword ptr [rax + 0x48000027], 0xffffff8b; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000046196e: or dword ptr [rax - 0x73], ecx; add eax, 0x10ca; jmp rax; 
0x0000000000461980: or dword ptr [rax - 0x73], ecx; add eax, 0x1198; jmp rax; 
0x0000000000461992: or dword ptr [rax - 0x73], ecx; add eax, 0x1266; jmp rax; 
0x00000000004619a4: or dword ptr [rax - 0x73], ecx; add eax, 0x1334; jmp rax; 
0x00000000004619b6: or dword ptr [rax - 0x73], ecx; add eax, 0x1402; jmp rax; 
0x00000000004619c8: or dword ptr [rax - 0x73], ecx; add eax, 0x14d0; jmp rax; 
0x0000000000461809: or dword ptr [rax - 0x73], ecx; add eax, 0x1cf; jmp rax; 
0x0000000000461818: or dword ptr [rax - 0x73], ecx; add eax, 0x260; jmp rax; 
0x000000000046182a: or dword ptr [rax - 0x73], ecx; add eax, 0x2ee; jmp rax; 
0x000000000046183c: or dword ptr [rax - 0x73], ecx; add eax, 0x39c; jmp rax; 
0x000000000046184e: or dword ptr [rax - 0x73], ecx; add eax, 0x44a; jmp rax; 
0x0000000000461860: or dword ptr [rax - 0x73], ecx; add eax, 0x4f8; jmp rax; 
0x0000000000461872: or dword ptr [rax - 0x73], ecx; add eax, 0x5a6; jmp rax; 
0x0000000000461884: or dword ptr [rax - 0x73], ecx; add eax, 0x654; jmp rax; 
0x0000000000461896: or dword ptr [rax - 0x73], ecx; add eax, 0x722; jmp rax; 
0x00000000004618a8: or dword ptr [rax - 0x73], ecx; add eax, 0x7f0; jmp rax; 
0x00000000004618ba: or dword ptr [rax - 0x73], ecx; add eax, 0x8be; jmp rax; 
0x00000000004618cc: or dword ptr [rax - 0x73], ecx; add eax, 0x98c; jmp rax; 
0x00000000004618de: or dword ptr [rax - 0x73], ecx; add eax, 0xa5a; jmp rax; 
0x00000000004618f0: or dword ptr [rax - 0x73], ecx; add eax, 0xb28; jmp rax; 
0x0000000000461902: or dword ptr [rax - 0x73], ecx; add eax, 0xbf6; jmp rax; 
0x0000000000461914: or dword ptr [rax - 0x73], ecx; add eax, 0xcc4; jmp rax; 
0x0000000000461926: or dword ptr [rax - 0x73], ecx; add eax, 0xd92; jmp rax; 
0x0000000000461938: or dword ptr [rax - 0x73], ecx; add eax, 0xe60; jmp rax; 
0x000000000046194a: or dword ptr [rax - 0x73], ecx; add eax, 0xf2e; jmp rax; 
0x000000000046195c: or dword ptr [rax - 0x73], ecx; add eax, 0xffc; jmp rax; 
0x000000000046161b: or dword ptr [rax - 0x73], ecx; add eax, 0xfffd40dd; jmp rax; 
0x000000000045c084: or dword ptr [rax - 0x75], 0x4838246c; add esp, 0x40; ret; 
0x000000000045e5c9: or dword ptr [rax - 0x75], ecx; add byte ptr [rax - 0x77], cl; and al, 0x10; ret; 
0x000000000045d4a4: or dword ptr [rax - 0x75], ecx; sub al, 0x24; add rsp, 8; ret; 
0x0000000000427cb0: or dword ptr [rax - 0x77], 0x48402474; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x00000000004010a1: or dword ptr [rax - 0x77], ecx; ret 0x8948; 
0x0000000000450dd9: or dword ptr [rax - 1], ecx; ret 0x894c; 
0x0000000000464f7e: or dword ptr [rax], eax; add byte ptr [rax], al; syscall; 
0x000000000042955a: or dword ptr [rax], eax; call rax; 
0x0000000000434755: or dword ptr [rax], eax; call rcx; 
0x0000000000434abe: or dword ptr [rax], eax; lea rdx, [rip + 0x91aa1]; call rax; 
0x000000000043474e: or dword ptr [rax], eax; lea rdx, [rip + 0x91de9]; call rcx; 
0x00000000004346da: or dword ptr [rax], eax; lea rdx, [rip + 0x91e5d]; call rax; 
0x0000000000429553: or dword ptr [rax], eax; lea rdx, [rip + 0x9ce44]; call rax; 
0x000000000042f8a8: or dword ptr [rax], eax; mov qword ptr [rip + 0x127267], rax; mov rbp, qword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x0000000000434c69: or dword ptr [rax], eax; mov qword ptr [rsp + 8], rax; call 0x3cda0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000406123: or dword ptr [rax], ebx; add byte ptr [rax], al; je 0x6133; xor eax, 1; mov byte ptr [rip + 0x180301], al; ret; 
0x000000000045ddd3: or dword ptr [rbp - 0x74b70004], edi; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000440d8e: or dword ptr [rbx + 0x1164c23d], eax; add byte ptr [rax], al; jne 0x40d6b; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000422c63: or dword ptr [rbx + 0x1637f93d], eax; add byte ptr [rcx], al; je 0x22c77; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042fbad: or dword ptr [rbx + 0xf0b8], eax; add byte ptr [rax], al; jne 0x2fbe8; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042fc73: or dword ptr [rbx + 0xf0b8], eax; add byte ptr [rax], al; jne 0x2fc87; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045d6e7: or dword ptr [rbx + 0xf9b693d], eax; add byte ptr [rax], al; jne 0x5d6c4; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000430e19: or dword ptr [rbx], eax; add bl, ch; ret 0xcccc; 
0x000000000040db40: or dword ptr [rcx + rcx*8 - 0x76b7f08b], eax; push rsp; and al, 0x60; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048e52e: or dword ptr [rdi], 0x11750000; mov qword ptr [rip + 0xc5655], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040f3e9: or dword ptr [rdi], ecx; mov dh, 0x58; or dh, dh; ret; 
0x0000000000432217: or dword ptr [rdi], ecx; push rdi; ror byte ptr [rdi], 0x11; and al, 0x10; ret; 
0x0000000000477f82: or dword ptr [rdi], ecx; test dl, ch; add eax, dword ptr [rax]; add byte ptr [rbx - 0x73f0df08], al; add dword ptr [rdx], 0xff3d0000; call qword ptr [rax]; 
0x000000000042fa83: or dword ptr [rdx + 0x15], ebp; add byte ptr [rbp + 0x480a75c0], al; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042a10b: or dword ptr [rdx + rax*8], ebx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042a0da: or dword ptr [rdx + rsi*8], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048e52d: or dword ptr cs:[rdi], 0x11750000; mov qword ptr [rip + 0xc5655], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000441051: or eax, 0x116202; lock xadd dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000439288: or eax, 0x11dfcf; test ecx, ecx; je 0x3929b; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004381e3: or eax, 0x11f060; lock xadd dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000435ed0: or eax, 0x12136b; cmp ecx, eax; jg 0x35ee3; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004792c8: or eax, 0x13; mov qword ptr [rsp + 0xc8], rax; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000040a14c: or eax, 0x14294f; lea rax, [rcx + rax*8]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043e203: or eax, 0x148284; xchg dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042fa3b: or eax, 0x156a50; xchg dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042b622: or eax, 0x15aeb1; test rcx, rcx; jg 0x2b632; mov byte ptr [rsp + 0x10], 0; ret; 
0x000000000041c646: or eax, 0x16a53d; lock xadd qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000406252: or eax, 0x180361; xchg dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000414932: or eax, 0x245c8d4d; add dword ptr [rcx - 1], ecx; ret 0x894c; 
0x0000000000429a64: or eax, 0x24748948; push rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000429946: or eax, 0x247c8948; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004287a7: or eax, 0x24848b48; lock add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000049a3ab: or eax, 0x44650; mov rax, qword ptr [r9 + 0x98]; mov qword ptr [rsp], r8; call rax; 
0x0000000000491305: or eax, 0x4807894c; mov ebp, dword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004946c5: or eax, 0x481f8948; mov ebp, dword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000049528f: or eax, 0x48ffffdf; mov ebp, dword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040288f: or eax, 0x48fffffe; mov eax, dword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000049482c: or eax, 0x4a1cf; mov rcx, qword ptr [rcx + 0xf8]; mov qword ptr [rsp], rax; call rcx; 
0x000000000046589e: or eax, 0x58ed1; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000047d52c: or eax, 0x614cf; mov qword ptr [rsp + 0x18], rcx; mov qword ptr [rsp + 0x20], rax; ret; 
0x000000000047bc70: or eax, 0x62d8b; mov qword ptr [rsp + 0x58], rcx; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004790b3: or eax, 0x6c8b4800; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000467c8c: or eax, 0x769af; mov qword ptr [rsp + 0x18], rcx; mov qword ptr [rsp + 0x20], rax; ret; 
0x00000000004677f3: or eax, 0x76e48; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004677c1: or eax, 0x76e7a; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000467791: or eax, 0x76eaa; mov qword ptr [rsp + 0x28], rcx; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004833d8: or eax, 0x88; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000444e86: or eax, 0x8b480a73; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000043ac54: or eax, 0x8b8ef; lea rdx, [rip + 0x8b8e8]; call rcx; 
0x000000000043474b: or eax, 0x91df0; lea rdx, [rip + 0x91de9]; call rcx; 
0x0000000000441132: or eax, 0x940f0000; ret 0xd284; 
0x000000000044154b: or eax, 0x940f0000; ret; 
0x000000000048fe89: or eax, 0xbfe6a; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000048ec31: or eax, 0xc10f2; mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048d8e0: or eax, 0xc25d3; mov qword ptr [rsp + 0x50], rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048fe49: or eax, 0xc6e3a; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000048fe09: or eax, 0xc6e8a; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000048fdc9: or eax, 0xc6eda; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000048745e: or eax, 0xcf61d; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045f94e: or eax, 0xe16dd; xchg dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000440515: or eax, 0xe8000000; ret 0xff3f; 
0x000000000046abed: or eax, 0xebf46; sete byte ptr [rsp + 0x38]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000464d75: or eax, 0xf000000; add eax, 0x28244489; ret; 
0x0000000000464ee6: or eax, 0xf1bcd; lea r9, [rip - 0xf2]; mov rax, qword ptr [rip + 0xf1b27]; jmp rax; 
0x0000000000464f2d: or eax, 0xfffd926e; mov rax, qword ptr [rip + 0xf1ae7]; jmp rax; 
0x0000000000464eed: or eax, 0xffffff0e; mov rax, qword ptr [rip + 0xf1b27]; jmp rax; 
0x0000000000404b11: or eax, dword ptr [rax]; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048e5f1: or eax, dword ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000046502d: or eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x00000000004067a2: or eax, dword ptr [rax]; mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], 0x1d; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048fe8c: or eax, dword ptr [rax]; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x00000000004069a5: or eax, dword ptr [rax]; mov qword ptr [rsp], rax; call 0x615e0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000049abcc: or eax, dword ptr [rax]; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000049a7f3: or eax, dword ptr [rax]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048fe85: or eax, dword ptr [rax]; mov rcx, qword ptr [rip + 0xbfe6a]; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000045f946: or eax, dword ptr [rip + 0x126b48]; lea rcx, [rip + 0xe16dd]; xchg dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000402457: or eax, ebp; clc; ja 0x24a5; mov dword ptr [rax], 0xffffffff; ret; 
0x000000000046326f: or eax, ebx; test rax, 0xf; sete byte ptr [rsp + 8]; ret; 
0x0000000000486cf0: or eax, ecx; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000457a5e: or eax, ecx; movzx eax, ax; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000422b4d: or eax, edi; add al, 0x11; out dx, eax; mov esi, 0x8348dead; ret 0x4804; 
0x00000000004640e4: or eax, edi; test eax, 7; je 0x640f3; mov rcx, rbx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000049493f: or ebp, dword ptr [rcx]; mov byte ptr [rax + 0xb3], 0; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x00000000004982d1: or ebx, dword ptr [rbp + 0x48]; mov ebp, dword ptr [rsp + 0x1c8]; add rsp, 0x1d0; ret; 
0x00000000004141f3: or ebx, ecx; mov byte ptr [rsi], bl; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x00000000004141f2: or ebx, r9d; mov byte ptr [rsi], bl; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x0000000000409e31: or ecx, dword ptr [rax + rax]; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; ret; 
0x000000000046b95c: or ecx, dword ptr [rax - 0x39]; or byte ptr [r8], r8b; add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret 0x3948; 
0x000000000048af01: or ecx, dword ptr [rax - 0x77]; ret 0x8b48; 
0x0000000000467255: or ecx, dword ptr [rax - 0x7d]; sar byte ptr [rax], 0x48; mov dword ptr [rsp + 0x10], eax; nop; ret; 
0x0000000000437ad4: or ecx, dword ptr [rax - 1]; ret 0x8948; 
0x000000000044d458: or ecx, dword ptr [rbp + 0x39]; ret; 
0x0000000000401e73: or ecx, dword ptr [rdi]; xchg eax, esp; and al, 0x20; ret; 
0x000000000049a5ef: or ecx, dword ptr [rdx]; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000045b279: or edi, dword ptr [rsi - 0x74b7ffee]; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000044187a: or edi, edi; ret 0x448b; 
0x000000000041eb51: or edx, dword ptr [rax + 1]; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x60; add rsp, 0x68; ret; 
0x000000000046b011: or edx, dword ptr [rdx - 1]; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x00000000004853e4: or edx, eax; bts rdx, 7; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000485632: or edx, eax; bts rdx, 7; mov qword ptr [rsp + 0x60], rdx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046536b: or edx, eax; mov eax, 0x48; syscall; 
0x000000000046536b: or edx, eax; mov eax, 0x48; syscall; ret; 
0x00000000004204aa: or edx, eax; not rdx; mov qword ptr [rsp + 0x30], rdx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004141b1: or edx, ebx; mov byte ptr [rsi], dl; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x000000000048330f: or esi, ecx; mov qword ptr [rsp + 0x58], rsi; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; nop; ret; 
0x000000000045cfb1: or esp, dword ptr [rbx]; add bl, ch; ret 0x8d48; 
0x000000000040db3f: or qword ptr [rcx + r9*8 - 0x76b7f08b], rax; push rsp; and al, 0x60; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042a10a: or qword ptr [rdx + rax*8], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042a0d9: or qword ptr [rdx + rsi*8], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000495a4e: or r14b, r8b; add al, 2; jge 0x95a9d; mov ebp, dword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x00000000004792c7: or rax, 0x13; mov qword ptr [rsp + 0xc8], rax; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x00000000004833d7: or rax, 0x88; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046326e: or rax, rbx; test rax, 0xf; sete byte ptr [rsp + 8]; ret; 
0x0000000000486cef: or rax, rcx; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004853e3: or rdx, rax; bts rdx, 7; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000485631: or rdx, rax; bts rdx, 7; mov qword ptr [rsp + 0x60], rdx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004204a9: or rdx, rax; not rdx; mov qword ptr [rsp + 0x30], rdx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048330e: or rsi, rcx; mov qword ptr [rsp + 0x58], rsi; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; nop; ret; 
0x00000000004662a1: or sil, byte ptr [rax + r10 + 0x31]; ror byte ptr [rax + 0x48402444], 0x8b; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x00000000004648e5: out 0, eax; add byte ptr [rax], al; syscall; 
0x00000000004648e5: out 0, eax; add byte ptr [rax], al; syscall; ret; 
0x000000000048512e: out 0x11, al; add al, 0; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000043ef80: out 0x11, eax; add byte ptr [rax], al; jne 0x3ef90; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000453435: out 0x13, al; add byte ptr [rax], al; mov qword ptr [rsp + 0x320], rdi; mov rbp, qword ptr [rsp + 0x2c0]; add rsp, 0x2c8; ret; 
0x0000000000418851: out 0x13, eax; add byte ptr [rcx], dh; shr bl, cl; or byte ptr [rax - 1], cl; ret 0x1f0f; 
0x00000000004188de: out 0x16, eax; add al, ch; pop rdx; ret; 
0x000000000041ab44: out 0x16, eax; add byte ptr [rax - 0x77], cl; add eax, 0x16c4f2; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000444d2f: out 0x48, al; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000461717: out 0x48, eax; lea eax, [rip - 0x151bf]; call rax; 
0x0000000000436c8f: out 0x48, eax; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004609a7: out 0x66, al; pxor mm5, mm7; pxor xmm4, xmm5; movq qword ptr [rdx], xmm4; ret; 
0x0000000000464a95: out 0x8b, eax; push rsp; and al, 8; mov eax, 0xea; syscall; 
0x0000000000464a95: out 0x8b, eax; push rsp; and al, 8; mov eax, 0xea; syscall; ret; 
0x00000000004311b6: out 0xbb, al; add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000464a30: out 0xbe, eax; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0x23; syscall; 
0x0000000000407876: out 0xc2, al; add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000429a63: out 0xd, al; mov qword ptr [rsp + 0x50], rsi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000429945: out 0xd, eax; mov qword ptr [rsp + 0x48], rdi; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044784b: out 0xf, eax; nop; ret 0xbb48; 
0x0000000000462d42: out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x10000018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004629c2: out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x1000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462642: out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x100018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004622c2: out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x10018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461f42: out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x1018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461c2c: out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x118]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462e22: out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x20000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462aa2: out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x2000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462722: out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x200018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004623a2: out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x20018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462022: out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x2018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461cec: out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x218]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461a11: out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x38]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462f02: out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x40000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462b82: out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x4000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462802: out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x400018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462482: out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x40018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462102: out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x4018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461dac: out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x418]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461ab1: out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x58]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462c62: out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x8000018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004628e2: out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x800018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462562: out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x80018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004621e2: out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x8018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461e6c: out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x818]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461b69: out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x98]; mov rax, qword ptr [rdx]; call rax; 
0x000000000041c362: out 0xfe, al; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000492c1b: out 0xff, al; jmp qword ptr [rsi - 0x70]; 
0x0000000000452c88: out 0xff, eax; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x0000000000492fa2: out 0xff, eax; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x78; sub rsp, -0x80; ret; 
0x0000000000471b3b: out 0xff, eax; jmp qword ptr [rsi - 0x70]; 
0x0000000000402066: out 1, al; lea rax, [rsi*2 - 1]; mov qword ptr [r9], rax; ret; 
0x0000000000429941: out 1, eax; shl rdi, 0xd; mov qword ptr [rsp + 0x48], rdi; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004459ee: out dx, al; add dword ptr [rax], eax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000044c58e: out dx, al; add dword ptr [rcx], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000402063: out dx, al; and rsi, 1; lea rax, [rsi*2 - 1]; mov qword ptr [r9], rax; ret; 
0x000000000045ec22: out dx, al; cld; dec dword ptr [rax - 0x75]; sub al, 0x24; add rsp, 8; ret; 
0x0000000000478ff2: out dx, al; mov byte ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000441386: out dx, al; mov byte ptr [rsp + 0x458], 0; mov rbp, qword ptr [rsp + 0x430]; add rsp, 0x438; ret; 
0x00000000004017e4: out dx, al; mov qword ptr [rsp + 0x20], rbx; ret; 
0x000000000040a55e: out dx, al; mov qword ptr [rsp + 8], rcx; mov qword ptr [rsp], rbx; mov rdx, qword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x000000000041484c: out dx, al; or byte ptr [rax - 0x7d], cl; ret; 
0x000000000041481b: out dx, al; or byte ptr [rax - 1], cl; ret; 
0x000000000040dfa3: out dx, eax; add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret 0x8348; 
0x0000000000436139: out dx, eax; add dl, byte ptr [rip - 0x6f9a0000]; jne 0x3614c; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042f20d: out dx, eax; cmp eax, 0x8b480001; insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; ret; 
0x0000000000460a81: out dx, eax; jmp qword ptr [rsi + 0x45]; 
0x000000000043ac55: out dx, eax; mov eax, 0x8d480008; adc eax, 0x8b8e8; call rcx; 
0x0000000000422b51: out dx, eax; mov esi, 0x8348dead; ret 0x4804; 
0x000000000048b05c: out dx, eax; mov qword ptr [rsp + 0x70], rdi; sub r9, rdi; mov qword ptr [rsp + 8], r9; mov qword ptr [rsp + 0x10], rdi; call rdx; 
0x000000000046ab13: out dx, eax; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x00000000004609a6: out dx, eax; out 0x66, al; pxor mm5, mm7; pxor xmm4, xmm5; movq qword ptr [rdx], xmm4; ret; 
0x00000000004459ed: out dx, eax; out dx, al; add dword ptr [rax], eax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x00000000004609aa: out dx, eax; out dx, eax; pxor xmm4, xmm5; movq qword ptr [rdx], xmm4; ret; 
0x00000000004609ab: out dx, eax; pxor xmm4, xmm5; movq qword ptr [rdx], xmm4; ret; 
0x0000000000460b2a: out dx, eax; ret 0x4566; 
0x0000000000460b2f: out dx, eax; retf; pxor xmm8, xmm9; movq qword ptr [rdx], xmm8; ret; 
0x00000000004022d3: out dx, eax; sub rdi, rsi; shl rdi, cl; sete byte ptr [rax]; ret; 
0x000000000043580e: outsb dx, byte ptr [rsi]; int1; add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040c0ee: outsb dx, byte ptr [rsi]; jbe 0xc0f6; add byte ptr [rax + 0x556e8e8], dl; add cl, ch; ret; 
0x000000000048fdcb: outsb dx, byte ptr [rsi]; or al, 0; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000048fe44: outsb dx, byte ptr [rsi]; or al, 0; mov rcx, qword ptr [rip + 0xc6e3a]; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000048fe04: outsb dx, byte ptr [rsi]; or al, 0; mov rcx, qword ptr [rip + 0xc6e8a]; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000048fdc4: outsb dx, byte ptr [rsi]; or al, 0; mov rcx, qword ptr [rip + 0xc6eda]; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000042f8a7: outsb dx, byte ptr [rsi]; or dword ptr [rax], eax; mov qword ptr [rip + 0x127267], rax; mov rbp, qword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x0000000000464f2e: outsb dx, byte ptr [rsi]; xchg eax, edx; std; dec dword ptr [rax - 0x75]; add eax, 0xf1ae7; jmp rax; 
0x0000000000465174: outsd dx, dword ptr [rsi]; add byte ptr [rax], al; add byte ptr [rax + 0x3c], bh; syscall; 
0x000000000040212d: outsd dx, dword ptr [rsi]; and ch, al; in eax, 0x74; ret 0xfdc5; 
0x000000000040212c: outsd dx, dword ptr [rsi]; outsd dx, dword ptr [rsi]; and ch, al; in eax, 0x74; ret 0xfdc5; 
0x000000000040816d: outsd dx, dword ptr [rsi]; ret; 
0x0000000000437dad: outsd dx, dword ptr [rsi]; sub eax, 0xd2ebfffd; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000045c777: paddw mm7, mm7; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000462f84: pause; sub eax, 1; jne 0x62f84; ret; 
0x00000000004023ae: pcmpeqb mm1, mm0; pmovmskb edx, xmm1; bsf edx, edx; jne 0x23c2; mov qword ptr [r8], -1; ret; 
0x000000000043e319: pcmpeqb mm5, mm1; mov byte ptr [rsp + 0x30], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004023ad: pcmpeqb xmm1, xmm0; pmovmskb edx, xmm1; bsf edx, edx; jne 0x23c2; mov qword ptr [r8], -1; ret; 
0x00000000004023b2: pmovmskb edx, mm1; bsf edx, edx; jne 0x23c2; mov qword ptr [r8], -1; ret; 
0x00000000004023b1: pmovmskb edx, xmm1; bsf edx, edx; jne 0x23c2; mov qword ptr [r8], -1; ret; 
0x000000000045e455: pop qword ptr [rax - 0x74b7ffee]; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x00000000004599d4: pop r12; add esi, eax; add eax, dword ptr [rcx]; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044dda8: pop r8; jbe 0x4dd8e; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000041709c: pop rax; adc byte ptr [rax - 0x77], cl; sbb al, 0x24; mov qword ptr [rsp + 8], rcx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000047bdb6: pop rax; add al, 0; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000044138a: pop rax; add al, 0; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x430]; add rsp, 0x438; ret; 
0x000000000044133f: pop rax; add al, 0; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x430]; add rsp, 0x438; ret; 
0x000000000040a4d8: pop rax; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000045be80: pop rax; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x0000000000425fd1: pop rax; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; ret; 
0x000000000040d646: pop rax; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000444088: pop rax; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040a4c1: pop rax; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000045be55: pop rax; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x0000000000425f7e: pop rax; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; ret; 
0x0000000000437c3a: pop rax; add rsp, 0x60; nop; ret; 
0x0000000000411589: pop rax; add rsp, 0x60; ret; 
0x0000000000461535: pop rax; call 0x374a0; call 0x630c0; ret; 
0x00000000004035e5: pop rax; cmp rax, rcx; sete byte ptr [rsp + 0x60]; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000420d15: pop rax; cmp rbx, rsi; sete byte ptr [rsp + 0x60]; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000404164: pop rax; cmp rdx, rax; jg 0x4115; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000410bfe: pop rax; dec dword ptr [rax + 0x21]; ret; 
0x000000000044dda9: pop rax; jbe 0x4dd8e; mov qword ptr [rsp + 0x10], rcx; ret; 
0x0000000000490992: pop rax; lea rax, [rip + 0x4b7c6]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000046163b: pop rax; lea rax, [rip - 0x2bf03]; jmp rax; 
0x00000000004721ba: pop rax; mov al, 0xff; jmp qword ptr [rsi - 0x70]; 
0x000000000040dfcf: pop rax; mov byte ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040e072: pop rax; mov byte ptr [rsp + 0x60], 1; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000046c198: pop rax; mov byte ptr [rsp + 0x60], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041fc83: pop rax; mov dword ptr [rsp + 0x60], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041fc2d: pop rax; mov dword ptr [rsp + 0x60], ecx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000045e0af: pop rax; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x00000000004842b6: pop rax; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000493ca3: pop rax; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000456ef3: pop rax; mov qword ptr [rsp + 0x10], rax; ret; 
0x00000000004124c0: pop rax; mov qword ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044c52a: pop rax; mov qword ptr [rsp + 0x60], rax; mov byte ptr [rsp + 0x68], cl; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042a886: pop rax; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000047b6b9: pop rax; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000045c605: pop rax; mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000407221: pop rax; mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004825bf: pop rax; mov qword ptr [rsp + 0x60], rdx; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000041256e: pop rax; mov qword ptr [rsp + 0x60], rdx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004830a4: pop rax; mov qword ptr [rsp + 0x60], rsi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000044e1c2: pop rax; mov qword ptr [rsp + 0xe8], rax; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 
0x00000000004450ee: pop rax; mov qword ptr [rsp + 8], rax; call 0x46780; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000403605: pop rax; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; call rax; 
0x000000000045a526: pop rax; mov qword ptr [rsp], rax; call 0xaa40; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000040f914: pop rax; mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], rax; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000040e285: pop rax; mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], rcx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000046895e: pop rax; mov qword ptr [rsp], rcx; call rax; 
0x0000000000468920: pop rax; mov qword ptr [rsp], rdx; call rcx; 
0x00000000004688ba: pop rax; mov qword ptr [rsp], rdx; nop; call rcx; 
0x000000000040e189: pop rax; mov qword ptr [rsp], rsi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000461ab8: pop rax; mov rax, qword ptr [rdx]; call rax; 
0x000000000042a866: pop rax; mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000450f17: pop rax; mov rax, qword ptr [rsp + 0x28]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004908f9: pop rax; mov rax, qword ptr [rsp + 0x30]; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000041adbd: pop rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000483315: pop rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; nop; ret; 
0x00000000004831d2: pop rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044bd51: pop rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040bfb9: pop rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004100e3: pop rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000479915: pop rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x000000000040294f: pop rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000447c14: pop rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040ee50: pop rax; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000493f68: pop rax; movzx eax, byte ptr [rax + 0x48]; mov qword ptr [rsp + 0x10], rcx; mov byte ptr [rsp + 0x18], al; ret; 
0x000000000043f5be: pop rax; nop; ret; 
0x000000000042c748: pop rax; or byte ptr [rax + 0x29], cl; jo 0x2c766; mov qword ptr [rsp + 0x18], rdi; mov qword ptr [rsp + 0x20], r8; ret; 
0x000000000041040b: pop rax; or byte ptr [rcx - 0xa], al; ret; 
0x000000000040ec6f: pop rax; or dh, dh; ret; 
0x0000000000461534: pop rax; pop rax; call 0x374a0; call 0x630c0; ret; 
0x0000000000403c0d: pop rax; ret; 
0x000000000044c013: pop rax; shr rcx, 2; mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000047bed7: pop rax; test rax, rax; jge 0x7bee7; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004982d2: pop rbp; mov rbp, qword ptr [rsp + 0x1c8]; add rsp, 0x1d0; ret; 
0x00000000004648ad: pop rbp; ret; 
0x000000000046732f: pop rbx; adc al, 0xf6; ret; 
0x0000000000468178: pop rbx; add dword ptr [rsi - 0x3f], esp; ret; 
0x00000000004419fe: pop rbx; add ecx, dword ptr [rax - 0x75]; xor al, 0xd8; lea rdx, [rax + rbx*8]; call rsi; 
0x00000000004310be: pop rbx; mov rax, qword ptr [rax + 0x18]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000408281: pop rbx; ret 2; 
0x0000000000407fa1: pop rbx; ret; 
0x000000000042c3ab: pop rbx; sbb byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x0000000000416c21: pop rbx; stosb byte ptr [rdi], al; add al, 0; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x0000000000441afd: pop rcx; adc byte ptr [rdi], cl; xchg eax, esp; ret 0xd284; 
0x0000000000430c84: pop rcx; adc eax, 0xe750000; mov qword ptr [rsi + rcx*8], rax; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000459be0: pop rcx; add ah, byte ptr [rsi - 9]; ret; 
0x000000000046b0a2: pop rcx; add al, 0xf; xchg eax, esp; ret; 
0x000000000042df6a: pop rcx; or byte ptr [rax - 1], cl; ret 0x8348; 
0x000000000040f5e4: pop rcx; or byte ptr [rcx - 0xa], al; ret; 
0x000000000040f871: pop rcx; or dh, dh; ret; 
0x0000000000422aa7: pop rcx; ret 0x48f2; 
0x0000000000417933: pop rcx; ret 0xf44; 
0x000000000041f58f: pop rcx; ret 0xff2; 
0x0000000000412043: pop rcx; sbb eax, 0x8b480005; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000045c893: pop rcx; std; call qword ptr [rax + 0x4f44e8]; add bl, ch; ret 0xcccc; 
0x000000000047a18f: pop rcx; xor ah, byte ptr [rsi - 9]; ret; 
0x000000000041003d: pop rdi; dec dword ptr [rax + 0x21]; ret; 
0x0000000000457ca4: pop rdi; sete byte ptr [rsp + 0x10]; ret; 
0x000000000043c861: pop rdx; add al, 0xf; xchg eax, esp; ret; 
0x0000000000468028: pop rdx; add dword ptr [rsi - 0x3f], esp; ret; 
0x000000000042d622: pop rdx; add eax, dword ptr [rax]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044c965: pop rdx; and byte ptr [rbp + rcx*4 + 0x43], cl; add dword ptr [rbx + rcx*4 + 0x4a], ecx; sbb byte ptr [rbx + rcx*4 + 0x52], cl; sub byte ptr [rbp + 0x39], cl; ret 0x6f72; 
0x0000000000475a95: pop rdx; dec dword ptr [rax - 0x77]; bnd jmp 0x7577f; mov rbp, qword ptr [rsp + 0x690]; add rsp, 0x698; ret; 
0x000000000044386c: pop rdx; dec dword ptr [rcx - 0x4ef00f30]; sbb dword ptr [rdi], ecx; xchg eax, esp; ret 0xd284; 
0x000000000042e762: pop rdx; imul eax, dword ptr [rbx], 0x6c8b4800; and al, 0x40; add rsp, 0x48; ret; 
0x0000000000438e83: pop rdx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004688dd: pop rdx; mov rsi, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rsi; call rbx; 
0x0000000000425767: pop rdx; movsxd rax, dword ptr [rax - 0x7af0fe05]; ret 1; 
0x000000000040a401: pop rdx; ret 0x17; 
0x00000000004188e2: pop rdx; ret; 
0x0000000000455f5a: pop rdx; setbe al; mov byte ptr [rsp + 0x60], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000467af5: pop rdx; xor ah, byte ptr [rsi - 9]; ret; 
0x00000000004169cf: pop rsi; adc al, 0xf6; ret; 
0x00000000004510ab: pop rsi; add dword ptr [rax], eax; add byte ptr [rbx + rcx*4 + 0x54], cl; ret 0x4d08; 
0x0000000000490f71: pop rsi; or al, 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000041775c: pop rsi; ret 0xff2; 
0x00000000004387be: pop rsi; ret; 
0x0000000000463220: pop rsp; adc al, byte ptr ss:[rax]; aesenc xmm0, xmmword ptr [rip + 0x123663]; aesenc xmm0, xmmword ptr [rip + 0x12366a]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x0000000000430983: pop rsp; adc eax, 0x11750000; mov qword ptr [rip + 0x126130], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004599d5: pop rsp; add esi, eax; add eax, dword ptr [rcx]; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004726f8: pop rsp; and al, 0x10; mov qword ptr [rsp + 0x18], rdi; call rax; 
0x00000000004941e1: pop rsp; and al, 0x10; mov qword ptr [rsp + 0x18], rsi; call rax; 
0x000000000045c5c8: pop rsp; and al, 0x10; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000472612: pop rsp; and al, 0x10; mov rdx, qword ptr [rsp + 0x68]; mov qword ptr [rsp + 0x18], rdx; nop; call rax; 
0x00000000004496bf: pop rsp; and al, 0x10; ret; 
0x0000000000401c2f: pop rsp; and al, 0x14; mov dword ptr [rsp + 0x18], ecx; mov dword ptr [rsp + 0x1c], edx; ret; 
0x0000000000404861: pop rsp; and al, 0x18; call 0x4540; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x000000000045a47d: pop rsp; and al, 0x18; call 0x4640; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000049395f: pop rsp; and al, 0x18; call 0x91400; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x00000000004017e7: pop rsp; and al, 0x20; ret; 
0x0000000000441ab8: pop rsp; and al, 0x28; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000042cd77: pop rsp; and al, 0x30; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042bdcf: pop rsp; and al, 0x38; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046769f: pop rsp; and al, 0x38; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000412130: pop rsp; and al, 0x40; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000440083: pop rsp; and al, 0x40; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000464e5e: pop rsp; and al, 0x40; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004735c8: pop rsp; and al, 0x48; mov qword ptr [rsp + 0x50], rcx; mov byte ptr [rsp + 0x58], sil; ret; 
0x000000000042bf54: pop rsp; and al, 0x48; mov qword ptr [rsp + 0x50], rsi; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000417031: pop rsp; and al, 0x48; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000045c5c3: pop rsp; and al, 0x50; mov qword ptr [rsp + 0x10], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x00000000004417db: pop rsp; and al, 0x50; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000041256c: pop rsp; and al, 0x58; mov qword ptr [rsp + 0x60], rdx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000490c7b: pop rsp; and al, 0x58; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048d672: pop rsp; and al, 0x58; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000046893c: pop rsp; and al, 0x68; mov qword ptr [rsp], rbx; call rdx; 
0x000000000049253d: pop rsp; and al, 0x68; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000044b7b1: pop rsp; and al, 0x70; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000045743f: pop rsp; and al, 0x70; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x00000000004943dc: pop rsp; and al, 0x78; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000497531: pop rsp; and al, 0xc; call 0x94dc0; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000401ec2: pop rsp; and al, 8; mov eax, dword ptr [rsp + 0x10]; xchg dword ptr [rbx], eax; ret; 
0x00000000004296ec: pop rsp; and al, 8; mov qword ptr [rsp + 0x10], rax; mov rax, qword ptr [rsp + 0x90]; lea rdx, [rsp + 0x90]; call rax; 
0x00000000004630a2: pop rsp; and al, 8; mov qword ptr fs:[0xfffffffffffffff8], rbx; ret; 
0x0000000000401ee2: pop rsp; and al, 8; mov rax, qword ptr [rsp + 0x10]; xchg qword ptr [rbx], rax; ret; 
0x000000000041ffef: pop rsp; and al, 8; mov rax, qword ptr [rsp + 0x70]; lea rdx, [rsp + 0x70]; call rax; 
0x000000000040df20: pop rsp; and al, 8; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000040fe38: pop rsp; and al, 8; mov rbx, qword ptr [rdx]; nop; call rbx; 
0x000000000045c5be: pop rsp; and al, 8; mov rbx, qword ptr [rsp + 0x50]; mov qword ptr [rsp + 0x10], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x00000000004287e2: pop rsp; and al, 8; mov rcx, qword ptr [rsp + 0x110]; lea rdx, [rsp + 0x110]; call rcx; 
0x000000000047c4fc: pop rsp; and al, 8; nop; call rax; 
0x0000000000407c6d: pop rsp; jmp rax; 
0x0000000000483191: pop rsp; ret 0x4808; 
0x0000000000427489: pop rsp; ret 0x4c08; 
0x000000000041792b: pop rsp; ret; 
0x000000000042a3dc: popcnt rax, rax; add rax, rdx; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042a46f: popcnt rax, rdx; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000478a6f: popfq; mov byte ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044eefa: popfq; mov qword ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004168da: popfq; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x00000000004648ac: popfq; pop rbp; ret; 
0x0000000000487abb: popfq; std; jmp qword ptr [rsi - 0x70]; 
0x000000000043b5d7: psubsb mm0, qword ptr [rbx + 0x48fffff7]; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004375cd: psubsb mm1, qword ptr [rbp + 0x48000037]; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046b1f6: psubsb mm4, qword ptr [rbx + rax*2 - 0x74b70001]; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000043aa33: psubsb mm4, qword ptr [rdi]; call 0xffffffff8b4caa3a; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000443609: push -0x1e117; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x58; add rsp, 0x60; ret; 
0x0000000000441f79: push -0x1f45f0b8; and byte ptr [rax - 0x74b7f58e], dl; insb byte ptr [rdi], dx; and al, 0x78; sub rsp, -0x80; ret; 
0x00000000004420e8: push -0x38d17; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x78; sub rsp, -0x80; ret; 
0x0000000000407f32: push -0x3b; add al, byte ptr [rax]; call 0x33b60; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000475e21: push -0x72b76a15; add r9, qword ptr [rax - 0x77]; ret; 
0x00000000004843f0: push -0x74b70001; and al, 8; mov rcx, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; call rax; 
0x000000000042e7d4: push -0x74b7fffd; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x0000000000461aae: push -0xc1876b8; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x58]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000421862: push -1; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000048fe8a: push -2; or eax, dword ptr [rax]; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; ret; 
0x0000000000411f5a: push 0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040e244: push 0; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000409316: push 0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000041e411: push 0x10488948; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x0000000000484fea: push 0x13; add al, 0; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042fa84: push 0x15; add byte ptr [rbp + 0x480a75c0], al; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042fa3d: push 0x15; add byte ptr [rdi + 0x6c8b4801], al; and al, 0x18; add rsp, 0x20; ret; 
0x00000000004064db: push 0x1f; ja 0x64f2; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000046897c: push 0x24148948; call rcx; 
0x000000000046893e: push 0x241c8948; call rdx; 
0x00000000004688e3: push 0x24348948; call rbx; 
0x000000000044b3d5: push 0x24448948; jo 0x4b424; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048d9da: push 0x24448948; jo 0x8da29; mov dword ptr [rsp + 0x78], edx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000492655: push 0x24448948; jo 0x926a4; mov dword ptr [rsp + 0x78], edx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004943d4: push 0x24448948; jo 0x94423; mov dword ptr [rsp + 0x78], ebx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000044b6db: push 0x24548948; jo 0x4b72a; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000046b44a: push 0x24548948; jo 0x6b499; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000046b540: push 0x24548948; jo 0x6b58f; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000406b60: push 0x24548948; jo 0x6baf; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000483931: push 0x24548948; jo 0x83980; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000483a71: push 0x24548948; jo 0x83ac0; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000046b4ac: push 0x2454894c; jo 0x6b4fb; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000044b7ae: push 0x245c8948; jo 0x4b7fd; mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000409374: push 0x246c8b48; add rsp, 0x48; ret; 
0x0000000000457935: push 0x246c8b48; add rsp, 0x50; nop; ret; 
0x0000000000406b2c: push 0x246c8b48; add rsp, 0x50; ret; 
0x00000000004216ae: push 0x246c8b48; pop rax; add rsp, 0x60; ret; 
0x00000000004373e6: push 0x246c8b48; push rax; add rsp, 0x58; ret; 
0x0000000000463316: push 0x246c8b4c; jo 0x63365; mov dword ptr [rdi], eax; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000463232: push 0x36; adc al, byte ptr [rax]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x000000000042b7f4: push 0x48000001; add esp, 0x170; nop; ret; 
0x000000000042b4a9: push 0x48000001; add esp, 0x170; ret; 
0x000000000047fcc3: push 0x48000001; mov eax, dword ptr [rsp + 0xa0]; mov qword ptr [rsp + 0x170], rax; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x000000000044cb93: push 0x48000001; mov ebp, dword ptr [rsp + 0x100]; add rsp, 0x108; ret; 
0x0000000000450d04: push 0x48000016; mov ebp, dword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x00000000004850c4: push 0x48000412; mov dword ptr [rsp + 0x48], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042cbf9: push 0x48088748; mov ebp, dword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x00000000004607e4: push 0x488b4d68; push rax; test r9, r9; je 0x607f4; call 0x35860; ret; 
0x000000000040b6de: push 0x48c28948; mov ebx, 0; add byte ptr [rax + 0x1480000], al; ret; 
0x00000000004607e5: push 0x50488b4d; test r9, r9; je 0x607f4; call 0x35860; ret; 
0x000000000043be72: push 0x57; add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; nop; ret; 
0x000000000043b2fe: push 0x702444c6; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x000000000044e93c: push 0x70245489; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042417a: push 0x70c48348; nop; ret; 
0x0000000000403a63: push 0x70c48348; ret; 
0x0000000000406069: push 0xf000001; xchg eax, esp; ret; 
0x0000000000457786: push 0xfd03948; xchg dword ptr [rax + 0x48000001], edi; mov dword ptr [rsp + 0x68], eax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000044cd48: push 1; mov rbp, qword ptr [rsp + 0x100]; add rsp, 0x108; ret; 
0x0000000000433d72: push 7; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; nop; ret; 
0x0000000000454eb4: push qword ptr [rbp + 0x18]; mov qword ptr [rsp + 0x2b0], rbx; mov rbp, qword ptr [rsp + 0x278]; add rsp, 0x280; ret; 
0x000000000040a94d: push qword ptr [rbp + 0x48]; mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000409889: push qword ptr [rbp - 0x25]; xchg qword ptr [r8], rax; inc qword ptr [rbx + 8]; ret; 
0x000000000040a8f1: push qword ptr [rbx + 0x48]; mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000043e1fe: push qword ptr [rcx]; ror byte ptr [rax - 0x73], 0xd; test byte ptr [rdx + 0x1870014], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000401ab6: push qword ptr [rcx]; shr bl, 0xf1; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000464970: push qword ptr [rsi + 5]; mov eax, 0xffffffff; mov dword ptr [rsp + 0x10], eax; ret; 
0x000000000046493f: push qword ptr [rsi + 5]; mov eax, 0xffffffff; mov dword ptr [rsp + 0x18], eax; ret; 
0x000000000040225e: push qword ptr [rsp + rax*8 - 0x3b]; clc; ja 0x222b; add byte ptr [rax], al; ret; 
0x000000000044dda2: push r8; ja 0x4dd8e; cmp qword ptr [rcx + 0x58], rax; jbe 0x4dd8e; mov qword ptr [rsp + 0x10], rcx; ret; 
0x00000000004687b2: push rax; adc al, 0xf6; ret 0x7404; 
0x000000000044e061: push rax; adc byte ptr [rax + 0x63], cl; ret 0x3948; 
0x0000000000441240: push rax; add al, 0; add byte ptr [rcx], ch; ret 0xead1; 
0x000000000049a3ac: push rax; add al, 0; mov rax, qword ptr [r9 + 0x98]; mov qword ptr [rsp], r8; call rax; 
0x0000000000474424: push rax; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000046bda5: push rax; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x000000000048e000: push rax; add byte ptr [rax], al; add byte ptr [rax], al; call 0x5f320; ret; 
0x0000000000473623: push rax; add byte ptr [rax], al; add byte ptr [rax], al; mov byte ptr [rsp + 0x58], dl; ret; 
0x0000000000429aaf: push rax; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000415aa0: push rax; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042f01c: push rax; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000043c1d5: push rax; add byte ptr [rbp + 1], dh; ret; 
0x0000000000455db1: push rax; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000046bd7f: push rax; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x000000000048e8b1: push rax; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x000000000044b638: push rax; add dword ptr [rax], eax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000041eb52: push rax; add dword ptr [rax], eax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x00000000004507ed: push rax; add dword ptr [rdi + rcx - 0x51], ecx; ret 0x8d49; 
0x0000000000467313: push rax; add dword ptr [rsi - 0x3f], esp; ret 0x4808; 
0x000000000043f5ba: push rax; add rsp, 0x58; nop; ret; 
0x0000000000403c09: push rax; add rsp, 0x58; ret; 
0x000000000048dfeb: push rax; call 0x5f320; ret; 
0x000000000048abc3: push rax; cmp rcx, rax; jg 0x8ab82; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045cc5f: push rax; dec dword ptr [rbp + 0x39]; ret 0x830f; 
0x000000000049222c: push rax; dec dword ptr [rcx - 0x77]; ret; 
0x000000000044dda3: push rax; ja 0x4dd8e; cmp qword ptr [rcx + 0x58], rax; jbe 0x4dd8e; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000040a4bd: push rax; mov byte ptr [rsp + 0x58], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045be51: push rax; mov byte ptr [rsp + 0x58], 1; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040bfb5: push rax; mov byte ptr [rsp + 0x58], dl; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004735cf: push rax; mov byte ptr [rsp + 0x58], sil; ret; 
0x000000000046c17f: push rax; mov byte ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004049a0: push rax; mov qword ptr [rax + 8], rcx; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000484522: push rax; mov qword ptr [rdi], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004238ee: push rax; mov qword ptr [rdx + rax*8], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000456edf: push rax; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000045c5c5: push rax; mov qword ptr [rsp + 0x10], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x00000000004070a8: push rax; mov qword ptr [rsp + 0x120], rax; mov qword ptr [rsp + 0x128], rcx; mov rbp, qword ptr [rsp + 0x108]; add rsp, 0x110; ret; 
0x000000000040408f: push rax; mov qword ptr [rsp + 0x18], rax; call 0x41a0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000047bdb1: push rax; mov qword ptr [rsp + 0x58], 4; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000047be36: push rax; mov qword ptr [rsp + 0x58], 6; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048309f: push rax; mov qword ptr [rsp + 0x58], rax; mov qword ptr [rsp + 0x60], rsi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042a6ce: push rax; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000479910: push rax; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x00000000004029ab: push rax; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000412569: push rax; mov qword ptr [rsp + 0x58], rbx; mov qword ptr [rsp + 0x60], rdx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000490c78: push rax; mov qword ptr [rsp + 0x58], rbx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048d66f: push rax; mov qword ptr [rsp + 0x58], rbx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004831cd: push rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044bd4c: push rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040ddbb: push rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048d2f3: push rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000466bf3: push rax; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000046c193: push rax; mov qword ptr [rsp + 0x58], rdx; mov byte ptr [rsp + 0x60], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041fc28: push rax; mov qword ptr [rsp + 0x58], rdx; mov dword ptr [rsp + 0x60], ecx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041adb8: push rax; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000443e6f: push rax; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048fb04: push rax; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004847e1: push rax; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040c543: push rax; mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x00000000004044af: push rax; mov qword ptr [rsp], rax; call 0x61680; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000048f4cf: push rax; mov qword ptr [rsp], rax; call 0x8eb00; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000040e0ec: push rax; mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], 0; mov rax, qword ptr [rdx]; call rax; 
0x000000000040e00c: push rax; mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], rcx; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000042f2aa: push rax; mov qword ptr [rsp], rax; mov rax, qword ptr [rdx]; call rax; 
0x00000000004035fc: push rax; mov qword ptr [rsp], rax; mov rax, qword ptr [rsp + 0x58]; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; call rax; 
0x0000000000437aaa: push rax; mov qword ptr [rsp], rax; mov rdx, qword ptr [rsp + 0x68]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000497de4: push rax; mov qword ptr [rsp], rcx; call rdx; 
0x000000000047c4f5: push rax; mov qword ptr [rsp], rcx; mov qword ptr [rsp + 8], rbx; nop; call rax; 
0x00000000004997f4: push rax; mov qword ptr [rsp], rcx; mov rcx, qword ptr [rsp + 0xc8]; mov qword ptr [rsp + 8], rcx; call rax; 
0x000000000040df19: push rax; mov qword ptr [rsp], rsi; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000047e83f: push rax; mov rax, qword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000468955: push rax; mov rax, qword ptr [rax + 0x60]; mov rcx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000483df8: push rax; mov rax, qword ptr [rsp + 0x38]; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000484af2: push rax; mov rax, qword ptr [rsp + 0x38]; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040e0e6: push rax; mov rax, qword ptr [rsp + 0x50]; mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], 0; mov rax, qword ptr [rdx]; call rax; 
0x0000000000407195: push rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; nop; ret; 
0x0000000000412778: push rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040a3d8: push rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040a072: push rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000406818: push rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000415a87: push rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042f02f: push rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000049697b: push rax; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000405e47: push rax; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000468917: push rax; mov rcx, qword ptr [rax + 0x38]; mov rdx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rdx; call rcx; 
0x00000000004688b1: push rax; mov rcx, qword ptr [rax + 0x40]; mov rdx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rdx; nop; call rcx; 
0x000000000047e791: push rax; mov rcx, qword ptr [rax + 0xb8]; mov rdx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rdx; call rcx; 
0x000000000045e0aa: push rax; mov rcx, qword ptr [rsp + 0x58]; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000461632: push rax; mov rdx, rdi; mov rdi, qword ptr [rdi]; call rdi; 
0x0000000000464661: push rax; movdqu xmmword ptr [rax + 0x60], xmm11; movdqu xmmword ptr [rax + 0x70], xmm12; ret; 
0x000000000040be9e: push rax; nop; ret; 
0x000000000042db41: push rax; or byte ptr [rax + 0x24048948], dl; call 0xaa40; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000040e5b0: push rax; or dh, dh; ret 0xf04; 
0x000000000040f3e8: push rax; or dword ptr [rdi], ecx; mov dh, 0x58; or dh, dh; ret; 
0x000000000042fa3c: push rax; push 0x15; add byte ptr [rdi + 0x6c8b4801], al; and al, 0x18; add rsp, 0x20; ret; 
0x000000000049697a: push rax; push rax; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000464660: push rax; push rax; movdqu xmmword ptr [rax + 0x60], xmm11; movdqu xmmword ptr [rax + 0x70], xmm12; ret; 
0x0000000000406937: push rax; ret; 
0x00000000004067ad: push rax; sbb eax, 0x48000000; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048fecc: push rax; sub byte ptr [rax - 0x75], cl; sbb byte ptr [r8 - 0x77], cl; adc al, 0x24; call rcx; 
0x000000000045e0f5: push rax; sub byte ptr [rcx + rdx + 0x48], dh; cmp edx, ecx; jne 0x5e104; mov byte ptr [rsp + 0x10], 0x21; ret; 
0x00000000004607e9: push rax; test r9, r9; je 0x607f4; call 0x35860; ret; 
0x000000000044f709: push rax; xadd dword ptr [rbx + 0x2788], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000417084: push rax; xor byte ptr [rax - 0x77], cl; and al, 0x48; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000412177: push rax; xor byte ptr [rax - 0x77], cl; jl 0x121a1; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048e132: push rax; xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x58], xmm0; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042f582: push rbp; add eax, dword ptr [rax]; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004385c7: push rbp; mov dword ptr [rdx], 0x6c8b4800; and al, 0x40; add rsp, 0x48; ret; 
0x0000000000464dd3: push rbp; mov rbp, rsp; and rsp, 0xfffffffffffffff0; call rax; 
0x000000000048e537: push rbp; push rsi; or al, 0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000458610: push rbx; adc al, 0xf6; ret 0xf01; 
0x000000000043bdc2: push rbx; add byte ptr [rax], al; call 0x3ad60; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042a45a: push rbx; dec dword ptr [rax + 0x21]; ret 0xf48; 
0x000000000041059d: push rbx; mov eax, dword ptr [r8 + 0xc]; mov qword ptr [rsp], r11; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; call rax; 
0x00000000004111e7: push rbx; mov eax, dword ptr [r9 + 0xc]; mov qword ptr [rsp], r12; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; call rax; 
0x0000000000426009: push rbx; ret 0; 
0x0000000000485589: push rbx; ret 0xfffd; 
0x00000000004644b2: push rbx; sal bl, 1; movq qword ptr [rbx - 0x20], mm3; movdqu xmmword ptr [rbx - 0x10], xmm12; ret; 
0x0000000000441f4f: push rbx; sub byte ptr [rax - 0x7d], cl; ret 0x4802; 
0x00000000004400da: push rbx; xor byte ptr [rbp + 0xf], dh; mov byte ptr [rsp + 0x28], 0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000047e65f: push rcx; adc al, 0xf6; ret 0x7404; 
0x000000000047a1d4: push rcx; adc al, 0xf6; ret 0xf01; 
0x0000000000475673: push rcx; adc byte ptr [rax - 1], cl; ret 0x8948; 
0x0000000000441aa5: push rcx; adc byte ptr [rdi], cl; xchg eax, esp; ret 0xd284; 
0x000000000043c52b: push rcx; add al, 0xf; xchg eax, esp; ret 0xd284; 
0x0000000000457b37: push rcx; add dword ptr [rsi - 0x3f], esp; ret 0xf08; 
0x000000000046b31e: push rcx; and byte ptr [rax - 0x7b], cl; sal byte ptr [rcx + rbx*8 + 0x48], cl; mov eax, dword ptr [rdx]; call rax; 
0x000000000041d08e: push rcx; cmp byte ptr [rax + 0x29], cl; ret 0x8948; 
0x0000000000468938: push rcx; cmp byte ptr [rax - 0x75], cl; pop rsp; and al, 0x68; mov qword ptr [rsp], rbx; call rdx; 
0x000000000041f9ea: push rcx; dec dword ptr [rax + 0x11790]; add byte ptr [rax + 0xa7401f9], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000433b92: push rcx; dec dword ptr [rax + 0x11790]; add byte ptr [rax + 0xa7401f9], al; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000423b31: push rcx; movsxd rax, dword ptr [rax - 0x6af0fe06]; ret 0xd284; 
0x0000000000459c4f: push rcx; or byte ptr [rax - 0x75], cl; sbb dword ptr [rax - 0x75], ecx; je 0x59c7c; xor byte ptr [rax + 0x39], cl; ret 0x3674; 
0x000000000040a5c8: push rcx; or byte ptr [rax - 1], cl; ret 0x8948; 
0x00000000004421b7: push rcx; or byte ptr [rdi], cl; xchg eax, esp; ret 0x1f0f; 
0x000000000046458e: push rcx; sal bl, 1; movq qword ptr [rcx - 0x20], mm3; movdqu xmmword ptr [rcx - 0x10], xmm12; ret; 
0x000000000041d350: push rcx; sbb byte ptr [rax + 0x29], cl; ret 0x8948; 
0x00000000004586eb: push rdi; adc al, 0xf6; ret 0xf01; 
0x000000000043be73: push rdi; add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; nop; ret; 
0x00000000004213d3: push rdi; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; nop; ret; 
0x0000000000415025: push rdi; mov byte ptr [rax + rax], 0x48; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000493ab9: push rdi; mov rcx, qword ptr [rsp + 0xf8]; mov byte ptr [rcx + 0xe], al; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x0000000000432219: push rdi; ror byte ptr [rdi], 0x11; and al, 0x10; ret; 
0x000000000042c763: push rdi; ror byte ptr [rdi], 0x11; and al, 0x18; ret; 
0x000000000044decc: push rdi; ror byte ptr [rdi], 0x11; and al, 0x28; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000467482: push rdi; ror byte ptr [rdi], 0x11; and al, 0x30; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000456fbb: push rdi; ror byte ptr [rdi], 0x11; and al, 0x30; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044dd45: push rdi; ror byte ptr [rdi], 0x11; and al, 0x38; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004126a3: push rdi; ror byte ptr [rdi], 0x11; and al, 0x40; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004675e2: push rdi; ror byte ptr [rdi], 0x11; and al, 0x40; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042bf93: push rdi; ror byte ptr [rdi], 0x11; and al, 0x48; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048ecc6: push rdi; ror byte ptr [rdi], 0x11; and al, 0x48; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000467114: push rdi; ror byte ptr [rdi], 0x11; and al, 0x48; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048f096: push rdi; ror byte ptr [rdi], 0x11; and al, 0x50; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000483011: push rdi; ror byte ptr [rdi], 0x11; and al, 0x58; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048e134: push rdi; ror byte ptr [rdi], 0x11; and al, 0x58; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000046056b: push rdi; ror byte ptr [rdi], 0x11; and al, 0x60; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000048d594: push rdi; ror byte ptr [rdi], 0x11; and al, 0x68; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000406b26: push rdi; ror byte ptr [rdi], 0x11; and al, 0x68; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000472575: push rdi; ror byte ptr [rdi], 0x11; and al, 0x78; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000456e16: push rdx; adc al, 0xf6; ret 0x7402; 
0x0000000000412165: push rdx; add dword ptr [rax - 9], ecx; ret 0x3f; 
0x0000000000468ed3: push rdx; add dword ptr [rsi - 0x3f], esp; ret 0x4808; 
0x00000000004737df: push rdx; mov qword ptr [rsi + 8], rdx; mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042f552: push rdx; or byte ptr [rax - 0x7d], cl; ret 0x31fc; 
0x000000000040fcb5: push rdx; or dh, dh; ret 0x7408; 
0x0000000000454b9d: push rdx; sub byte ptr [rax - 0x77], cl; ror dword ptr [rax - 0x7d], cl; ret; 
0x000000000044c971: push rdx; sub byte ptr [rbp + 0x39], cl; ret 0x6f72; 
0x000000000048e538: push rsi; or al, 0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004737e3: push rsi; or byte ptr [rax - 0x77], cl; and al, 0x40; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004100dd: push rsi; or byte ptr [rax - 0x77], cl; and al, 0x58; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004514b5: push rsi; ret 0x10; 
0x0000000000408186: push rsi; ret; 
0x0000000000498978: push rsi; sbb byte ptr [rax - 0x77], cl; ret; 
0x0000000000401545: push rsp; add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret 0x8948; 
0x00000000004342ad: push rsp; and al, 0x10; call 0x33be0; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x00000000004490f7: push rsp; and al, 0x10; call 0x52d00; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000443135: push rsp; and al, 0x10; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000464e2e: push rsp; and al, 0x10; mov qword ptr [rsp + 8], rsi; mov qword ptr [rsp], rdi; lea rax, [rip - 0x1fe01]; call rax; 
0x00000000004652c9: push rsp; and al, 0x10; mov r10, qword ptr [rsp + 0x18]; mov eax, 0xe9; syscall; 
0x000000000046492b: push rsp; and al, 0x10; mov r10d, dword ptr [rsp + 0x14]; mov eax, 0x101; syscall; 
0x000000000040a72a: push rsp; and al, 0x10; ret; 
0x0000000000464930: push rsp; and al, 0x14; mov eax, 0x101; syscall; 
0x00000000004927ad: push rsp; and al, 0x18; call 0x91400; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000049390e: push rsp; and al, 0x18; call 0x91400; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x00000000004649aa: push rsp; and al, 0x18; mov eax, 0; syscall; 
0x00000000004649aa: push rsp; and al, 0x18; mov eax, 0; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000464b4c: push rsp; and al, 0x18; mov eax, 0x1b; syscall; 
0x0000000000464b4c: push rsp; and al, 0x18; mov eax, 0x1b; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000464b2b: push rsp; and al, 0x18; mov eax, 0x26; syscall; 
0x0000000000464b2b: push rsp; and al, 0x18; mov eax, 0x26; syscall; ret; 
0x000000000046526c: push rsp; and al, 0x18; mov eax, 0xcc; syscall; 
0x000000000046526c: push rsp; and al, 0x18; mov eax, 0xcc; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x00000000004652ce: push rsp; and al, 0x18; mov eax, 0xe9; syscall; 
0x00000000004652ce: push rsp; and al, 0x18; mov eax, 0xe9; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000464b0c: push rsp; and al, 0x18; mov eax, 0xea; syscall; 
0x0000000000464b0c: push rsp; and al, 0x18; mov eax, 0xea; syscall; ret; 
0x000000000046498b: push rsp; and al, 0x18; mov eax, 1; syscall; 
0x000000000046498b: push rsp; and al, 0x18; mov eax, 1; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000464d6c: push rsp; and al, 0x18; mov r10, qword ptr [rsp + 0x20]; mov eax, 0xd; syscall; 
0x00000000004652ea: push rsp; and al, 0x18; mov r10d, dword ptr [rsp + 0x1c]; mov r8, 0; mov eax, 0x119; syscall; 
0x0000000000464d2b: push rsp; and al, 0x18; mov r10d, dword ptr [rsp + 0x20]; mov eax, 0xe; syscall; 
0x00000000004650cf: push rsp; and al, 0x18; mov r8, qword ptr [rsp + 0x20]; mov r9d, dword ptr [rsp + 0x28]; mov eax, 0xca; syscall; 
0x00000000004650ab: push rsp; and al, 0x18; mov rax, 0x1c; syscall; 
0x00000000004650ab: push rsp; and al, 0x18; mov rax, 0x1c; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000406a56: push rsp; and al, 0x18; mov rax, qword ptr [rdx]; call rax; 
0x0000000000406076: push rsp; and al, 0x18; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000047261c: push rsp; and al, 0x18; nop; call rax; 
0x00000000004652ef: push rsp; and al, 0x1c; mov r8, 0; mov eax, 0x119; syscall; 
0x0000000000464f70: push rsp; and al, 0x1c; mov r8d, dword ptr [rsp + 0x20]; mov r9d, dword ptr [rsp + 0x24]; mov eax, 9; syscall; 
0x0000000000401c37: push rsp; and al, 0x1c; ret; 
0x000000000044c46f: push rsp; and al, 0x20; call rax; 
0x0000000000464d71: push rsp; and al, 0x20; mov eax, 0xd; syscall; 
0x0000000000464d71: push rsp; and al, 0x20; mov eax, 0xd; syscall; mov dword ptr [rsp + 0x28], eax; ret; 
0x0000000000464d30: push rsp; and al, 0x20; mov eax, 0xe; syscall; 
0x000000000041510c: push rsp; and al, 0x20; mov qword ptr [rdx + rcx*8 + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048df51: push rsp; and al, 0x20; mov rax, qword ptr [rsp + 8]; syscall; 
0x0000000000464dd0: push rsp; and al, 0x20; push rbp; mov rbp, rsp; and rsp, 0xfffffffffffffff0; call rax; 
0x000000000043145a: push rsp; and al, 0x28; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000473707: push rsp; and al, 0x28; mov qword ptr [rsp + 0x30], rcx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048dfb6: push rsp; and al, 0x28; mov r8, qword ptr [rsp + 0x30]; mov r9, qword ptr [rsp + 0x38]; mov rax, qword ptr [rsp + 8]; syscall; 
0x000000000040a56a: push rsp; and al, 0x28; mov rax, qword ptr [rdx]; call rax; 
0x0000000000438644: push rsp; and al, 0x28; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000463082: push rsp; and al, 0x28; mov rdi, rbx; mov rcx, rbx; call rax; 
0x000000000047d987: push rsp; and al, 0x28; ret; 
0x000000000048df8a: push rsp; and al, 0x30; mov qword ptr [rsp + 0x38], 0; call 0x5f320; ret; 
0x000000000048ac08: push rsp; and al, 0x30; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000464d9a: push rsp; and al, 0x30; mov rax, qword ptr [rip + 0xf1ca4]; mov rbx, rsp; and rsp, 0xfffffffffffffff0; call rax; 
0x00000000004204b1: push rsp; and al, 0x30; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004148da: push rsp; and al, 0x30; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000467cf5: push rsp; and al, 0x38; mov qword ptr [rsp], rdx; call rcx; 
0x000000000047d9d8: push rsp; and al, 0x38; mov qword ptr [rsp], rdx; nop; call rcx; 
0x00000000004508a8: push rsp; and al, 0x38; mov rax, qword ptr [rdx]; call rax; 
0x0000000000456e41: push rsp; and al, 0x38; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042d9e3: push rsp; and al, 0x3c; mov dword ptr [rsp + 0x40], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000473617: push rsp; and al, 0x40; mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], 0; mov byte ptr [rsp + 0x58], dl; ret; 
0x0000000000467367: push rsp; and al, 0x40; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004121cb: push rsp; and al, 0x40; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000046c081: push rsp; and al, 0x48; mov byte ptr [rsp + 0x50], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048dff9: push rsp; and al, 0x48; mov qword ptr [rsp + 0x50], 0; call 0x5f320; ret; 
0x000000000043f186: push rsp; and al, 0x48; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040519b: push rsp; and al, 0x48; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000490c76: push rsp; and al, 0x50; mov qword ptr [rsp + 0x58], rbx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000405e45: push rsp; and al, 0x50; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000046c196: push rsp; and al, 0x58; mov byte ptr [rsp + 0x60], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000041fc2b: push rsp; and al, 0x58; mov dword ptr [rsp + 0x60], ecx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000046891e: push rsp; and al, 0x58; mov qword ptr [rsp], rdx; call rcx; 
0x00000000004688b8: push rsp; and al, 0x58; mov qword ptr [rsp], rdx; nop; call rcx; 
0x0000000000461ab6: push rsp; and al, 0x58; mov rax, qword ptr [rdx]; call rax; 
0x000000000041adbb: push rsp; and al, 0x58; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000483380: push rsp; and al, 0x58; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040bfb7: push rsp; and al, 0x58; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000443e72: push rsp; and al, 0x58; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048fb07: push rsp; and al, 0x58; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000447c12: push rsp; and al, 0x58; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000473629: push rsp; and al, 0x58; ret; 
0x00000000004825c2: push rsp; and al, 0x60; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048563b: push rsp; and al, 0x60; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000412571: push rsp; and al, 0x60; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042a8b0: push rsp; and al, 0x60; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040db47: push rsp; and al, 0x60; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004688d8: push rsp; and al, 0x60; mov rbx, qword ptr [rdx + 0x40]; mov rsi, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rsi; call rbx; 
0x000000000047e7ba: push rsp; and al, 0x60; mov rbx, qword ptr [rdx + 0xb8]; mov rsi, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rsi; call rbx; 
0x0000000000472617: push rsp; and al, 0x68; mov qword ptr [rsp + 0x18], rdx; nop; call rax; 
0x000000000046897a: push rsp; and al, 0x68; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000437a73: push rsp; and al, 0x68; mov rax, qword ptr [rdx]; call rax; 
0x000000000041fff9: push rsp; and al, 0x70; call rax; 
0x0000000000454ae1: push rsp; and al, 0x70; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000420962: push rsp; and al, 0x70; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000486379: push rsp; and al, 0x70; mov qword ptr [rsp], rdx; call rcx; 
0x000000000044b6de: push rsp; and al, 0x70; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044e93e: push rsp; and al, 0x70; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000406b63: push rsp; and al, 0x70; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000486ded: push rsp; and al, 0x70; mov rbx, qword ptr [rdx + 0xd0]; mov rsi, qword ptr [rsp + 0x78]; mov qword ptr [rsp], rsi; call rbx; 
0x0000000000486d8f: push rsp; and al, 0x78; mov qword ptr [rsp], rdx; call rcx; 
0x000000000049265d: push rsp; and al, 0x78; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048d9e2: push rsp; and al, 0x78; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040d837: push rsp; and al, 0x78; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000401c4d: push rsp; and al, 0xc; ret; 
0x000000000043aeeb: push rsp; and al, 8; call 0x397c0; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000464a97: push rsp; and al, 8; mov eax, 0xea; syscall; 
0x0000000000464a97: push rsp; and al, 8; mov eax, 0xea; syscall; ret; 
0x00000000004726f3: push rsp; and al, 8; mov qword ptr [rsp + 0x10], rbx; mov qword ptr [rsp + 0x18], rdi; call rax; 
0x00000000004941dc: push rsp; and al, 8; mov qword ptr [rsp + 0x10], rbx; mov qword ptr [rsp + 0x18], rsi; call rax; 
0x000000000040eefa: push rsp; and al, 8; mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; 
0x00000000004510b1: push rsp; ret 0x4d08; 
0x00000000004510fe: push rsp; ret 0x4d18; 
0x00000000004490fc: pushfq; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048b3ae: pushfq; and al, 0x60; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000455484: pushfq; and al, 0x68; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000047a694: pushfq; and al, 0x80; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000402e1f: pushfq; and al, 0xa8; add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret; 
0x0000000000496c2c: pushfq; and al, 0xb8; add byte ptr [rax], al; add cl, ch; ret; 
0x0000000000495b0e: pushfq; and al, 0xc0; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x000000000049874e: pushfq; and al, 0xe8; add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x0000000000498fd6: pushfq; and al, 0xf0; add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x0000000000402220: pushfq; mov byte ptr [rax], 0; ret; 
0x000000000040ada8: pushfq; mov byte ptr [rsp + 0x48], 1; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000047c609: pushfq; mov rax, qword ptr [rsp + 0x88]; mov rax, qword ptr [rax + 0x48]; mov rcx, qword ptr [rsp + 0x90]; mov qword ptr [rsp], rcx; call rax; 
0x000000000043af78: pushfq; ret 0x11; 
0x000000000045dd6b: pushfq; ret 0x1230; 
0x000000000043facd: pushfq; ret 0xebe9; 
0x0000000000491ef7: pushfq; ret; 
0x000000000042b68f: pushfq; rol dword ptr [rcx + rcx*8 + 0x44c69775], 0x24; adc byte ptr [rcx], al; ret; 
0x0000000000460b33: pxor mm0, mm1; movq qword ptr [rdx], xmm8; ret; 
0x0000000000460b29: pxor mm0, mm2; pxor xmm9, xmm11; pxor xmm8, xmm9; movq qword ptr [rdx], xmm8; ret; 
0x000000000046088f: pxor mm1, mm0; aesenc xmm1, xmm1; aesenc xmm1, xmm1; aesenc xmm1, xmm1; movq qword ptr [rdx], xmm1; ret; 
0x0000000000460b2e: pxor mm1, mm3; pxor xmm8, xmm9; movq qword ptr [rdx], xmm8; ret; 
0x000000000046090c: pxor mm2, mm3; movq qword ptr [rdx], xmm2; ret; 
0x00000000004609ad: pxor mm4, mm5; movq qword ptr [rdx], xmm4; ret; 
0x00000000004609a5: pxor mm4, mm6; pxor xmm5, xmm7; pxor xmm4, xmm5; movq qword ptr [rdx], xmm4; ret; 
0x00000000004609a9: pxor mm5, mm7; pxor xmm4, xmm5; movq qword ptr [rdx], xmm4; ret; 
0x000000000046088e: pxor xmm1, xmm0; aesenc xmm1, xmm1; aesenc xmm1, xmm1; aesenc xmm1, xmm1; movq qword ptr [rdx], xmm1; ret; 
0x000000000046090b: pxor xmm2, xmm3; movq qword ptr [rdx], xmm2; ret; 
0x00000000004609ac: pxor xmm4, xmm5; movq qword ptr [rdx], xmm4; ret; 
0x00000000004609a4: pxor xmm4, xmm6; pxor xmm5, xmm7; pxor xmm4, xmm5; movq qword ptr [rdx], xmm4; ret; 
0x00000000004609a8: pxor xmm5, xmm7; pxor xmm4, xmm5; movq qword ptr [rdx], xmm4; ret; 
0x0000000000460b27: pxor xmm8, xmm10; pxor xmm9, xmm11; pxor xmm8, xmm9; movq qword ptr [rdx], xmm8; ret; 
0x0000000000460b31: pxor xmm8, xmm9; movq qword ptr [rdx], xmm8; ret; 
0x0000000000460b2c: pxor xmm9, xmm11; pxor xmm8, xmm9; movq qword ptr [rdx], xmm8; ret; 
0x0000000000412073: rcl byte ptr [rax + 0x40418948], 1; ret; 
0x0000000000441cde: rcl byte ptr [rax + 0x44c6b5eb], 0x24; sub byte ptr [rax], al; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000456ede: rcl byte ptr [rax + 0x48], 0x89; and al, 0x10; ret; 
0x00000000004107fe: rcl byte ptr [rax - 0x72b76115], cl; add eax, 0x176f37; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000484ea4: rcl byte ptr [rsp + rax], 1; add byte ptr [rax - 0x77], cl; and al, 0x48; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042095d: rcl dword ptr [r8 + 0x24548948], cl; jo 0x209ae; mov dword ptr [rsp + 0x78], eax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000042095e: rcl dword ptr [rax + 0x24548948], cl; jo 0x209ae; mov dword ptr [rsp + 0x78], eax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000422f4b: rcl dword ptr [rax], cl; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000446ee9: rcl dword ptr [rbx], 0x89; ret 0xe8c1; 
0x000000000045a525: rcr byte ptr [rax + 0x48], 0x89; add al, 0x24; call 0xaa40; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000456ef2: rcr byte ptr [rax + 0x48], 0x89; and al, 0x10; ret; 
0x00000000004650b0: rcr byte ptr [rax + rax], 0; add byte ptr [rdi], cl; add eax, 0x20244489; ret; 
0x0000000000463111: rdtsc; shl rdx, 0x20; add rax, rdx; mov qword ptr [rsp + 8], rax; ret; 
0x0000000000462d43: rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x10000018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004629c3: rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x1000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462643: rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x100018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004622c3: rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x10018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461f43: rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x1018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461c2d: rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x118]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462e23: rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x20000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462aa3: rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x2000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462723: rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x200018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004623a3: rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x20018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462023: rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x2018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461ced: rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x218]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461a12: rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x38]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462f03: rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x40000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462b83: rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x4000018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462803: rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x400018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462483: rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x40018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462103: rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x4018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461dad: rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x418]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461ab2: rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x58]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462c63: rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x8000018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004628e3: rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x800018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462563: rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x80018]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004621e3: rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x8018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461e6d: rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x818]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461b6a: rep movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x98]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004640f0: rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000405cd1: ret 0; 
0x000000000045140a: ret 0x10; 
0x0000000000440d91: ret 0x1164; 
0x0000000000427c6a: ret 0x1194; 
0x000000000043af1c: ret 0x11; 
0x000000000043b7a2: ret 0x11ba; 
0x000000000045dd6c: ret 0x1230; 
0x000000000044a5bf: ret 0x13; 
0x000000000043a21c: ret 0x14; 
0x0000000000439f02: ret 0x14d0; 
0x000000000044e099: ret 0x14d; 
0x0000000000438759: ret 0x14df; 
0x0000000000438399: ret 0x14e2; 
0x0000000000436d99: ret 0x14f8; 
0x000000000042167b: ret 0x15; 
0x0000000000421846: ret 0x15c0; 
0x000000000041e81a: ret 0x15c; 
0x00000000004150d2: ret 0x168b; 
0x00000000004194a2: ret 0x16cf; 
0x0000000000418c9d: ret 0x16d7; 
0x0000000000419432: ret 0x16e7; 
0x0000000000465ac4: ret 0x16e8; 
0x000000000040a402: ret 0x17; 
0x00000000004019c1: ret 0x1850; 
0x0000000000428f4a: ret 0x1876; 
0x000000000041b21a: ret 0x192; 
0x0000000000428c3a: ret 0x19; 
0x000000000041a71a: ret 0x19d; 
0x000000000048e3fa: ret 0x1af; 
0x000000000043069a: ret 0x1b; 
0x0000000000451c80: ret 0x1ce9; 
0x000000000040505b: ret 0x1f0f; 
0x0000000000448957: ret 0x1f77; 
0x000000000041432b: ret 0x1f; 
0x0000000000430800: ret 0x1fff; 
0x000000000049037a: ret 0x200; 
0x00000000004369f8: ret 0x2075; 
0x000000000043241a: ret 0x20; 
0x0000000000422977: ret 0x24e9; 
0x0000000000429b98: ret 0x2548; 
0x0000000000409dfc: ret 0x257d; 
0x0000000000405cf4: ret 0x26e9; 
0x000000000040c01a: ret 0x284; 
0x0000000000487450: ret 0x2875; 
0x000000000040b41a: ret 0x290; 
0x0000000000427591: ret 0x2948; 
0x00000000004047b5: ret 0x2949; 
0x000000000042c455: ret 0x294c; 
0x0000000000451159: ret 0x2ae9; 
0x00000000004685ef: ret 0x2be9; 
0x0000000000407a9a: ret 0x2c0; 
0x000000000043513a: ret 0x2e2; 
0x000000000043659b: ret 0x2f75; 
0x0000000000473b5d: ret 0x3145; 
0x0000000000409257: ret 0x3148; 
0x000000000042f556: ret 0x31fc; 
0x000000000042f99a: ret 0x33d; 
0x00000000004129a7: ret 0x3473; 
0x0000000000459c5b: ret 0x3674; 
0x000000000041afd9: ret 0x367d; 
0x0000000000401610: ret 0x3948; 
0x0000000000433a3f: ret 0x3949; 
0x0000000000475ff8: ret 0x394c; 
0x0000000000428170: ret 0x394d; 
0x00000000004360ea: ret 0x3a0; 
0x000000000048011a: ret 0x3a1; 
0x000000000040c701: ret 0x3ae9; 
0x000000000048d514: ret 0x3b7d; 
0x000000000046cf9a: ret 0x3c3; 
0x000000000040c82e: ret 0x3d48; 
0x0000000000442668: ret 0x3d75; 
0x0000000000450558: ret 0x3d7c; 
0x0000000000435913: ret 0x3d83; 
0x0000000000432a93: ret 0x3de9; 
0x0000000000412169: ret 0x3f; 
0x00000000004374ef: ret 0x400; 
0x0000000000476d9d: ret 0x4130; 
0x0000000000445cab: ret 0x41e9; 
0x0000000000473632: ret 0x43e9; 
0x000000000040c772: ret 0x4466; 
0x00000000004678a2: ret 0x4473; 
0x000000000044187c: ret 0x448b; 
0x0000000000460b2b: ret 0x4566; 
0x000000000041b11a: ret 0x466; 
0x0000000000419fba: ret 0x476; 
0x000000000041bc9a: ret 0x47a; 
0x0000000000441f53: ret 0x4802; 
0x0000000000414eda: ret 0x4804; 
0x0000000000430738: ret 0x4807; 
0x00000000004137bf: ret 0x4808; 
0x0000000000406aed: ret 0x4810; 
0x000000000040befc: ret 0x4828; 
0x00000000004161ab: ret 0x4830; 
0x00000000004515b3: ret 0x4834; 
0x00000000004161b5: ret 0x4838; 
0x0000000000420873: ret 0x4840; 
0x0000000000427963: ret 0x4878; 
0x000000000040433e: ret 0x4890; 
0x000000000046536c: ret 0x48b8; 
0x000000000047ab64: ret 0x48d; 
0x00000000004759c0: ret 0x48e9; 
0x0000000000421822: ret 0x48f0; 
0x000000000048511f: ret 0x48f1; 
0x0000000000422aa8: ret 0x48f2; 
0x0000000000444aff: ret 0x48f8; 
0x0000000000413b20: ret 0x48fc; 
0x0000000000413444: ret 0x4990; 
0x0000000000412bfa: ret 0x4a7d; 
0x0000000000412aa8: ret 0x4c08; 
0x00000000004129cc: ret 0x4c10; 
0x000000000041618e: ret 0x4c18; 
0x00000000004510b2: ret 0x4d08; 
0x00000000004510d2: ret 0x4d10; 
0x00000000004510ff: ret 0x4d18; 
0x000000000045111b: ret 0x4d20; 
0x0000000000471261: ret 0x4d4; 
0x000000000042a95d: ret 0x4d90; 
0x0000000000470301: ret 0x4e8; 
0x000000000046c4fe: ret 0x534; 
0x000000000044eb6d: ret 0x5489; 
0x0000000000450cd8: ret 0x5572; 
0x000000000041fd02: ret 0x5673; 
0x0000000000466384: ret 0x56e8; 
0x000000000040d018: ret 0x570f; 
0x000000000045bf1a: ret 0x58; 
0x000000000046b4f4: ret 0x597e; 
0x000000000041d51a: ret 0x59; 
0x000000000043b0da: ret 0x5d; 
0x0000000000401d1a: ret 0x5fa; 
0x0000000000483085: ret 0x60; 
0x000000000046b3f5: ret 0x627e; 
0x0000000000467bc2: ret 0x6473; 
0x000000000048e63c: ret 0x6608; 
0x000000000040d020: ret 0x6690; 
0x000000000045b956: ret 0x692; 
0x0000000000442656: ret 0x6c75; 
0x000000000044c975: ret 0x6f72; 
0x000000000042b09a: ret 0x71; 
0x0000000000456e19: ret 0x7402; 
0x00000000004687b5: ret 0x7404; 
0x000000000040fcb8: ret 0x7408; 
0x000000000040290b: ret 0x7420; 
0x000000000040c8d3: ret 0x74e9; 
0x0000000000484beb: ret 0x7520; 
0x0000000000473578: ret 0x7574; 
0x0000000000414593: ret 0x7575; 
0x000000000042cf1a: ret 0x75; 
0x0000000000407a4e: ret 0x75b0; 
0x0000000000420382: ret 0x776; 
0x000000000044a67f: ret 0x777; 
0x000000000045cd63: ret 0x77e8; 
0x000000000045a90d: ret 0x7881; 
0x000000000047a478: ret 0x79e9; 
0x000000000047d8a2: ret 0x7a75; 
0x000000000044dedf: ret 0x7a8d; 
0x000000000042f560: ret 0x7ae8; 
0x00000000004922b6: ret 0x7ce9; 
0x0000000000465366: ret 0x800; 
0x000000000040fccd: ret 0x80fe; 
0x0000000000483197: ret 0x8148; 
0x00000000004518e2: ret 0x820f; 
0x0000000000431958: ret 0x82e8; 
0x000000000045cc63: ret 0x830f; 
0x0000000000416198: ret 0x8328; 
0x000000000046ac8a: ret 0x8341; 
0x000000000040dfa9: ret 0x8348; 
0x000000000040c326: ret 0x8349; 
0x000000000042c2ce: ret 0x8445; 
0x000000000042030f: ret 0x8478; 
0x0000000000495d5e: ret 0x848b; 
0x000000000040571e: ret 0x8490; 
0x000000000041ec2f: ret 0x84; 
0x000000000040bf2f: ret 0x850f; 
0x00000000004045af: ret 0x8548; 
0x0000000000428161: ret 0x854d; 
0x0000000000410c43: ret 0x860f; 
0x000000000041e2f7: ret 0x86eb; 
0x000000000042cb62: ret 0x870f; 
0x000000000044729a: ret 0x872; 
0x000000000040b973: ret 0x8748; 
0x000000000044bec6: ret 0x876; 
0x000000000042bbba: ret 0x87; 
0x0000000000433faf: ret 0x8830; 
0x0000000000459db3: ret 0x8944; 
0x00000000004010a4: ret 0x8948; 
0x00000000004047aa: ret 0x8949; 
0x000000000040997b: ret 0x894c; 
0x0000000000421c86: ret 0x894d; 
0x0000000000421f4a: ret 0x8966; 
0x00000000004340d2: ret 0x8a1; 
0x0000000000433dc0: ret 0x8a3; 
0x000000000041ee73: ret 0x8a40; 
0x00000000004105c2: ret 0x8b48; 
0x0000000000408f8a: ret 0x8b4c; 
0x000000000041b62e: ret 0x8b90; 
0x00000000004580e8: ret 0x8d0f; 
0x000000000040dd97: ret 0x8d48; 
0x00000000004507f2: ret 0x8d49; 
0x0000000000451172: ret 0x8d4a; 
0x000000000042759f: ret 0x8d4b; 
0x0000000000441e5f: ret 0x8d4c; 
0x000000000042a98a: ret 0x8d4d; 
0x000000000048afd4: ret 0x8e0f; 
0x000000000043f3c1: ret 0x8f0f; 
0x0000000000413b72: ret 0x9004; 
0x00000000004425bd: ret 0x9066; 
0x000000000045c452: ret 0x9090; 
0x000000000042d4d6: ret 0x90d; 
0x000000000048509d: ret 0x90f3; 
0x000000000040a89d: ret 0x9189; 
0x00000000004033be: ret 0x940f; 
0x0000000000441f64: ret 0x948; 
0x0000000000465644: ret 0x96e8; 
0x00000000004478f5: ret 0x96e9; 
0x0000000000409046: ret 0x98eb; 
0x00000000004033cc: ret 0x9b0f; 
0x00000000004095fa: ret 0xa0a; 
0x000000000041757a: ret 0xa70; 
0x000000000042ca48: ret 0xa75; 
0x000000000048c14c: ret 0xa76; 
0x000000000041b754: ret 0xa77; 
0x00000000004123df: ret 0xa; 
0x0000000000404167: ret 0xab7f; 
0x0000000000473953: ret 0xaf0f; 
0x00000000004252ba: ret 0xb2; 
0x000000000042086f: ret 0xb48; 
0x000000000040f1cb: ret 0xb60f; 
0x0000000000465a24: ret 0xb6e8; 
0x0000000000467bfd: ret 0xb70f; 
0x00000000004195d5: ret 0xb848; 
0x000000000041fd39: ret 0xb8; 
0x0000000000493ed4: ret 0xb; 
0x000000000041b1b0: ret 0xba80; 
0x000000000040b6e1: ret 0xbb48; 
0x0000000000405d39: ret 0xbce9; 
0x000000000043e047: ret 0xc031; 
0x0000000000443c01: ret 0xc141; 
0x000000000040455c: ret 0xc148; 
0x000000000040434b: ret 0xc149; 
0x000000000042821a: ret 0xc2; 
0x000000000048acc2: ret 0xc57d; 
0x00000000004161bf: ret 0xc620; 
0x0000000000415a9b: ret 0xc748; 
0x0000000000405d2b: ret 0xcae9; 
0x0000000000421621: ret 0xcb74; 
0x0000000000430e1d: ret 0xcccc; 
0x00000000004043a6: ret 0xcdeb; 
0x000000000040d0ee: ret 0xcfeb; 
0x00000000004033d1: ret 0xd121; 
0x0000000000417c75: ret 0xd148; 
0x000000000040ef02: ret 0xd1ff; 
0x0000000000404b78: ret 0xd284; 
0x000000000042a4af: ret 0xd348; 
0x0000000000414b17: ret 0xd349; 
0x0000000000440ede: ret 0xd389; 
0x00000000004540d2: ret 0xd3ff; 
0x0000000000465504: ret 0xd6e8; 
0x000000000046b99a: ret 0xdb31; 
0x0000000000408fbe: ret 0xdbcf; 
0x00000000004710a2: ret 0xde9; 
0x000000000045aa41: ret 0xe3eb; 
0x00000000004456ca: ret 0xe8c1; 
0x000000000041ba36: ret 0xe974; 
0x0000000000441245: ret 0xead1; 
0x000000000041665e: ret 0xeb90; 
0x000000000043face: ret 0xebe9; 
0x0000000000409a29: ret 0xf01; 
0x000000000040e5b3: ret 0xf04; 
0x00000000004103a2: ret 0xf08; 
0x000000000041ece7: ret 0xf189; 
0x0000000000494999: ret 0xf1c; 
0x000000000041507c: ret 0xf28; 
0x0000000000448c8b: ret 0xf40; 
0x000000000041319e: ret 0xf41; 
0x000000000040e464: ret 0xf44; 
0x0000000000420903: ret 0xf48; 
0x0000000000421b64: ret 0xf49; 
0x0000000000402200: ret 0xf66; 
0x0000000000413650: ret 0xf741; 
0x000000000041ad9e: ret 0xf748; 
0x00000000004814a1: ret 0xf749; 
0x000000000047e31a: ret 0xf83f; 
0x0000000000459678: ret 0xf8c1; 
0x000000000047c8fa: ret 0xf941; 
0x000000000041e343: ret 0xf989; 
0x0000000000465a1a: ret 0xf9c8; 
0x00000000004658fa: ret 0xfa2e; 
0x000000000046359a: ret 0xfa32; 
0x00000000004974e4: ret 0xfb0; 
0x000000000045b8a2: ret 0xfb9; 
0x0000000000443405: ret 0xfb; 
0x00000000004728ba: ret 0xfbf0; 
0x0000000000430795: ret 0xfc7f; 
0x000000000044149a: ret 0xfc93; 
0x0000000000499c7a: ret 0xfca3; 
0x000000000043e45a: ret 0xfd6a; 
0x0000000000402132: ret 0xfdc5; 
0x00000000004563da: ret 0xfdd9; 
0x000000000045611a: ret 0xfde3; 
0x0000000000455aba: ret 0xfde8; 
0x00000000004551ba: ret 0xfdf1; 
0x0000000000454c1a: ret 0xfdf8; 
0x000000000044671a: ret 0xfedd; 
0x000000000044449a: ret 0xfef6; 
0x000000000044461a: ret 0xfefe; 
0x00000000004719fa: ret 0xff18; 
0x00000000004718fa: ret 0xff19; 
0x0000000000417705: ret 0xff2; 
0x00000000004405da: ret 0xff37; 
0x000000000044051a: ret 0xff3f; 
0x000000000042a0a5: ret 0xff48; 
0x000000000043b89a: ret 0xff82; 
0x0000000000450722: ret 0xff83; 
0x000000000043941a: ret 0xffb0; 
0x0000000000472190: ret 0xffb1; 
0x0000000000471e70: ret 0xffcb; 
0x000000000043671a: ret 0xffd3; 
0x0000000000471c70: ret 0xffdc; 
0x000000000043641a: ret 0xffe0; 
0x0000000000496e5a: ret 0xffe7; 
0x0000000000471a70: ret 0xffed; 
0x000000000043489a: ret 0xfff2; 
0x000000000047879a: ret 0xfff7; 
0x000000000048e642: ret 0xfff8; 
0x0000000000471717: ret 0xfff9; 
0x00000000004742e7: ret 0xfffb; 
0x000000000047ea5a: ret 0xfffc; 
0x000000000041d5e6: ret 0xfffd; 
0x000000000040eee8: ret 0xfffe; 
0x0000000000413be5: ret 0xffff; 
0x0000000000402fe5: ret 1; 
0x0000000000407865: ret 2; 
0x000000000040c1ae: ret 3; 
0x000000000046ac90: ret 4; 
0x0000000000416925: ret 5; 
0x0000000000446d2c: ret 6; 
0x000000000040c169: ret 7; 
0x00000000004327bd: ret 8; 
0x00000000004227f1: ret 9; 
0x0000000000418c81: ret; 
0x000000000048aef9: retf 0; add byte ptr [rax - 0x77], cl; shr bl, 1; or ecx, dword ptr [rax - 0x77]; ret 0x8b48; 
0x00000000004650dd: retf 0; add byte ptr [rdi], cl; add eax, 0x30244489; ret; 
0x000000000042bf4f: retf 0x1472; mov qword ptr [rsp + 0x48], rbx; mov qword ptr [rsp + 0x50], rsi; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042bdc5: retf 0x1475; mov qword ptr [rsp + 0x30], rax; mov qword ptr [rsp + 0x38], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000464ce3: retf 0x3b9a; add rax, rdx; mov qword ptr [rsp + 0x20], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000415112: retf 0x4828; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045e0fb: retf 0x675; mov byte ptr [rsp + 0x10], 0x21; ret; 
0x000000000041cfd1: retf 0xd77f; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000040dd90: retf 0xf48; scasd eax, dword ptr [rdi]; ror dword ptr [rax + 1], cl; ret 0x8d48; 
0x0000000000415fa2: retf 0xf75; test rax, rax; jne 0x15fb4; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000423aa1: retf 0xfa80; add dword ptr [rdi + 0xa], esi; cmp qword ptr [rcx + 0x70], rax; seta byte ptr [rsp + 0x10]; ret; 
0x000000000045c892: retf 0xfd59; call qword ptr [rax + 0x4f44e8]; add bl, ch; ret 0xcccc; 
0x0000000000493add: retf 0xff48; ret; 
0x0000000000405d2d: retf 0xfff9; dec dword ptr [rax - 0x75]; sbb byte ptr [rax - 0x7b], cl; fisttp dword ptr [rdi]; xchg eax, esp; ret 0xbce9; 
0x00000000004631d1: retf; adc al, byte ptr ss:[rax]; movq qword ptr [rsp + 0x18], xmm0; ret; 
0x000000000047d983: retf; jl 0x7d972; mov dword ptr [rsp + 0x28], edx; ret; 
0x00000000004720da: retf; mov bh, 0xff; jmp qword ptr [rsi - 0x70]; 
0x00000000004141f4: retf; mov byte ptr [rsi], bl; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x000000000046abdb: retf; mov byte ptr [rsp + 0x38], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044c5d5: retf; mov dword ptr [rax + 0x124], ebx; lea eax, [rdx + rbx]; mov dword ptr [rsp + 8], eax; ret; 
0x00000000004287df: retf; mov qword ptr [rsp + 8], rbx; mov rcx, qword ptr [rsp + 0x110]; lea rdx, [rsp + 0x110]; call rcx; 
0x0000000000437602: retf; mov rax, qword ptr [rdx]; call rax; 
0x0000000000460b30: retf; pxor xmm8, xmm9; movq qword ptr [rdx], xmm8; ret; 
0x0000000000417bb1: retf; ret 1; 
0x0000000000471dba: retf; sar edi, 1; jmp qword ptr [rsi - 0x70]; 
0x000000000041fd0b: retf; test rbx, rbx; jne 0x1fd1b; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000049740c: rol byte ptr [rax + 0x48], 0x89; add al, 0x24; call 0x926c0; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000456ebb: rol byte ptr [rax + 0x48], 0x89; and al, 0x10; ret; 
0x000000000041e2a9: rol byte ptr [rax + rax*8 - 0x74b7f58c], 0x6c; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000459525: rol byte ptr [rax + rcx*2], 0x89; and al, 0x40; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004580e2: rol byte ptr [rax], 0; add byte ptr [rax + 0x39], cl; ret 0x8d0f; 
0x0000000000482887: rol byte ptr [rax], 0; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x70; add rsp, 0x78; ret; 
0x0000000000495b10: rol byte ptr [rax], 0; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x00000000004652f4: rol byte ptr [rax], 0; add byte ptr [rax], al; mov eax, 0x119; syscall; 
0x00000000004652f4: rol byte ptr [rax], 0; add byte ptr [rax], al; mov eax, 0x119; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000455da8: rol byte ptr [rax], 0; add byte ptr [rbp + 0xf], dh; mov byte ptr [rsp + 0x50], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040f86b: rol byte ptr [rax], 0; add byte ptr [rdi], cl; mov dh, 0x59; or dh, dh; ret; 
0x000000000045fdf0: rol byte ptr [rax], 1; add byte ptr [rax], al; add rsp, 0xd8; ret; 
0x000000000043c95d: rol byte ptr [rax], 1; add byte ptr [rax], al; inc dword ptr [rax + 0x14]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004200fd: rol byte ptr [rax], 1; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000048f9a1: rol byte ptr [rax], 1; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x0000000000486df3: rol byte ptr [rax], 1; add byte ptr [rax], al; mov rsi, qword ptr [rsp + 0x78]; mov qword ptr [rsp], rsi; call rbx; 
0x000000000045f576: rol byte ptr [rax], 1; add byte ptr [rax], al; movsxd rax, dword ptr [rax]; mov qword ptr [rsp + 8], rax; ret; 
0x0000000000413d5b: rol byte ptr [rax], 1; add byte ptr [rax], al; nop; ret; 
0x0000000000401625: rol byte ptr [rax], 1; add byte ptr [rax], al; ret; 
0x0000000000443183: rol byte ptr [rbp + 0x480a7cc0], 0x8b; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000042d072: rol byte ptr [rbp + 0x480f74c0], 0x89; and al, 0x30; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000425659: rol byte ptr [rbx], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000457aae: rol byte ptr [rbx], 0x48; mov dword ptr [rsp + 0x10], eax; mov qword ptr [rsp + 0x18], rcx; ret; 
0x0000000000459464: rol byte ptr [rbx], 0x48; mov dword ptr [rsp + 0x40], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043d32c: rol byte ptr [rbx], 1; add byte ptr [rax], al; add rsp, 0x3d8; ret; 
0x000000000044d37c: rol byte ptr [rcx], 0; add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp - 0x1f], 0x48; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000049801c: rol byte ptr [rcx], 1; add byte ptr [rax], al; ret; 
0x00000000004593e5: rol byte ptr [rdx], 0x48; mov dword ptr [rsp + 0x40], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000041b0e6: rol byte ptr [rdx], 0x89; add eax, 0x16bede; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000437822: rol byte ptr [rdx], 1; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x000000000040df9c: rol byte ptr [rip + 0x1f244488], 0xe9; out dx, eax; add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret 0x8348; 
0x000000000040e213: rol byte ptr [rip + 0x1f244488], 0xe9; test dword ptr [rax], 0xff480000; ret 0x8348; 
0x00000000004152a1: rol byte ptr [rsi], 0; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x0000000000457c8e: rol cx, 8; movzx ecx, cx; cmp rcx, 1; je 0x57ca1; mov byte ptr [rsp + 0x10], 0; ret; 
0x0000000000452dd6: rol dword ptr [rax + 0x10247c], 1; jne 0x52d65; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x000000000044f127: rol dword ptr [rax - 0x76bb288b], 0x44; and al, 0x38; mov dword ptr [rsp + 0x3c], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000461493: rol dword ptr [rax], 0; add byte ptr [rax], al; call rax; 
0x00000000004510a5: rol dword ptr [rax], 0; add byte ptr [rdi], cl; sbb dword ptr [rsi + 1], 0; add byte ptr [rbx + rcx*4 + 0x54], cl; ret 0x4d08; 
0x000000000044f70c: rol dword ptr [rbx + 0x2788], 0x48; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000421ea4: rol dword ptr [rcx + 0x21], cl; ret; 
0x000000000044317f: rol dword ptr [rcx + 0x28], 0xff; rol byte ptr [rbp + 0x480a7cc0], 0x8b; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x00000000004141f1: rol dword ptr [rcx + rcx - 0x35], cl; mov byte ptr [rsi], bl; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x000000000042b690: rol dword ptr [rcx + rcx*8 + 0x44c69775], 0x24; adc byte ptr [rcx], al; ret; 
0x000000000041633a: rol dword ptr [rcx + rcx*8 - 0x74b7f58b], 0x6c; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000441058: rol dword ptr [rcx], 0x48; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000041c64e: rol dword ptr [rcx], 0x48; mov ebp, dword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004381ea: rol dword ptr [rcx], 0x48; mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000457a29: rol dword ptr [rdx], 0x75; or cl, byte ptr [rax - 0x39]; and al, 0x10; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000042dc9b: rol dword ptr [rdx], 0x88; and al, 0x28; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x00000000004060ce: rol dword ptr [rip + 0x4882eb00], cl; mov dword ptr [rsp + 0x18], 0; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x00000000004044b6: rol dword ptr [rip + 0x6c8b4800], 1; and al, 0x78; sub rsp, -0x80; ret; 
0x0000000000457c8f: rol ecx, 8; movzx ecx, cx; cmp rcx, 1; je 0x57ca1; mov byte ptr [rsp + 0x10], 0; ret; 
0x0000000000441cc7: ror byte ptr [rax + 0x29], 1; ret; 
0x0000000000402469: ror byte ptr [rax + 0x29], cl; test dword ptr [rax + 1], 0x108949fa; vzeroupper; ret; 
0x000000000041819d: ror byte ptr [rax + 0x48182444], 0x8b; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x0000000000465d91: ror byte ptr [rax + 0x48402444], 0x8b; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; nop; ret; 
0x0000000000401cbc: ror byte ptr [rax + 0x48402444], 0x8b; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000478fe0: ror byte ptr [rax + 0x48402444], 0x8b; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x0000000000455f5d: ror byte ptr [rax + 0x48602444], 0x8b; insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; ret; 
0x000000000047e558: ror byte ptr [rax + 0x48602444], 0x8b; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x000000000046887a: ror byte ptr [rax + 0x48782444], 0x8b; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x0000000000456ec5: ror byte ptr [rax + 0x48], 0x89; and al, 0x10; ret; 
0x000000000042a3e0: ror byte ptr [rax + 1], 0xd0; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000431ec6: ror byte ptr [rax - 0x39], 0; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xb8]; add rsp, 0xc0; ret; 
0x0000000000464f91: ror byte ptr [rax - 0x39], 0x44; and al, 0x28; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x30], rax; ret; 
0x0000000000439f6a: ror byte ptr [rax - 0x39], cl; ret; 
0x000000000043e200: ror byte ptr [rax - 0x73], 0xd; test byte ptr [rdx + 0x1870014], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040ee44: ror byte ptr [rax - 0x74b7b4be], 0x44; and al, 0x30; mov qword ptr [rdx + 0x58], rax; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000464ffd: ror byte ptr [rax - 0x75], 1; and al, 0x24; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046508b: ror byte ptr [rax - 0x75], 1; and al, 0x24; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043ad02: ror byte ptr [rax - 0x75], 1; insb byte ptr [rdi], dx; and al, 0x50; add rsp, 0x58; ret; 
0x000000000046308c: ror byte ptr [rax - 0x75], 1; je 0x630b5; sub byte ptr [rax - 0x77], cl; hlt; mov dword ptr [rsp + 0x18], eax; ret; 
0x0000000000497deb: ror byte ptr [rax - 0x75], cl; and al, 8; mov rcx, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000451464: ror byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000437db2: ror byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x0000000000457a62: ror byte ptr [rax - 0x77], 0x44; and al, 0x10; ret; 
0x00000000004994ed: ror byte ptr [rax - 0x77], 0x44; and al, 0x28; call 0x97ca0; mov rbp, qword ptr [rsp + 0x1c8]; add rsp, 0x1d0; ret; 
0x0000000000467aff: ror byte ptr [rax - 0x77], 0x44; and al, 0x28; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004593cf: ror byte ptr [rax - 0x77], 0x44; and al, 0x40; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000047bb3f: ror byte ptr [rax - 0x77], 0x44; and al, 0x50; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004051d1: ror byte ptr [rax - 0x77], 0x44; and al, 8; call 0x34f20; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000405e7b: ror byte ptr [rax - 0x77], 0x44; and al, 8; call 0x34f20; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000454ade: ror byte ptr [rax - 0x77], 0x54; and al, 0x70; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000464ce8: ror byte ptr [rax - 0x77], 1; and al, 0x20; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000467697: ror byte ptr [rax - 0x77], 1; and al, 0x30; mov qword ptr [rsp + 0x38], rbx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000467350: ror byte ptr [rax - 0x77], 1; and al, 0x40; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004831c8: ror byte ptr [rax - 0x77], 1; and al, 0x50; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042a3e3: ror byte ptr [rax - 0x77], 1; and al, 0x58; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000463119: ror byte ptr [rax - 0x77], 1; and al, 8; ret; 
0x0000000000464dac: ror byte ptr [rax - 0x77], 1; fmul qword ptr [rcx + 0x48382444]; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000464ddc: ror byte ptr [rax - 0x77], 1; in al, dx; pop rbp; ret; 
0x00000000004491a9: ror byte ptr [rax - 0x77], 1; pop rsp; and al, 0x20; ret; 
0x00000000004477c2: ror byte ptr [rax - 0x77], 1; ret; 
0x00000000004204ae: ror byte ptr [rax - 0x77], cl; push rsp; and al, 0x30; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042ceb5: ror byte ptr [rax - 0x79], 0x41; adc byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000450d00: ror byte ptr [rax - 0x79], 0x83; push 0x48000016; mov ebp, dword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000413b1d: ror byte ptr [rax - 0x7d], cl; ret 0x48fc; 
0x0000000000435b4d: ror byte ptr [rax], cl; adc eax, 0x6c8b4800; and al, 0x40; add rsp, 0x48; ret; 
0x000000000046502c: ror byte ptr [rbx], 0; add byte ptr [rax], al; syscall; 
0x000000000042e95c: ror byte ptr [rcx + 0x20302494], 1; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x2020]; add rsp, 0x2028; ret; 
0x000000000040d0dd: ror byte ptr [rcx + 0x48282444], 0x8b; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000401c47: ror byte ptr [rcx - 0x76f7dbbc], 1; push rsp; and al, 0xc; ret; 
0x0000000000443913: ror byte ptr [rcx - 0x77], 1; ret; 
0x0000000000401f4e: ror byte ptr [rdi + rcx + 0x4c], 1; ret; 
0x0000000000464f42: ror byte ptr [rdi], 0; add byte ptr [rax], al; syscall; 
0x0000000000415224: ror byte ptr [rdi], 0x11; adc byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000043221a: ror byte ptr [rdi], 0x11; and al, 0x10; ret; 
0x0000000000452821: ror byte ptr [rdi], 0x11; and al, 0x18; call 0x51480; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042c764: ror byte ptr [rdi], 0x11; and al, 0x18; ret; 
0x000000000044decd: ror byte ptr [rdi], 0x11; and al, 0x28; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000467483: ror byte ptr [rdi], 0x11; and al, 0x30; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000456fbc: ror byte ptr [rdi], 0x11; and al, 0x30; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044dd46: ror byte ptr [rdi], 0x11; and al, 0x38; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046bd9c: ror byte ptr [rdi], 0x11; and al, 0x40; mov byte ptr [rsp + 0x50], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004126a4: ror byte ptr [rdi], 0x11; and al, 0x40; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004675e3: ror byte ptr [rdi], 0x11; and al, 0x40; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040a4cf: ror byte ptr [rdi], 0x11; and al, 0x48; mov byte ptr [rsp + 0x58], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042bf94: ror byte ptr [rdi], 0x11; and al, 0x48; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048ecc7: ror byte ptr [rdi], 0x11; and al, 0x48; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000467115: ror byte ptr [rdi], 0x11; and al, 0x48; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000046c17a: ror byte ptr [rdi], 0x11; and al, 0x50; mov byte ptr [rsp + 0x60], 0; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048f097: ror byte ptr [rdi], 0x11; and al, 0x50; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000483012: ror byte ptr [rdi], 0x11; and al, 0x58; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048e135: ror byte ptr [rdi], 0x11; and al, 0x58; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000046056c: ror byte ptr [rdi], 0x11; and al, 0x60; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000048d595: ror byte ptr [rdi], 0x11; and al, 0x68; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000406b27: ror byte ptr [rdi], 0x11; and al, 0x68; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000472576: ror byte ptr [rdi], 0x11; and al, 0x78; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004113a8: ror byte ptr [rdi], 0x84; ret 3; 
0x00000000004346ca: ror byte ptr [rdi], 0x85; movabs byte ptr [0x48241c8948000001], al; mov eax, dword ptr [rip + 0x91e64]; lea rdx, [rip + 0x91e5d]; call rax; 
0x000000000042385d: ror byte ptr [rdi], 0x95; and al, 0x38; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040ae84: ror byte ptr [rdi], 0x95; and al, 0x48; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000418d1d: ror byte ptr [rdi], 0x9f; ret; 
0x000000000040c4f0: ror byte ptr [rdi], 1; adc dword ptr [rdi + 0x48000000], 0x29; ret 0x8948; 
0x0000000000457789: ror byte ptr [rdi], 1; xchg dword ptr [rax + 0x48000001], edi; mov dword ptr [rsp + 0x68], eax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000442d02: ror byte ptr [rdi], 1; xchg dword ptr [rax], edi; add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret 0x8948; 
0x0000000000401542: ror byte ptr [rdi], 1; xchg dword ptr [rdx + rax], edx; add byte ptr [rax + 0x29], cl; ret 0x8948; 
0x0000000000411209: ror byte ptr [rdi], 1; xchg eax, edx; ret 0x8b48; 
0x000000000042bdb2: ror byte ptr [rdi], 1; xchg eax, esi; ret 0x8b48; 
0x0000000000491ef5: ror byte ptr [rdi], cl; pushfq; ret; 
0x000000000043a29f: ror byte ptr [rdi], cl; xchg eax, ebp; ret 0xd284; 
0x000000000040571b: ror byte ptr [rdi], cl; xchg eax, esp; ret 0x8490; 
0x0000000000405d28: ror byte ptr [rdi], cl; xchg eax, esp; ret 0xcae9; 
0x0000000000487009: ror byte ptr [rdi], cl; xchg eax, esp; ret 0xd284; 
0x0000000000401fc3: ror byte ptr [rdx + 0xc3a1e0c], 0x1f; seta al; lea rax, [rax*2 - 1]; mov qword ptr [r9], rax; ret; 
0x00000000004416dd: ror byte ptr [rsi - 0x75], 0x84; ret; 
0x0000000000415e83: ror dword ptr [rax + 0x21], 0xc2; cmp rcx, rdx; jb 0x15e96; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042a24e: ror dword ptr [rax + 0x21], cl; sbb al, 0xc2; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044f251: ror dword ptr [rax + 0x2788], 0x48; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000433a3c: ror dword ptr [rax + 0x29], 1; ret 0x3949; 
0x000000000048b2cf: ror dword ptr [rax + 0x29], 1; ret 0x8948; 
0x0000000000482dca: ror dword ptr [rax + 0x29], cl; ret 0x4890; 
0x000000000041cfce: ror dword ptr [rax + 0x39], 0xca; jg 0x1cfab; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000436a0c: ror dword ptr [rax + 0x4830244c], 0x8b; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x00000000004208ec: ror dword ptr [rax + 0xf], 0x44; ret 0x4890; 
0x000000000042f11e: ror dword ptr [rax + 0xf], 0x4c; ret; 
0x000000000045c4b5: ror dword ptr [rax + 1], cl; fmul dword ptr [rcx - 0x40]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040dd94: ror dword ptr [rax + 1], cl; ret 0x8d48; 
0x0000000000441f5e: ror dword ptr [rax - 0x3f], 0xe1; and al, byte ptr [rcx]; ret 0x948; 
0x000000000044118c: ror dword ptr [rax - 0x75], 0x6c; and al, 0x30; add rsp, 0x38; ret; 
0x00000000004804be: ror dword ptr [rax - 0x75], 0xb4; and al, 0x20; add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000456ca9: ror dword ptr [rax - 0x75], 1; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x0000000000456d6b: ror dword ptr [rax - 0x75], 1; insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; ret; 
0x000000000045d6f0: ror dword ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000440d97: ror dword ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000043c1cd: ror dword ptr [rax - 0x77], 0x41; cmp qword ptr [rcx + 0x50], 0; jne 0x3c1da; ret; 
0x000000000042dea4: ror dword ptr [rax - 0x77], 0x44; and al, 0x28; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000040a0d2: ror dword ptr [rax - 0x77], 0x44; and al, 0x38; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044ee9b: ror dword ptr [rax - 0x77], 0x44; and al, 0x40; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000402680: ror dword ptr [rax - 0x77], 0x44; and al, 0x40; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044b62e: ror dword ptr [rax - 0x77], 0x44; and al, 0x48; mov qword ptr [rsp + 0x50], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000402997: ror dword ptr [rax - 0x77], 0x44; and al, 0x58; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000409223: ror dword ptr [rax - 0x77], 0x4c; and al, 0x18; ret; 
0x00000000004090d5: ror dword ptr [rax - 0x77], 0x4c; and al, 0x20; ret; 
0x000000000048aeb4: ror dword ptr [rax - 0x77], 0x4c; and al, 0x78; mov qword ptr [rsp + 0x10], rcx; nop; call rdx; 
0x0000000000473b5a: ror dword ptr [rax - 0x77], cl; ret 0x3145; 
0x00000000004148d2: ror dword ptr [rax - 0x7b], 0xc0; ja 0x148c4; mov qword ptr [rsp + 0x30], rdx; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000418137: ror dword ptr [rax - 0x7b], 0xc9; jg 0x1814c; mov byte ptr [rsp + 0x18], 1; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000447ace: ror dword ptr [rax - 0x7d], 0xf8; add dword ptr [rdi - 0xc], esi; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000042d383: ror dword ptr [rax - 0x7d], 0xf9; jl 0x2d362; ret; 
0x0000000000454ba1: ror dword ptr [rax - 0x7d], cl; ret; 
0x0000000000457c90: ror dword ptr [rax], 0xf; mov bh, 0xc9; cmp rcx, 1; je 0x57ca1; mov byte ptr [rsp + 0x10], 0; ret; 
0x0000000000401f4b: ror dword ptr [rcx - 0x77], cl; ror byte ptr [rdi + rcx + 0x4c], 1; ret; 
0x000000000042d563: ror dword ptr [rdi], 0; add byte ptr [rax], al; jne 0x2d582; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004912cb: ror dword ptr [rdi], 0x82; test dword ptr [rax], 0x89490000; ret 0x294c; 
0x0000000000403334: ror dword ptr [rdi], 0x94; ror dword ptr [rdi], 0x9b; shl byte ptr [rcx], 0xc1; mov byte ptr [rsp + 0x18], cl; ret; 
0x0000000000403337: ror dword ptr [rdi], 0x9b; shl byte ptr [rcx], 0xc1; mov byte ptr [rsp + 0x18], cl; ret; 
0x00000000004369ee: ror dword ptr [rdi], 0xba; call 0x2457f502; sub al, 0x39; ret 0x2075; 
0x00000000004023e6: ror dword ptr [rdi], 1; mov esp, 0x39ce74d2; fidiv dword ptr [rbx - 0x36]; mov qword ptr [r8], rdx; ret; 
0x00000000004023b4: ror dword ptr [rdi], 1; mov esp, 0x490875d2; mov dword ptr [rax], 0xffffffff; ret; 
0x0000000000402466: ror dword ptr [rdi], cl; mov esp, 0xf72948d2; add rdx, rdi; mov qword ptr [r8], rdx; vzeroupper; ret; 
0x0000000000447401: ror dword ptr [rdi], cl; xchg eax, edx; ret 0x894c; 
0x000000000045b301: ror dword ptr [rdx], 0xc6; cmp byte ptr [rax + 0x16], 0x48; mov ebp, dword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000046589f: ror dword ptr [rsi - 0x76b7fffb], 1; and al, 0x28; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000403333: ror dword ptr cs:[rdi], 0x94; ror dword ptr [rdi], 0x9b; shl byte ptr [rcx], 0xc1; mov byte ptr [rsp + 0x18], cl; ret; 
0x0000000000441bc2: sahf; and al, 0x20; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000441ccf: sahf; and al, 0x28; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000410801: sahf; lea rax, [rip + 0x176f37]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000441af8: sal al, 1; cmpxchg qword ptr [rcx + 0x10], rbx; sete dl; test dl, dl; je 0x41ae5; ret; 
0x000000000044196f: sal bh, cl; mov ecx, ebx; test edx, edx; jne 0x4196a; mov dword ptr [rsp + 0x10], ecx; ret; 
0x00000000004644ad: sal bl, 0x44; movq qword ptr [rbx - 0x30], mm2; movdqu xmmword ptr [rbx - 0x20], xmm11; movdqu xmmword ptr [rbx - 0x10], xmm12; ret; 
0x0000000000464589: sal bl, 0x44; movq qword ptr [rcx - 0x30], mm2; movdqu xmmword ptr [rcx - 0x20], xmm11; movdqu xmmword ptr [rcx - 0x10], xmm12; ret; 
0x00000000004642c6: sal bl, 0x44; movq qword ptr [rdi + rbx - 0x30], mm5; movdqu xmmword ptr [rdi + rbx - 0x20], xmm14; movdqu xmmword ptr [rdi + rbx - 0x10], xmm15; ret; 
0x00000000004644b3: sal bl, 1; movq qword ptr [rbx - 0x20], mm3; movdqu xmmword ptr [rbx - 0x10], xmm12; ret; 
0x000000000046458f: sal bl, 1; movq qword ptr [rcx - 0x20], mm3; movdqu xmmword ptr [rcx - 0x10], xmm12; ret; 
0x0000000000463fbb: sal bl, 1; movq qword ptr [rdi + rbx - 0x20], mm0; movdqu xmmword ptr [rdi + rbx - 0x10], xmm0; ret; 
0x00000000004642cd: sal bl, 1; movq qword ptr [rdi + rbx - 0x20], mm6; movdqu xmmword ptr [rdi + rbx - 0x10], xmm15; ret; 
0x0000000000464210: sal bl, 1; movq qword ptr [rdi + rbx - 0x20], mm6; movdqu xmmword ptr [rdi + rbx - 0x10], xmm7; ret; 
0x000000000046b353: sal byte ptr [rax + rcx + 0x48], 0x89; ret 0x8948; 
0x0000000000456eb1: sal byte ptr [rax], 0x48; mov dword ptr [rsp + 0x10], eax; ret; 
0x0000000000469c01: sal byte ptr [rbp + 0x10], 0x48; mov ebp, dword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000450cfc: sal byte ptr [rbp + 0x13], 0x31; ror byte ptr [rax - 0x79], 0x83; push 0x48000016; mov ebp, dword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000451c31: sal byte ptr [rbp + 0x14], 0x48; mov eax, dword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040a1c4: sal byte ptr [rbp + 0x16], 0x48; lea eax, [rip + 0x17d572]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044cb89: sal byte ptr [rbp + 0x1b], 0x48; test ecx, ecx; setg byte ptr [rsp + 0x168]; mov rbp, qword ptr [rsp + 0x100]; add rsp, 0x108; ret; 
0x000000000040c53c: sal byte ptr [rbp + 0x1d], 0x48; mov eax, dword ptr [rsp + 0x50]; mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x00000000004970b8: sal byte ptr [rbp + 0x42], 0x48; mov eax, dword ptr [rsp + 0x40]; mov rax, qword ptr [rax + 0x18]; mov rcx, qword ptr [rsp + 0x248]; mov qword ptr [rsp], rcx; call rax; 
0x000000000046af2e: sal byte ptr [rbp + 0xa], 0x48; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042fa88: sal byte ptr [rbp + 0xa], 0x48; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000415fa7: sal byte ptr [rbp + 0xa], 0x48; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000415cfb: sal byte ptr [rbp + 0xa], 0x48; mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000045ba78: sal byte ptr [rbp + 0xa], 0x48; mov ebp, dword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000041bea1: sal byte ptr [rbp + 0xa], 0x48; mov ebp, dword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000042f29a: sal byte ptr [rbp + 0xa], cl; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000047878f: sal byte ptr [rbp + 0xc], 0x8b; test byte ptr [rax + rcx*4], ah; add byte ptr [rax], al; add cl, ch; ret 0xfff7; 
0x000000000043a9b0: sal byte ptr [rbp + 0xe], 0xe8; call 0x4903a8f1; mov ebp, dword ptr [rsp]; add rsp, 8; ret; 
0x00000000004375cb: sal byte ptr [rbp + 0xf], 1; call 0x3ad60; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043b5d5: sal byte ptr [rbp + 0xf], cl; call 0x3ad60; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004023b7: sal byte ptr [rbp + 8], cl; mov qword ptr [r8], -1; ret; 
0x00000000004697c4: sal byte ptr [rbp + rcx + 0x48], 0x89; ret 0x8348; 
0x000000000044d382: sal byte ptr [rbp - 0x1f], 0x48; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048e6dc: sal byte ptr [rbp - 0x38], 1; mov byte ptr [rsp + 0x38], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004569d9: sal byte ptr [rbp - 0x5f], cl; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000441975: sal byte ptr [rbp - 0xe], cl; mov dword ptr [rsp + 0x10], ecx; ret; 
0x0000000000484082: sal byte ptr [rbx + rax + 0x48], 0x8b; add byte ptr [rax - 0x77], cl; and al, 0x40; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000422b9c: sal byte ptr [rbx + rdx + 0x48], 0x8b; and al, 0x18; mov qword ptr [rcx + 8], rax; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000040fcb0: sal byte ptr [rcx + 0xf], 0xb6; push rdx; or dh, dh; ret 0x7408; 
0x0000000000427cae: sal byte ptr [rcx + rax*4 + 0x48], 0x89; je 0x27cd9; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x000000000046b322: sal byte ptr [rcx + rbx*8 + 0x48], cl; mov eax, dword ptr [rdx]; call rax; 
0x000000000045e5c7: sal byte ptr [rcx + rcx + 0x48], 0x8b; add byte ptr [rax - 0x77], cl; and al, 0x10; ret; 
0x000000000045d6e5: sal byte ptr [rcx + rcx - 0x7d], 0x3d; imul ebx, dword ptr [rbx + 0x7500000f], 0x6c8b48d3; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000440d8c: sal byte ptr [rcx + rcx - 0x7d], 0x3d; ret 0x1164; 
0x0000000000422c61: sal byte ptr [rcx + rcx - 0x7d], cl; cmp eax, 0x1637f9; add dword ptr [rdx + rcx + 0x48], esi; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000451c7b: sal byte ptr [rcx + rcx*2 + 0x48], 0x89; ret 0x1ce9; 
0x0000000000461480: sal byte ptr [rcx + rsi + 0x48], 0x8d; xor eax, 0xfffff376; mov rdx, 0; mov rcx, 0; call rax; 
0x000000000048ed7b: sal byte ptr [rcx], 0xc9; mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042d72b: sal byte ptr [rcx], cl; fucomi st(3); add ecx, dword ptr [rax - 1]; ret 0x3948; 
0x0000000000412c50: sal byte ptr [rdi + 0x48], 0x8b; or byte ptr [rax - 0x75], cl; or byte ptr [rcx], sil; shr bl, cl; add ecx, dword ptr [rax - 1]; ret 0x3948; 
0x000000000042d074: sal byte ptr [rdi + rcx + 0x48], 0x89; and al, 0x30; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042cfd4: sal byte ptr [rdi + rcx + 0x48], 0x89; and al, 0x38; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000415c7c: sal byte ptr [rdi + rcx + 0x48], 1; ret; 
0x0000000000422b5b: sal byte ptr [rdi - 0x10], 1; ret; 
0x00000000004148d5: sal byte ptr [rdi - 0x14], 0x48; mov dword ptr [rsp + 0x30], edx; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000442fd5: sal byte ptr [rdx + rax - 0x77], 0x10; mov dword ptr [rsp + 0x20], ebx; ret; 
0x000000000041e2ab: sal byte ptr [rdx + rcx + 0x48], 0x8b; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000437801: sal byte ptr [rdx + rcx + 0x48], 0x8b; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x000000000042daa4: sal byte ptr [rdx + rcx + 0x48], 0x8b; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x0000000000423b3a: sal byte ptr [rdx + rcx + 0x48], cl; mov dword ptr [rsp + 0x10], 0; ret; 
0x000000000045ebad: sal byte ptr [rdx + rcx + 0x48], cl; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000047d527: sal byte ptr [rdx + rdx + 0x48], 0x8d; or eax, 0x614cf; mov qword ptr [rsp + 0x18], rcx; mov qword ptr [rsp + 0x20], rax; ret; 
0x0000000000467c87: sal byte ptr [rdx + rdx + 0x48], 0x8d; or eax, 0x769af; mov qword ptr [rsp + 0x18], rcx; mov qword ptr [rsp + 0x20], rax; ret; 
0x000000000040e9a8: sal byte ptr [rsi + rax + 0x48], 0x83; cmp byte ptr [rax], al; jne 0xe9bb; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000442fbc: sal byte ptr [rsi + rax - 0x39], 0; add byte ptr [rax], al; add byte ptr [rax], al; mov dword ptr [rsp + 0x20], 0x7fffffff; ret; 
0x000000000043220f: sal byte ptr [rsi + rax - 0x80], 0x78; xor al, byte ptr [rax]; je 0x32221; xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x10], xmm0; ret; 
0x00000000004023e9: sal byte ptr [rsi + rcx*8 + 0x39], cl; fidiv dword ptr [rbx - 0x36]; mov qword ptr [r8], rdx; ret; 
0x0000000000443868: sal byte ptr [rsi + rdx - 0x73], cl; pop rdx; dec dword ptr [rcx - 0x4ef00f30]; sbb dword ptr [rdi], ecx; xchg eax, esp; ret 0xd284; 
0x000000000040c164: sal byte ptr [rsp + rbp*2 + 0x48], 0xf7; ret 7; 
0x000000000040240b: sal byte ptr [rsp + rbp*4 + 0x49], cl; mov dword ptr [rax], edx; ret; 
0x0000000000408ec2: sal byte ptr [rsp + rdx + 0x48], 0x89; and al, 0x30; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048d296: sal byte ptr [rsp + rdx + 0x48], 0x89; and al, 0x50; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000041831e: sal dl, 0xf; adc dword ptr [rip + 0x165681], eax; call 0x1f0e0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000417928: sal dl, 0xf; pop rsp; ret; 
0x0000000000442682: sal dword ptr [rbp + 0xa], 0x48; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040a782: sal dword ptr [rbp + 0xa], 0x48; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004410c5: sal dword ptr [rbp + 0xb], 1; test rbx, rbx; sete al; mov byte ptr [rsp + 0x10], al; ret; 
0x000000000040d3b6: sal dword ptr [rbp + 0xf], 1; mov qword ptr [rsp + 0x70], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000040d544: sal dword ptr [rbx - 0x19], 1; mov byte ptr [rsp + 0x10], 1; ret; 
0x0000000000402285: sal dword ptr [rbx - 0x3a], 1; add byte ptr [rax], al; ret; 
0x0000000000402e02: sal dword ptr [rdi + 0x18], 0x48; mov dword ptr [rsp + 0xb8], edx; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x0000000000481db4: sal dword ptr [rdi - 0x6b], 0xeb; or cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x58; add rsp, 0x60; ret; 
0x0000000000415e89: sal dword ptr [rdx + 0xa], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000417750: sal edx, 1; divps xmm1, xmm0; movsd qword ptr [rdx + 0x40], xmm1; divsd xmm0, xmm2; movsd qword ptr [rdx + 0x48], xmm0; ret; 
0x00000000004644ac: sal r11b, 0x44; movq qword ptr [rbx - 0x30], mm2; movdqu xmmword ptr [rbx - 0x20], xmm11; movdqu xmmword ptr [rbx - 0x10], xmm12; ret; 
0x0000000000464588: sal r11b, 0x44; movq qword ptr [rcx - 0x30], mm2; movdqu xmmword ptr [rcx - 0x20], xmm11; movdqu xmmword ptr [rcx - 0x10], xmm12; ret; 
0x000000000043d9eb: sar ah, 1; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x000000000043d762: sar ah, cl; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000040d0db: sar bh, 0xc0; mov dword ptr [rsp + 0x28], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000471ddb: sar bh, 1; jmp qword ptr [rsi - 0x70]; 
0x0000000000471d9b: sar bh, cl; jmp qword ptr [rsi - 0x70]; 
0x0000000000467258: sar byte ptr [rax], 0x48; mov dword ptr [rsp + 0x10], eax; nop; ret; 
0x0000000000456ed4: sar byte ptr [rax], 0x48; mov dword ptr [rsp + 0x10], eax; ret; 
0x00000000004398af: sar byte ptr [rax], 0x48; mov dword ptr [rsp], eax; call 0x61580; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042edaa: sar byte ptr [rbp + 0x10], 0x48; mov ebp, dword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x00000000004733c8: sar byte ptr [rbp + 0xa], 0x48; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000047beda: sar byte ptr [rbp + 0xa], 0x48; mov ebp, dword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040b290: sar byte ptr [rbp - 0x51], 0x48; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000434324: sar byte ptr [rbx + rdx + 0x48], 0x89; add al, 0x24; call 0x341e0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004066d7: sar byte ptr [rdi + 0x14], 0x48; mov eax, dword ptr [rsp + 0x10]; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043d319: sar byte ptr [rdi + 0x1c], 0x48; mov dword ptr [rsp + 0x3e8], 0; mov rbp, qword ptr [rsp + 0x3d0]; add rsp, 0x3d8; ret; 
0x000000000043aa31: sar byte ptr [rdi + rcx - 0x18], 0x27; call 0xffffffff8b4caa3a; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000045a1cc: sar byte ptr [rdi - 0x18], 1; mov byte ptr [rsp + 0x10], 0; ret; 
0x0000000000438e81: sar byte ptr [rdx + rbx*2 + 0x48], 0x8b; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x0000000000443185: sar byte ptr [rdx + rcx + 0x48], 0x8b; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000042e841: sar byte ptr [rdx + rcx + 0x48], 0x8b; insb byte ptr [rdi], dx; and al, 0x48; add rsp, 0x50; ret; 
0x000000000042eaa1: sar byte ptr [rdx + rcx + 0x48], 0x8b; insb byte ptr [rdi], dx; and al, 0x50; add rsp, 0x58; ret; 
0x000000000042e44e: sar byte ptr [rsi - 0x45], 0x48; mov dword ptr [rsp + 0x660], 0; mov rbp, qword ptr [rsp + 0x648]; add rsp, 0x650; ret; 
0x00000000004877aa: sar byte ptr [rsi - 0x74b70001], cl; and al, 0x18; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000451727: sar dh, 0x88; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x60; add rsp, 0x68; ret; 
0x00000000004496b9: sar dword ptr [rcx], cl; fdivr dword ptr [rdi - 0x16]; mov dword ptr [rsp + 0x10], ebx; ret; 
0x0000000000435ed6: sar dword ptr [rdi + 0xa], 0x48; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048abc6: sar dword ptr [rdi - 0x47], 0x48; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000492bf9: sar dword ptr [rsi + 7], 0x41; cmp byte ptr [rax + 0xa], 0; jne 0x92c0d; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000407a4c: sar dword ptr [rsi], cl; ret 0x75b0; 
0x00000000004974e2: sar dword ptr [rsi], cl; ret 0xfb0; 
0x000000000042ef06: sar eax, 1; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000471dbb: sar edi, 1; jmp qword ptr [rsi - 0x70]; 
0x0000000000471d7b: sar edi, cl; jmp qword ptr [rsi - 0x70]; 
0x000000000041a141: sar esi, 0xff; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x68; add rsp, 0x70; ret; 
0x0000000000495f5b: sar esp, cl; jmp qword ptr [rsi - 0x70]; 
0x000000000042ef05: sar rax, 1; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040fe3d: sbb ah, byte ptr [rsi - 0x70]; call rbx; 
0x00000000004650b1: sbb al, 0; add byte ptr [rax], al; syscall; 
0x00000000004650b1: sbb al, 0; add byte ptr [rax], al; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x00000000004419fa: sbb al, 0x19; lea rbx, [rbx + 3]; mov rsi, qword ptr [rax + rbx*8]; lea rdx, [rax + rbx*8]; call rsi; 
0x0000000000464ffa: sbb al, 0x24; call rax; 
0x0000000000465088: sbb al, 0x24; call rax; mov rsp, qword ptr [rsp]; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000468941: sbb al, 0x24; call rdx; 
0x000000000048af92: sbb al, 0x24; mov qword ptr [rsp + 8], rax; dec rax; mov qword ptr [rsp + 0x40], rax; mov qword ptr [rsp + 0x10], rax; call rdx; 
0x000000000045c5e1: sbb al, 0x24; mov qword ptr [rsp + 8], rax; mov qword ptr [rsp + 0x10], rcx; mov rdx, qword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x00000000004105a5: sbb al, 0x24; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; call rax; 
0x00000000004170a0: sbb al, 0x24; mov qword ptr [rsp + 8], rcx; mov rbx, qword ptr [rdx]; call rbx; 
0x00000000004346d3: sbb al, 0x24; mov rax, qword ptr [rip + 0x91e64]; lea rdx, [rip + 0x91e5d]; call rax; 
0x000000000040a566: sbb al, 0x24; mov rdx, qword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000464f72: sbb al, 0x44; mov eax, dword ptr [rsp + 0x20]; mov r9d, dword ptr [rsp + 0x24]; mov eax, 9; syscall; 
0x000000000043d31b: sbb al, 0x48; mov dword ptr [rsp + 0x3e8], 0; mov rbp, qword ptr [rsp + 0x3d0]; add rsp, 0x3d8; ret; 
0x00000000004652f1: sbb al, 0x49; mov eax, 0; mov eax, 0x119; syscall; 
0x00000000004652f1: sbb al, 0x49; mov eax, 0; mov eax, 0x119; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000459e7d: sbb al, 0x4c; mov dword ptr [rsp + 0x20], ecx; mov rax, qword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x0000000000403de1: sbb al, 0x89; and al, 0x48; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000493cdf: sbb al, 0xa; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000042a10c: sbb al, 0xc2; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042a21d: sbb al, 0xf2; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046ad5f: sbb al, 0xf7; ret 3; 
0x0000000000466b55: sbb al, 0xfa; call qword ptr [rax - 0x537d18]; jmp qword ptr [rsi - 0x70]; 
0x000000000044331c: sbb al, 0xff; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x00000000004467bb: sbb al, 0xff; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x00000000004042b9: sbb al, ch; add dword ptr [rdx], 0x8b480000; insb byte ptr [rdi], dx; and al, 0x78; sub rsp, -0x80; ret; 
0x0000000000412402: sbb al, ch; clc; ret 0; 
0x000000000042f144: sbb al, ch; mov dh, 0x3e; add dword ptr [rax], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000045a47f: sbb al, ch; mov ebx, 0x48fffaa1; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004487f7: sbb al, ch; movabs dword ptr [0x78246c8b48fffbb1], eax; sub rsp, -0x80; ret; 
0x0000000000404b0f: sbb al, ch; or eax, dword ptr [rax]; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000496e58: sbb al, ch; ret 0xffe7; 
0x0000000000486337: sbb al, ch; ret; 
0x0000000000401e6e: sbb al, dh; cmpxchg qword ptr [rbx], rcx; sete byte ptr [rsp + 0x20]; ret; 
0x00000000004718bb: sbb bh, bh; jmp qword ptr [rsi - 0x70]; 
0x0000000000481b9c: sbb bh, bh; ret; 
0x000000000042e26d: sbb bh, dh; fmul dword ptr [rcx + 0x48502444]; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000464cf6: sbb bl, al; lea rdi, [rsp]; mov rsi, 0; mov rax, qword ptr [rip + 0xdc456]; call rax; 
0x0000000000464c10: sbb bl, al; lea rdi, [rsp]; mov rsi, 0; mov rax, qword ptr [rip + 0xdc53c]; call rax; 
0x000000000042f2a5: sbb bl, al; mov rax, qword ptr [rax + 0x50]; mov qword ptr [rsp], rax; mov rax, qword ptr [rdx]; call rax; 
0x00000000004391a0: sbb bl, al; mov rdx, qword ptr [rip + 0x11e177]; mov qword ptr [rsp], rcx; mov rax, qword ptr [rdx]; call rax; 
0x00000000004210f6: sbb bl, ch; fisttp word ptr [rax - 0x77]; and al, 0x18; ret; 
0x0000000000465ac2: sbb bl, ch; ret 0x16e8; 
0x0000000000466382: sbb bl, ch; ret 0x56e8; 
0x0000000000465642: sbb bl, ch; ret 0x96e8; 
0x0000000000465a22: sbb bl, ch; ret 0xb6e8; 
0x0000000000465502: sbb bl, ch; ret 0xd6e8; 
0x0000000000419dc9: sbb bl, ch; xchg eax, ecx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000423a92: sbb byte ptr [r14 + 6], sil; mov byte ptr [rsp + 0x10], 0; ret; 
0x0000000000423b49: sbb byte ptr [r15 - 0x10], sil; cmp qword ptr [rcx + 0x70], rax; jbe 0x23b3d; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000040ec6b: sbb byte ptr [r15], r9b; mov dh, 0x58; or dh, dh; ret; 
0x000000000042c88f: sbb byte ptr [r8 - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x58; add rsp, 0x60; ret; 
0x000000000048fed0: sbb byte ptr [r8 - 0x77], cl; adc al, 0x24; call rcx; 
0x000000000046b913: sbb byte ptr [r8], al; add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret 0x1f0f; 
0x0000000000401f03: sbb byte ptr [r8], al; add byte ptr [rsp + rcx + 0x48], dh; mov dword ptr [rip + 0x184584], 0x3f; ret; 
0x0000000000401a86: sbb byte ptr [r8], r8b; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040c30c: sbb byte ptr [r9 - 9], r9b; ret 7; 
0x0000000000458da9: sbb byte ptr [rax + 0x1482484], cl; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x0000000000464b4e: sbb byte ptr [rax + 0x1b], bh; syscall; 
0x0000000000464b4e: sbb byte ptr [rax + 0x1b], bh; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000464b2d: sbb byte ptr [rax + 0x26], bh; syscall; 
0x0000000000464b2d: sbb byte ptr [rax + 0x26], bh; syscall; ret; 
0x000000000041d351: sbb byte ptr [rax + 0x29], cl; ret 0x8948; 
0x0000000000482598: sbb byte ptr [rax + 0x48000000], 0x89; or al, 0x24; call rax; 
0x000000000047c5f6: sbb byte ptr [rax + 0x48000000], 0x89; or al, 0x24; nop; call rax; 
0x00000000004655a2: sbb byte ptr [rax + 0x48402444], cl; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000455e00: sbb byte ptr [rax + 0x48502444], cl; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045e589: sbb byte ptr [rax + 0x48502444], cl; mov ebp, dword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000046899a: sbb byte ptr [rax + 0x48782444], cl; mov ebp, dword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000046526e: sbb byte ptr [rax + 0xcc], bh; syscall; 
0x000000000046526e: sbb byte ptr [rax + 0xcc], bh; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x00000000004652d0: sbb byte ptr [rax + 0xe9], bh; syscall; 
0x00000000004652d0: sbb byte ptr [rax + 0xe9], bh; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000464b0e: sbb byte ptr [rax + 0xea], bh; syscall; 
0x0000000000464b0e: sbb byte ptr [rax + 0xea], bh; syscall; ret; 
0x0000000000484c15: sbb byte ptr [rax + 0xf], cl; mov edx, 0x894807e8; and al, 0x50; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046498d: sbb byte ptr [rax + 1], bh; syscall; 
0x000000000046498d: sbb byte ptr [rax + 1], bh; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x000000000042df64: sbb byte ptr [rax + 1], cl; ret; 
0x000000000040fca9: sbb byte ptr [rax + 3], cl; adc byte ptr [rbp - 0x7b], cl; sal byte ptr [rcx + 0xf], 0xb6; push rdx; or dh, dh; ret 0x7408; 
0x0000000000465d0d: sbb byte ptr [rax + r10 + 0x31], sil; ror byte ptr [rax + 0x48402444], 0x8b; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000465d0e: sbb byte ptr [rax + rdx + 0x31], dh; ror byte ptr [rax + 0x48402444], 0x8b; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000046c394: sbb byte ptr [rax + rdx + 0x31], sil; ror byte ptr [rax + 0x48402444], 0x8b; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x00000000004650ad: sbb byte ptr [rax - 0x39], cl; rcr byte ptr [rax + rax], 0; add byte ptr [rdi], cl; add eax, 0x20244489; ret; 
0x0000000000425edc: sbb byte ptr [rax - 0x45], cl; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x1480000], al; ret; 
0x000000000048fa37: sbb byte ptr [rax - 0x73], cl; insb byte ptr [rdi], dx; and al, 0x18; mov rdx, qword ptr [rsp + 0x28]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000407249: sbb byte ptr [rax - 0x75], cl; and al, 0x10; mov qword ptr [rsp + 0x20], rax; ret; 
0x000000000044c4b5: sbb byte ptr [rax - 0x75], cl; and al, 0x20; lea rdx, [rsp + 0x20]; call rax; 
0x000000000045a34a: sbb byte ptr [rax - 0x75], cl; and al, 0x20; mov dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045ae89: sbb byte ptr [rax - 0x75], cl; and al, 0x20; mov qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000486229: sbb byte ptr [rax - 0x75], cl; and al, 0x20; mov rax, qword ptr [rax + 0x98]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000484940: sbb byte ptr [rax - 0x75], cl; and al, 0x20; mov rax, qword ptr [rax + 0xf8]; mov qword ptr [rsp], rcx; call rax; 
0x00000000004983cd: sbb byte ptr [rax - 0x75], cl; and al, 0x20; mov rax, qword ptr [rax + 0xf8]; mov qword ptr [rsp], rcx; nop; call rax; 
0x000000000048abfc: sbb byte ptr [rax - 0x75], cl; and al, 0x28; mov rcx, qword ptr [rax + 0x18]; mov rdx, qword ptr [rsp + 0x30]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000485380: sbb byte ptr [rax - 0x75], cl; and al, 0x38; mov rax, qword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x40]; mov qword ptr [rsp], rcx; call rax; 
0x000000000045d2eb: sbb byte ptr [rax - 0x75], cl; and al, 0x40; mov byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004855c0: sbb byte ptr [rax - 0x75], cl; and al, 0x40; mov rax, qword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x48]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000445230: sbb byte ptr [rax - 0x75], cl; and al, 0x48; mov qword ptr [rax + 0x80], rcx; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x000000000040e007: sbb byte ptr [rax - 0x75], cl; and al, 0x50; mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], rcx; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000040f90f: sbb byte ptr [rax - 0x75], cl; and al, 0x58; mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], rax; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000040e280: sbb byte ptr [rax - 0x75], cl; and al, 0x58; mov qword ptr [rsp], rax; mov qword ptr [rsp + 8], rcx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000042cbf4: sbb byte ptr [rax - 0x75], cl; and al, 0x68; xchg qword ptr [rax], rcx; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000042d569: sbb byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000042c3ac: sbb byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x000000000042c890: sbb byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x58; add rsp, 0x60; ret; 
0x00000000004181a1: sbb byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x0000000000446de7: sbb byte ptr [rax - 0x75], cl; js 0x46e35; mov dword ptr [rcx + 0x80], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000496f5b: sbb byte ptr [rax - 0x75], cl; mov word ptr [rax + rax*2], fs; add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; or al, 0x24; call rax; 
0x00000000004970c3: sbb byte ptr [rax - 0x75], cl; mov word ptr [rax + rcx*2], fs; add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; or al, 0x24; call rax; 
0x000000000048df4e: sbb byte ptr [rax - 0x75], cl; push rsp; and al, 0x20; mov rax, qword ptr [rsp + 8]; syscall; 
0x000000000048fa3c: sbb byte ptr [rax - 0x75], cl; push rsp; and al, 0x28; mov rax, qword ptr [rdx]; call rax; 
0x000000000048ac05: sbb byte ptr [rax - 0x75], cl; push rsp; and al, 0x30; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000405198: sbb byte ptr [rax - 0x75], cl; push rsp; and al, 0x48; mov rbx, qword ptr [rdx]; call rbx; 
0x0000000000406078: sbb byte ptr [rax - 0x75], cl; sub al, 0x24; add rsp, 8; ret; 
0x00000000004695ff: sbb byte ptr [rax - 0x75], cl; sub byte ptr [rax - 0x77], cl; or al, 0x24; call rax; 
0x000000000048fed1: sbb byte ptr [rax - 0x77], cl; adc al, 0x24; call rcx; 
0x000000000040eef3: sbb byte ptr [rax - 0x77], cl; adc al, 0x24; mov qword ptr [rsp + 8], rdx; mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; 
0x00000000004344c1: sbb byte ptr [rax - 0x77], cl; add al, 0x24; call 0x34380; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000040b0f2: sbb byte ptr [rax - 0x77], cl; add al, 0x24; call 0xaa40; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000040aa21: sbb byte ptr [rax - 0x77], cl; add al, 0x24; call 0xb0e0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000043acee: sbb byte ptr [rax - 0x77], cl; add al, 0x24; mov rax, qword ptr [rip + 0x8b84e]; lea rdx, [rip + 0x8b847]; call rax; 
0x000000000045ae0f: sbb byte ptr [rax - 0x77], cl; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000438d7e: sbb byte ptr [rax - 0x77], cl; and al, 0x10; call 0x386a0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000412c32: sbb byte ptr [rax - 0x77], cl; and al, 0x20; call 0x12f60; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000445e7d: sbb byte ptr [rax - 0x77], cl; and al, 0x20; call 0x3dc80; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000048b2dc: sbb byte ptr [rax - 0x77], cl; and al, 0x20; call 0x8ab60; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000046595f: sbb byte ptr [rax - 0x77], cl; and al, 0x20; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000467c95: sbb byte ptr [rax - 0x77], cl; and al, 0x20; ret; 
0x000000000044dcfa: sbb byte ptr [rax - 0x77], cl; and al, 0x38; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044dd2f: sbb byte ptr [rax - 0x77], cl; and al, 0x38; mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040cddc: sbb byte ptr [rax - 0x77], cl; and al, 0x38; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045ed46: sbb byte ptr [rax - 0x77], cl; and al, 0x40; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042996e: sbb byte ptr [rax - 0x77], cl; and al, 0x40; mov qword ptr [rsp + 0x48], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000402650: sbb byte ptr [rax - 0x77], cl; and al, 0x40; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x00000000004024e2: sbb byte ptr [rax - 0x77], cl; and al, 0x40; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000484d0b: sbb byte ptr [rax - 0x77], cl; and al, 0x48; mov qword ptr [rsp + 0x50], 0x16; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044e605: sbb byte ptr [rax - 0x77], cl; and al, 0x48; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000447270: sbb byte ptr [rax - 0x77], cl; and al, 0x48; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x000000000044e6d6: sbb byte ptr [rax - 0x77], cl; and al, 0x50; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000426972: sbb byte ptr [rax - 0x77], cl; and al, 0x50; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004203e3: sbb byte ptr [rax - 0x77], cl; and al, 0x58; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000426142: sbb byte ptr [rax - 0x77], cl; and al, 0x58; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048d499: sbb byte ptr [rax - 0x77], cl; and al, 0x60; mov qword ptr [rsp + 0x68], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000042a86b: sbb byte ptr [rax - 0x77], cl; and al, 0x60; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000430aab: sbb byte ptr [rax - 0x77], cl; and al, 0x70; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000456d5e: sbb byte ptr [rax - 0x77], cl; and al, 8; mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; 
0x000000000042c74d: sbb byte ptr [rax - 0x77], cl; jl 0x2c776; sbb byte ptr [rcx + rcx*4 + 0x44], cl; and al, 0x20; ret; 
0x00000000004310c2: sbb byte ptr [rax - 0x77], cl; or al, 0x24; call rax; 
0x0000000000422ba3: sbb byte ptr [rax - 0x77], cl; or byte ptr [r8 - 0x75], cl; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x000000000042c73f: sbb byte ptr [rax - 0x77], cl; pop rsp; and al, 0x20; ret; 
0x00000000004540cf: sbb byte ptr [rax - 0x77], cl; ret 0xd3ff; 
0x0000000000428f4c: sbb byte ptr [rax - 0x77], cl; ret; 
0x0000000000405cee: sbb byte ptr [rax - 0x7b], cl; fisttp dword ptr [rdi]; xchg eax, esp; ret 0x26e9; 
0x0000000000405d33: sbb byte ptr [rax - 0x7b], cl; fisttp dword ptr [rdi]; xchg eax, esp; ret 0xbce9; 
0x0000000000442fd2: sbb byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 0x77], 0x10; mov dword ptr [rsp + 0x20], ebx; ret; 
0x0000000000442fb9: sbb byte ptr [rax - 0x7b], cl; sal byte ptr [rsi + rax - 0x39], 0; add byte ptr [rax], al; add byte ptr [rax], al; mov dword ptr [rsp + 0x20], 0x7fffffff; ret; 
0x000000000046ad99: sbb byte ptr [rax - 0xb], bh; mov rcx, qword ptr [rsp + 0x48]; lock xadd dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000047d975: sbb byte ptr [rax - 1], cl; ret; 
0x000000000041cfcb: sbb byte ptr [rax - 1], cl; ror dword ptr [rax + 0x39], 0xca; jg 0x1cfab; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000462029: sbb byte ptr [rax], ah; add byte ptr [rax], al; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462649: sbb byte ptr [rax], al; adc byte ptr [rax], al; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462489: sbb byte ptr [rax], al; add al, 0; mov rax, qword ptr [rdx]; call rax; 
0x00000000004623a9: sbb byte ptr [rax], al; add al, byte ptr [rax]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462f09: sbb byte ptr [rax], al; add byte ptr [rax + 0x48], al; mov eax, dword ptr [rdx]; call rax; 
0x0000000000462b89: sbb byte ptr [rax], al; add byte ptr [rax + rcx*2], al; mov eax, dword ptr [rdx]; call rax; 
0x00000000004628e9: sbb byte ptr [rax], al; add byte ptr [rax], 0x48; mov eax, dword ptr [rdx]; call rax; 
0x0000000000462e29: sbb byte ptr [rax], al; add byte ptr [rax], ah; mov rax, qword ptr [rdx]; call rax; 
0x00000000004060d7: sbb byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; sub al, 0x24; add rsp, 8; ret; 
0x000000000046b914: sbb byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret 0x1f0f; 
0x0000000000465241: sbb byte ptr [rax], al; add byte ptr [rax], al; syscall; 
0x0000000000465241: sbb byte ptr [rax], al; add byte ptr [rax], al; syscall; ret; 
0x0000000000462c69: sbb byte ptr [rax], al; add byte ptr [rax], cl; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462d49: sbb byte ptr [rax], al; add byte ptr [rax], dl; mov rax, qword ptr [rdx]; call rax; 
0x00000000004629c9: sbb byte ptr [rax], al; add byte ptr [rcx], al; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462aa9: sbb byte ptr [rax], al; add byte ptr [rdx], al; mov rax, qword ptr [rdx]; call rax; 
0x0000000000401f04: sbb byte ptr [rax], al; add byte ptr [rsp + rcx + 0x48], dh; mov dword ptr [rip + 0x184584], 0x3f; ret; 
0x000000000040385b: sbb byte ptr [rax], al; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x00000000004622c9: sbb byte ptr [rax], al; add dword ptr [rax], eax; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462729: sbb byte ptr [rax], al; and byte ptr [rax], al; mov rax, qword ptr [rdx]; call rax; 
0x0000000000401a7c: sbb byte ptr [rax], al; bt eax, 0x13; setb byte ptr [rip + 0x184ff8]; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000427c54: sbb byte ptr [rax], al; je 0x27c67; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000441189: sbb byte ptr [rax], al; je 0x4114e; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004102ed: sbb byte ptr [rax], al; jne 0x102fb; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000410ead: sbb byte ptr [rax], al; jne 0x10ebb; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041180d: sbb byte ptr [rax], al; jne 0x1181b; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040f42d: sbb byte ptr [rax], al; jne 0xf43b; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000401a87: sbb byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000462569: sbb byte ptr [rax], al; or byte ptr [rax], al; mov rax, qword ptr [rdx]; call rax; 
0x0000000000406130: sbb byte ptr [rax], al; ret; 
0x0000000000467ea8: sbb byte ptr [rax], al; setne byte ptr [rsp + 0x10]; ret; 
0x0000000000406255: sbb byte ptr [rax], al; xchg dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x00000000004649ac: sbb byte ptr [rax], bh; syscall; 
0x00000000004649ac: sbb byte ptr [rax], bh; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000461e73: sbb byte ptr [rax], cl; add byte ptr [rax], al; mov rax, qword ptr [rdx]; call rax; 
0x0000000000461f49: sbb byte ptr [rax], dl; add byte ptr [rax], al; mov rax, qword ptr [rdx]; call rax; 
0x000000000042fa80: sbb byte ptr [rbx + 0x156a0905], cl; add byte ptr [rbp + 0x480a75c0], al; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044c96d: sbb byte ptr [rbx + r9*4 + 0x52], cl; sub byte ptr [rbp + 0x39], cl; ret 0x6f72; 
0x00000000004650d1: sbb byte ptr [rbx + rcx*4 + 0x44], cl; and al, 0x20; mov r9d, dword ptr [rsp + 0x28]; mov eax, 0xca; syscall; 
0x000000000046511b: sbb byte ptr [rbx + rcx*4 + 0x4c], cl; and al, 0x20; mov r12, qword ptr [rsp + 0x28]; mov eax, 0x38; syscall; 
0x000000000044c96e: sbb byte ptr [rbx + rcx*4 + 0x52], cl; sub byte ptr [rbp + 0x39], cl; ret 0x6f72; 
0x00000000004652ec: sbb byte ptr [rbx + rcx*4 + 0x54], al; and al, 0x1c; mov r8, 0; mov eax, 0x119; syscall; 
0x0000000000464f6d: sbb byte ptr [rbx + rcx*4 + 0x54], al; and al, 0x1c; mov r8d, dword ptr [rsp + 0x20]; mov r9d, dword ptr [rsp + 0x24]; mov eax, 9; syscall; 
0x0000000000464d2d: sbb byte ptr [rbx + rcx*4 + 0x54], al; and al, 0x20; mov eax, 0xe; syscall; 
0x0000000000464d6e: sbb byte ptr [rbx + rcx*4 + 0x54], cl; and al, 0x20; mov eax, 0xd; syscall; 
0x0000000000464d6e: sbb byte ptr [rbx + rcx*4 + 0x54], cl; and al, 0x20; mov eax, 0xd; syscall; mov dword ptr [rsp + 0x28], eax; ret; 
0x0000000000417e30: sbb byte ptr [rbx - 0x16ebdbac], cl; cmp eax, 0x48ffffff; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043ffce: sbb byte ptr [rcx + 0x48502444], cl; mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000459f61: sbb byte ptr [rcx + rcx*4 + 0x44], al; and al, 0x1c; mov qword ptr [rsp + 0x20], r9; mov rax, qword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x000000000042c73a: sbb byte ptr [rcx + rcx*4 + 0x44], cl; and al, 0x18; mov qword ptr [rsp + 0x20], rbx; ret; 
0x000000000042c752: sbb byte ptr [rcx + rcx*4 + 0x44], cl; and al, 0x20; ret; 
0x0000000000459e78: sbb byte ptr [rcx + rcx*4 + 0x7c], al; and al, 0x1c; mov qword ptr [rsp + 0x20], r9; mov rax, qword ptr [rsp + 0x80]; lea rdx, [rsp + 0x80]; call rax; 
0x00000000004222aa: sbb byte ptr [rcx - 0x45], cl; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x1490000], al; ret; 
0x00000000004222a9: sbb byte ptr [rcx - 0x45], r9b; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x1490000], al; ret; 
0x000000000040c30d: sbb byte ptr [rcx - 9], cl; ret 7; 
0x0000000000461c33: sbb byte ptr [rcx], al; add byte ptr [rax], al; mov rax, qword ptr [rdx]; call rax; 
0x000000000044cfc0: sbb byte ptr [rcx], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xf0]; add rsp, 0xf8; ret; 
0x0000000000480a99: sbb byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x0000000000418140: sbb byte ptr [rcx], al; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000401c63: sbb byte ptr [rcx], al; ret; 
0x0000000000440038: sbb byte ptr [rcx], dh; sal byte ptr [rcx], cl; fucomi st(3); add ecx, dword ptr [rax - 1]; ret 0x3948; 
0x0000000000423b4a: sbb byte ptr [rdi - 0x10], dh; cmp qword ptr [rcx + 0x70], rax; jbe 0x23b3d; mov qword ptr [rsp + 0x10], rcx; ret; 
0x0000000000467310: sbb byte ptr [rdi], cl; mov bh, 0x50; add dword ptr [rsi - 0x3f], esp; ret 0x4808; 
0x000000000047e65c: sbb byte ptr [rdi], cl; mov dh, 0x51; adc al, 0xf6; ret 0x7404; 
0x000000000040ec6c: sbb byte ptr [rdi], cl; mov dh, 0x58; or dh, dh; ret; 
0x000000000041738f: sbb byte ptr [rdi], dl; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000461cf3: sbb byte ptr [rdx], al; add byte ptr [rax], al; mov rax, qword ptr [rdx]; call rax; 
0x0000000000423a93: sbb byte ptr [rsi + 6], dh; mov byte ptr [rsp + 0x10], 0; ret; 
0x000000000040427d: sbb byte ptr [rsi - 0x70], ah; call 0x4540; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000040385a: sbb byte ptr cs:[rax], al; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x0000000000423ac8: sbb cl, byte ptr [rax - 0x77]; ret 0xc148; 
0x000000000046722b: sbb cl, byte ptr [rax - 0x7d]; stc; adc dh, byte ptr [rdx + rcx + 0x48]; add eax, 0x30; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000467270: sbb cl, byte ptr [rax - 0x7d]; stc; adc eax, 0x83480a75; rcr byte ptr [rax + 0x48], 0x89; and al, 0x10; ret; 
0x0000000000434abd: sbb cl, byte ptr [rcx]; add byte ptr [rax - 0x73], cl; adc eax, 0x91aa1; call rax; 
0x000000000043894a: sbb cl, byte ptr [rdi]; xchg eax, esp; ret 0xd284; 
0x000000000046bbcc: sbb cl, byte ptr [rdi]; xchg eax, esp; ret; 
0x0000000000481ba0: sbb dh, bh; ret; 
0x00000000004400fb: sbb dh, byte ptr [rbp + 0xf]; mov byte ptr [rsp + 0x28], 0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048f577: sbb dl, bh; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x60; add rsp, 0x68; ret; 
0x00000000004017de: sbb dl, byte ptr [rax + 0x75ce3840]; out dx, al; mov qword ptr [rsp + 0x20], rbx; ret; 
0x0000000000456ea9: sbb dword ptr [rax + 0xa7412f9], eax; add rax, 0x30; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000456eea: sbb dword ptr [rax + 0xa7515f9], eax; add rax, 0x58; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000042ee84: sbb dword ptr [rax + rax - 0x74b80000], 0x34; ret 0x8548; 
0x0000000000444e80: sbb dword ptr [rax + rax], edx; bt eax, 0xd; jae 0x44e93; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004419fb: sbb dword ptr [rax - 0x73], ecx; pop rbx; add ecx, dword ptr [rax - 0x75]; xor al, 0xd8; lea rdx, [rax + rbx*8]; call rsi; 
0x0000000000459c53: sbb dword ptr [rax - 0x75], ecx; je 0x59c7c; xor byte ptr [rax + 0x39], cl; ret 0x3674; 
0x0000000000451fd4: sbb dword ptr [rax - 1], ecx; ret 0x3948; 
0x0000000000423583: sbb dword ptr [rax - 2], esi; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x00000000004679ec: sbb dword ptr [rbp + 0x13], esi; mov rax, qword ptr [rax + 0x40]; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000047b970: sbb dword ptr [rbp + 0x13], esi; mov rax, qword ptr [rax + 0x40]; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000456f0b: sbb dword ptr [rbp - 0x5f], esi; add rax, 0x50; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000047c607: sbb dword ptr [rbp - 0x64], esi; mov rax, qword ptr [rsp + 0x88]; mov rax, qword ptr [rax + 0x48]; mov rcx, qword ptr [rsp + 0x90]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000467294: sbb dword ptr [rbp - 0x65], esi; add rax, 0x50; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000459dd3: sbb dword ptr [rbp - 0x73], ecx; add dword ptr [rcx + r15 - 0x3a], r9d; jg 0x59d87; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000427483: sbb dword ptr [rcx - 0x74b2ffef], esi; pop rsp; ret 0x4c08; 
0x0000000000421ea1: sbb dword ptr [rcx - 9], eax; rol dword ptr [rcx + 0x21], cl; ret; 
0x00000000004652fa: sbb dword ptr [rcx], eax; add byte ptr [rax], al; syscall; 
0x00000000004652fa: sbb dword ptr [rcx], eax; add byte ptr [rax], al; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x000000000042a1d3: sbb dword ptr [rdi + 0x48000000], -0x39; ret; 
0x000000000048e779: sbb dword ptr [rdi], ecx; xchg eax, esp; ret 0x1f0f; 
0x000000000042113b: sbb dword ptr [rdi], ecx; xchg eax, esp; ret 0x8490; 
0x0000000000443873: sbb dword ptr [rdi], ecx; xchg eax, esp; ret 0xd284; 
0x000000000040a720: sbb dword ptr [rdi], ecx; xchg eax, esp; ret; 
0x0000000000485239: sbb dword ptr [rdx - 1], -1; mov rax, qword ptr [rsp + 8]; mov rcx, qword ptr [rsp + 0x10]; mov rax, qword ptr [rax + 0xe8]; mov qword ptr [rsp], rcx; call rax; 
0x0000000000434aaf: sbb dword ptr [rip - 0x7af10000], edx; mov es, word ptr [rax]; add byte ptr [rax], al; mov rax, qword ptr [rip + 0x91aa8]; lea rdx, [rip + 0x91aa1]; call rax; 
0x0000000000434ccd: sbb dword ptr [rip - 0x7af10000], edx; ret; 
0x00000000004510aa: sbb dword ptr [rsi + 1], 0; add byte ptr [rbx + rcx*4 + 0x54], cl; ret 0x4d08; 
0x000000000041f1a9: sbb eax, 0x1673fa; ja 0x1f198; mov qword ptr [rip + 0x15e7f9], rdi; ret; 
0x000000000040c53e: sbb eax, 0x24448b48; push rax; mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000045e0f2: sbb eax, 0x28503948; je 0x5e10a; cmp rdx, rcx; jne 0x5e104; mov byte ptr [rsp + 0x10], 0x21; ret; 
0x00000000004067ae: sbb eax, 0x48000000; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048745f: sbb eax, 0x48000cf6; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000411fb8: sbb eax, 0x8b480005; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x0000000000438df1: sbb eax, 0x8b48fffd; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x000000000044354c: sbb eax, 0x8b48ffff; insb byte ptr [rdi], dx; and al, 0x58; add rsp, 0x60; ret; 
0x000000000043474d: sbb eax, 0x8d480009; adc eax, 0x91de9; call rcx; 
0x000000000045ba76: sbb eax, 0xa75c084; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000426004: sbb eax, 0xe8000000; push rbx; ret 0; 
0x00000000004340c1: sbb eax, dword ptr [rax + rax]; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x0000000000455301: sbb eax, dword ptr [rax]; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000464b50: sbb eax, dword ptr [rax]; add byte ptr [rax], al; syscall; 
0x0000000000464b50: sbb eax, dword ptr [rax]; add byte ptr [rax], al; syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000456521: sbb eax, dword ptr [rbp - 5]; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x60; add rsp, 0x68; ret; 
0x000000000040acc1: sbb eax, dword ptr [rbx - 0x6814fffb]; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000451561: sbb eax, dword ptr [rip - 0x74b80000]; insb byte ptr [rdi], dx; and al, 0x50; add rsp, 0x58; ret; 
0x0000000000434ec1: sbb eax, edi; add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000439064: sbb ebp, edi; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000044e625: sbb ecx, dword ptr [rax + 0x63]; ret 0x3948; 
0x000000000044cb8b: sbb ecx, dword ptr [rax - 0x7b]; leave; setg byte ptr [rsp + 0x168]; mov rbp, qword ptr [rsp + 0x100]; add rsp, 0x108; ret; 
0x000000000046ad5b: sbb ecx, dword ptr [rcx - 0x8e3dbac]; ret 3; 
0x00000000004718db: sbb edi, edi; jmp qword ptr [rsi - 0x70]; 
0x0000000000445121: sbb edx, dword ptr [rcx - 0x74b70001]; insb byte ptr [rdi], dx; and al, 0x68; add rsp, 0x70; ret; 
0x000000000042f442: sbb esi, dword ptr [rbx + 0xa]; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000443106: sbb esi, dword ptr [rdx + 0x16]; lea rax, [rip + 0x7d76a]; mov qword ptr [rsp + 0x10], rax; mov qword ptr [rsp + 0x18], 0x13; ret; 
0x00000000004210f5: sbb r11b, bpl; fisttp word ptr [rax - 0x77]; and al, 0x18; ret; 
0x000000000042b624: scasb al, byte ptr [rdi]; adc eax, 0xc9854800; jg 0x2b632; mov byte ptr [rsp + 0x10], 0; ret; 
0x0000000000433d09: scasb al, byte ptr [rdi]; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004142ce: scasb al, byte ptr [rdi]; ret 1; 
0x0000000000467c8d: scasd eax, dword ptr [rdi]; imul eax, dword ptr [rdi], 0x4c894800; and al, 0x18; mov qword ptr [rsp + 0x20], rax; ret; 
0x0000000000443c7c: scasd eax, dword ptr [rdi]; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040b292: scasd eax, dword ptr [rdi]; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000413752: scasd eax, dword ptr [rdi]; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000413612: scasd eax, dword ptr [rdi]; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x00000000004178de: scasd eax, dword ptr [rdi]; ret 0x570f; 
0x0000000000415521: scasd eax, dword ptr [rdi]; ret 0x8b48; 
0x0000000000408f89: scasd eax, dword ptr [rdi]; ret 0x8b4c; 
0x00000000004507f1: scasd eax, dword ptr [rdi]; ret 0x8d49; 
0x0000000000409045: scasd eax, dword ptr [rdi]; ret 0x98eb; 
0x00000000004090f9: scasd eax, dword ptr [rdi]; ret 0xc148; 
0x000000000041ece6: scasd eax, dword ptr [rdi]; ret 0xf189; 
0x000000000040906e: scasd eax, dword ptr [rdi]; ret; 
0x000000000040dd93: scasd eax, dword ptr [rdi]; ror dword ptr [rax + 1], cl; ret 0x8d48; 
0x000000000040267f: scasd eax, dword ptr [rdi]; ror dword ptr [rax - 0x77], 0x44; and al, 0x40; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000402996: scasd eax, dword ptr [rdi]; ror dword ptr [rax - 0x77], 0x44; and al, 0x58; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000401fca: seta al; lea rax, [rax*2 - 1]; mov qword ptr [r9], rax; ret; 
0x000000000041819b: seta al; mov byte ptr [rsp + 0x18], al; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000423aab: seta byte ptr [rsp + 0x10]; ret; 
0x000000000045a1f5: setb al; mov byte ptr [rsp + 0x10], al; ret; 
0x0000000000401a82: setb byte ptr [rip + 0x184ff8]; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000473058: setb byte ptr [rsp + 0x30]; ret; 
0x0000000000455f5b: setbe al; mov byte ptr [rsp + 0x60], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004410cb: sete al; mov byte ptr [rsp + 0x10], al; ret; 
0x0000000000458d3e: sete al; mov byte ptr [rsp + 0x148], al; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x0000000000465718: sete al; mov byte ptr [rsp + 0x18], al; nop; ret; 
0x00000000004032fa: sete al; mov byte ptr [rsp + 0x18], al; ret; 
0x0000000000487a23: sete al; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000478fde: sete al; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004317f1: sete al; mov byte ptr [rsp + 0xa0], al; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000040a8ec: sete bh; test dil, dil; je 0xa8d7; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040a948: sete bh; test dil, dil; je 0xa935; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000402299: sete byte ptr [rax]; ret; 
0x0000000000457ca5: sete byte ptr [rsp + 0x10]; ret; 
0x000000000040326f: sete byte ptr [rsp + 0x18]; ret; 
0x0000000000401e74: sete byte ptr [rsp + 0x20]; ret; 
0x000000000048e78f: sete byte ptr [rsp + 0x28]; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048ea08: sete byte ptr [rsp + 0x38]; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046abf2: sete byte ptr [rsp + 0x38]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042dd6f: sete byte ptr [rsp + 0x48]; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000403711: sete byte ptr [rsp + 0x60]; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x00000000004035e9: sete byte ptr [rsp + 0x60]; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000420d19: sete byte ptr [rsp + 0x60]; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000463277: sete byte ptr [rsp + 8]; ret; 
0x0000000000402080: sete cl; lea rax, [rcx + rax*2 - 1]; mov qword ptr [r9], rax; ret; 
0x0000000000436a0a: sete cl; mov byte ptr [rsp + 0x30], cl; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045b799: sete cl; nop dword ptr [rax]; test cl, cl; je 0x5b7aa; mov byte ptr [rsp + 0x18], 1; ret; 
0x0000000000403335: sete cl; setnp al; and ecx, eax; mov byte ptr [rsp + 0x18], cl; ret; 
0x0000000000416338: sete cl; test cl, cl; jne 0x16349; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040a60a: sete dh; test sil, sil; je 0xa5fb; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040a8eb: sete dil; test dil, dil; je 0xa8d7; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040a947: sete dil; test dil, dil; je 0xa935; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042113c: sete dl; nop; test dl, dl; je 0x2112d; ret; 
0x00000000004033ca: sete dl; setnp al; and edx, eax; and ecx, edx; mov byte ptr [rsp + 0x18], cl; ret; 
0x0000000000441aff: sete dl; test dl, dl; je 0x41ae5; ret; 
0x0000000000443874: sete dl; test dl, dl; je 0x43865; mov byte ptr [rsp + 0x10], 1; ret; 
0x000000000040a609: sete sil; test sil, sil; je 0xa5fb; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040207d: setg al; sete cl; lea rax, [rcx + rax*2 - 1]; mov qword ptr [r9], rax; ret; 
0x000000000044cb8f: setg byte ptr [rsp + 0x168]; mov rbp, qword ptr [rsp + 0x100]; add rsp, 0x108; ret; 
0x000000000048b3ad: setl byte ptr [rsp + 0x60]; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042b68e: setl cl; test cl, cl; jne 0x2b62c; mov byte ptr [rsp + 0x10], 1; ret; 
0x0000000000441bc1: setle byte ptr [rsp + 0x20]; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000441cce: setle byte ptr [rsp + 0x28]; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x0000000000467eaa: setne byte ptr [rsp + 0x10]; ret; 
0x0000000000408df3: setne byte ptr [rsp + 0x140]; mov rbp, qword ptr [rsp + 0x108]; add rsp, 0x110; ret; 
0x0000000000483b74: setne byte ptr [rsp + 0x30]; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042385e: setne byte ptr [rsp + 0x38]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000047dbd5: setne byte ptr [rsp + 0x40]; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040ae85: setne byte ptr [rsp + 0x48]; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000047ac1b: setne byte ptr [rsp + 0x50]; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000405a96: setne byte ptr [rsp + 0xa9]; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000423b36: setne dl; test dl, dl; je 0x23b47; mov qword ptr [rsp + 0x10], 0; ret; 
0x0000000000403338: setnp al; and ecx, eax; mov byte ptr [rsp + 0x18], cl; ret; 
0x00000000004033cd: setnp al; and edx, eax; and ecx, edx; mov byte ptr [rsp + 0x18], cl; ret; 
0x000000000043863e: seto bl; mov ch, 0x48; mov dword ptr [rsp + 0x28], edx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040333a: shl byte ptr [rcx], 0xc1; mov byte ptr [rsp + 0x18], cl; ret; 
0x00000000004033cf: shl byte ptr [rcx], 0xc2; and ecx, edx; mov byte ptr [rsp + 0x18], cl; ret; 
0x000000000048d8e1: shl dword ptr [rip - 0x76b7fff4], cl; and al, 0x50; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000479baa: shl eax, 3; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042a737: shl eax, 6; add rax, rcx; mov qword ptr [rsp + 0x18], rax; ret; 
0x00000000004496b6: shl ebx, cl; and ebx, edx; cmp eax, ebx; jg 0x496a8; mov dword ptr [rsp + 0x10], ebx; ret; 
0x000000000042a24a: shl ebx, cl; not rbx; and qword ptr [rdx + rax*8], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042a108: shl ebx, cl; or qword ptr [rdx + rax*8], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000457a5b: shl ecx, 8; or eax, ecx; movzx eax, ax; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000429944: shl edi, 0xd; mov qword ptr [rsp + 0x48], rdi; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004022d8: shl edi, cl; sete byte ptr [rax]; ret; 
0x0000000000463114: shl edx, 0x20; add rax, rdx; mov qword ptr [rsp + 8], rax; ret; 
0x0000000000402404: shl edx, cl; shr edx, 0x10; bsf edx, edx; je 0x23ba; mov qword ptr [r8], rdx; ret; 
0x0000000000429a62: shl esi, 0xd; mov qword ptr [rsp + 0x50], rsi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000479ba9: shl rax, 3; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042a736: shl rax, 6; add rax, rcx; mov qword ptr [rsp + 0x18], rax; ret; 
0x000000000042a249: shl rbx, cl; not rbx; and qword ptr [rdx + rax*8], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042a107: shl rbx, cl; or qword ptr [rdx + rax*8], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000429943: shl rdi, 0xd; mov qword ptr [rsp + 0x48], rdi; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004022d7: shl rdi, cl; sete byte ptr [rax]; ret; 
0x0000000000463113: shl rdx, 0x20; add rax, rdx; mov qword ptr [rsp + 8], rax; ret; 
0x0000000000429a61: shl rsi, 0xd; mov qword ptr [rsp + 0x50], rsi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045832c: shr ah, 0xf; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000406657: shr al, 1; ret; 
0x000000000043a943: shr bl, 0xa1; mov byte ptr [rsp + 0x28], 1; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048c10a: shr bl, 0xb9; mov qword ptr [rsp + 0x128], rax; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x0000000000478f01: shr bl, 0xd5; mov byte ptr [rsp + 0x90], 1; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000478ff0: shr bl, 0xee; mov byte ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000401ab8: shr bl, 0xf1; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048aeff: shr bl, 1; or ecx, dword ptr [rax - 0x77]; ret 0x8b48; 
0x0000000000412bf2: shr bl, cl; add ecx, dword ptr [rax - 1]; ret 0x3948; 
0x000000000046b90e: shr bl, cl; cmovs eax, edi; sbb byte ptr [r8], al; add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret 0x1f0f; 
0x0000000000456a32: shr bl, cl; or byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x0000000000418855: shr bl, cl; or byte ptr [rax - 1], cl; ret 0x1f0f; 
0x0000000000422b4b: shr bl, cl; or eax, edi; add al, 0x11; out dx, eax; mov esi, 0x8348dead; ret 0x4804; 
0x000000000046b95a: shr bl, cl; or ecx, dword ptr [rax - 0x39]; or byte ptr [r8], r8b; add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret 0x3948; 
0x0000000000437ad2: shr bl, cl; or ecx, dword ptr [rax - 1]; ret 0x8948; 
0x000000000045d18b: shr dword ptr [rcx - 3], 1; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000421f48: shr dword ptr [rcx], cl; ret 0x8966; 
0x0000000000410a7b: shr dword ptr [rdi + rdx], 0x48; mov dword ptr [rsp + 0x40], eax; mov byte ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000401e47: shr eax, 0x20; add rax, rcx; and rax, 0x7f; mov qword ptr [rsp + 0x10], rax; ret; 
0x00000000004854ea: shr eax, 0xf0; ret 0xfffd; 
0x0000000000447aca: shr eax, 1; inc rcx; cmp rax, 1; ja 0x47ac9; mov qword ptr [rsp + 0x10], rcx; ret; 
0x000000000048af42: shr eax, 1; mov qword ptr [rsp + 0x80], r8; mov qword ptr [rsp + 0x10], r8; call rsi; 
0x000000000048ae57: shr eax, 1; mov qword ptr [rsp + 0x80], r8; mov qword ptr [rsp + 8], r8; mov qword ptr [rsp + 0x10], rcx; call rsi; 
0x0000000000491b17: shr eax, 1; ret; 
0x0000000000402007: shr eax, cl; and rax, 1; lea rax, [rax*2 - 1]; mov qword ptr [r9], rax; ret; 
0x000000000042a4b1: shr eax, cl; and rax, 1; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000044c5d1: shr ebx, 0x10; xor ebx, ecx; mov dword ptr [rax + 0x124], ebx; lea eax, [rdx + rbx]; mov dword ptr [rsp + 8], eax; ret; 
0x000000000042f84c: shr ebx, 1; movabs byte ptr [0x44824ac8b48], al; add rsp, 0x450; ret; 
0x000000000044eef8: shr ebx, 1; popfq; mov qword ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000409297: shr ecx, 0x20; xor rax, rcx; mov qword ptr [rsp + 0x18], rax; ret; 
0x000000000040921e: shr ecx, 0x20; xor rcx, rax; mov qword ptr [rsp + 0x18], rcx; ret; 
0x00000000004090d0: shr ecx, 0x20; xor rcx, rax; mov qword ptr [rsp + 0x20], rcx; ret; 
0x000000000044c015: shr ecx, 2; mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048b05b: shr edi, 1; mov qword ptr [rsp + 0x70], rdi; sub r9, rdi; mov qword ptr [rsp + 8], r9; mov qword ptr [rsp + 0x10], rdi; call rdx; 
0x00000000004022d2: shr edi, cl; sub rdi, rsi; shl rdi, cl; sete byte ptr [rax]; ret; 
0x0000000000402406: shr edx, 0x10; bsf edx, edx; je 0x23ba; mov qword ptr [r8], rdx; ret; 
0x0000000000402062: shr esi, cl; and rsi, 1; lea rax, [rsi*2 - 1]; mov qword ptr [r9], rax; ret; 
0x000000000048af41: shr r8, 1; mov qword ptr [rsp + 0x80], r8; mov qword ptr [rsp + 0x10], r8; call rsi; 
0x000000000048ae56: shr r8, 1; mov qword ptr [rsp + 0x80], r8; mov qword ptr [rsp + 8], r8; mov qword ptr [rsp + 0x10], rcx; call rsi; 
0x0000000000401e46: shr rax, 0x20; add rax, rcx; and rax, 0x7f; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000447ac9: shr rax, 1; inc rcx; cmp rax, 1; ja 0x47ac9; mov qword ptr [rsp + 0x10], rcx; ret; 
0x0000000000402006: shr rax, cl; and rax, 1; lea rax, [rax*2 - 1]; mov qword ptr [r9], rax; ret; 
0x000000000042a4b0: shr rax, cl; and rax, 1; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000409296: shr rcx, 0x20; xor rax, rcx; mov qword ptr [rsp + 0x18], rax; ret; 
0x000000000040921d: shr rcx, 0x20; xor rcx, rax; mov qword ptr [rsp + 0x18], rcx; ret; 
0x00000000004090cf: shr rcx, 0x20; xor rcx, rax; mov qword ptr [rsp + 0x20], rcx; ret; 
0x000000000044c014: shr rcx, 2; mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048b05a: shr rdi, 1; mov qword ptr [rsp + 0x70], rdi; sub r9, rdi; mov qword ptr [rsp + 8], r9; mov qword ptr [rsp + 0x10], rdi; call rdx; 
0x00000000004022d1: shr rdi, cl; sub rdi, rsi; shl rdi, cl; sete byte ptr [rax]; ret; 
0x0000000000402061: shr rsi, cl; and rsi, 1; lea rax, [rsi*2 - 1]; mov qword ptr [r9], rax; ret; 
0x000000000041813c: shufps xmm0, xmmword ptr [rsp + 0x18], 1; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x00000000004400dd: shufps xmm0, xmmword ptr [rsp + 0x28], 0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043a8f4: shufps xmm0, xmmword ptr [rsp + 0x28], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000440143: shufps xmm0, xmmword ptr [rsp + 0x28], 1; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043e304: shufps xmm0, xmmword ptr [rsp + 0x30], 1; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000432b72: shufps xmm0, xmmword ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004567f1: shufps xmm0, xmmword ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000432b3c: shufps xmm0, xmmword ptr [rsp + 0x40], 1; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043c873: shufps xmm0, xmmword ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000455dad: shufps xmm0, xmmword ptr [rsp + 0x50], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000446891: shufps xmm0, xmmword ptr [rsp + 0x60], 1; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000468903: shufps xmm0, xmmword ptr [rsp + 0x78], 0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004254ab: shufps xmm0, xmmword ptr [rsp + 0x78], 1; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000406a52: sidt [rax - 0x75]; push rsp; and al, 0x18; mov rax, qword ptr [rdx]; call rax; 
0x00000000004849cd: sldt word ptr [rax]; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x48; add rsp, 0x50; ret; 
0x000000000042d564: sldt word ptr [rax]; add byte ptr [rbp + 0x18], dh; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000463273: sldt word ptr [rax]; add byte ptr [rdi], cl; xchg eax, esp; and al, 8; ret; 
0x000000000046194f: sldt word ptr [rax]; jmp rax; 
0x000000000045d6ec: sldt word ptr [rax]; jne 0x5d6c4; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045f4d8: sldt word ptr [rax]; jne 0x5f4e7; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000487457: sldt word ptr [rax]; jne 0x8746d; mov qword ptr [rip + 0xcf61d], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048d1c3: sldt word ptr [rax]; jne 0x8d1d9; mov qword ptr [rip + 0xc9ab9], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048deff: sldt word ptr [rax]; jne 0x8df15; mov qword ptr [rip + 0xc21bd], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048e52f: sldt word ptr [rax]; jne 0x8e545; mov qword ptr [rip + 0xc5655], rax; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000048fce5: sldt word ptr [rax]; jne 0x8fcfb; mov qword ptr [rip + 0xc7017], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000490be5: sldt word ptr [rax]; jne 0x90bfb; mov qword ptr [rip + 0xc62ff], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000490f68: sldt word ptr [rax]; jne 0x90f7e; mov qword ptr [rip + 0xc5ea4], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000491301: sldt word ptr [rax]; jne 0x91313; mov qword ptr [rdi], r8; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004946c1: sldt word ptr [rax]; jne 0x946d3; mov qword ptr [rdi], rbx; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000495b5d: sldt word ptr [rax]; jne 0x95b75; mov qword ptr [rdi], rdx; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x000000000040c18c: sldt word ptr [rax]; mov rax, qword ptr [rsp + 0x18]; mov qword ptr [rsp + 0xb8], rax; mov rbp, qword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000046194e: sldt word ptr cs:[rax]; jmp rax; 
0x0000000000456eab: stc; adc dh, byte ptr [rdx + rcx + 0x48]; add eax, 0x30; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000456eec: stc; adc eax, 0x83480a75; rcr byte ptr [rax + 0x48], 0x89; and al, 0x10; ret; 
0x0000000000456ece: stc; adc esi, dword ptr [rbp + 0xa]; add rax, 0x38; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000467252: stc; adc esi, dword ptr [rbp + 0xb]; add rax, 0x38; mov qword ptr [rsp + 0x10], rax; nop; ret; 
0x00000000004618b4: stc; add byte ptr [rax + 0x9770000], al; lea rax, [rip + 0x8be]; jmp rax; 
0x000000000046185a: stc; add byte ptr [rax + rax], al; add byte ptr [rdi + 9], dh; lea rax, [rip + 0x4f8]; jmp rax; 
0x0000000000461824: stc; add byte ptr [rax], 0; add byte ptr [rdi + 9], dh; lea rax, [rip + 0x2ee]; jmp rax; 
0x0000000000461890: stc; add byte ptr [rax], ah; add byte ptr [rax], al; ja 0x618a0; lea rax, [rip + 0x722]; jmp rax; 
0x000000000046190e: stc; add byte ptr [rax], al; adc byte ptr [rax], al; ja 0x6191e; lea rax, [rip + 0xcc4]; jmp rax; 
0x00000000004618ea: stc; add byte ptr [rax], al; add al, 0; ja 0x618fa; lea rax, [rip + 0xb28]; jmp rax; 
0x00000000004618d8: stc; add byte ptr [rax], al; add al, byte ptr [rax]; ja 0x618e8; lea rax, [rip + 0xa5a]; jmp rax; 
0x00000000004619c2: stc; add byte ptr [rax], al; add byte ptr [rax + 0x77], al; or dword ptr [rax - 0x73], ecx; add eax, 0x14d0; jmp rax; 
0x0000000000461944: stc; add byte ptr [rax], al; add byte ptr [rax], 0x77; or dword ptr [rax - 0x73], ecx; add eax, 0xf2e; jmp rax; 
0x00000000004619b0: stc; add byte ptr [rax], al; add byte ptr [rax], ah; ja 0x619c0; lea rax, [rip + 0x1402]; jmp rax; 
0x000000000046198c: stc; add byte ptr [rax], al; add byte ptr [rax], cl; ja 0x6199c; lea rax, [rip + 0x1266]; jmp rax; 
0x000000000046199e: stc; add byte ptr [rax], al; add byte ptr [rax], dl; ja 0x619ae; lea rax, [rip + 0x1334]; jmp rax; 
0x0000000000461956: stc; add byte ptr [rax], al; add byte ptr [rcx], al; ja 0x61966; lea rax, [rip + 0xffc]; jmp rax; 
0x00000000004618a2: stc; add byte ptr [rax], al; add byte ptr [rdi + 9], dh; lea rax, [rip + 0x7f0]; jmp rax; 
0x0000000000461932: stc; add byte ptr [rax], al; add byte ptr [rdi + 9], sil; lea rax, [rip + 0xe60]; jmp rax; 
0x000000000046197a: stc; add byte ptr [rax], al; add byte ptr [rdi + rsi*2], al; or dword ptr [rax - 0x73], ecx; add eax, 0x1198; jmp rax; 
0x0000000000461968: stc; add byte ptr [rax], al; add byte ptr [rdx], al; ja 0x61978; lea rax, [rip + 0x10ca]; jmp rax; 
0x00000000004618c6: stc; add byte ptr [rax], al; add dword ptr [rax], eax; ja 0x618d6; lea rax, [rip + 0x98c]; jmp rax; 
0x0000000000461920: stc; add byte ptr [rax], al; and byte ptr [rax], al; ja 0x61930; lea rax, [rip + 0xd92]; jmp rax; 
0x00000000004618fc: stc; add byte ptr [rax], al; or byte ptr [rax], al; ja 0x6190c; lea rax, [rip + 0xbf6]; jmp rax; 
0x000000000046186c: stc; add byte ptr [rax], cl; add byte ptr [rax], al; ja 0x6187c; lea rax, [rip + 0x5a6]; jmp rax; 
0x000000000046187e: stc; add byte ptr [rax], dl; add byte ptr [rax], al; ja 0x6188e; lea rax, [rip + 0x654]; jmp rax; 
0x0000000000461836: stc; add byte ptr [rcx], al; add byte ptr [rax], al; ja 0x61846; lea rax, [rip + 0x39c]; jmp rax; 
0x0000000000461848: stc; add byte ptr [rdx], al; add byte ptr [rax], al; ja 0x61858; lea rax, [rip + 0x44a]; jmp rax; 
0x000000000044688e: stc; add dword ptr [rbp + 0xf], esi; mov byte ptr [rsp + 0x60], 1; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000043e301: stc; add dword ptr [rdi + 0xf], esi; mov byte ptr [rsp + 0x30], 1; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041f9f3: stc; add dword ptr [rdx + rcx + 0x48], esi; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000433b9b: stc; add dword ptr [rdx + rcx + 0x48], esi; mov ebp, dword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000461806: stc; and byte ptr [rdi + 9], dh; lea rax, [rip + 0x1cf]; jmp rax; 
0x0000000000461815: stc; ja 0x61822; lea rax, [rip + 0x260]; jmp rax; 
0x000000000042aa87: stc; jb 0x2aa42; mov qword ptr [rsp + 0x18], rcx; ret; 
0x000000000042d386: stc; jl 0x2d362; ret; 
0x0000000000407c6b: stc; mov ah, 0x5c; jmp rax; 
0x000000000048b064: stc; mov qword ptr [rsp + 8], r9; mov qword ptr [rsp + 0x10], rdi; call rdx; 
0x000000000043af1b: stc; ret 0x11; 
0x000000000048203b: stc; ret 3; 
0x0000000000462f8a: stc; ret; 
0x0000000000407a4b: stc; sar dword ptr [rsi], cl; ret 0x75b0; 
0x0000000000456f0a: stc; sbb dword ptr [rbp - 0x5f], esi; add rax, 0x50; mov qword ptr [rsp + 0x10], rax; ret; 
0x0000000000467293: stc; sbb dword ptr [rbp - 0x65], esi; add rax, 0x50; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000042a106: stc; shl rbx, cl; or qword ptr [rdx + rax*8], rbx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004051d9: std; add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000422c38: std; add byte ptr [rax], al; add byte ptr [rbx + rcx*2 + 0xf], dh; xchg eax, esp; ret 0x8b48; 
0x000000000045f2d3: std; call qword ptr [rax + 0x2505e8]; add bl, ch; ret; 
0x000000000045c894: std; call qword ptr [rax + 0x4f44e8]; add bl, ch; ret 0xcccc; 
0x0000000000464f30: std; dec dword ptr [rax - 0x75]; add eax, 0xf1ae7; jmp rax; 
0x0000000000439065: std; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000042b56b: std; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x0000000000447dd7: std; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000438796: std; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x0000000000438df2: std; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x000000000042bc5d: std; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; ret; 
0x0000000000435943: std; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x40; add rsp, 0x48; ret; 
0x000000000045676e: std; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x50; add rsp, 0x58; ret; 
0x000000000042ba38: std; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x60; add rsp, 0x68; ret; 
0x0000000000455172: std; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x68; add rsp, 0x70; ret; 
0x0000000000455a76: std; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x70; add rsp, 0x78; ret; 
0x000000000042b187: std; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x000000000043d5dc: std; jmp qword ptr [rsi - 0x70]; 
0x0000000000461532: std; lcall [rax + 0x58]; call 0x374a0; call 0x630c0; ret; 
0x000000000045b9d0: sti; add cl, byte ptr [rdi]; xchg eax, esp; ret; 
0x0000000000485097: sti; add eax, 0x83482676; ret 0x90f3; 
0x000000000049078c: sti; add ecx, dword ptr [rdi]; xchg eax, esp; ret; 
0x000000000042c3a8: sti; add qword ptr [rbx + 0x18], r11; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000041f1a6: sti; cmp qword ptr [rip + 0x1673fa], rbx; ja 0x1f198; mov qword ptr [rip + 0x15e7f9], rdi; ret; 
0x000000000042c0b9: sti; cmp r8, rbx; jae 0x2c095; mov qword ptr [rsp + 0x18], rsi; ret; 
0x000000000045144d: sti; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000045b5b7: sti; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x00000000004607a4: sti; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x00000000004508bd: sti; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x48; add rsp, 0x50; ret; 
0x000000000044d2f6: sti; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x50; add rsp, 0x58; ret; 
0x0000000000456523: sti; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x60; add rsp, 0x68; ret; 
0x00000000004487fb: sti; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x78; sub rsp, -0x80; ret; 
0x000000000045a4ce: sti; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x0000000000451f51: sti; dec dword ptr [rbx - 0x76cbdbbc]; and al, 0x78; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000048b0c2: sti; jg 0x8b0d5; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000042d2c1: sti; lodsd eax, dword ptr [rsi]; add dword ptr [rax], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000410cab: sti; mov byte ptr [rsi + 8], cl; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004100db: sti; mov byte ptr [rsi + 8], dl; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000041dc5a: sti; or byte ptr [rdx + rcx + 0xf], dh; mov edx, 0x830f04e7; ret 0; 
0x0000000000422c37: sti; std; add byte ptr [rax], al; add byte ptr [rbx + rcx*2 + 0xf], dh; xchg eax, esp; ret 0x8b48; 
0x0000000000416c22: stosb byte ptr [rdi], al; add al, 0; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x0000000000418bcc: stosb byte ptr [rdi], al; add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000436bfe: stosb byte ptr [rdi], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000459ddc: stosb byte ptr [rdi], al; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x00000000004227f0: stosb byte ptr [rdi], al; ret 9; 
0x00000000004359a1: stosd dword ptr [rdi], eax; adc eax, 0x89480012; ret 0x8948; 
0x0000000000416ae2: stosd dword ptr [rdi], eax; add al, 0; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x0000000000418aa5: stosd dword ptr [rdi], eax; add al, byte ptr [rax]; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000405391: stosd dword ptr [rdi], eax; in al, dx; add eax, 0x6c8b4800; and al, 0x28; add rsp, 0x30; ret; 
0x000000000047211a: stosd dword ptr [rdi], eax; mov ch, 0xff; jmp qword ptr [rsi - 0x70]; 
0x0000000000404169: stosd dword ptr [rdi], eax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004293b1: stosd dword ptr [rdi], eax; movabs al, byte ptr [0x48fffffefde90003]; mov ebp, dword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000485431: stosd dword ptr [rdi], eax; ret; 
0x000000000045eaee: str word ptr [rax - 0x75]; sub al, 0x24; add rsp, 8; ret; 
0x000000000045cd30: str word ptr [rax - 0x77]; add al, 0x24; call 0xaa40; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000045ca3c: str word ptr [rax - 0x77]; add al, 0x24; call 0xaa40; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x000000000045832e: str word ptr [rax - 0x77]; ret; 
0x000000000046147c: str word ptr [rax - 0x7b]; sal byte ptr [rcx + rsi + 0x48], 0x8d; xor eax, 0xfffff376; mov rdx, 0; mov rcx, 0; call rax; 
0x0000000000485249: sub al, 0; add byte ptr [rax], al; mov qword ptr [rsp], rcx; call rax; 
0x0000000000485316: sub al, 0; add byte ptr [rax], al; mov qword ptr [rsp], rcx; nop; call rax; 
0x0000000000413816: sub al, 0x17; add bl, ch; movabs byte ptr [0x6c8b4840245c8948], al; and al, 0x28; add rsp, 0x30; ret; 
0x000000000041b7b0: sub al, 0x21; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000411e10: sub al, 0x22; add eax, 0x6c8b4800; and al, 0x18; add rsp, 0x20; ret; 
0x000000000040607b: sub al, 0x24; add rsp, 8; ret; 
0x000000000047ca54: sub al, 0x24; mov qword ptr [rsp + 8], r14; mov rax, qword ptr [rdx]; nop; call rax; 
0x000000000045b1f9: sub al, 0x24; nop dword ptr [rax + rax]; call 0x21300; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043db19: sub al, 0x24; nop dword ptr [rax + rax]; call 0x3db00; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043db59: sub al, 0x24; nop dword ptr [rax + rax]; call 0x3db40; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043db99: sub al, 0x24; nop dword ptr [rax + rax]; call 0x3db80; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043dbd9: sub al, 0x24; nop dword ptr [rax + rax]; call 0x3dbc0; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043dc19: sub al, 0x24; nop dword ptr [rax + rax]; call 0x3dc00; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000043dc59: sub al, 0x24; nop dword ptr [rax + rax]; call 0x3dc40; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x00000000004369f6: sub al, 0x39; ret 0x2075; 
0x00000000004600b4: sub al, 0x89; and al, 0x48; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000412799: sub al, 0x89; and al, 0x4c; mov qword ptr [rsp + 0x50], r9; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040d0da: sub al, 0xc0; inc eax; mov dword ptr [rsp + 0x28], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000430678: sub al, 3; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000430674: sub al, bpl; add eax, 0x4800032c; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044d46f: sub al, byte ptr [rip + 0x14d0000]; ret; 
0x0000000000430675: sub al, ch; add eax, 0x4800032c; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045cfaf: sub al, ch; or esp, dword ptr [rbx]; add bl, ch; ret 0x8d48; 
0x0000000000443181: sub bh, bh; rol byte ptr [rbp + 0x480a7cc0], 0x8b; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x00000000004489bb: sub bl, ch; ret 0x8b48; 
0x000000000049440a: sub bl, ch; ret; 
0x0000000000451fd2: sub bl, ch; sbb dword ptr [rax - 1], ecx; ret 0x3948; 
0x0000000000423375: sub bl, ch; xchg eax, edx; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000041246d: sub byte ptr [rax + 0x24448b48], dl; cmp byte ptr [rax - 0x46], cl; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x1480000], al; ret 0xc148; 
0x0000000000405acc: sub byte ptr [rax + 0x29], cl; ret 0x8948; 
0x0000000000465125: sub byte ptr [rax + 0x38], bh; syscall; 
0x0000000000494df9: sub byte ptr [rax + 0x66082444], cl; nop; call 0x91aa0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045ad61: sub byte ptr [rax + 0xa740038], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004650db: sub byte ptr [rax + 0xca], bh; syscall; 
0x00000000004650db: sub byte ptr [rax + 0xca], bh; syscall; mov dword ptr [rsp + 0x30], eax; ret; 
0x00000000004692a1: sub byte ptr [rax + 0xe82484], cl; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x000000000047f16c: sub byte ptr [rax + 0xf02484], cl; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x000000000043d3d0: sub byte ptr [rax + 1], cl; ret 0x8948; 
0x00000000004853e2: sub byte ptr [rax + 9], cl; ret 0xf48; 
0x0000000000465777: sub byte ptr [rax + r10 + 0x31], sil; ror byte ptr [rax + 0x48402444], 0x8b; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000465778: sub byte ptr [rax + rdx + 0x31], dh; ror byte ptr [rax + 0x48402444], 0x8b; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000466872: sub byte ptr [rax + rdx + 0x31], sil; ror byte ptr [rax + 0x48402444], 0x8b; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000464fa5: sub byte ptr [rax - 0x39], cl; and al, 0x30; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000465077: sub byte ptr [rax - 0x75], cl; add eax, 0xf19b9; mov rbx, rsp; and rsp, 0xfffffffffffffff0; mov qword ptr [rsp], rbx; call rax; 
0x000000000044c467: sub byte ptr [rax - 0x75], cl; and al, 0x20; lea rdx, [rsp + 0x20]; call rax; 
0x000000000040395b: sub byte ptr [rax - 0x75], cl; and al, 0x20; xchg qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000486ca0: sub byte ptr [rax - 0x75], cl; and al, 0x50; mov rax, qword ptr [rax + 0x100]; mov rcx, qword ptr [rsp + 0x58]; mov qword ptr [rsp], rcx; call rax; 
0x000000000040d0e1: sub byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x00000000004235ee: sub byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000042dca0: sub byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x000000000048371c: sub byte ptr [rax - 0x75], cl; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000048fecd: sub byte ptr [rax - 0x75], cl; sbb byte ptr [r8 - 0x77], cl; adc al, 0x24; call rcx; 
0x000000000048ac01: sub byte ptr [rax - 0x75], cl; sbb byte ptr [rax - 0x75], cl; push rsp; and al, 0x30; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000441cd2: sub byte ptr [rax - 0x75], cl; sub al, 0x24; add rsp, 8; ret; 
0x00000000004621dc: sub byte ptr [rax - 0x76b80000], al; out 0xf3, eax; movsb byte ptr [rdi], byte ptr [rsi]; mov rdx, qword ptr [rsp + 0x8018]; mov rax, qword ptr [rdx]; call rax; 
0x0000000000425721: sub byte ptr [rax - 0x77], cl; add al, 0x24; call 0xaa40; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000434744: sub byte ptr [rax - 0x77], cl; add al, 0x24; mov rcx, qword ptr [rip + 0x91df0]; lea rdx, [rip + 0x91de9]; call rcx; 
0x000000000045a281: sub byte ptr [rax - 0x77], cl; add dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x0000000000471803: sub byte ptr [rax - 0x77], cl; add eax, 0xe534d; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000048aaaf: sub byte ptr [rax - 0x77], cl; and al, 0x10; call rax; 
0x000000000041d491: sub byte ptr [rax - 0x77], cl; and al, 0x20; mov rax, qword ptr [rdx]; call rax; 
0x0000000000498006: sub byte ptr [rax - 0x77], cl; and al, 0x30; call 0x95800; mov rbp, qword ptr [rsp + 0x1c8]; add rsp, 0x1d0; ret; 
0x000000000046744d: sub byte ptr [rax - 0x77], cl; and al, 0x30; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000467730: sub byte ptr [rax - 0x77], cl; and al, 0x30; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; nop; ret; 
0x000000000040b04c: sub byte ptr [rax - 0x77], cl; and al, 0x30; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040fc0b: sub byte ptr [rax - 0x77], cl; and al, 0x40; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004671c4: sub byte ptr [rax - 0x77], cl; and al, 0x48; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042ac00: sub byte ptr [rax - 0x77], cl; and al, 0x48; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048d2ee: sub byte ptr [rax - 0x77], cl; and al, 0x50; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000414f00: sub byte ptr [rax - 0x77], cl; and al, 0x50; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000041fc7e: sub byte ptr [rax - 0x77], cl; and al, 0x58; mov dword ptr [rsp + 0x60], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000481e5f: sub byte ptr [rax - 0x77], cl; and al, 0x58; mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000450f1c: sub byte ptr [rax - 0x77], cl; and al, 0x60; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000411ed6: sub byte ptr [rax - 0x77], cl; and al, 0x68; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004373e1: sub byte ptr [rax - 0x77], cl; and al, 0x68; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000401032: sub byte ptr [rax - 0x77], cl; and al, 8; call 0x1060; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045e9ea: sub byte ptr [rax - 0x77], cl; and al, 8; call 0x11f80; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000415ef3: sub byte ptr [rax - 0x77], cl; and al, 8; call 0x3b00; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000456c9c: sub byte ptr [rax - 0x77], cl; and al, 8; mov rcx, qword ptr [rax]; mov rdx, rax; call rcx; 
0x0000000000463091: sub byte ptr [rax - 0x77], cl; hlt; mov dword ptr [rsp + 0x18], eax; ret; 
0x0000000000430fc1: sub byte ptr [rax - 0x77], cl; or al, 0x24; call 0x30b80; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000469603: sub byte ptr [rax - 0x77], cl; or al, 0x24; call rax; 
0x000000000048df87: sub byte ptr [rax - 0x77], cl; push rsp; and al, 0x30; mov qword ptr [rsp + 0x38], 0; call 0x5f320; ret; 
0x000000000045548d: sub byte ptr [rax - 0x77], cl; ret 0x8948; 
0x000000000040cbf0: sub byte ptr [rax - 0x77], cl; ret 0xc148; 
0x0000000000454b9e: sub byte ptr [rax - 0x77], cl; ror dword ptr [rax - 0x7d], cl; ret; 
0x0000000000430671: sub byte ptr [rax - 0x77], cl; sub al, bpl; add eax, 0x4800032c; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000041e0e5: sub byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + 0xa], 0x48; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004733c5: sub byte ptr [rax - 0x7b], cl; sar byte ptr [rbp + 0xa], 0x48; mov ebp, dword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000441f50: sub byte ptr [rax - 0x7d], cl; ret 0x4802; 
0x000000000043f3ef: sub byte ptr [rax - 1], cl; ret 0x8948; 
0x000000000042e96f: sub byte ptr [rax], ah; add byte ptr [rax], al; ret; 
0x00000000004312a9: sub byte ptr [rax], al; add bl, ch; ret 0x8b48; 
0x000000000043127c: sub byte ptr [rax], al; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000464f96: sub byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x30; ret; 
0x00000000004310bb: sub byte ptr [rax], al; je 0x3111a; mov rax, qword ptr [rax + 0x18]; mov qword ptr [rsp], rcx; call rax; 
0x000000000045b0b9: sub byte ptr [rax], al; je 0x5b0c7; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000043ac73: sub byte ptr [rax], al; jne 0x3ac81; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000403ed7: sub byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000432628: sub byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004415a4: sub byte ptr [rax], al; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000441ce5: sub byte ptr [rax], al; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000044c972: sub byte ptr [rbp + 0x39], cl; ret 0x6f72; 
0x000000000042e83f: sub byte ptr [rbp + 0x480a7cc0], al; mov ebp, dword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000048dfb8: sub byte ptr [rbx + rcx*4 + 0x44], cl; and al, 0x30; mov r9, qword ptr [rsp + 0x38]; mov rax, qword ptr [rsp + 8]; syscall; 
0x00000000004636f3: sub byte ptr [rbx + rcx*4 + 0x7c], cl; and al, 0x20; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x00000000004734f5: sub byte ptr [rbx], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004618f4: sub byte ptr [rbx], cl; add byte ptr [rax], al; jmp rax; 
0x000000000045e0f6: sub byte ptr [rcx + rdx + 0x48], dh; cmp edx, ecx; jne 0x5e104; mov byte ptr [rsp + 0x10], 0x21; ret; 
0x00000000004464f0: sub byte ptr [rcx - 0x76b7dbf4], cl; and al, 8; call 0x2f340; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004680ab: sub byte ptr [rcx], al; add byte ptr [rax], al; add rsp, 0x130; ret; 
0x0000000000480a82: sub byte ptr [rcx], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x130], rcx; mov rbp, qword ptr [rsp + 0x110]; add rsp, 0x118; ret; 
0x0000000000406de1: sub byte ptr [rcx], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x108]; add rsp, 0x110; ret; 
0x000000000048bfc9: sub byte ptr [rcx], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x0000000000458b9b: sub byte ptr [rcx], al; add byte ptr [rax], al; nop; ret; 
0x0000000000428658: sub byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x0000000000403ec8: sub byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004326f8: sub byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000405fe8: sub byte ptr [rcx], al; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000437ad0: sub byte ptr [rcx], dh; shr bl, cl; or ecx, dword ptr [rax - 1]; ret 0x8948; 
0x000000000041529e: sub byte ptr [rdi + 0x6c081], al; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x0000000000456e13: sub byte ptr [rdi], cl; mov dh, 0x52; adc al, 0xf6; ret 0x7402; 
0x000000000041c61c: sub byte ptr [rdx - 0x76b7ffea], ch; add al, 0x24; call 0xaa40; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000424a37: sub byte ptr [rdx], dl; add byte ptr [rax], al; mov qword ptr [rsp + 0x38], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042589f: sub byte ptr [rdx], dl; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000492366: sub cl, ch; ret; 
0x000000000045b468: sub dh, al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004100cf: sub dh, dh; ret 0xf04; 
0x0000000000482754: sub dl, dh; cli; call qword ptr [rax - 0x20f7d18]; jmp qword ptr [rsi - 0x70]; 
0x0000000000450d03: sub dword ptr [rax + 0x16], 0; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x60; add rsp, 0x68; ret; 
0x000000000044f700: sub dword ptr [rax + 0x16], 0; add byte ptr [rax - 1], bh; lock xadd dword ptr [rbx + 0x2788], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042c738: sub dword ptr [rax + 0x18], ecx; mov qword ptr [rsp + 0x18], r8; mov qword ptr [rsp + 0x20], rbx; ret; 
0x000000000042c74b: sub dword ptr [rax + 0x18], esi; mov qword ptr [rsp + 0x18], rdi; mov qword ptr [rsp + 0x20], r8; ret; 
0x0000000000465146: sub dword ptr [rax + 0xba], edi; syscall; 
0x000000000040a0cc: sub dword ptr [rax + rax], edx; lea rax, [rcx + rax*8]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042589e: sub dword ptr [rax], 0x48000012; mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004734f4: sub dword ptr [rax], 3; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042c88e: sub dword ptr [rbx + 0x18], eax; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x00000000004341b3: sub dword ptr [rbx], eax; add byte ptr [rax], al; call 0x33b60; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000423b2f: sub dword ptr [rdx - 0x57f9caf], ecx; add dword ptr [rdi], ecx; xchg eax, ebp; ret 0xd284; 
0x0000000000462fd4: sub dword ptr [rsp], 5; mov rbx, qword ptr [rdx]; jmp rbx; 
0x000000000048ac2f: sub eax, 0x48000000; mov ebp, dword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000469627: sub eax, 0x48000ed6; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000045b26f: sub eax, 0x480012be; mov eax, dword ptr [rcx]; mov qword ptr [rip + 0x12be0b], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000047bc72: sub eax, 0x89480006; and al, 0x58; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000437dae: sub eax, 0xd2ebfffd; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000455a6f: sub eax, 0xe8fffde3; call 0x49055859; mov ebp, dword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000437e8f: sub eax, 0xeb0002b5; ret 0x8948; 
0x0000000000462f86: sub eax, 1; jne 0x62f84; ret; 
0x000000000045ea82: sub eax, dword ptr [rax]; add byte ptr [rbx + 0x30247c], al; jl 0x5ea96; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000434c71: sub eax, dword ptr [rcx - 0x74b80000]; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000045b4cc: sub eax, dword ptr [rip + 0x12bbd6]; add qword ptr [rip + 0x12bbc7], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042a880: sub eax, ebx; mov qword ptr [rsp + 0x58], r8; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000043ac6d: sub eax, ecx; cmp qword ptr [rsp + 0x28], 0; jne 0x3ac81; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000042c730: sub eax, ecx; mov qword ptr [rcx + rdx + 8], r8; sub qword ptr [rax + 0x18], r9; mov qword ptr [rsp + 0x18], r8; mov qword ptr [rsp + 0x20], rbx; ret; 
0x000000000041f3d4: sub eax, ecx; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000441475: sub eax, esi; cmp qword ptr [rbx], 0; jne 0x41487; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000402216: sub ebx, 0x40; cmp edx, 0xffff; je 0x21bd; mov byte ptr [rax], 0; ret; 
0x0000000000402256: sub ebx, 0x40; cmp edx, 0xffffffff; je 0x2225; vzeroupper; mov byte ptr [rax], 0; ret; 
0x0000000000402280: sub ebx, 8; cmp rcx, rdx; je 0x226b; mov byte ptr [rax], 0; ret; 
0x00000000004287de: sub ebx, ecx; mov qword ptr [rsp + 8], rbx; mov rcx, qword ptr [rsp + 0x110]; lea rdx, [rsp + 0x110]; call rcx; 
0x000000000041fd0a: sub ebx, ecx; test rbx, rbx; jne 0x1fd1b; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042c3a7: sub ebx, edi; add qword ptr [rbx + 0x18], r11; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000041f1a5: sub ebx, edi; cmp qword ptr [rip + 0x1673fa], rbx; ja 0x1f198; mov qword ptr [rip + 0x15e7f9], rdi; ret; 
0x0000000000493af9: sub ecx, dword ptr [rax - 0x77]; ret; 
0x000000000041fd36: sub ecx, dword ptr [rax - 0x7f]; ret 0xb8; 
0x000000000041128e: sub ecx, dword ptr [rbp + 0x39]; and byte ptr [r8 + rdx + 0x48], sil; mov ebp, dword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000040f9a5: sub ecx, dword ptr [rbp + 0x39]; and byte ptr [r8 + rdx + 0x48], sil; mov ebp, dword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x0000000000410643: sub ecx, dword ptr [rcx + 0x39]; js 0x10668; je 0x1065a; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x0000000000435ecf: sub ecx, dword ptr [rip + 0x12136b]; cmp ecx, eax; jg 0x35ee3; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000462d7a: sub ecx, ebx; call 0x60780; mov rbp, qword ptr [rsp + 0x10000000]; add rsp, 0x10000008; ret; 
0x00000000004629fa: sub ecx, ebx; call 0x60780; mov rbp, qword ptr [rsp + 0x1000000]; add rsp, 0x1000008; ret; 
0x000000000046267a: sub ecx, ebx; call 0x60780; mov rbp, qword ptr [rsp + 0x100000]; add rsp, 0x100008; ret; 
0x00000000004622fa: sub ecx, ebx; call 0x60780; mov rbp, qword ptr [rsp + 0x10000]; add rsp, 0x10008; ret; 
0x0000000000461f7a: sub ecx, ebx; call 0x60780; mov rbp, qword ptr [rsp + 0x1000]; add rsp, 0x1008; ret; 
0x0000000000461c64: sub ecx, ebx; call 0x60780; mov rbp, qword ptr [rsp + 0x100]; add rsp, 0x108; ret; 
0x0000000000462e5a: sub ecx, ebx; call 0x60780; mov rbp, qword ptr [rsp + 0x20000000]; add rsp, 0x20000008; ret; 
0x0000000000462ada: sub ecx, ebx; call 0x60780; mov rbp, qword ptr [rsp + 0x2000000]; add rsp, 0x2000008; ret; 
0x000000000046275a: sub ecx, ebx; call 0x60780; mov rbp, qword ptr [rsp + 0x200000]; add rsp, 0x200008; ret; 
0x00000000004623da: sub ecx, ebx; call 0x60780; mov rbp, qword ptr [rsp + 0x20000]; add rsp, 0x20008; ret; 
0x000000000046205a: sub ecx, ebx; call 0x60780; mov rbp, qword ptr [rsp + 0x2000]; add rsp, 0x2008; ret; 
0x0000000000461d24: sub ecx, ebx; call 0x60780; mov rbp, qword ptr [rsp + 0x200]; add rsp, 0x208; ret; 
0x0000000000461a3a: sub ecx, ebx; call 0x60780; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000046283a: sub ecx, ebx; call 0x60780; mov rbp, qword ptr [rsp + 0x400000]; add rsp, 0x400008; ret; 
0x00000000004624ba: sub ecx, ebx; call 0x60780; mov rbp, qword ptr [rsp + 0x40000]; add rsp, 0x40008; ret; 
0x0000000000461de4: sub ecx, ebx; call 0x60780; mov rbp, qword ptr [rsp + 0x400]; add rsp, 0x408; ret; 
0x0000000000461ada: sub ecx, ebx; call 0x60780; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000462c9a: sub ecx, ebx; call 0x60780; mov rbp, qword ptr [rsp + 0x8000000]; add rsp, 0x8000008; ret; 
0x000000000046291a: sub ecx, ebx; call 0x60780; mov rbp, qword ptr [rsp + 0x800000]; add rsp, 0x800008; ret; 
0x000000000046259a: sub ecx, ebx; call 0x60780; mov rbp, qword ptr [rsp + 0x80000]; add rsp, 0x80008; ret; 
0x0000000000461ea4: sub ecx, ebx; call 0x60780; mov rbp, qword ptr [rsp + 0x800]; add rsp, 0x808; ret; 
0x0000000000461ba1: sub ecx, ebx; call 0x60780; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000048b063: sub ecx, edi; mov qword ptr [rsp + 8], r9; mov qword ptr [rsp + 0x10], rdi; call rdx; 
0x000000000041adb2: sub ecx, esi; mov qword ptr [rsp + 0x50], rcx; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000047fd71: sub edi, dword ptr [rip + 0x39480002]; ret 0x850f; 
0x0000000000463041: sub edi, edx; mov qword ptr [rsp + 0x28], rdi; mov rdi, rbx; mov rcx, rbx; call rax; 
0x00000000004023c3: sub edi, esi; add rdi, rdx; mov qword ptr [r8], rdi; ret; 
0x000000000040246b: sub edi, esi; add rdx, rdi; mov qword ptr [r8], rdx; vzeroupper; ret; 
0x00000000004022d5: sub edi, esi; shl rdi, cl; sete byte ptr [rax]; ret; 
0x00000000004831b1: sub edx, dword ptr [rax + 0x448b4890]; ret 0x4810; 
0x0000000000485061: sub edx, dword ptr [rbx]; add al, 0; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000046305a: sub esi, dword ptr [rsp + 0x28]; mov qword ptr fs:[0xfffffffffffffff8], rdi; mov rsp, rsi; mov dword ptr [rsp + 0x18], eax; ret; 
0x0000000000494940: sub esi, eax; xor byte ptr [rbx], 0x48; mov ebp, dword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x00000000004914bc: sub esp, -0x80; nop; ret; 
0x000000000040428b: sub esp, -0x80; ret; 
0x000000000040a14d: sub qword ptr [r8 + r8], r10; lea rax, [rcx + rax*8]; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042c737: sub qword ptr [rax + 0x18], r9; mov qword ptr [rsp + 0x18], r8; mov qword ptr [rsp + 0x20], rbx; ret; 
0x000000000042c74a: sub qword ptr [rax + 0x18], rsi; mov qword ptr [rsp + 0x18], rdi; mov qword ptr [rsp + 0x20], r8; ret; 
0x000000000042c88d: sub qword ptr [rbx + 0x18], r8; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000462fd3: sub qword ptr [rsp], 5; mov rbx, qword ptr [rdx]; jmp rbx; 
0x000000000042c3a6: sub r11, rdi; add qword ptr [rbx + 0x18], r11; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000443180: sub r15b, dil; rol byte ptr [rbp + 0x480a7cc0], 0x8b; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000042c72f: sub r8, r9; mov qword ptr [rcx + rdx + 8], r8; sub qword ptr [rax + 0x18], r9; mov qword ptr [rsp + 0x18], r8; mov qword ptr [rsp + 0x20], rbx; ret; 
0x000000000042a87f: sub r8, rbx; mov qword ptr [rsp + 0x58], r8; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048b062: sub r9, rdi; mov qword ptr [rsp + 8], r9; mov qword ptr [rsp + 0x10], rdi; call rdx; 
0x000000000045b4cb: sub rax, qword ptr [rip + 0x12bbd6]; add qword ptr [rip + 0x12bbc7], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043ac6c: sub rax, rcx; cmp qword ptr [rsp + 0x28], 0; jne 0x3ac81; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000041f3d3: sub rax, rcx; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000441474: sub rax, rsi; cmp qword ptr [rbx], 0; jne 0x41487; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000402215: sub rbx, 0x40; cmp edx, 0xffff; je 0x21bd; mov byte ptr [rax], 0; ret; 
0x0000000000402255: sub rbx, 0x40; cmp edx, 0xffffffff; je 0x2225; vzeroupper; mov byte ptr [rax], 0; ret; 
0x000000000040227f: sub rbx, 8; cmp rcx, rdx; je 0x226b; mov byte ptr [rax], 0; ret; 
0x00000000004287dd: sub rbx, rcx; mov qword ptr [rsp + 8], rbx; mov rcx, qword ptr [rsp + 0x110]; lea rdx, [rsp + 0x110]; call rcx; 
0x000000000041fd09: sub rbx, rcx; test rbx, rbx; jne 0x1fd1b; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041f1a4: sub rbx, rdi; cmp qword ptr [rip + 0x1673fa], rbx; ja 0x1f198; mov qword ptr [rip + 0x15e7f9], rdi; ret; 
0x0000000000435ece: sub rcx, qword ptr [rip + 0x12136b]; cmp ecx, eax; jg 0x35ee3; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000462d79: sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x10000000]; add rsp, 0x10000008; ret; 
0x00000000004629f9: sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x1000000]; add rsp, 0x1000008; ret; 
0x0000000000462679: sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x100000]; add rsp, 0x100008; ret; 
0x00000000004622f9: sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x10000]; add rsp, 0x10008; ret; 
0x0000000000461f79: sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x1000]; add rsp, 0x1008; ret; 
0x0000000000461c63: sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x100]; add rsp, 0x108; ret; 
0x0000000000462e59: sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x20000000]; add rsp, 0x20000008; ret; 
0x0000000000462ad9: sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x2000000]; add rsp, 0x2000008; ret; 
0x0000000000462759: sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x200000]; add rsp, 0x200008; ret; 
0x00000000004623d9: sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x20000]; add rsp, 0x20008; ret; 
0x0000000000462059: sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x2000]; add rsp, 0x2008; ret; 
0x0000000000461d23: sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x200]; add rsp, 0x208; ret; 
0x0000000000461a39: sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000462839: sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x400000]; add rsp, 0x400008; ret; 
0x00000000004624b9: sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x40000]; add rsp, 0x40008; ret; 
0x0000000000461de3: sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x400]; add rsp, 0x408; ret; 
0x0000000000461ad9: sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000462c99: sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x8000000]; add rsp, 0x8000008; ret; 
0x0000000000462919: sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x800000]; add rsp, 0x800008; ret; 
0x0000000000462599: sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x80000]; add rsp, 0x80008; ret; 
0x0000000000461ea3: sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x800]; add rsp, 0x808; ret; 
0x0000000000461ba0: sub rcx, rbx; call 0x60780; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000041adb1: sub rcx, rsi; mov qword ptr [rsp + 0x50], rcx; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000463040: sub rdi, rdx; mov qword ptr [rsp + 0x28], rdi; mov rdi, rbx; mov rcx, rbx; call rax; 
0x00000000004023c2: sub rdi, rsi; add rdi, rdx; mov qword ptr [r8], rdi; ret; 
0x000000000040246a: sub rdi, rsi; add rdx, rdi; mov qword ptr [r8], rdx; vzeroupper; ret; 
0x00000000004022d4: sub rdi, rsi; shl rdi, cl; sete byte ptr [rax]; ret; 
0x0000000000463059: sub rsi, qword ptr [rsp + 0x28]; mov qword ptr fs:[0xfffffffffffffff8], rdi; mov rsp, rsi; mov dword ptr [rsp + 0x18], eax; ret; 
0x00000000004914bb: sub rsp, -0x80; nop; ret; 
0x000000000040428a: sub rsp, -0x80; ret; 
0x00000000004100ce: sub sil, sil; ret 0xf04; 
0x00000000004108db: syscall; 
0x0000000000464938: syscall; cmp rax, -0xfff; jbe 0x64947; mov eax, 0xffffffff; mov dword ptr [rsp + 0x18], eax; ret; 
0x0000000000464969: syscall; cmp rax, -0xfff; jbe 0x64978; mov eax, 0xffffffff; mov dword ptr [rsp + 0x10], eax; ret; 
0x000000000046512b: syscall; cmp rax, 0; je 0x65138; mov dword ptr [rsp + 0x30], eax; ret; 
0x00000000004649ca: syscall; mov dword ptr [rsp + 0x10], eax; ret; 
0x00000000004649ee: syscall; mov dword ptr [rsp + 0x18], eax; ret; 
0x0000000000464993: syscall; mov dword ptr [rsp + 0x20], eax; ret; 
0x0000000000464d79: syscall; mov dword ptr [rsp + 0x28], eax; ret; 
0x00000000004650e1: syscall; mov dword ptr [rsp + 0x30], eax; ret; 
0x0000000000464a65: syscall; mov dword ptr [rsp + 8], eax; ret; 
0x0000000000464ac5: syscall; mov edi, eax; mov esi, dword ptr [rsp + 8]; mov eax, 0x3e; syscall; ret; 
0x000000000046538a: syscall; mov qword ptr [rsp + 0x10], rax; ret; 
0x00000000004653af: syscall; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000464ae5: syscall; mov qword ptr [rsp + 8], rax; ret; 
0x0000000000464a3b: syscall; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004648e9: syscall; ret; 
0x0000000000409cc2: test al, 0; add byte ptr [rax], al; add rsp, 0xb0; ret; 
0x00000000004168d5: test al, 0; add byte ptr [rax], al; jbe 0x16878; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000048cce5: test al, 0; add byte ptr [rax], al; mov qword ptr [rsp], rcx; call rax; 
0x0000000000444b2e: test al, 0; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000047bf99: test al, 0; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000048de38: test al, 0; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000481ffb: test al, 0; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000044e03a: test al, 0; add byte ptr [rax], al; ret; 
0x0000000000434abc: test al, 0x1a; or dword ptr [rax], eax; lea rdx, [rip + 0x91aa1]; call rax; 
0x000000000046c25f: test al, 0xe; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x00000000004495c9: test al, 1; add byte ptr [rax], al; add rsp, 0x1b0; ret; 
0x00000000004499b0: test al, 1; add byte ptr [rax], al; ret; 
0x000000000046b0d7: test al, 1; jne 0x6b0e5; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000436dd2: test al, 2; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x000000000041e2aa: test al, al; je 0x1e2b8; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000437800: test al, al; je 0x3780e; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000041bea0: test al, al; jne 0x1beae; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000433218: test al, al; jne 0x33226; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000045ba77: test al, al; jne 0x5ba85; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000047ac17: test ax, 0x8000; setne byte ptr [rsp + 0x50]; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040a8f0: test bh, bh; je 0xa8d7; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040a94c: test bh, bh; je 0xa935; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000454eb3: test bh, bh; jne 0x54ecf; mov qword ptr [rsp + 0x2b0], rbx; mov rbp, qword ptr [rsp + 0x278]; add rsp, 0x280; ret; 
0x0000000000436c8c: test bl, bl; je 0x36c77; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000437d49: test bl, bl; je 0x37db3; mov rdx, qword ptr [rip + 0x11f5cc]; mov qword ptr [rsp], rcx; mov rax, qword ptr [rdx]; call rax; 
0x0000000000406070: test bl, bl; je 0x6024; mov qword ptr [rsp + 0x18], rdx; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000040a724: test bl, bl; je 0xa705; mov qword ptr [rsp + 0x10], rdx; ret; 
0x000000000041ea9a: test bl, bl; jne 0x1eaa8; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000047e64f: test byte ptr [rax + rax - 0x49f10000], dl; push rax; adc al, 0xf6; ret 0x7404; 
0x0000000000408e58: test byte ptr [rax + rax*2], ah; add dword ptr [rax], eax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x108]; add rsp, 0x110; ret; 
0x000000000044f08e: test byte ptr [rax + rax*4], ah; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000473aa6: test byte ptr [rax + rax*4], ah; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000048af46: test byte ptr [rax + rax*4], ah; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 + 0x44], cl; and al, 0x10; call rsi; 
0x000000000048ae5b: test byte ptr [rax + rax*4], ah; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 + 0x44], cl; and al, 8; mov qword ptr [rsp + 0x10], rcx; call rsi; 
0x000000000044effe: test byte ptr [rax + rax*4], ah; add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000473b28: test byte ptr [rax + rax*4], ah; add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000487460: test byte ptr [rax + rax], 0x48; mov ebp, dword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000044cd46: test byte ptr [rax + rbp*2], ah; add dword ptr [rax], eax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x100]; add rsp, 0x108; ret; 
0x000000000040c15c: test byte ptr [rax + rbp*4], ah; add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rsp + rbp*2 + 0x48], 0xf7; ret 7; 
0x000000000047ea4f: test byte ptr [rax + rbp*8], ah; add byte ptr [rax], al; add byte ptr [rax - 0x17dfdbbc], cl; ret 0xfffc; 
0x0000000000468b6a: test byte ptr [rax + rbp*8], ah; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x000000000047a186: test byte ptr [rax + rbp*8], ah; add byte ptr [rax], al; add byte ptr [rcx + 0xf], al; mov bh, 0x59; xor ah, byte ptr [rsi - 9]; ret; 
0x0000000000468c42: test byte ptr [rax + rbp*8], ah; add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x0000000000441388: test byte ptr [rax + rbx*2], ah; add al, 0; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x430]; add rsp, 0x438; ret; 
0x000000000044133d: test byte ptr [rax + rbx*2], ah; add al, 0; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x430]; add rsp, 0x438; ret; 
0x00000000004584f2: test byte ptr [rax + rcx*2], ah; add dword ptr [rax], eax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x00000000004682c8: test byte ptr [rax + rcx*2], ah; add dword ptr [rax], eax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x128]; add rsp, 0x130; ret; 
0x000000000047c1f3: test byte ptr [rax + rcx*2], ah; add dword ptr [rax], eax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xd0]; add rsp, 0xd8; ret; 
0x000000000045882e: test byte ptr [rax + rcx*2], ah; add dword ptr [rax], eax; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x00000000004680a0: test byte ptr [rax + rcx*2], ah; add dword ptr [rax], eax; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x128]; add rsp, 0x130; ret; 
0x000000000047c1db: test byte ptr [rax + rcx*2], ah; add dword ptr [rax], eax; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0xd0]; add rsp, 0xd8; ret; 
0x000000000047c60c: test byte ptr [rax + rcx*4], ah; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; mov rcx, qword ptr [rsp + 0x90]; mov qword ptr [rsp], rcx; call rax; 
0x000000000047c5d2: test byte ptr [rax + rcx*4], ah; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; mov rdx, qword ptr [rsp + 0x90]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000478793: test byte ptr [rax + rcx*4], ah; add byte ptr [rax], al; add cl, ch; ret 0xfff7; 
0x0000000000496e4f: test byte ptr [rax + rdi*2], ah; add al, byte ptr [rax]; add byte ptr [rcx - 0x17e7dbbc], cl; ret 0xffe7; 
0x0000000000445dc7: test byte ptr [rax + rdi*4], ah; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add al, 0x24; mov rcx, qword ptr [rdx]; call rcx; 
0x000000000048aee7: test byte ptr [rax + rdi*4], ah; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000422065: test byte ptr [rax + rdi*8], ah; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000042213b: test byte ptr [rax + rdi*8], ah; add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000044123e: test byte ptr [rax + rdx*2], ah; add al, 0; add byte ptr [rcx], ch; ret 0xead1; 
0x000000000047d074: test byte ptr [rax + rdx*4], ah; add al, byte ptr [rax]; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x208]; add rsp, 0x210; ret; 
0x0000000000414340: test byte ptr [rax + rdx*4], ah; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret; 
0x000000000045e175: test byte ptr [rax + rdx*4], ah; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000478c76: test byte ptr [rax + rdx*4], ah; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000045e275: test byte ptr [rax + rdx*4], ah; add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000473f5b: test byte ptr [rax + rdx*4], ah; add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000478c88: test byte ptr [rax + rdx*4], ah; add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000047a754: test byte ptr [rax + rsi*4], ah; add dword ptr [rax], eax; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x138]; add rsp, 0x140; ret; 
0x000000000047a7fc: test byte ptr [rax + rsi*4], ah; add dword ptr [rax], eax; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x138]; add rsp, 0x140; ret; 
0x00000000004287aa: test byte ptr [rax + rsi*8], ah; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000047ea6a: test byte ptr [rax + rsi*8], ah; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x0000000000439bbd: test byte ptr [rax + rsi*8], ah; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000047f0b3: test byte ptr [rax + rsi*8], ah; add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x000000000047d3b0: test byte ptr [rax + rsi], ah; add al, byte ptr [rax]; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x1a0]; add rsp, 0x1a8; ret; 
0x000000000047d394: test byte ptr [rax + rsi], ah; add al, byte ptr [rax]; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x1a0]; add rsp, 0x1a8; ret; 
0x000000000042a442: test byte ptr [rax - 0x75], 4; ret; 
0x00000000004424f8: test byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x0000000000404b7e: test byte ptr [rax], ah; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000404df4: test byte ptr [rax], ah; add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000448c5c: test byte ptr [rax], ah; add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x000000000042a169: test byte ptr [rax], al; mov qword ptr [rax + rcx*8], -1; inc rcx; cmp rcx, 8; jl 0x2a169; ret; 
0x000000000048ff88: test byte ptr [rax], al; mov rax, qword ptr [rcx + 0x38]; mov rcx, qword ptr [rcx + 0x40]; mov qword ptr [rsp + 0x10], rax; mov qword ptr [rsp + 0x18], rcx; ret; 
0x00000000004840a5: test byte ptr [rax], al; mov rax, qword ptr [rip + 0x422ea]; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040d284: test byte ptr [rbp - 0x7bffffff], bl; add ecx, dword ptr [rax - 0x7f]; ret; 
0x000000000043f4c0: test byte ptr [rbx], al; cmp qword ptr [rbx + 0x2778], 0; jle 0x3f4b0; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000401f44: test byte ptr [rbx], ch; add dword ptr [rax], eax; add byte ptr [rax + 0x39], cl; ror dword ptr [rcx - 0x77], cl; ror byte ptr [rdi + rcx + 0x4c], 1; ret; 
0x000000000040573a: test byte ptr [rcx + rbp*4], ah; add byte ptr [rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000040584e: test byte ptr [rcx + rbp*4], ah; add byte ptr [rax], al; add byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000047d6bf: test byte ptr [rcx], al; mov qword ptr [rsp + 0xb0], rcx; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000047a1da: test byte ptr [rdi - 0x45fffffe], bl; add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0x59; xor ah, byte ptr [rsi - 9]; ret; 
0x0000000000416922: test byte ptr [rdi], 0x84; ret 5; 
0x000000000043e204: test byte ptr [rdx + 0x1870014], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000494825: test byte ptr [rdx + 2], al; add byte ptr [rax], al; lea rcx, [rip + 0x4a1cf]; mov rcx, qword ptr [rcx + 0xf8]; mov qword ptr [rsp], rax; call rcx; 
0x0000000000456966: test byte ptr [rdx], 0; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x68; add rsp, 0x70; ret; 
0x000000000042e07f: test byte ptr [rip + 0x448b4800], dl; and al, 0x30; mov qword ptr [rip + 0x1584ea], rax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000042e08b: test byte ptr [rip + 0x6c8b4800], dl; and al, 0x48; add rsp, 0x50; ret; 
0x0000000000457a28: test cl, 2; jne 0x57a37; mov qword ptr [rsp + 0x10], 0; ret; 
0x0000000000466fe8: test cl, 2; jne 0x66ff7; mov qword ptr [rsp + 0x10], 0; ret; 
0x0000000000479388: test cl, 2; jne 0x79397; mov qword ptr [rsp + 0x10], 0; ret; 
0x00000000004317ef: test cl, al; sete al; mov byte ptr [rsp + 0xa0], al; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000045b7a0: test cl, cl; je 0x5b7aa; mov byte ptr [rsp + 0x18], 1; ret; 
0x000000000041633b: test cl, cl; jne 0x16349; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000041bf39: test cl, cl; jne 0x1bf47; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000042b691: test cl, cl; jne 0x2b62c; mov byte ptr [rsp + 0x10], 1; ret; 
0x0000000000440140: test cl, cl; jne 0x40153; mov byte ptr [rsp + 0x28], 1; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000040db41: test cl, cl; jne 0xdb54; mov qword ptr [rsp + 0x60], rdx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004365b2: test dh, dh; je 0x365cd; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x000000000040a60e: test dh, dh; je 0xa5fb; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040a8ef: test dil, dil; je 0xa8d7; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040a94b: test dil, dil; je 0xa935; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000454eb2: test dil, dil; jne 0x54ecf; mov qword ptr [rsp + 0x2b0], rbx; mov rbp, qword ptr [rsp + 0x278]; add rsp, 0x280; ret; 
0x00000000004687c0: test dl, 4; je 0x687d4; mov byte ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000047e661: test dl, 4; je 0x7e675; mov byte ptr [rsp + 0x40], 0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000477f84: test dl, ch; add eax, dword ptr [rax]; add byte ptr [rbx - 0x73f0df08], al; add dword ptr [rdx], 0xff3d0000; call qword ptr [rax]; 
0x0000000000421140: test dl, dl; je 0x2112d; ret; 
0x0000000000423b39: test dl, dl; je 0x23b47; mov qword ptr [rsp + 0x10], 0; ret; 
0x0000000000441b02: test dl, dl; je 0x41ae5; ret; 
0x0000000000443877: test dl, dl; je 0x43865; mov byte ptr [rsp + 0x10], 1; ret; 
0x000000000040246c: test dword ptr [rax + 1], 0x108949fa; vzeroupper; ret; 
0x00000000004023c4: test dword ptr [rax + 1], 0x388949d7; ret; 
0x0000000000437194: test dword ptr [rax + rax - 0x74b80000], ecx; insb byte ptr [rdi], dx; and al, 0x58; add rsp, 0x60; ret; 
0x00000000004022d6: test dword ptr [rax - 0x2d], 0x940fe7; ret; 
0x000000000042d512: test dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000042993e: test dword ptr [rax - 0x7d], 0xc14801e7; out 0xd, eax; mov qword ptr [rsp + 0x48], rdi; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004912ce: test dword ptr [rax], 0x89490000; ret 0x294c; 
0x000000000040e21a: test dword ptr [rax], 0xff480000; ret 0x8348; 
0x0000000000437301: test dword ptr [rcx], edx; add dword ptr [rax], eax; add byte ptr [rax + 0xa058d48], dl; call qword ptr [rcx]; 
0x00000000004346cc: test dword ptr [rdx + 0x48000001], esp; mov dword ptr [rsp], ebx; mov rax, qword ptr [rip + 0x91e64]; lea rdx, [rip + 0x91e5d]; call rax; 
0x00000000004169c8: test dword ptr [rdx], esi; add dword ptr [rax], eax; add byte ptr [rdi], cl; mov dh, 0x5e; adc al, 0xf6; ret; 
0x000000000045b9c4: test dword ptr [rdx], esp; add dword ptr [rax], eax; add byte ptr [rbx + 0x9098], cl; add byte ptr [rbx - 0x6bf0fd05], al; ret; 
0x0000000000434ab4: test dword ptr [rsi + 0x48000000], ecx; mov eax, dword ptr [rip + 0x91aa8]; lea rdx, [rip + 0x91aa1]; call rax; 
0x000000000040573c: test eax, 0; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000405850: test eax, 0x1000000; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x00000000004600ae: test eax, 0x448bfffa; and al, 0x2c; mov dword ptr [rsp + 0x48], eax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000405a9a: test eax, 0x48000000; mov ebp, dword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000497413: test eax, 0x48ffffb2; mov ebp, dword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000043c86e: test eax, 0x75000011; shufps xmm0, xmmword ptr [rsp + 0x48], 0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000438892: test eax, 0x8b480000; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x000000000047ac18: test eax, 0x950f8000; and al, 0x50; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000463272: test eax, 0xf; sete byte ptr [rsp + 8]; ret; 
0x00000000004640e6: test eax, 7; je 0x640f3; mov rcx, rbx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x00000000004148d4: test eax, eax; ja 0x148c4; mov qword ptr [rsp + 0x30], rdx; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000042cfd3: test eax, eax; je 0x2cfe6; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042d073: test eax, eax; je 0x2d086; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042daa3: test eax, eax; je 0x2dab1; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000442fbb: test eax, eax; je 0x42fc5; mov dword ptr [rax], 0; mov dword ptr [rsp + 0x20], 0x7fffffff; ret; 
0x0000000000442fd4: test eax, eax; je 0x42fda; mov dword ptr [rax], edx; mov dword ptr [rsp + 0x20], ebx; ret; 
0x000000000045e5c6: test eax, eax; je 0x5e5d3; mov rax, qword ptr [rax]; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000045e7e6: test eax, eax; je 0x5e7f3; mov rax, qword ptr [rax]; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000046147f: test eax, eax; je 0x614b4; lea rsi, [rip - 0xc8a]; mov rdx, 0; mov rcx, 0; call rax; 
0x0000000000467c86: test eax, eax; je 0x67c9c; lea rcx, [rip + 0x769af]; mov qword ptr [rsp + 0x18], rcx; mov qword ptr [rsp + 0x20], rax; ret; 
0x000000000047d526: test eax, eax; je 0x7d53c; lea rcx, [rip + 0x614cf]; mov qword ptr [rsp + 0x18], rcx; mov qword ptr [rsp + 0x20], rax; ret; 
0x000000000048c2eb: test eax, eax; je 0x8c1b8; mov qword ptr [rsp + 0x128], rax; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x000000000048c58b: test eax, eax; je 0x8c5a7; mov qword ptr [rsp + 0x128], rax; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x000000000048c96b: test eax, eax; je 0x8c842; mov qword ptr [rsp + 0x128], rax; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x000000000043d318: test eax, eax; jg 0x3d338; mov qword ptr [rsp + 0x3e8], 0; mov rbp, qword ptr [rsp + 0x3d0]; add rsp, 0x3d8; ret; 
0x000000000042eda9: test eax, eax; jge 0x2edbd; mov rbp, qword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x000000000044ec25: test eax, eax; jge 0x4ec3b; mov dword ptr [rsp + 0x78], 0xffffffff; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004733c7: test eax, eax; jge 0x733d5; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000047bed9: test eax, eax; jge 0x7bee7; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040b28f: test eax, eax; jge 0xb242; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042e840: test eax, eax; jl 0x2e84e; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000042eaa0: test eax, eax; jl 0x2eaae; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000438e80: test eax, eax; jl 0x38ede; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000043aa30: test eax, eax; jl 0x3aa43; call 0x39260; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000443184: test eax, eax; jl 0x43192; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042e44d: test eax, eax; jle 0x2e40c; mov qword ptr [rsp + 0x660], 0; mov rbp, qword ptr [rsp + 0x648]; add rsp, 0x650; ret; 
0x0000000000415cfa: test eax, eax; jne 0x15d08; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000415fa6: test eax, eax; jne 0x15fb4; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000041e0e7: test eax, eax; jne 0x1e0f5; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042fa87: test eax, eax; jne 0x2fa95; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004346c9: test eax, eax; jne 0x34873; mov qword ptr [rsp], rbx; mov rax, qword ptr [rip + 0x91e64]; lea rdx, [rip + 0x91e5d]; call rax; 
0x000000000043a9af: test eax, eax; jne 0x3a9c1; call 0x2e2a0; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000044d381: test eax, eax; jne 0x4d366; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045f18b: test eax, eax; jne 0x5f199; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000469c00: test eax, eax; jne 0x69c14; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000046af2d: test eax, eax; jne 0x6af3b; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042385c: test eax, eax; setne byte ptr [rsp + 0x38]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040ae83: test eax, eax; setne byte ptr [rsp + 0x48]; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000405a94: test eax, eax; setne byte ptr [rsp + 0xa9]; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000048e6db: test eax, edx; jne 0x8e6a7; mov byte ptr [rsp + 0x38], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000041fd0d: test ebx, ebx; jne 0x1fd1b; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000437191: test ebx, ebx; jne 0x37225; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x0000000000459bf7: test ebx, ebx; jne 0x59bda; mov dword ptr [rsp + 0x60], 0xffffffff; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000045c081: test ebx, ebx; jne 0x5c006; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004410c9: test ebx, ebx; sete al; mov byte ptr [rsp + 0x10], al; ret; 
0x0000000000408df1: test ebx, ebx; setne byte ptr [rsp + 0x140]; mov rbp, qword ptr [rsp + 0x108]; add rsp, 0x110; ret; 
0x000000000042d562: test ecx, 0xf; jne 0x2d582; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044c2c8: test ecx, ecx; cmovne rax, rsi; mov qword ptr [rsp + 0x18], rax; mov byte ptr [rsp + 0x20], 1; ret; 
0x0000000000423a8c: test ecx, ecx; je 0x23a96; cmp qword ptr [rcx + 0x18], rax; jbe 0x23a9c; mov byte ptr [rsp + 0x10], 0; ret; 
0x000000000043928d: test ecx, ecx; je 0x3929b; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000447c0c: test ecx, ecx; je 0x47c1f; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x00000000004607eb: test ecx, ecx; je 0x607f4; call 0x35860; ret; 
0x0000000000418139: test ecx, ecx; jg 0x1814c; mov byte ptr [rsp + 0x18], 1; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000042b628: test ecx, ecx; jg 0x2b632; mov byte ptr [rsp + 0x10], 0; ret; 
0x00000000004502e6: test ecx, ecx; jg 0x502f4; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000043ccfa: test ecx, ecx; jge 0x3cd0d; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000475958: test ecx, ecx; jge 0x7596c; mov rbp, qword ptr [rsp + 0x690]; add rsp, 0x698; ret; 
0x000000000042b2e1: test ecx, ecx; jne 0x2b257; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000457aa1: test ecx, ecx; jne 0x57aab; movups xmmword ptr [rsp + 0x10], xmm0; ret; 
0x0000000000459ae6: test ecx, ecx; jne 0x5991d; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000464ee0: test ecx, ecx; jne 0x64efb; mov rcx, qword ptr [rip + 0xf1bcd]; lea r9, [rip - 0xf2]; mov rax, qword ptr [rip + 0xf1b27]; jmp rax; 
0x000000000046b1f3: test ecx, ecx; jne 0x6b206; call 0x5f5a0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044cb8d: test ecx, ecx; setg byte ptr [rsp + 0x168]; mov rbp, qword ptr [rsp + 0x100]; add rsp, 0x108; ret; 
0x0000000000409888: test edi, edi; jne 0x9867; xchg qword ptr [r8], rax; inc qword ptr [rbx + 8]; ret; 
0x000000000041dea8: test edx, eax; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000040d6c7: test edx, ebx; jne 0xd6d5; movzx ecx, word ptr [rax + 0xa]; inc ecx; mov word ptr [rax + 0xa], cx; ret; 
0x000000000048aef8: test edx, ecx; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; shr bl, 1; or ecx, dword ptr [rax - 0x77]; ret 0x8b48; 
0x000000000045ebac: test edx, edx; je 0x5ebba; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046b321: test edx, edx; je 0x6b2fe; mov rax, qword ptr [rdx]; call rax; 
0x000000000042f299: test edx, edx; jne 0x2f2a7; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043b5d4: test edx, edx; jne 0x3b5e7; call 0x3ad60; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000441974: test edx, edx; jne 0x4196a; mov dword ptr [rsp + 0x10], ecx; ret; 
0x00000000004569d8: test edx, edx; jne 0x5697d; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x0000000000433217: test r8b, al; jne 0x33226; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004607ea: test r9, r9; je 0x607f4; call 0x35860; ret; 
0x0000000000438891: test rax, -0x74b80000; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x0000000000463271: test rax, 0xf; sete byte ptr [rsp + 8]; ret; 
0x00000000004148d3: test rax, rax; ja 0x148c4; mov qword ptr [rsp + 0x30], rdx; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000042cfd2: test rax, rax; je 0x2cfe6; mov qword ptr [rsp + 0x38], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000442fba: test rax, rax; je 0x42fc5; mov dword ptr [rax], 0; mov dword ptr [rsp + 0x20], 0x7fffffff; ret; 
0x0000000000442fd3: test rax, rax; je 0x42fda; mov dword ptr [rax], edx; mov dword ptr [rsp + 0x20], ebx; ret; 
0x000000000045e5c5: test rax, rax; je 0x5e5d3; mov rax, qword ptr [rax]; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000045e7e5: test rax, rax; je 0x5e7f3; mov rax, qword ptr [rax]; mov qword ptr [rsp + 0x10], rax; ret; 
0x000000000046147e: test rax, rax; je 0x614b4; lea rsi, [rip - 0xc8a]; mov rdx, 0; mov rcx, 0; call rax; 
0x0000000000467c85: test rax, rax; je 0x67c9c; lea rcx, [rip + 0x769af]; mov qword ptr [rsp + 0x18], rcx; mov qword ptr [rsp + 0x20], rax; ret; 
0x000000000047d525: test rax, rax; je 0x7d53c; lea rcx, [rip + 0x614cf]; mov qword ptr [rsp + 0x18], rcx; mov qword ptr [rsp + 0x20], rax; ret; 
0x000000000048c2ea: test rax, rax; je 0x8c1b8; mov qword ptr [rsp + 0x128], rax; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x000000000048c58a: test rax, rax; je 0x8c5a7; mov qword ptr [rsp + 0x128], rax; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x000000000048c96a: test rax, rax; je 0x8c842; mov qword ptr [rsp + 0x128], rax; mov rbp, qword ptr [rsp + 0xe8]; add rsp, 0xf0; ret; 
0x00000000004733c6: test rax, rax; jge 0x733d5; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000047bed8: test rax, rax; jge 0x7bee7; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000040b28e: test rax, rax; jge 0xb242; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000415fa5: test rax, rax; jne 0x15fb4; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000041e0e6: test rax, rax; jne 0x1e0f5; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x00000000004346c8: test rax, rax; jne 0x34873; mov qword ptr [rsp], rbx; mov rax, qword ptr [rip + 0x91e64]; lea rdx, [rip + 0x91e5d]; call rax; 
0x000000000043a9ae: test rax, rax; jne 0x3a9c1; call 0x2e2a0; mov rbp, qword ptr [rsp]; add rsp, 8; ret; 
0x000000000044d380: test rax, rax; jne 0x4d366; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000045f18a: test rax, rax; jne 0x5f199; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042385b: test rax, rax; setne byte ptr [rsp + 0x38]; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000405a93: test rax, rax; setne byte ptr [rsp + 0xa9]; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000048e6da: test rax, rdx; jne 0x8e6a7; mov byte ptr [rsp + 0x38], 1; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000041fd0c: test rbx, rbx; jne 0x1fd1b; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000437190: test rbx, rbx; jne 0x37225; mov rbp, qword ptr [rsp + 0x58]; add rsp, 0x60; ret; 
0x000000000045c080: test rbx, rbx; jne 0x5c006; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004410c8: test rbx, rbx; sete al; mov byte ptr [rsp + 0x10], al; ret; 
0x0000000000408df0: test rbx, rbx; setne byte ptr [rsp + 0x140]; mov rbp, qword ptr [rsp + 0x108]; add rsp, 0x110; ret; 
0x000000000042d561: test rcx, 0xf; jne 0x2d582; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000044c2c7: test rcx, rcx; cmovne rax, rsi; mov qword ptr [rsp + 0x18], rax; mov byte ptr [rsp + 0x20], 1; ret; 
0x0000000000423a8b: test rcx, rcx; je 0x23a96; cmp qword ptr [rcx + 0x18], rax; jbe 0x23a9c; mov byte ptr [rsp + 0x10], 0; ret; 
0x0000000000447c0b: test rcx, rcx; je 0x47c1f; mov qword ptr [rsp + 0x58], rdx; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000418138: test rcx, rcx; jg 0x1814c; mov byte ptr [rsp + 0x18], 1; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000042b627: test rcx, rcx; jg 0x2b632; mov byte ptr [rsp + 0x10], 0; ret; 
0x00000000004502e5: test rcx, rcx; jg 0x502f4; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000475957: test rcx, rcx; jge 0x7596c; mov rbp, qword ptr [rsp + 0x690]; add rsp, 0x698; ret; 
0x000000000042b2e0: test rcx, rcx; jne 0x2b257; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000457aa0: test rcx, rcx; jne 0x57aab; movups xmmword ptr [rsp + 0x10], xmm0; ret; 
0x0000000000459ae5: test rcx, rcx; jne 0x5991d; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046b1f2: test rcx, rcx; jne 0x6b206; call 0x5f5a0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044cb8c: test rcx, rcx; setg byte ptr [rsp + 0x168]; mov rbp, qword ptr [rsp + 0x100]; add rsp, 0x108; ret; 
0x0000000000409887: test rdi, rdi; jne 0x9867; xchg qword ptr [r8], rax; inc qword ptr [rbx + 8]; ret; 
0x000000000045ebab: test rdx, rdx; je 0x5ebba; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046b320: test rdx, rdx; je 0x6b2fe; mov rax, qword ptr [rdx]; call rax; 
0x000000000042f298: test rdx, rdx; jne 0x2f2a7; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000043b5d3: test rdx, rdx; jne 0x3b5e7; call 0x3ad60; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004569d7: test rdx, rdx; jne 0x5697d; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x00000000004365b1: test sil, sil; je 0x365cd; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x000000000040a60d: test sil, sil; je 0xa5fb; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000403372: ucomisd xmm0, xmm1; sete cl; setnp al; and ecx, eax; mov byte ptr [rsp + 0x18], cl; ret; 
0x0000000000418197: ucomisd xmm1, xmm0; seta al; mov byte ptr [rsp + 0x18], al; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000403332: ucomiss xmm0, xmm1; sete cl; setnp al; and ecx, eax; mov byte ptr [rsp + 0x18], cl; ret; 
0x0000000000418198: ucomiss xmm1, xmm0; seta al; mov byte ptr [rsp + 0x18], al; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x0000000000435b48: unpckhps xmm0, xmmword ptr [rax]; mov byte ptr [rip + 0x1508d2], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000463edd: vmovdqu ymmword ptr [rdi + rbx - 0x20], ymm0; vmovdqu ymmword ptr [rdi + rbx - 0x40], ymm0; vmovdqu ymmword ptr [rdi + rbx - 0x60], ymm0; vmovdqu ymmword ptr [rdi + rbx - 0x80], ymm0; vzeroupper; ret; 
0x0000000000463ee3: vmovdqu ymmword ptr [rdi + rbx - 0x40], ymm0; vmovdqu ymmword ptr [rdi + rbx - 0x60], ymm0; vmovdqu ymmword ptr [rdi + rbx - 0x80], ymm0; vzeroupper; ret; 
0x0000000000463ee9: vmovdqu ymmword ptr [rdi + rbx - 0x60], ymm0; vmovdqu ymmword ptr [rdi + rbx - 0x80], ymm0; vzeroupper; ret; 
0x0000000000463eef: vmovdqu ymmword ptr [rdi + rbx - 0x80], ymm0; vzeroupper; ret; 
0x0000000000402451: vptest ymm3, ymm3; jne 0x2463; vzeroupper; mov qword ptr [r8], -1; ret; 
0x0000000000402261: vzeroupper; mov byte ptr [rax], 0; ret; 
0x0000000000402458: vzeroupper; mov qword ptr [r8], -1; ret; 
0x0000000000402473: vzeroupper; ret; 
0x0000000000467296: wait; add rax, 0x50; mov qword ptr [rsp + 0x10], rax; ret; 
0x00000000004802c3: wait; cwde; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add al, 0x24; call rbx; 
0x0000000000403c01: wait; mov eax, 0x8b480002; insb byte ptr [rdi], dx; and al, 0x50; add rsp, 0x58; ret; 
0x00000000004204f3: wait; mov rax, qword ptr [rsp + 0x20]; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000438661: wait; ret; 
0x0000000000403339: wait; shl byte ptr [rcx], 0xc1; mov byte ptr [rsp + 0x18], cl; ret; 
0x00000000004033ce: wait; shl byte ptr [rcx], 0xc2; and ecx, edx; mov byte ptr [rsp + 0x18], cl; ret; 
0x000000000045d6eb: wait; sldt word ptr [rax]; jne 0x5d6c4; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000416ae1: wait; stosd dword ptr [rdi], eax; add al, 0; mov rbp, qword ptr [rsp + 0xd8]; add rsp, 0xe0; ret; 
0x000000000044f250: xadd dword ptr [rax + 0x2788], ecx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000044f70b: xadd dword ptr [rbx + 0x2788], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000441057: xadd dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000041c64d: xadd dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x00000000004381e9: xadd dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042dc9a: xadd dword ptr [rdx], eax; mov byte ptr [rsp + 0x28], cl; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000045b300: xadd dword ptr [rdx], ecx; mov byte ptr [rax + 0x16b8], 0; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000041c64c: xadd qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000466f27: xchg bh, bh; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000042d44b: xchg byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000044d46e: xchg byte ptr [rdx], ch; add eax, 0x14d0000; ret; 
0x0000000000444f3e: xchg dword ptr [rax + 0x334], ecx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000045778b: xchg dword ptr [rax + 0x48000001], edi; mov dword ptr [rsp + 0x68], eax; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000040988d: xchg dword ptr [rax], eax; inc qword ptr [rbx + 8]; ret; 
0x000000000043844a: xchg dword ptr [rax], ecx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042cbfb: xchg dword ptr [rax], ecx; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000442d04: xchg dword ptr [rax], edi; add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret 0x8948; 
0x000000000044f6ff: xchg dword ptr [rbx + 0x1668], eax; mov eax, 0xffffffff; lock xadd dword ptr [rbx + 0x2788], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000450d02: xchg dword ptr [rbx + 0x1668], eax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000401ec9: xchg dword ptr [rbx], eax; ret; 
0x000000000042ceb7: xchg dword ptr [rcx + 0x10], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004411a6: xchg dword ptr [rcx + 0x5f4], eax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000041529f: xchg dword ptr [rcx + 0x6c0], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043ec80: xchg dword ptr [rcx], eax; mov rax, qword ptr [rsp + 0x68]; mov qword ptr [rsp + 0x98], rax; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000403962: xchg dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042fa40: xchg dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043e208: xchg dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000406257: xchg dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000401544: xchg dword ptr [rdx + rax], edx; add byte ptr [rax + 0x29], cl; ret 0x8948; 
0x0000000000406353: xchg dword ptr [rdx], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000045dca2: xchg dword ptr [rdx], edx; add byte ptr [rax], al; jne 0x5dcb2; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000042dc96: xchg dword ptr [rip - 0x3ef01000], edx; add cl, byte ptr [rax + 0x4828244c]; mov ebp, dword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x00000000004450f5: xchg dword ptr [rsi], edx; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x68]; add rsp, 0x70; ret; 
0x00000000004208e5: xchg eax, ebp; add byte ptr [rax], al; add byte ptr [rcx + 0xf], cl; mov ebp, 0x440f48c1; ret 0x4890; 
0x0000000000467eab: xchg eax, ebp; and al, 0x10; ret; 
0x0000000000483b75: xchg eax, ebp; and al, 0x30; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000042385f: xchg eax, ebp; and al, 0x38; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000047dbd6: xchg eax, ebp; and al, 0x40; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040ae86: xchg eax, ebp; and al, 0x48; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000047ac1c: xchg eax, ebp; and al, 0x50; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000048e8ad: xchg eax, ebp; mov byte ptr [rsp + 0x50], 1; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000046b445: xchg eax, ebp; mov qword ptr [rsp + 0x68], rcx; mov qword ptr [rsp + 0x70], rdx; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000041b4ac: xchg eax, ebp; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x000000000046a3c6: xchg eax, ebp; ret 0x11; 
0x0000000000422976: xchg eax, ebp; ret 0x24e9; 
0x000000000041e2f6: xchg eax, ebp; ret 0x86eb; 
0x00000000004802d5: xchg eax, ebp; ret 0xb60f; 
0x0000000000423b37: xchg eax, ebp; ret 0xd284; 
0x000000000041e342: xchg eax, ebp; ret 0xf989; 
0x0000000000435fc7: xchg eax, ebp; ret 0xffff; 
0x0000000000418c80: xchg eax, ebp; ret; 
0x0000000000478f00: xchg eax, ebp; shr bl, 0xd5; mov byte ptr [rsp + 0x90], 1; mov rbp, qword ptr [rsp + 0x78]; sub rsp, -0x80; ret; 
0x0000000000463401: xchg eax, ebx; call 0x632c0; xchg rax, rbx; ret; 
0x0000000000415fc9: xchg eax, ebx; ret 1; 
0x0000000000418cbc: xchg eax, ebx; ret; 
0x0000000000463461: xchg eax, ecx; call 0x632c0; xchg rax, r9; ret; 
0x00000000004633c1: xchg eax, ecx; call 0x632c0; xchg rax, rcx; ret; 
0x0000000000441130: xchg eax, ecx; clc; or eax, 0x940f0000; ret 0xd284; 
0x0000000000441549: xchg eax, ecx; clc; or eax, 0x940f0000; ret; 
0x0000000000419dcb: xchg eax, ecx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000045aa30: xchg eax, ecx; movabs al, byte ptr [0x58246c8b48000000]; add rsp, 0x60; ret; 
0x0000000000436c84: xchg eax, ecx; nop; add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, esp; ret; 
0x00000000004633c8: xchg eax, ecx; ret; 
0x000000000040c4f3: xchg eax, edi; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x8948; 
0x000000000042a094: xchg eax, edi; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret; 
0x0000000000423aac: xchg eax, edi; and al, 0x10; ret; 
0x000000000042b694: xchg eax, edi; mov byte ptr [rsp + 0x10], 1; ret; 
0x000000000040acc6: xchg eax, edi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000047a3c4: xchg eax, edi; ret 0x10; 
0x000000000042683d: xchg eax, edi; ret 0x8490; 
0x0000000000426880: xchg eax, edi; ret 0xd284; 
0x00000000004248f7: xchg eax, edi; ret; 
0x000000000041819c: xchg eax, edi; ror byte ptr [rax + 0x48182444], 0x8b; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x000000000044def9: xchg eax, edi; xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x28], xmm0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000401a83: xchg eax, edx; add eax, 0x184ff8; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000473059: xchg eax, edx; and al, 0x30; ret; 
0x00000000004633e1: xchg eax, edx; call 0x632c0; xchg rax, rdx; ret; 
0x000000000049abca: xchg eax, edx; mov esi, 0x8b48000b; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x0000000000423377: xchg eax, edx; mov qword ptr [rsp + 0x60], rax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000042167a: xchg eax, edx; ret 0x15; 
0x0000000000432a92: xchg eax, edx; ret 0x3de9; 
0x0000000000447732: xchg eax, edx; ret 0x8949; 
0x0000000000447403: xchg eax, edx; ret 0x894c; 
0x00000000004105c1: xchg eax, edx; ret 0x8b48; 
0x00000000004633e8: xchg eax, edx; ret; 
0x0000000000464f2f: xchg eax, edx; std; dec dword ptr [rax - 0x75]; add eax, 0xf1ae7; jmp rax; 
0x0000000000463421: xchg eax, esi; call 0x632c0; xchg rax, rsi; ret; 
0x0000000000403ee8: xchg eax, esi; mov byte ptr [rsp + 0x28], 1; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000042bdb4: xchg eax, esi; ret 0x8b48; 
0x00000000004742e6: xchg eax, esi; ret 0xfffb; 
0x0000000000463428: xchg eax, esi; ret; 
0x0000000000455f5c: xchg eax, esi; ror byte ptr [rax + 0x48602444], 0x8b; insb byte ptr [rdi], dx; and al, 0x38; add rsp, 0x40; ret; 
0x0000000000485188: xchg eax, esp; adc dword ptr [rax + rax], eax; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000427c6b: xchg eax, esp; adc dword ptr [rax], eax; mov qword ptr [rsp + 0x40], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000047e650: xchg eax, esp; add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x50; adc al, 0xf6; ret 0x7404; 
0x000000000041dd29: xchg eax, esp; add qword ptr [r10 + 0x10], rdx; add qword ptr [r10 + 0x18], r11; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x0000000000457ca6: xchg eax, esp; and al, 0x10; ret; 
0x00000000004628e7: xchg eax, esp; and al, 0x18; add byte ptr [rax + 0x28b4800], al; call rax; 
0x0000000000462487: xchg eax, esp; and al, 0x18; add byte ptr [rax + rax], al; mov rax, qword ptr [rdx]; call rax; 
0x00000000004621e7: xchg eax, esp; and al, 0x18; add byte ptr [rax], 0; mov rax, qword ptr [rdx]; call rax; 
0x0000000000462b87: xchg eax, esp; and al, 0x18; add byte ptr [rax], al; add al, 0x48; mov eax, dword ptr [rdx]; call rax; 
0x0000000000462107: xchg eax, esp; and al, 0x18; add byte ptr [rax], al; mov rax, qword ptr [rdx]; call rax; 
0x0000000000403270: xchg eax, esp; and al, 0x18; ret; 
0x0000000000401e75: xchg eax, esp; and al, 0x20; ret; 
0x000000000048e790: xchg eax, esp; and al, 0x28; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048ea09: xchg eax, esp; and al, 0x38; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000046abf3: xchg eax, esp; and al, 0x38; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042dd70: xchg eax, esp; and al, 0x48; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000403712: xchg eax, esp; and al, 0x60; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; nop; ret; 
0x00000000004035ea: xchg eax, esp; and al, 0x60; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000420d1a: xchg eax, esp; and al, 0x60; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000041458b: xchg eax, esp; and al, 0x80; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0x7575; 
0x000000000047c5de: xchg eax, esp; and al, 0x90; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; adc al, 0x24; call rcx; 
0x0000000000414323: xchg eax, esp; and al, 0x98; add byte ptr [rax], al; add byte ptr [rax - 9], cl; ret 0x1f; 
0x000000000047f66b: xchg eax, esp; and al, 0xb8; add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret 0x4c18; 
0x0000000000463278: xchg eax, esp; and al, 8; ret; 
0x000000000040a60b: xchg eax, esp; mov byte ptr [rax - 0x7c], 0xf6; je 0xa5fb; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040a8ed: xchg eax, esp; mov dword ptr [rax - 0x7c], 0x48e374ff; mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040a949: xchg eax, esp; mov dword ptr [rax - 0x7c], 0x48e574ff; mov ebp, dword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000447f53: xchg eax, esp; or byte ptr [rax + 4], ah; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000040505a: xchg eax, esp; ret 0x1f0f; 
0x0000000000405cf3: xchg eax, esp; ret 0x26e9; 
0x0000000000487092: xchg eax, esp; ret 0x74e9; 
0x000000000042f55f: xchg eax, esp; ret 0x7ae8; 
0x000000000042c2cd: xchg eax, esp; ret 0x8445; 
0x000000000040571d: xchg eax, esp; ret 0x8490; 
0x000000000041cf0e: xchg eax, esp; ret 0x8548; 
0x0000000000422c3f: xchg eax, esp; ret 0x8b48; 
0x00000000004425bc: xchg eax, esp; ret 0x9066; 
0x00000000004033cb: xchg eax, esp; ret 0x9b0f; 
0x0000000000405d38: xchg eax, esp; ret 0xbce9; 
0x0000000000405d2a: xchg eax, esp; ret 0xcae9; 
0x0000000000404b77: xchg eax, esp; ret 0xd284; 
0x0000000000424338: xchg eax, esp; ret 0xf66; 
0x000000000040606e: xchg eax, esp; ret; 
0x0000000000416339: xchg eax, esp; rol dword ptr [rcx + rcx*8 - 0x74b7f58b], 0x6c; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000487a24: xchg eax, esp; ror byte ptr [rax + 0x48402444], 0x8b; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000478fdf: xchg eax, esp; ror byte ptr [rax + 0x48402444], 0x8b; insb byte ptr [rdi], dx; and al, 0x28; add rsp, 0x30; ret; 
0x0000000000436a0b: xchg eax, esp; ror dword ptr [rax + 0x4830244c], 0x8b; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000403336: xchg eax, esp; ror dword ptr [rdi], 0x9b; shl byte ptr [rcx], 0xc1; mov byte ptr [rsp + 0x18], cl; ret; 
0x000000000045d61b: xchg eax, esp; std; jmp qword ptr [rsi - 0x70]; 
0x000000000040988c: xchg qword ptr [r8], rax; inc qword ptr [rbx + 8]; ret; 
0x0000000000438449: xchg qword ptr [rax], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042cbfa: xchg qword ptr [rax], rcx; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x000000000044f6fe: xchg qword ptr [rbx + 0x1668], rax; mov eax, 0xffffffff; lock xadd dword ptr [rbx + 0x2788], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000450d01: xchg qword ptr [rbx + 0x1668], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x0000000000401eea: xchg qword ptr [rbx], rax; ret; 
0x000000000042ceb6: xchg qword ptr [rcx + 0x10], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000403961: xchg qword ptr [rcx], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000463440: xchg rax, r8; call 0x632c0; xchg rax, r8; ret; 
0x0000000000463447: xchg rax, r8; ret; 
0x0000000000463460: xchg rax, r9; call 0x632c0; xchg rax, r9; ret; 
0x0000000000463467: xchg rax, r9; ret; 
0x0000000000463400: xchg rax, rbx; call 0x632c0; xchg rax, rbx; ret; 
0x0000000000463407: xchg rax, rbx; ret; 
0x00000000004633c0: xchg rax, rcx; call 0x632c0; xchg rax, rcx; ret; 
0x00000000004633c7: xchg rax, rcx; ret; 
0x00000000004633e0: xchg rax, rdx; call 0x632c0; xchg rax, rdx; ret; 
0x00000000004633e7: xchg rax, rdx; ret; 
0x0000000000463420: xchg rax, rsi; call 0x632c0; xchg rax, rsi; ret; 
0x0000000000463427: xchg rax, rsi; ret; 
0x0000000000401c45: xgetbv; mov dword ptr [rsp + 8], eax; mov dword ptr [rsp + 0xc], edx; ret; 
0x000000000044f12a: xlatb; mov dword ptr [rsp + 0x38], r8d; mov dword ptr [rsp + 0x3c], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004023c7: xlatb; mov qword ptr [r8], rdi; ret; 
0x0000000000463042: xlatb; mov qword ptr [rsp + 0x28], rdi; mov rdi, rbx; mov rcx, rbx; call rax; 
0x000000000041d364: xlatb; mov rax, qword ptr [rdx]; call rax; 
0x000000000041cfd3: xlatb; mov rbp, qword ptr [rsp + 0x80]; add rsp, 0x88; ret; 
0x000000000046163a: xlatb; pop rax; lea rax, [rip - 0x2bf03]; jmp rax; 
0x0000000000447aba: xlatb; ret; 
0x00000000004023e5: xlatb; ror dword ptr [rdi], 1; mov esp, 0x39ce74d2; fidiv dword ptr [rbx - 0x36]; mov qword ptr [r8], rdx; ret; 
0x00000000004023b3: xlatb; ror dword ptr [rdi], 1; mov esp, 0x490875d2; mov dword ptr [rax], 0xffffffff; ret; 
0x000000000047ac16: xor ah, byte ptr [rsi - 0x57]; add byte ptr [rax + 0x2444950f], al; push rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000467af6: xor ah, byte ptr [rsi - 9]; ret; 
0x00000000004619a8: xor al, 0x13; add byte ptr [rax], al; jmp rax; 
0x00000000004017dd: xor al, 0x1a; nop; cmp sil, cl; jne 0x17d3; mov qword ptr [rsp + 0x20], rbx; ret; 
0x0000000000464bd8: xor al, 0x24; call rax; 
0x00000000004688e6: xor al, 0x24; call rbx; 
0x000000000040df1c: xor al, 0x24; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; call rbx; 
0x000000000040fe34: xor al, 0x24; mov qword ptr [rsp + 8], rbx; mov rbx, qword ptr [rdx]; nop; call rbx; 
0x000000000042eda8: xor al, 0x85; sar byte ptr [rbp + 0x10], 0x48; mov ebp, dword ptr [rsp + 0x448]; add rsp, 0x450; ret; 
0x0000000000451f56: xor al, 0x89; and al, 0x78; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000441a02: xor al, 0xd8; lea rdx, [rax + rbx*8]; call rsi; 
0x000000000042b0e7: xor al, 0xda; mov rdi, qword ptr [rcx + rbx*8]; cmp rsi, rdi; je 0x2b0dd; mov byte ptr [rsp + 0x38], 0; ret; 
0x000000000045e83c: xor al, 0xfb; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x0000000000444f40: xor al, 3; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000432214: xor al, byte ptr [rax]; je 0x32221; xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x10], xmm0; ret; 
0x000000000047304d: xor al, byte ptr [rdi + rcx - 0x4a]; add al, 0x31; cmp dil, r8b; je 0x73038; setb byte ptr [rsp + 0x30]; ret; 
0x000000000046ba6a: xor bh, bh; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x00000000004913bc: xor bl, ch; mov eax, 0x246c8b48; add rsp, 0x48; ret; 
0x0000000000464655: xor bl, dh; movq qword ptr [rax + 0x40], mm1; movdqu xmmword ptr [rax + 0x50], xmm10; movdqu xmmword ptr [rax + 0x60], xmm11; movdqu xmmword ptr [rax + 0x70], xmm12; ret; 
0x0000000000463faf: xor bl, dh; movq qword ptr [rdi + rbx - 0x40], mm0; movdqu xmmword ptr [rdi + rbx - 0x30], xmm0; movdqu xmmword ptr [rdi + rbx - 0x20], xmm0; movdqu xmmword ptr [rdi + rbx - 0x10], xmm0; ret; 
0x0000000000464204: xor bl, dh; movq qword ptr [rdi + rbx - 0x40], mm4; movdqu xmmword ptr [rdi + rbx - 0x30], xmm5; movdqu xmmword ptr [rdi + rbx - 0x20], xmm6; movdqu xmmword ptr [rdi + rbx - 0x10], xmm7; ret; 
0x0000000000464654: xor bl, sil; movq qword ptr [rax + 0x40], mm1; movdqu xmmword ptr [rax + 0x50], xmm10; movdqu xmmword ptr [rax + 0x60], xmm11; movdqu xmmword ptr [rax + 0x70], xmm12; ret; 
0x000000000040a88c: xor byte ptr [r11 + 0x10891], cl; add byte ptr [rbp + 0x3f8c0fd2], al; add dword ptr [rax], eax; add bh, bh; ret 0x9189; 
0x00000000004639ea: xor byte ptr [r8 - 0x73], r9b; jg 0x63a30; ret; 
0x000000000040bdf7: xor byte ptr [rax + 0x29], cl; ret 0x8948; 
0x0000000000403f72: xor byte ptr [rax + 0x39], cl; add dword ptr [rbp + 0xa], esi; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000459c58: xor byte ptr [rax + 0x39], cl; ret 0x3674; 
0x00000000004375c8: xor byte ptr [rax + 0x39], cl; sal byte ptr [rbp + 0xf], 1; call 0x3ad60; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000417028: xor byte ptr [rax + 0x75004078], al; cmovs ecx, dword ptr [rcx + 0x4848245c]; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000441f4c: xor byte ptr [rax + 3], cl; push rbx; sub byte ptr [rax - 0x7d], cl; ret 0x4802; 
0x000000000041729e: xor byte ptr [rax + rax], ah; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000040b06c: xor byte ptr [rax + rax], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048df8c: xor byte ptr [rax - 0x39], cl; and al, 0x38; add byte ptr [rax], al; add byte ptr [rax], al; call 0x5f320; ret; 
0x0000000000438441: xor byte ptr [rax - 0x73], cl; add eax, 0x14e0bf; xchg qword ptr [rax], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004639eb: xor byte ptr [rax - 0x73], cl; jg 0x63a30; ret; 
0x000000000040ce30: xor byte ptr [rax - 0x75], cl; adc dword ptr [rax - 0x77], ecx; ret; 
0x0000000000484030: xor byte ptr [rax - 0x75], cl; add byte ptr [rax - 0x77], cl; and al, 0x40; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000464d9c: xor byte ptr [rax - 0x75], cl; add eax, 0xf1ca4; mov rbx, rsp; and rsp, 0xfffffffffffffff0; call rax; 
0x000000000046896e: xor byte ptr [rax - 0x75], cl; and al, 0x60; mov rcx, qword ptr [rcx + 0x60]; mov rdx, qword ptr [rsp + 0x68]; mov qword ptr [rsp], rdx; call rcx; 
0x0000000000467735: xor byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; nop; ret; 
0x000000000040b051: xor byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x00000000004066e3: xor byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x00000000004172b0: xor byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000451fcd: xor byte ptr [rax - 0x75], cl; jl 0x51ff6; sub bl, ch; sbb dword ptr [rax - 1], ecx; ret 0x3948; 
0x0000000000483793: xor byte ptr [rax - 0x75], cl; or byte ptr [rax - 0x77], cl; and al, 0x40; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x00000000004148dc: xor byte ptr [rax - 0x75], cl; sub al, 0x24; add rsp, 8; ret; 
0x000000000048ac0a: xor byte ptr [rax - 0x77], cl; adc al, 0x24; call rcx; 
0x000000000043462e: xor byte ptr [rax - 0x77], cl; add al, 0x24; call 0x34380; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000042e086: xor byte ptr [rax - 0x77], cl; add eax, 0x1584ea; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000456eb2: xor byte ptr [rax - 0x77], cl; and al, 0x10; ret; 
0x0000000000404b0a: xor byte ptr [rax - 0x77], cl; and al, 0x18; call 0x4b20; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042ac94: xor byte ptr [rax - 0x77], cl; and al, 0x28; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000048fa71: xor byte ptr [rax - 0x77], cl; and al, 0x38; mov qword ptr [rsp + 0x40], rcx; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000467452: xor byte ptr [rax - 0x77], cl; and al, 0x38; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000456e52: xor byte ptr [rax - 0x77], cl; and al, 0x38; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000408ec9: xor byte ptr [rax - 0x77], cl; and al, 0x38; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000417085: xor byte ptr [rax - 0x77], cl; and al, 0x48; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000466bee: xor byte ptr [rax - 0x77], cl; and al, 0x50; mov qword ptr [rsp + 0x58], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000047ba56: xor byte ptr [rax - 0x77], cl; and al, 0x50; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000040721c: xor byte ptr [rax - 0x77], cl; and al, 0x58; mov qword ptr [rsp + 0x60], rcx; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004908fe: xor byte ptr [rax - 0x77], cl; and al, 0x60; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000046055a: xor byte ptr [rax - 0x77], cl; and al, 0x68; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000044711a: xor byte ptr [rax - 0x77], cl; and al, 0x70; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000412178: xor byte ptr [rax - 0x77], cl; jl 0x121a1; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000043b5f2: xor byte ptr [rax - 0x77], cl; or al, 0x24; mov qword ptr [rsp + 8], rax; mov rax, qword ptr [rdx]; nop; call rax; 
0x000000000040ee4c: xor byte ptr [rax - 0x77], cl; pop rax; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x000000000042bdcc: xor byte ptr [rax - 0x77], cl; pop rsp; and al, 0x38; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000046769c: xor byte ptr [rax - 0x77], cl; pop rsp; and al, 0x38; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041212d: xor byte ptr [rax - 0x77], cl; pop rsp; and al, 0x40; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000456e3e: xor byte ptr [rax - 0x77], cl; push rsp; and al, 0x38; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000043f918: xor byte ptr [rax - 0x77], cl; ret 0x2948; 
0x00000000004253bc: xor byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x00000000004102e9: xor byte ptr [rax - 0x7d], cl; js 0x10306; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000410ea9: xor byte ptr [rax - 0x7d], cl; js 0x10ec6; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000411809: xor byte ptr [rax - 0x7d], cl; js 0x11826; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040f429: xor byte ptr [rax - 0x7d], cl; js 0xf446; add byte ptr [rbp + 0xa], dh; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041444e: xor byte ptr [rax - 1], cl; ret; 
0x000000000041e165: xor byte ptr [rax - 9], cl; ret 7; 
0x000000000042e960: xor byte ptr [rax], ah; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x2020]; add rsp, 0x2028; ret; 
0x000000000045ea88: xor byte ptr [rax], al; jl 0x5ea96; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043e31f: xor byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041c44a: xor byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000473067: xor byte ptr [rax], al; ret; 
0x000000000048b3ab: xor byte ptr [rax], al; setl byte ptr [rsp + 0x60]; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x00000000004400db: xor byte ptr [rbp + 0xf], dh; mov byte ptr [rsp + 0x28], 0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004069ac: xor byte ptr [rbp + rax + 0x6c8b4800], ch; and al, 8; add rsp, 0x10; ret; 
0x000000000044f128: xor byte ptr [rbp - 0x29], 0x44; mov dword ptr [rsp + 0x38], eax; mov dword ptr [rsp + 0x3c], eax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000494010: xor byte ptr [rbp - 0x41], dh; mov rax, qword ptr [rsp + 8]; movzx eax, byte ptr [rax + 0x4e]; mov byte ptr [rsp + 0x18], al; ret; 
0x000000000040a88d: xor byte ptr [rbx + 0x10891], cl; add byte ptr [rbp + 0x3f8c0fd2], al; add dword ptr [rax], eax; add bh, bh; ret 0x9189; 
0x0000000000443794: xor byte ptr [rbx + 0x108b8], al; add byte ptr [rax], al; je 0x437a8; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000043e24d: xor byte ptr [rbx + 0x1483673d], al; add byte ptr [rax], al; jne 0x3e261; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000492062: xor byte ptr [rbx + rbx*8 - 0x72b6958c], al; dec dword ptr [rax + 0x39]; ret 0x860f; 
0x000000000048dfbd: xor byte ptr [rbx + rcx*4 + 0x4c], cl; and al, 0x38; mov rax, qword ptr [rsp + 8]; syscall; 
0x00000000004636ee: xor byte ptr [rbx + rcx*4 + 0x74], cl; and al, 0x28; mov r15, qword ptr [rsp + 0x20]; mov rbp, qword ptr [rsp + 0x98]; add rsp, 0xa0; ret; 
0x000000000042f316: xor byte ptr [rbx - 0x76b7dbf4], cl; mov rbp, qword ptr [rsp + 8]; add rsp, 0x10; ret; 
0x000000000045c82c: xor byte ptr [rbx - 3], dh; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000494942: xor byte ptr [rbx], 0x48; mov ebp, dword ptr [rsp + 0x90]; add rsp, 0x98; ret; 
0x000000000043098c: xor byte ptr [rcx + 0x12], ah; add byte ptr [rax - 0x75], cl; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000044ec89: xor byte ptr [rcx + 0x48782444], cl; mov ebp, dword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000480a8a: xor byte ptr [rcx], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x110]; add rsp, 0x118; ret; 
0x00000000004680b2: xor byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x000000000045875c: xor byte ptr [rcx], al; dec byte ptr [rax + 1]; ret; 
0x000000000043e308: xor byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000041c488: xor byte ptr [rcx], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000432236: xor byte ptr [rcx], al; mov rcx, qword ptr [rax + 8]; mov rax, qword ptr [rax + 0x10]; mov qword ptr [rsp + 0x10], rcx; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000473061: xor byte ptr [rcx], al; ret; 
0x0000000000444f3b: xor byte ptr [rcx], dh; leave; xchg dword ptr [rax + 0x334], ecx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000444f3a: xor byte ptr [rcx], sil; leave; xchg dword ptr [rax + 0x334], ecx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040f3e5: xor byte ptr [rdi], cl; mov dh, 0x50; or dword ptr [rdi], ecx; mov dh, 0x58; or dh, dh; ret; 
0x000000000047d4f6: xor byte ptr [rdx], al; add byte ptr [rax], al; mov rbp, qword ptr [rsp + 0x1a0]; add rsp, 0x1a8; ret; 
0x0000000000425898: xor byte ptr [rdx], dl; add byte ptr [rax], al; inc qword ptr [rcx + 0x1228]; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000451a14: xor byte ptr [rsi], dl; add byte ptr [rax], al; mov qword ptr [rsp + 0x30], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000412162: xor cl, byte ptr [rax - 0x73]; push rdx; add dword ptr [rax - 9], ecx; ret 0x3f; 
0x0000000000438cac: xor dh, al; adc byte ptr [rcx + rax], 0; add byte ptr [rcx], al; ret; 
0x00000000004602c4: xor dh, bh; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x00000000004667d1: xor dl, bh; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x000000000041a472: xor dl, byte ptr [rax + rax]; add byte ptr [rbp + 0x10], dh; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x000000000045a63e: xor dl, byte ptr [rax - 0x74b7f58b]; insb byte ptr [rdi], dx; and al, 0x60; add rsp, 0x68; ret; 
0x000000000041aa71: xor dword ptr [rax + 1], 0; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 1], cl; ret 0x1f0f; 
0x0000000000473052: xor dword ptr [rax + rdi - 0x39], eax; je 0x73038; setb byte ptr [rsp + 0x30]; ret; 
0x0000000000461482: xor dword ptr [rax - 0x73], ecx; xor eax, 0xfffff376; mov rdx, 0; mov rcx, 0; call rax; 
0x000000000042fbb6: xor dword ptr [rax - 0x75], ecx; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x000000000045dd68: xor dword ptr [rax - 0x75], ecx; pushfq; ret 0x1230; 
0x0000000000421c83: xor dword ptr [rax - 0x77], ecx; ret 0x894d; 
0x000000000045e83b: xor dword ptr [rbx + rdi*8], 0x6c8b48ff; and al, 0x18; add rsp, 0x20; ret; 
0x000000000048504b: xor dword ptr [rbx], edx; add al, 0; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000440c96: xor eax, 0x2e8ffff; xor edi, edi; jmp qword ptr [rsi - 0x70]; 
0x00000000004852d1: xor eax, 0x48fffffb; lea eax, [rip + 0x4108c]; mov qword ptr [rsp + 0x48], rax; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000426b47: xor eax, 0x48fffffc; mov eax, dword ptr [rsp + 8]; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000422e74: xor eax, 0x74010016; or cl, byte ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x30; add rsp, 0x38; ret; 
0x000000000045e9f2: xor eax, 0x8b48fffb; insb byte ptr [rdi], dx; and al, 0x10; add rsp, 0x18; ret; 
0x0000000000461485: xor eax, 0xfffff376; mov rdx, 0; mov rcx, 0; call rax; 
0x0000000000406129: xor eax, 1; mov byte ptr [rip + 0x180301], al; ret; 
0x000000000045682a: xor eax, 1; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000043e1ff: xor eax, eax; lea rcx, [rip + 0x148284]; xchg dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040624e: xor eax, eax; lea rcx, [rip + 0x180361]; xchg dword ptr [rcx], eax; mov rbp, qword ptr [rsp + 0x50]; add rsp, 0x58; ret; 
0x0000000000458c23: xor eax, eax; mov byte ptr [rsp + 0x148], al; mov rbp, qword ptr [rsp + 0x120]; add rsp, 0x128; ret; 
0x0000000000465d90: xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; nop; ret; 
0x0000000000401cbb: xor eax, eax; mov byte ptr [rsp + 0x40], al; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000047e557: xor eax, eax; mov byte ptr [rsp + 0x60], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000468879: xor eax, eax; mov byte ptr [rsp + 0x78], al; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x0000000000468cc6: xor eax, eax; mov byte ptr [rsp + 0xe8], al; mov rbp, qword ptr [rsp + 0xc0]; add rsp, 0xc8; ret; 
0x000000000047ebc7: xor eax, eax; mov byte ptr [rsp + 0xf0], al; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; nop; ret; 
0x000000000047ec91: xor eax, eax; mov byte ptr [rsp + 0xf0], al; mov rbp, qword ptr [rsp + 0xc8]; add rsp, 0xd0; ret; 
0x0000000000431ec5: xor eax, eax; mov qword ptr [rax], 0; mov rbp, qword ptr [rsp + 0xb8]; add rsp, 0xc0; ret; 
0x0000000000467afe: xor eax, eax; mov qword ptr [rsp + 0x28], rax; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000047bb3e: xor eax, eax; mov qword ptr [rsp + 0x50], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000454add: xor eax, eax; mov qword ptr [rsp + 0x70], rdx; mov qword ptr [rsp + 0x78], rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000042a46d: xor eax, eax; popcnt rax, rdx; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000041e2a8: xor eax, eax; test al, al; je 0x1e2b8; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000406351: xor eax, eax; xchg dword ptr [rdx], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x0000000000450cff: xor eax, eax; xchg qword ptr [rbx + 0x1668], rax; mov rbp, qword ptr [rsp + 0x60]; add rsp, 0x68; ret; 
0x000000000042ceb4: xor eax, eax; xchg qword ptr [rcx + 0x10], rax; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000040929b: xor eax, ecx; mov qword ptr [rsp + 0x18], rax; ret; 
0x000000000044c5d4: xor ebx, ecx; mov dword ptr [rax + 0x124], ebx; lea eax, [rdx + rbx]; mov dword ptr [rsp + 8], eax; ret; 
0x000000000041a969: xor ecx, dword ptr [rax]; add dword ptr [rax], eax; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000040da50: xor ecx, dword ptr [rcx - 0x76b7f3bf]; and al, 0x20; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000409222: xor ecx, eax; mov qword ptr [rsp + 0x18], rcx; ret; 
0x00000000004090d4: xor ecx, eax; mov qword ptr [rsp + 0x20], rcx; ret; 
0x000000000048ed7c: xor ecx, ecx; mov qword ptr [rsp + 0x48], rax; mov qword ptr [rsp + 0x50], rcx; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000444f3c: xor ecx, ecx; xchg dword ptr [rax + 0x334], ecx; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000043b5d9: xor edi, 0xffffffff; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x0000000000440c9b: xor edi, edi; jmp qword ptr [rsi - 0x70]; 
0x000000000046025b: xor edi, esi; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x18; add rsp, 0x20; ret; 
0x000000000041eb29: xor edx, dword ptr [rax + 1]; add cl, ch; ret; 
0x0000000000423155: xor edx, dword ptr [rsi]; add byte ptr [rcx], al; je 0x23165; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x000000000047d97f: xor edx, esi; cmp rbx, rcx; jl 0x7d972; mov dword ptr [rsp + 0x28], edx; ret; 
0x000000000043f309: xor esi, dword ptr [rdi - 0x74b70004]; insb byte ptr [rdi], dx; and al, 8; add rsp, 0x10; ret; 
0x0000000000460202: xor esi, edi; dec dword ptr [rax - 0x75]; insb byte ptr [rdi], dx; and al, 0x20; add rsp, 0x28; ret; 
0x00000000004411a7: xor esp, 0x48000005; mov ebp, dword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000463fae: xor r11b, r14b; movq qword ptr [rdi + rbx - 0x40], mm0; movdqu xmmword ptr [rdi + rbx - 0x30], xmm0; movdqu xmmword ptr [rdi + rbx - 0x20], xmm0; movdqu xmmword ptr [rdi + rbx - 0x10], xmm0; ret; 
0x000000000042a46c: xor rax, rax; popcnt rax, rdx; mov qword ptr [rsp + 0x58], rax; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000040929a: xor rax, rcx; mov qword ptr [rsp + 0x18], rax; ret; 
0x0000000000409221: xor rcx, rax; mov qword ptr [rsp + 0x18], rcx; ret; 
0x00000000004090d3: xor rcx, rax; mov qword ptr [rsp + 0x20], rcx; ret; 
0x0000000000438cab: xor sil, al; adc byte ptr [rcx + rax], 0; add byte ptr [rcx], al; ret; 
0x000000000047ac15: xor spl, byte ptr [rsi - 0x57]; add byte ptr [rax + 0x2444950f], al; push rax; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x0000000000425dc5: xorps xmm0, xmm0; movups xmmword ptr [rax], xmm0; ret; 
0x000000000040f159: xorps xmm0, xmm0; movups xmmword ptr [rdi], xmm0; mov rbp, qword ptr [rsp + 0x70]; add rsp, 0x78; ret; 
0x0000000000432218: xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x10], xmm0; ret; 
0x000000000044d080: xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x110], xmm0; mov rbp, qword ptr [rsp + 0xf0]; add rsp, 0xf8; ret; 
0x000000000042c762: xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x18], xmm0; ret; 
0x000000000044decb: xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x28], xmm0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000467481: xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x30], xmm0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x0000000000456fba: xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x30], xmm0; mov rbp, qword ptr [rsp + 0x18]; add rsp, 0x20; ret; 
0x000000000044dd44: xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x38], xmm0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x00000000004126a2: xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x40], xmm0; mov rbp, qword ptr [rsp + 0x10]; add rsp, 0x18; ret; 
0x00000000004675e1: xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x40], xmm0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000042bf92: xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x48], xmm0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x000000000048ecc5: xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x48], xmm0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x0000000000467113: xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x48], xmm0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x000000000048f095: xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x50], xmm0; mov rbp, qword ptr [rsp + 0x20]; add rsp, 0x28; ret; 
0x0000000000483010: xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x58], xmm0; mov rbp, qword ptr [rsp + 0x28]; add rsp, 0x30; ret; 
0x000000000048e133: xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x58], xmm0; mov rbp, qword ptr [rsp + 0x38]; add rsp, 0x40; ret; 
0x000000000046056a: xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x60], xmm0; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x000000000048d593: xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x68], xmm0; mov rbp, qword ptr [rsp + 0x30]; add rsp, 0x38; ret; 
0x0000000000406b25: xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x68], xmm0; mov rbp, qword ptr [rsp + 0x48]; add rsp, 0x50; ret; 
0x0000000000472574: xorps xmm0, xmm0; movups xmmword ptr [rsp + 0x78], xmm0; mov rbp, qword ptr [rsp + 0x40]; add rsp, 0x48; ret; 
0x000000000044b2f1: xorps xmm0, xmm0; movups xmmword ptr [rsp + 0xb8], xmm0; mov rbp, qword ptr [rsp + 0x88]; add rsp, 0x90; ret; 
0x0000000000409d00: xorps xmm0, xmm0; movups xmmword ptr [rsp + 0xc0], xmm0; mov rbp, qword ptr [rsp + 0xa8]; add rsp, 0xb0; ret; 
0x000000000047759e: xorps xmm0, xmm0; movups xmmword ptr [rsp + 0xf8], xmm0; mov rbp, qword ptr [rsp + 0xa0]; add rsp, 0xa8; ret; 

16238 gadgets found
